{"version":3,"sources":["webpack:///script.js","webpack:///webpack/bootstrap d7664601fad4bdfb6e68","webpack:///./~/paper/dist/paper-full.js","webpack:///./_js/Game.js","webpack:///./_js/objects/Target.js","webpack:///./_js/script.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","paper","undefined","Base","inject","dest","src","enumerable","beans","preserve","field","name","val","describe","get","value","substring","bean","isFunc","res","prev","base","match","beansNames","toLowerCase","isPlainObject","writable","configurable","define","hasOwnProperty","hidden","test","part","set","length","each","obj","iter","bind","getLength","forEach","forIn","props","exclude","key","i","l","this","create","Object","proto","__proto__","getOwnPropertyDescriptor","__lookupGetter__","__lookupSetter__","_define","defineProperty","desc","__defineGetter__","__defineSetter__","arguments","statics","prototype","extend","ctor","initialize","apply","clone","constructor","pick","a","b","toString","_id","_class","_name","type","push","Formatter","instance","number","join","getClassName","exportJSON","options","toJSON","serialize","_set","dontCheck","keys","_filtering","equals","obj1","obj2","Array","isArray","read","list","start","peek","__index","readIndex","_readIndex","index","readNull","__read","slice","remain","readAll","entry","readNamed","getNamed","hasObject","filtered","_filtered","arg","_hasObject","hasNamed","isPlainValue","asString","compact","dictionary","root","formatter","precision","definitions","references","add","item","ref","unshift","_serialize","_compact","deserialize","json","_data","_isDictionary","isRoot","isDictionary","args","JSON","stringify","importJSON","target","parse","isTarget","Item","Layer","insert","splice","items","remove","amount","append","_index","removed","capitalize","str","replace","toUpperCase","camelize","all","chr","hyphenate","Emitter","on","func","types","_eventTypes","handlers","_callbacks","indexOf","install","off","uninstall","once","emit","event","stop","responds","attach","detach","fire","_installEvents","events","_events","isString","PaperScope","settings","applyMatrix","handleSize","hitTolerance","project","projects","tools","palettes","_scopes","support","ctx","CanvasProvider","getContext","nativeDash","nativeBlendModes","BlendMode","nativeModes","release","browser","agent","navigator","userAgent","platform","exec","n","v1","v2","rv","chrome","v","version","versionNumber","parseFloat","webkit","atom","getView","getPaper","execute","code","url","PaperScript","View","updateFocus","scope","that","setup","element","Project","activate","clear","handleAttribute","el","attr","getAttribute","hasAttribute","PaperScopeItem","_scope","_list","_reference","isActive","multiplier","Math","pow","round","pair","val1","val2","separator","point","x","y","size","width","height","rectangle","Numerical","clip","min","max","abscissas","weights","abs","sqrt","EPSILON","MACHINE_EPSILON","TOLERANCE","CURVETIME_EPSILON","GEOMETRIC_EPSILON","WINDING_EPSILON","TRIGONOMETRIC_EPSILON","CLIPPING_EPSILON","KAPPA","isZero","integrate","f","w","A","B","sum","Ax","findRoot","df","tolerance","fx","dx","nx","solveQuadratic","roots","x1","D","count","eMin","eMax","x2","Infinity","gmC","mult","floor","log","LOG10E","isFinite","Q","R","solveCubic","d","b1","c2","x0","q","qd","t","r","s","tmp","ec","UID","_pools","pool","Point","arg0","arg1","hasY","angle","setAngle","setLength","_angle","cos","sin","scale","getAngle","getAngleInRadians","PI","setAngleInRadians","getAngleInDegrees","setAngleInDegrees","div","NaN","dot","acos","atan2","getQuadrant","getDirectedAngle","cross","getDistance","squared","normalize","current","rotate","center","subtract","transform","matrix","_transformPoint","multiply","divide","modulo","negate","isInside","Rectangle","contains","isClose","isCollinear","isColinear","isOrthogonal","isNaN","point1","point2","random","y1","y2","op","LinkedPoint","owner","setter","_x","_y","_owner","_setter","_dontNotify","getX","setX","getY","setY","Size","hasHeight","size1","size2","LinkedSize","_width","_height","getWidth","setWidth","getHeight","setHeight","arg2","arg3","from","to","next","rect","rt","getPoint","_dontLink","setPoint","getSize","setSize","_fixX","_fixY","_fixW","_fixH","getLeft","setLeft","left","getTop","setTop","top","getRight","setRight","right","getBottom","setBottom","bottom","getCenterX","setCenterX","getCenterY","setCenterY","getCenter","setCenter","getArea","isEmpty","_containsRectangle","_containsPoint","intersects","touches","intersect","unite","include","expand","hor","ver","parts","xFirst","LinkedRectangle","internal","isSelected","_boundsSelected","setSelected","selected","_selectedSegmentState","Matrix","ok","_a","_c","_b","_d","_tx","_ty","reset","Error","tx","ty","_changed","getValues","_applyMatrix","mx","recursively","_setApplyMatrix","isIdentity","translate","shear","skew","toRadians","tan","concatenate","a1","c1","d1","a2","b2","d2","tx2","ty2","preConcatenate","tx1","ty1","chain","orNullIfIdentity","isInvertible","_getDeterminant","isSingular","dst","_transformCoordinates","j","_transformCorners","coords","_transformBounds","bounds","inverseTransform","_inverseTransform","det","decompose","scaleX","scaleY","scaling","rotation","shearing","getTranslation","getScaling","getRotation","inverted","shiftless","applyToContext","prop","Line","arg4","asVector","_px","_py","_vx","_vy","getVector","line","isInfinite","getSide","getSignedDistance","p1x","p1y","v1x","v1y","p2x","p2y","v2x","v2y","dy","u1","u2","epsilon","uMin","uMax","px","py","vx","vy","ccw","layers","_activeLayer","symbols","_currentStyle","Style","_view","getCanvas","_selectedItems","_selectedItemCount","_updateVersion","getCurrentStyle","setCurrentStyle","style","getIndex","getOptions","getActiveLayer","getSelectedItems","isInserted","insertChild","_preserve","_remove","_setProject","_changes","NO_INSERT","addChild","_updateSelection","selectedItems","_selected","selectAll","setFullySelected","deselectAll","hitTest","HitResult","_hitTest","getItems","_getItems","getItem","layer","draw","pixelRatio","save","param","offset","viewMatrix","matrices","updateMatrix","restore","strokeWidth","_drawSelection","Symbol","dontCenter","setDefinition","_definition","flags","_clearBoundsCache","_needsUpdate","getDefinition","_dontCenter","_parentSymbol","setPosition","place","position","PlacedSymbol","symbol","definition","_serializeFields","_canApplyMatrix","_selectChildren","pivot","locked","visible","blendMode","opacity","guide","clipMask","data","_initialize","hasProps","_matrix","_style","_project","parent","setParent","_installEvent","_uninstallEvent","onFrame","_animateItem","onLoad","fields","fontSize","Group","_defaults","cacheParent","_parent","_bounds","_position","_decomposed","_globalMatrix","_currentPath","_changesById","getId","getName","setName","unique","_removeNamed","children","_children","namedChildren","_namedChildren","orig","getStyle","setStyle","_locked","_visible","_blendMode","_opacity","_guide","noChildren","isFullySelected","isClipMask","_clipMask","setClipMask","setFillColor","setStrokeColor","getData","setData","getPosition","_pivot","getBounds","getPivot","setPivot","getter","internalGetter","boundsGetter","_boundsGetter","_getCachedBounds","_getBounds","cacheItem","_updateBoundsCache","child","setBounds","cache","cached","_internal","_boundsCache","ids","other","_decompose","decomposed","setRotation","setScaling","getMatrix","setMatrix","getGlobalMatrix","_dontClone","updateVersion","getApplyMatrix","setApplyMatrix","getTransformContent","setTransformContent","getProject","installEvents","getLayer","getParent","getChildren","setChildren","removeChildren","addChildren","getFirstChild","getLastChild","getNextSibling","getPreviousSibling","_equals","_clone","copy","includeMatrix","insertAbove","copyTo","itemOrProject","rasterize","resolution","getStrokeBounds","getResolution","topLeft","getTopLeft","bottomRight","getBottomRight","ceil","canvas","raster","Raster","setCanvas","_contains","getInternalBounds","_asPathItem","Path","getIntersections","checkBounds","pt","tolerancePadding","guides","parentTotalMatrix","_totalMatrix","view","totalMatrix","_tolerancePadding","_getPenPadding","getInternalRoughBounds","checkSelf","points","opts","_getChildHitTestOptions","_hitTestSelf","fill","hasFill","matches","compare","matchObject","RegExp","firstOnly","overlapping","inside","path","childMatrix","insertChildren","_proto","shift","notifySelf","_insertSibling","insertBelow","sendToBack","bringToFront","appendTop","appendBottom","moveAbove","moveBelow","reduce","namedArray","notifyParent","replaceWith","reverseChildren","reverse","isEditable","hasStroke","hasShadow","_getOrder","getList","list1","list2","hasChildren","isAbove","isBelow","isParent","isChild","isDescendant","isAncestor","isSibling","isGroupedWith","_applyRecursively","_transformContent","fillColor","getFillColor","strokeColor","getStrokeColor","decomp","applyRecursively","globalToLocal","localToGlobal","parentToLocal","localToParent","fitBounds","itemRatio","rectRatio","newBounds","_setStyles","shadowColor","getShadowColor","fillStyle","toCanvasStyle","getStrokeWidth","strokeStyle","lineWidth","strokeJoin","getStrokeJoin","strokeCap","getStrokeCap","miterLimit","getMiterLimit","lineJoin","lineCap","dashArray","getDashArray","dashOffset","getDashOffset","setLineDash","lineDashOffset","mozDash","mozDashOffset","shadowBlur","getShadowBlur","getShadowOffset","shadowOffsetX","shadowOffsetY","parentStrokeMatrix","getViewMatrix","globalMatrix","mainCtx","itemOffset","prevOffset","normalBlend","nativeBlend","direct","dontStart","_canComposite","strokeMatrix","getStrokeScaling","clipItem","globalAlpha","globalCompositeOperation","setTransform","_draw","pop","dontFinish","process","_isUpdated","CompoundPath","updated","_drawSelected","color","getSelectedColor","half","beginPath","closePath","stroke","fillRect","hash","removeOn","sets","_removeSets","_clipItem","_getClipItem","isClipped","setClipped","clipped","currentPath","Shape","radius","_type","_size","_radius","setType","setRadius","getType","getShape","setShape","getRadius","rad","toPath","dontPaint","untransformed","isCircle","arc","rx","ry","kappa","cx","cy","moveTo","bezierCurveTo","lineTo","getWindingRule","getCornerCenter","halfSize","dir","corner","getEllipseRadius","hit","outer","inner","createShape","Circle","Ellipse","ellipse","_readEllipse","crossOrigin","source","object","setSource","setImage","_loaded","getSource","image","_image","_canvas","copyCanvas","drawImage","_crossOrigin","getElement","u","getPpi","getImage","complete","naturalWidth","naturalHeight","_context","e","modify","setContext","context","toDataURL","update","document","getElementById","Image","setTimeout","DomEvent","load","getCrossOrigin","setCrossOrigin","getSubCanvas","getSubRaster","getAverageColor","PathItem","sampleSize","_sampleContext","clearRect","pixels","getImageData","channels","total","alpha","Color","getPixel","setPixel","components","_convert","_alpha","imageData","createImageData","putImageData","setImageData","setSymbol","_symbol","getSymbol","values","segments","handles","ends","Segment","arg5","handleIn","handleOut","SegmentPoint","hasHandles","_point","_handleIn","_handleOut","_path","curve","curves","_curves","_closed","getHandleIn","setHandleIn","getHandleOut","setHandleOut","clearHandles","_selectionState","state","oldState","flag","getPath","getCurve","_segments","getCurves","getLocation","CurveLocation","_segment1","getNext","getPrevious","isFirst","isLast","inX","inY","reversed","removeSegment","segment","change","Curve","arg6","arg7","seg1","seg2","handle1","handle2","segment1","segment2","_segment2","getPoint1","getHandle1","getHandle2","getPoint2","_length","setPoint1","setPoint2","setHandle1","setHandle2","getSegment1","getSegment2","getPoints","getLine","getPart","getPartLength","_getIntersections","_getParameter","isParameter","parameter","getParameterAt","_setHandles","tMin","tMax","subdivide","setHandles","split","p1","h1","h2","p2","c1x","c1y","c2x","c2y","p3x","p3y","p4x","p4y","p5x","p5y","p6x","p6y","p7x","p7y","p8x","p8y","coord","getParameterOf","geomEpsilon","getNearestParameter","refine","dist","minDist","minT","isStraight","step","flip","isFlatEnough","ux","uy","h1x","h1y","h2x","h2y","_addBounds","v0","v3","padding","isLinear","third","isHorizontal","getTangentAt","isVertical","getLocationAt","getLocationOf","getOffsetOf","loc","getOffset","getNearestLocation","getNearestPoint","methods","evaluateMethods","getLengthIntegrand","ax","bx","ay","by","getIterations","evaluate","normalized","len","ds","forward","rangeLength","guess","getTangent","getWeightedTangent","getNormal","getWeightedNormal","getCurvature","addLocation","locations","t1","t2","overlap","startConnected","endConnected","renormalize","loc1","loc2","_intersection","addCurveIntersections","oldTDiff","recursion","tMinClip","tMaxClip","q0x","q0y","q3x","q3y","factor","dMin","dMax","dp0","dp1","dp2","dp3","hull","getConvexHull","clipConvexHull","tDiff","tMinNew","tMaxNew","dq0","dq1","dq2","dq3","p0","p3","dist1","dist2","distRatio","hullTop","hullBottom","clipConvexHullPart","threshold","qx","qy","addCurveLineIntersections","vc","vl","lx1","ly1","lx2","ly2","ldx","ldy","rvc","tc","pc","tl","pl","addLineIntersection","_getSelfIntersection","c1p1x","c1p1y","c1p2x","c1p2y","c2p1x","c2p1y","c2p2x","c2p2y","c1s1x","c1s1y","c1s2x","c1s2y","c2s1x","c2s1y","c2s2x","c2s2y","overlaps","getOverlaps","straight1","straight2","straight","before","c1p1","c1p2","c2p1","c2p2","side1","side2","edgeSum","ac","ab","bc","tSplit","maxCurvature","curvature","getCurvatureAt","getLineLengthSquared","timeEpsilon","l1","l2","pairs","o1","o2","_overlap","_distance","_setCurve","_parameter","getPointAt","_next","_prev","_version","_curve","_segment","_setSegment","getSegment","getParameter","trySegment","_offset","getCurveOffset","getIntersection","_ignoreOther","diff","isTouching","inter","curve1","curve2","isCrossing","isInRange","c4","c3","a3","a4","isOverlap","merge","search","found","path1","path2","expanded","_returnFirst","self","matrix1","matrix2","curves1","curves2","length1","length2","values2","arrays","values1","getCrossings","setPathData","getCoord","relative","previous","control","command","lower","move","cubicCurveTo","quadraticCurveTo","arcTo","winding","_getWinding","closed","setSegments","_clockwise","_area","_monoCurves","getSegments","fullySelected","_add","getFirstSegment","getLastSegment","_countCurves","getFirstCurve","getLastCurve","isClosed","setClosed","getPathData","_precision","addSegment","skipLine","curX","curY","first","outX","prevX","outY","prevY","segs","concat","_adjustCurves","insertSegment","addSegments","insertSegments","removeSegments","_includeCurves","last","area","isClockwise","setClockwise","clockwise","_selectSegments","newState","flatten","maxDistance","iterator","PathIterator","pos","end","simplify","fitter","PathFitter","fit","last1","last2","first2","first1","toShape","seg3","seg4","isArc","pt1","pt2","topCenter","shape","isCloseEnough","checkSegmentPoint","seg","anchor","strokePadding","checkSegmentPoints","addToArea","checkSegmentStroke","cap","numSegments","_addBevelJoin","_addSquareCap","hitStroke","hitFill","hitCurves","location","minLoc","drawHandles","drawHandle","hX","hY","pX","pY","drawSegments","drawSegment","handle","dashLength","drawPart","getFirstControlPoints","rhs","smooth","knots","f1","f2","ie","je","getCurrentSegment","moveBy","curveTo","through","extent","vector","middle","large","rxSq","rySq","xSq","ySq","throughSide","centerSide","ext","inc","z","out","_in","lineBy","curveBy","cubicCurveBy","quadraticCurveBy","arcBy","processSegment","prevCoords","addRound","joinBounds","addJoin","addCap","phi","atan","addPoint","normal1","getNormalAt","normal2","normal","getHandleBounds","joinPadding","paddingX","paddingY","xn","xx","yn","yx","getRoughBounds","strokeRadius","joinRadius","createPath","createEllipse","ellipseSegments","bl","getBottomLeft","tr","getTopRight","br","hx","hy","RoundRectangle","Oval","Arc","RegularPolygon","sides","three","Star","radius1","radius2","paths","getCurrentPath","check","preparePath","resolve","resolveCrossings","reorient","finishBoolean","result","computeBoolean","operation","collect","monoCurves","_getMonoCurves","computeOpenBoolean","_path1","_path2","intersections","divideLocations","propagateWinding","_winding","tracePaths","addPath","sub","linkIntersections","prevCurve","prevT","noHandles","clearSegments","origT","getWinding","horizontal","testContains","windLeft","windRight","yTop","yBottom","yBefore","yAfter","xBefore","xAfter","startCounted","slope","counted","totalLength","windingSum","k","node","curveLength","isValid","adjusted","_visited","operator","overlapWinding","isStart","otherStart","findBestIntersection","strict","nextSeg","nextInter","findStartSegment","operators",1,2,"finished","firstSegment","console","error","crossings","insertCurve","y0","handleCurve","y3","sort","getInteriorPoint","xIntercepts","counters","maxRecursion","addCurve","computeParts","maxT","minDifference","halfT","prevVal","prevLen","weighted","fitCubic","tan1","tan2","uPrime","chordLengthParameterize","maxError","parametersInOrder","generateBezier","findMaxError","reparameterize","V1","V2","tanCenter","C","X","b0","b3","alpha1","alpha2","detC0C1","detC0X","detXC1","c0","segLength","eps","degree","maxDist","P","TextItem","content","_content","_lines","setContent","getContent","getCharacterStyle","setCharacterStyle","getParagraphStyle","setParagraphStyle","PointText","lines","leading","getLeading","font","getFontStyle","textAlign","getJustification","fillText","strokeText","numLines","justification","getTextWidth","fromCSS","string","parseInt","colorCache","colorCtx","gray","rgb","hsb","hsl","gradient","componentParsers","hsbIndices","converters","rgb-hsb","g","delta","h","hsb-rgb","rgb-hsl","achromatic","hsl-rgb","t3s","t3","rgb-gray","gray-rgb","gray-hsb","gray-hsl","gradient-rgb","rgb-gradient","properties","hasOverlap","parser","_components","Gradient","_removeOwner","_addOwner","_properties","argType","parsers","stops","radial","getComponents","_canvasStyle","converter","convert","getAlpha","setAlpha","hasAlpha","col","isGradient","toCSS","hex","canvasGradient","_stops","origin","destination","_radial","highlight","createRadialGradient","createLinearGradient","addColorStop","_rampPoint","_color","_types","components1","components2","setStops","setRadial","_owners","getStops","GradientStop","_defaultRamp","setRampPoint","getRadial","rampPoint","setColor","getRampPoint","getColor","defaults","strokeScaling","windingRule","shadowOffset","selectedColor","fontFamily","fontWeight","_textDefaults","isColor","isPoint","old","_values","_dontMerge","childValue","isStyle","getFontSize","getFontWeight","getFontFamily","getFont","setFont","getPixelSize","DomElement","handlePrefix","prefixes","suffix","prefix","getStyles","doc","nodeType","ownerDocument","defaultView","getComputedStyle","viewport","body","html","documentElement","getBoundingClientRect","clientLeft","clientTop","pageXOffset","scrollLeft","pageYOffset","scrollTop","getViewportBounds","innerWidth","clientWidth","innerHeight","clientHeight","isInvisible","isInView","getPrefixed","setPrefixed","addEventListener","removeEventListener","targetTouches","changedTouches","pageX","clientX","pageY","clientY","getTarget","srcElement","getRelatedTarget","relatedTarget","toElement","stopPropagation","preventDefault","requestAnimationFrame","handleCallbacks","callbacks","focused","nativeRequest","requested","timer","window","focus","blur","callback","setInterval","getCanvasSize","_element","_pixelRatio","devicePixelRatio","setAttribute","_viewEvents","none","userSelect","touchAction","touchCallout","contentZooming","userDrag","tapHighlightColor","_windowEvents","resize","setViewSize","_setViewSize","Stats","_stats","stats","domElement","appendChild","_views","_viewsById","_viewSize","_zoom","_focused","_frameItems","_frameItemCount","_animate","play","pause","_time","_count","_requestFrame","_requested","_handleFrame","now","Date","_before","_handlingFrame","time","animate","_handleFrameItems","_update","_transform","getPixelRatio","getViewSize","scrollBy","getZoom","setZoom","zoom","isVisible","projectToView","viewToProject","CanvasView","tempFocus","handleMouseMove","_handleEvent","tool","dragging","prevFocus","mousedown","mousemove","mouseup","pointerEnabled","msPointerEnabled","viewEvents","selectstart dragstart","docEvents","mouseout","nodeName","scroll","mouseFlags","mousedrag","click","doubleclick","mouseenter","mouseleave","_eventCounters","HTMLCanvasElement","deviceRatio","backingStoreRatio","firefox","parentNode","temp","createElement","removeChild","prevFont","measureText","force","callEvent","lastPoint","mouseEvent","MouseEvent","isStopped","downPoint","overPoint","downItem","lastItem","overItem","dragItem","dblClick","clickTime","stopped","Event","isPrevented","getModifiers","Key","modifiers","KeyEvent","down","character","handleKey","keyCode","charCode","String","fromCharCode","specialKey","specialKeys","keyMap","charCodeMap","mac","commandFixMap","downCode",8,9,13,16,17,18,19,20,27,32,35,36,37,38,39,40,46,91,93,224,"specialChars","option","capsLock","space","keydown","which","keypress","keyup","isDown","ToolEvent","_item","_choosePoint","toolPoint","getLastPoint","_lastPoint","setLastPoint","getDownPoint","_downPoint","setDownPoint","getMiddlePoint","_middlePoint","setMiddlePoint","middlePoint","getDelta","_delta","setDelta","getCount","_downCount","setCount","setItem","Tool","_firstMove","getMinDistance","_minDistance","setMinDistance","minDistance","_maxDistance","getMaxDistance","setMaxDistance","getFixedDistance","setFixedDistance","distance","_updateEvent","needsChange","matchMaxDistance","_fireEvent","called","Http","request","method","async","xhr","ActiveXObject","XMLHttpRequest","open","overrideMimeType","onreadystatechange","readyState","status","responseText","send","canvases","getLum","setLum","dr","dg","db","mn","lmn","ln","mxl","getSat","setSat","md","sr","sg","sb","sa","bg","bb","ba","modes","screen","overlay","soft-light","hard-light","color-dodge","color-burn","darken","lighten","difference","exclusion","hue","saturation","luminosity","average","negation","mode","srcContext","dstContext","srcCanvas","dstData","SVGStyles","true","false","lookup","property","attribute","toSVG","fromSVG","exportFilter","SVGNamespaces","href","xlink","setAttributes","attrs","namespace","setAttributeNS","tag","createElementNS","getTransform","coordinates","trans","exportGroup","childNode","exportSVG","clip-path","exportRaster","embedImages","exportPath","matchShapes","exportShape","exportCompoundPath","exportPlacedSymbol","symbolNode","viewBox","overflow","exportGradient","gradientNode","getGradient","getOrigin","getDestination","getHighlight","fy","gradientUnits","stopColor","stop-color","exportText","textContent","applyStyle","visibility","svgs","exportDefinitions","svg","defs","insertBefore","firstChild","XMLSerializer","serializeToString","exporter","exporters","onExport","setOptions","xmlns","xmlns:xlink","getValue","allowNull","getAttributeNS","convertValue","map","importGroup","nodes","childNodes","isClip","currentStyle","applyAttributes","querySelectorAll","importSVG","importPoly","importPath","pathData","importGradient","isRadial","applyTransform","transforms","applyOpacity","styles","attributes","onLoadCallback","File","reader","FileReader","onload","readAsText","DOMParser","parseFromString","importer","importers","onImport","expandShapes","#document","nextSibling","clippath","polygon","polyline","lineargradient","radialgradient","use","circle","text","trim","gradientTransform","fill-opacity","stroke-opacity","setVisible","display","stop-opacity","percentage","group","__$__","handler","binaryOperators","$__","unaryOperators","acorn","compile","insertions","insertion","getCode","range","getBetween","replaceCode","walkAST","argument","between","parentType","computed","exp","sourceMap","lineBreaks","getElementsByTagName","innerHTML","substr","mappings","file","names","sourceRoot","sources","sourcesContent","ranges","btoa","unescape","encodeURIComponent","expose","params","toolHandlers","script","head","createTextNode","_execute","Function","onResize","setOnResize","setOnFrame","loadScript","canvasId","scopeAttribute","baseURI","loadAll","amd","fr","mr","hr","sourceFile","vr","column","SyntaxError","raisedAt","o","Ar","Sr","Er","gr","kr","wr","Cr","beforeExpr","onComment","Kt","lastIndex","charCodeAt","pr","Jt","E","xt","Et","wt","Dt","Lt","Ut","Rt","Tt","Vt","Gt","Lr","St","At","jt","Ot","qt","Ct","It","mt","vt","yt","bt","ft","dt","ht","gt","kt","yr","xr","Br","Qt","L","$t","charAt","I","jr","Or","Tr","Dr","S","Bt","Yt","Fr","Wt","lt","forbidReserved","ecmaVersion","Mt","zt","Xt","U","Ir","Ur","lastIndexOf","V","T","O","expression","F","strictSemicolons","M","N","Nt","W","Rr","Vr","J","Mr","Nr","label","lr","kind","keyword","Wr","Pr","Zt","tt","_r","$","G","declarations","ut","_","K","Gr","cr","Kr","consequent","alternate","Hr","Qr","Yr","discriminant","cases","en","zr","Jr","Zr","et","block","H","Xr","guard","guardedHandlers","qr","finalizer","$r","nt","isLoop","init","expressions","Y","isAssign","Z","er","rr","binop","isUpdate","postfix","nr","ar","callee","ur","ot","raw","it","st","ct","atomValue","elements","ir","at","or","allowTrailingCommas","program","defaultOptions","getLineInfo","tokenize","startLoc","endLoc","jumpTo","break","case","catch","continue","debugger","default","do","else","finally","for","function","if","return","switch","throw","try","var","while","with","null","new","in","instanceof","typeof","void","delete","tokTypes","bracketL","bracketR","braceL","braceR","parenL","parenR","comma","semi","colon","question","slash","eq","eof","num","regexp","Ft","Pt","Ht","_t","isIdentifierStart","isIdentifierChar","+","-","*","/","%","==","!=","_interopRequireDefault","__esModule","_classCallCheck","Constructor","TypeError","_createClass","defineProperties","descriptor","protoProps","staticProps","_objectsTargetJs","_objectsTargetJs2","Game","socket","_this","holdProgress","nextBall","started","createjs","Tween","leftArm","loop","Ease","elasticOut","rightArm","leftLeg","rightLeg","progressUpdate","gameSetup","button","progress","_this2","introLayer","activeLayer","startButton","override","easeOut","_this3","gameLayer","torso","leftHandLane","rightHandLane","metrumY","Ticker","setFPS","launchBall","ball","cubicIn","TargetFactory","_GameJs","_GameJs2","io","fullScreen","webkitRequestFullScreen","mozRequestFullScreen"],"mappings":"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","file":"script.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/*!******************!*\\\n  !*** multi main ***!\n  \\******************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(/*! ./_js/script.js */4);\n\tmodule.exports = __webpack_require__(/*! ./_scss/style.scss */5);\n\n\n/***/ },\n/* 1 */\n/*!************************************!*\\\n  !*** ./~/paper/dist/paper-full.js ***!\n  \\************************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n\t * Paper.js v0.9.25 - The Swiss Army Knife of Vector Graphics Scripting.\n\t * http://paperjs.org/\n\t *\n\t * Copyright (c) 2011 - 2014, Juerg Lehni & Jonathan Puckey\n\t * http://scratchdisk.com/ & http://jonathanpuckey.com/\n\t *\n\t * Distributed under the MIT license. See LICENSE file for details.\n\t *\n\t * All rights reserved.\n\t *\n\t * Date: Sun Oct 25 11:23:38 2015 +0100\n\t *\n\t ***\n\t *\n\t * Straps.js - Class inheritance library with support for bean-style accessors\n\t *\n\t * Copyright (c) 2006 - 2013 Juerg Lehni\n\t * http://scratchdisk.com/\n\t *\n\t * Distributed under the MIT license.\n\t *\n\t ***\n\t *\n\t * Acorn.js\n\t * http://marijnhaverbeke.nl/acorn/\n\t *\n\t * Acorn is a tiny, fast JavaScript parser written in JavaScript,\n\t * created by Marijn Haverbeke and released under an MIT license.\n\t *\n\t */\n\t\n\tvar paper = new function(undefined) {\n\t\n\tvar Base = new function() {\n\t\tvar hidden = /^(statics|enumerable|beans|preserve)$/,\n\t\n\t\t\tforEach = [].forEach || function(iter, bind) {\n\t\t\t\tfor (var i = 0, l = this.length; i < l; i++)\n\t\t\t\t\titer.call(bind, this[i], i, this);\n\t\t\t},\n\t\n\t\t\tforIn = function(iter, bind) {\n\t\t\t\tfor (var i in this)\n\t\t\t\t\tif (this.hasOwnProperty(i))\n\t\t\t\t\t\titer.call(bind, this[i], i, this);\n\t\t\t},\n\t\n\t\t\tcreate = Object.create || function(proto) {\n\t\t\t\treturn { __proto__: proto };\n\t\t\t},\n\t\n\t\t\tdescribe = Object.getOwnPropertyDescriptor || function(obj, name) {\n\t\t\t\tvar get = obj.__lookupGetter__ && obj.__lookupGetter__(name);\n\t\t\t\treturn get\n\t\t\t\t\t\t? { get: get, set: obj.__lookupSetter__(name),\n\t\t\t\t\t\t\tenumerable: true, configurable: true }\n\t\t\t\t\t\t: obj.hasOwnProperty(name)\n\t\t\t\t\t\t\t? { value: obj[name], enumerable: true,\n\t\t\t\t\t\t\t\tconfigurable: true, writable: true }\n\t\t\t\t\t\t\t: null;\n\t\t\t},\n\t\n\t\t\t_define = Object.defineProperty || function(obj, name, desc) {\n\t\t\t\tif ((desc.get || desc.set) && obj.__defineGetter__) {\n\t\t\t\t\tif (desc.get)\n\t\t\t\t\t\tobj.__defineGetter__(name, desc.get);\n\t\t\t\t\tif (desc.set)\n\t\t\t\t\t\tobj.__defineSetter__(name, desc.set);\n\t\t\t\t} else {\n\t\t\t\t\tobj[name] = desc.value;\n\t\t\t\t}\n\t\t\t\treturn obj;\n\t\t\t},\n\t\n\t\t\tdefine = function(obj, name, desc) {\n\t\t\t\tdelete obj[name];\n\t\t\t\treturn _define(obj, name, desc);\n\t\t\t};\n\t\n\t\tfunction inject(dest, src, enumerable, beans, preserve) {\n\t\t\tvar beansNames = {};\n\t\n\t\t\tfunction field(name, val) {\n\t\t\t\tval = val || (val = describe(src, name))\n\t\t\t\t\t\t&& (val.get ? val : val.value);\n\t\t\t\tif (typeof val === 'string' && val[0] === '#')\n\t\t\t\t\tval = dest[val.substring(1)] || val;\n\t\t\t\tvar isFunc = typeof val === 'function',\n\t\t\t\t\tres = val,\n\t\t\t\t\tprev = preserve || isFunc && !val.base\n\t\t\t\t\t\t\t? (val && val.get ? name in dest : dest[name])\n\t\t\t\t\t\t\t: null,\n\t\t\t\t\tbean;\n\t\t\t\tif (!preserve || !prev) {\n\t\t\t\t\tif (isFunc && prev)\n\t\t\t\t\t\tval.base = prev;\n\t\t\t\t\tif (isFunc && beans !== false\n\t\t\t\t\t\t\t&& (bean = name.match(/^([gs]et|is)(([A-Z])(.*))$/)))\n\t\t\t\t\t\tbeansNames[bean[3].toLowerCase() + bean[4]] = bean[2];\n\t\t\t\t\tif (!res || isFunc || !res.get || typeof res.get !== 'function'\n\t\t\t\t\t\t\t|| !Base.isPlainObject(res))\n\t\t\t\t\t\tres = { value: res, writable: true };\n\t\t\t\t\tif ((describe(dest, name)\n\t\t\t\t\t\t\t|| { configurable: true }).configurable) {\n\t\t\t\t\t\tres.configurable = true;\n\t\t\t\t\t\tres.enumerable = enumerable;\n\t\t\t\t\t}\n\t\t\t\t\tdefine(dest, name, res);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (src) {\n\t\t\t\tfor (var name in src) {\n\t\t\t\t\tif (src.hasOwnProperty(name) && !hidden.test(name))\n\t\t\t\t\t\tfield(name);\n\t\t\t\t}\n\t\t\t\tfor (var name in beansNames) {\n\t\t\t\t\tvar part = beansNames[name],\n\t\t\t\t\t\tset = dest['set' + part],\n\t\t\t\t\t\tget = dest['get' + part] || set && dest['is' + part];\n\t\t\t\t\tif (get && (beans === true || get.length === 0))\n\t\t\t\t\t\tfield(name, { get: get, set: set });\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn dest;\n\t\t}\n\t\n\t\tfunction each(obj, iter, bind) {\n\t\t\tif (obj)\n\t\t\t\t('length' in obj && !obj.getLength\n\t\t\t\t\t\t&& typeof obj.length === 'number'\n\t\t\t\t\t? forEach\n\t\t\t\t\t: forIn).call(obj, iter, bind = bind || obj);\n\t\t\treturn bind;\n\t\t}\n\t\n\t\tfunction set(obj, props, exclude) {\n\t\t\tfor (var key in props)\n\t\t\t\tif (props.hasOwnProperty(key) && !(exclude && exclude[key]))\n\t\t\t\t\tobj[key] = props[key];\n\t\t\treturn obj;\n\t\t}\n\t\n\t\treturn inject(function Base() {\n\t\t\tfor (var i = 0, l = arguments.length; i < l; i++)\n\t\t\t\tset(this, arguments[i]);\n\t\t}, {\n\t\t\tinject: function(src) {\n\t\t\t\tif (src) {\n\t\t\t\t\tvar statics = src.statics === true ? src : src.statics,\n\t\t\t\t\t\tbeans = src.beans,\n\t\t\t\t\t\tpreserve = src.preserve;\n\t\t\t\t\tif (statics !== src)\n\t\t\t\t\t\tinject(this.prototype, src, src.enumerable, beans, preserve);\n\t\t\t\t\tinject(this, statics, true, beans, preserve);\n\t\t\t\t}\n\t\t\t\tfor (var i = 1, l = arguments.length; i < l; i++)\n\t\t\t\t\tthis.inject(arguments[i]);\n\t\t\t\treturn this;\n\t\t\t},\n\t\n\t\t\textend: function() {\n\t\t\t\tvar base = this,\n\t\t\t\t\tctor,\n\t\t\t\t\tproto;\n\t\t\t\tfor (var i = 0, l = arguments.length; i < l; i++)\n\t\t\t\t\tif (ctor = arguments[i].initialize)\n\t\t\t\t\t\tbreak;\n\t\t\t\tctor = ctor || function() {\n\t\t\t\t\tbase.apply(this, arguments);\n\t\t\t\t};\n\t\t\t\tproto = ctor.prototype = create(this.prototype);\n\t\t\t\tdefine(proto, 'constructor',\n\t\t\t\t\t\t{ value: ctor, writable: true, configurable: true });\n\t\t\t\tinject(ctor, this, true);\n\t\t\t\tif (arguments.length)\n\t\t\t\t\tthis.inject.apply(ctor, arguments);\n\t\t\t\tctor.base = base;\n\t\t\t\treturn ctor;\n\t\t\t}\n\t\t}, true).inject({\n\t\t\tinject: function() {\n\t\t\t\tfor (var i = 0, l = arguments.length; i < l; i++) {\n\t\t\t\t\tvar src = arguments[i];\n\t\t\t\t\tif (src)\n\t\t\t\t\t\tinject(this, src, src.enumerable, src.beans, src.preserve);\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\n\t\t\textend: function() {\n\t\t\t\tvar res = create(this);\n\t\t\t\treturn res.inject.apply(res, arguments);\n\t\t\t},\n\t\n\t\t\teach: function(iter, bind) {\n\t\t\t\treturn each(this, iter, bind);\n\t\t\t},\n\t\n\t\t\tset: function(props) {\n\t\t\t\treturn set(this, props);\n\t\t\t},\n\t\n\t\t\tclone: function() {\n\t\t\t\treturn new this.constructor(this);\n\t\t\t},\n\t\n\t\t\tstatics: {\n\t\t\t\teach: each,\n\t\t\t\tcreate: create,\n\t\t\t\tdefine: define,\n\t\t\t\tdescribe: describe,\n\t\t\t\tset: set,\n\t\n\t\t\t\tclone: function(obj) {\n\t\t\t\t\treturn set(new obj.constructor(), obj);\n\t\t\t\t},\n\t\n\t\t\t\tisPlainObject: function(obj) {\n\t\t\t\t\tvar ctor = obj != null && obj.constructor;\n\t\t\t\t\treturn ctor && (ctor === Object || ctor === Base\n\t\t\t\t\t\t\t|| ctor.name === 'Object');\n\t\t\t\t},\n\t\n\t\t\t\tpick: function(a, b) {\n\t\t\t\t\treturn a !== undefined ? a : b;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\t\n\tif (true)\n\t\tmodule.exports = Base;\n\t\n\tBase.inject({\n\t\ttoString: function() {\n\t\t\treturn this._id != null\n\t\t\t\t?  (this._class || 'Object') + (this._name\n\t\t\t\t\t? \" '\" + this._name + \"'\"\n\t\t\t\t\t: ' @' + this._id)\n\t\t\t\t: '{ ' + Base.each(this, function(value, key) {\n\t\t\t\t\tif (!/^_/.test(key)) {\n\t\t\t\t\t\tvar type = typeof value;\n\t\t\t\t\t\tthis.push(key + ': ' + (type === 'number'\n\t\t\t\t\t\t\t\t? Formatter.instance.number(value)\n\t\t\t\t\t\t\t\t: type === 'string' ? \"'\" + value + \"'\" : value));\n\t\t\t\t\t}\n\t\t\t\t}, []).join(', ') + ' }';\n\t\t},\n\t\n\t\tgetClassName: function() {\n\t\t\treturn this._class || '';\n\t\t},\n\t\n\t\texportJSON: function(options) {\n\t\t\treturn Base.exportJSON(this, options);\n\t\t},\n\t\n\t\ttoJSON: function() {\n\t\t\treturn Base.serialize(this);\n\t\t},\n\t\n\t\t_set: function(props, exclude, dontCheck) {\n\t\t\tif (props && (dontCheck || Base.isPlainObject(props))) {\n\t\t\t\tvar keys = Object.keys(props._filtering || props);\n\t\t\t\tfor (var i = 0, l = keys.length; i < l; i++) {\n\t\t\t\t\tvar key = keys[i];\n\t\t\t\t\tif (!(exclude && exclude[key])) {\n\t\t\t\t\t\tvar value = props[key];\n\t\t\t\t\t\tif (value !== undefined)\n\t\t\t\t\t\t\tthis[key] = value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t},\n\t\n\t\tstatics: {\n\t\n\t\t\texports: {\n\t\t\t\tenumerable: true\n\t\t\t},\n\t\n\t\t\textend: function extend() {\n\t\t\t\tvar res = extend.base.apply(this, arguments),\n\t\t\t\t\tname = res.prototype._class;\n\t\t\t\tif (name && !Base.exports[name])\n\t\t\t\t\tBase.exports[name] = res;\n\t\t\t\treturn res;\n\t\t\t},\n\t\n\t\t\tequals: function(obj1, obj2) {\n\t\t\t\tif (obj1 === obj2)\n\t\t\t\t\treturn true;\n\t\t\t\tif (obj1 && obj1.equals)\n\t\t\t\t\treturn obj1.equals(obj2);\n\t\t\t\tif (obj2 && obj2.equals)\n\t\t\t\t\treturn obj2.equals(obj1);\n\t\t\t\tif (obj1 && obj2\n\t\t\t\t\t\t&& typeof obj1 === 'object' && typeof obj2 === 'object') {\n\t\t\t\t\tif (Array.isArray(obj1) && Array.isArray(obj2)) {\n\t\t\t\t\t\tvar length = obj1.length;\n\t\t\t\t\t\tif (length !== obj2.length)\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\twhile (length--) {\n\t\t\t\t\t\t\tif (!Base.equals(obj1[length], obj2[length]))\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar keys = Object.keys(obj1),\n\t\t\t\t\t\t\tlength = keys.length;\n\t\t\t\t\t\tif (length !== Object.keys(obj2).length)\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\twhile (length--) {\n\t\t\t\t\t\t\tvar key = keys[length];\n\t\t\t\t\t\t\tif (!(obj2.hasOwnProperty(key)\n\t\t\t\t\t\t\t\t\t&& Base.equals(obj1[key], obj2[key])))\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t},\n\t\n\t\t\tread: function(list, start, options, length) {\n\t\t\t\tif (this === Base) {\n\t\t\t\t\tvar value = this.peek(list, start);\n\t\t\t\t\tlist.__index++;\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t\tvar proto = this.prototype,\n\t\t\t\t\treadIndex = proto._readIndex,\n\t\t\t\t\tindex = start || readIndex && list.__index || 0;\n\t\t\t\tif (!length)\n\t\t\t\t\tlength = list.length - index;\n\t\t\t\tvar obj = list[index];\n\t\t\t\tif (obj instanceof this\n\t\t\t\t\t|| options && options.readNull && obj == null && length <= 1) {\n\t\t\t\t\tif (readIndex)\n\t\t\t\t\t\tlist.__index = index + 1;\n\t\t\t\t\treturn obj && options && options.clone ? obj.clone() : obj;\n\t\t\t\t}\n\t\t\t\tobj = Base.create(this.prototype);\n\t\t\t\tif (readIndex)\n\t\t\t\t\tobj.__read = true;\n\t\t\t\tobj = obj.initialize.apply(obj, index > 0 || length < list.length\n\t\t\t\t\t? Array.prototype.slice.call(list, index, index + length)\n\t\t\t\t\t: list) || obj;\n\t\t\t\tif (readIndex) {\n\t\t\t\t\tlist.__index = index + obj.__read;\n\t\t\t\t\tobj.__read = undefined;\n\t\t\t\t}\n\t\t\t\treturn obj;\n\t\t\t},\n\t\n\t\t\tpeek: function(list, start) {\n\t\t\t\treturn list[list.__index = start || list.__index || 0];\n\t\t\t},\n\t\n\t\t\tremain: function(list) {\n\t\t\t\treturn list.length - (list.__index || 0);\n\t\t\t},\n\t\n\t\t\treadAll: function(list, start, options) {\n\t\t\t\tvar res = [],\n\t\t\t\t\tentry;\n\t\t\t\tfor (var i = start || 0, l = list.length; i < l; i++) {\n\t\t\t\t\tres.push(Array.isArray(entry = list[i])\n\t\t\t\t\t\t\t? this.read(entry, 0, options)\n\t\t\t\t\t\t\t: this.read(list, i, options, 1));\n\t\t\t\t}\n\t\t\t\treturn res;\n\t\t\t},\n\t\n\t\t\treadNamed: function(list, name, start, options, length) {\n\t\t\t\tvar value = this.getNamed(list, name),\n\t\t\t\t\thasObject = value !== undefined;\n\t\t\t\tif (hasObject) {\n\t\t\t\t\tvar filtered = list._filtered;\n\t\t\t\t\tif (!filtered) {\n\t\t\t\t\t\tfiltered = list._filtered = Base.create(list[0]);\n\t\t\t\t\t\tfiltered._filtering = list[0];\n\t\t\t\t\t}\n\t\t\t\t\tfiltered[name] = undefined;\n\t\t\t\t}\n\t\t\t\treturn this.read(hasObject ? [value] : list, start, options, length);\n\t\t\t},\n\t\n\t\t\tgetNamed: function(list, name) {\n\t\t\t\tvar arg = list[0];\n\t\t\t\tif (list._hasObject === undefined)\n\t\t\t\t\tlist._hasObject = list.length === 1 && Base.isPlainObject(arg);\n\t\t\t\tif (list._hasObject)\n\t\t\t\t\treturn name ? arg[name] : list._filtered || arg;\n\t\t\t},\n\t\n\t\t\thasNamed: function(list, name) {\n\t\t\t\treturn !!this.getNamed(list, name);\n\t\t\t},\n\t\n\t\t\tisPlainValue: function(obj, asString) {\n\t\t\t\treturn this.isPlainObject(obj) || Array.isArray(obj)\n\t\t\t\t\t\t|| asString && typeof obj === 'string';\n\t\t\t},\n\t\n\t\t\tserialize: function(obj, options, compact, dictionary) {\n\t\t\t\toptions = options || {};\n\t\n\t\t\t\tvar root = !dictionary,\n\t\t\t\t\tres;\n\t\t\t\tif (root) {\n\t\t\t\t\toptions.formatter = new Formatter(options.precision);\n\t\t\t\t\tdictionary = {\n\t\t\t\t\t\tlength: 0,\n\t\t\t\t\t\tdefinitions: {},\n\t\t\t\t\t\treferences: {},\n\t\t\t\t\t\tadd: function(item, create) {\n\t\t\t\t\t\t\tvar id = '#' + item._id,\n\t\t\t\t\t\t\t\tref = this.references[id];\n\t\t\t\t\t\t\tif (!ref) {\n\t\t\t\t\t\t\t\tthis.length++;\n\t\t\t\t\t\t\t\tvar res = create.call(item),\n\t\t\t\t\t\t\t\t\tname = item._class;\n\t\t\t\t\t\t\t\tif (name && res[0] !== name)\n\t\t\t\t\t\t\t\t\tres.unshift(name);\n\t\t\t\t\t\t\t\tthis.definitions[id] = res;\n\t\t\t\t\t\t\t\tref = this.references[id] = [id];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn ref;\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tif (obj && obj._serialize) {\n\t\t\t\t\tres = obj._serialize(options, dictionary);\n\t\t\t\t\tvar name = obj._class;\n\t\t\t\t\tif (name && !compact && !res._compact && res[0] !== name)\n\t\t\t\t\t\tres.unshift(name);\n\t\t\t\t} else if (Array.isArray(obj)) {\n\t\t\t\t\tres = [];\n\t\t\t\t\tfor (var i = 0, l = obj.length; i < l; i++)\n\t\t\t\t\t\tres[i] = Base.serialize(obj[i], options, compact,\n\t\t\t\t\t\t\t\tdictionary);\n\t\t\t\t\tif (compact)\n\t\t\t\t\t\tres._compact = true;\n\t\t\t\t} else if (Base.isPlainObject(obj)) {\n\t\t\t\t\tres = {};\n\t\t\t\t\tvar keys = Object.keys(obj);\n\t\t\t\t\tfor (var i = 0, l = keys.length; i < l; i++) {\n\t\t\t\t\t\tvar key = keys[i];\n\t\t\t\t\t\tres[key] = Base.serialize(obj[key], options, compact,\n\t\t\t\t\t\t\t\tdictionary);\n\t\t\t\t\t}\n\t\t\t\t} else if (typeof obj === 'number') {\n\t\t\t\t\tres = options.formatter.number(obj, options.precision);\n\t\t\t\t} else {\n\t\t\t\t\tres = obj;\n\t\t\t\t}\n\t\t\t\treturn root && dictionary.length > 0\n\t\t\t\t\t\t? [['dictionary', dictionary.definitions], res]\n\t\t\t\t\t\t: res;\n\t\t\t},\n\t\n\t\t\tdeserialize: function(json, create, _data, _isDictionary) {\n\t\t\t\tvar res = json,\n\t\t\t\t\tisRoot = !_data;\n\t\t\t\t_data = _data || {};\n\t\t\t\tif (Array.isArray(json)) {\n\t\t\t\t\tvar type = json[0],\n\t\t\t\t\t\tisDictionary = type === 'dictionary';\n\t\t\t\t\tif (json.length == 1 && /^#/.test(type))\n\t\t\t\t\t\treturn _data.dictionary[type];\n\t\t\t\t\ttype = Base.exports[type];\n\t\t\t\t\tres = [];\n\t\t\t\t\tif (_isDictionary)\n\t\t\t\t\t\t_data.dictionary = res;\n\t\t\t\t\tfor (var i = type ? 1 : 0, l = json.length; i < l; i++)\n\t\t\t\t\t\tres.push(Base.deserialize(json[i], create, _data,\n\t\t\t\t\t\t\t\tisDictionary));\n\t\t\t\t\tif (type) {\n\t\t\t\t\t\tvar args = res;\n\t\t\t\t\t\tif (create) {\n\t\t\t\t\t\t\tres = create(type, args);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tres = Base.create(type.prototype);\n\t\t\t\t\t\t\ttype.apply(res, args);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (Base.isPlainObject(json)) {\n\t\t\t\t\tres = {};\n\t\t\t\t\tif (_isDictionary)\n\t\t\t\t\t\t_data.dictionary = res;\n\t\t\t\t\tfor (var key in json)\n\t\t\t\t\t\tres[key] = Base.deserialize(json[key], create, _data);\n\t\t\t\t}\n\t\t\t\treturn isRoot && json && json.length && json[0][0] === 'dictionary'\n\t\t\t\t\t\t? res[1]\n\t\t\t\t\t\t: res;\n\t\t\t},\n\t\n\t\t\texportJSON: function(obj, options) {\n\t\t\t\tvar json = Base.serialize(obj, options);\n\t\t\t\treturn options && options.asString === false\n\t\t\t\t\t\t? json\n\t\t\t\t\t\t: JSON.stringify(json);\n\t\t\t},\n\t\n\t\t\timportJSON: function(json, target) {\n\t\t\t\treturn Base.deserialize(\n\t\t\t\t\t\ttypeof json === 'string' ? JSON.parse(json) : json,\n\t\t\t\t\t\tfunction(type, args) {\n\t\t\t\t\t\t\tvar obj = target && target.constructor === type\n\t\t\t\t\t\t\t\t\t? target\n\t\t\t\t\t\t\t\t\t: Base.create(type.prototype),\n\t\t\t\t\t\t\t\tisTarget = obj === target;\n\t\t\t\t\t\t\tif (args.length === 1 && obj instanceof Item\n\t\t\t\t\t\t\t\t\t&& (isTarget || !(obj instanceof Layer))) {\n\t\t\t\t\t\t\t\tvar arg = args[0];\n\t\t\t\t\t\t\t\tif (Base.isPlainObject(arg))\n\t\t\t\t\t\t\t\t\targ.insert = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttype.apply(obj, args);\n\t\t\t\t\t\t\tif (isTarget)\n\t\t\t\t\t\t\t\ttarget = null;\n\t\t\t\t\t\t\treturn obj;\n\t\t\t\t\t\t});\n\t\t\t},\n\t\n\t\t\tsplice: function(list, items, index, remove) {\n\t\t\t\tvar amount = items && items.length,\n\t\t\t\t\tappend = index === undefined;\n\t\t\t\tindex = append ? list.length : index;\n\t\t\t\tif (index > list.length)\n\t\t\t\t\tindex = list.length;\n\t\t\t\tfor (var i = 0; i < amount; i++)\n\t\t\t\t\titems[i]._index = index + i;\n\t\t\t\tif (append) {\n\t\t\t\t\tlist.push.apply(list, items);\n\t\t\t\t\treturn [];\n\t\t\t\t} else {\n\t\t\t\t\tvar args = [index, remove];\n\t\t\t\t\tif (items)\n\t\t\t\t\t\targs.push.apply(args, items);\n\t\t\t\t\tvar removed = list.splice.apply(list, args);\n\t\t\t\t\tfor (var i = 0, l = removed.length; i < l; i++)\n\t\t\t\t\t\tremoved[i]._index = undefined;\n\t\t\t\t\tfor (var i = index + amount, l = list.length; i < l; i++)\n\t\t\t\t\t\tlist[i]._index = i;\n\t\t\t\t\treturn removed;\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\tcapitalize: function(str) {\n\t\t\t\treturn str.replace(/\\b[a-z]/g, function(match) {\n\t\t\t\t\treturn match.toUpperCase();\n\t\t\t\t});\n\t\t\t},\n\t\n\t\t\tcamelize: function(str) {\n\t\t\t\treturn str.replace(/-(.)/g, function(all, chr) {\n\t\t\t\t\treturn chr.toUpperCase();\n\t\t\t\t});\n\t\t\t},\n\t\n\t\t\thyphenate: function(str) {\n\t\t\t\treturn str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n\t\t\t}\n\t\t}\n\t});\n\t\n\tvar Emitter = {\n\t\ton: function(type, func) {\n\t\t\tif (typeof type !== 'string') {\n\t\t\t\tBase.each(type, function(value, key) {\n\t\t\t\t\tthis.on(key, value);\n\t\t\t\t}, this);\n\t\t\t} else {\n\t\t\t\tvar types = this._eventTypes,\n\t\t\t\t\tentry = types && types[type],\n\t\t\t\t\thandlers = this._callbacks = this._callbacks || {};\n\t\t\t\thandlers = handlers[type] = handlers[type] || [];\n\t\t\t\tif (handlers.indexOf(func) === -1) {\n\t\t\t\t\thandlers.push(func);\n\t\t\t\t\tif (entry && entry.install && handlers.length === 1)\n\t\t\t\t\t\tentry.install.call(this, type);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\n\t\toff: function(type, func) {\n\t\t\tif (typeof type !== 'string') {\n\t\t\t\tBase.each(type, function(value, key) {\n\t\t\t\t\tthis.off(key, value);\n\t\t\t\t}, this);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar types = this._eventTypes,\n\t\t\t\tentry = types && types[type],\n\t\t\t\thandlers = this._callbacks && this._callbacks[type],\n\t\t\t\tindex;\n\t\t\tif (handlers) {\n\t\t\t\tif (!func || (index = handlers.indexOf(func)) !== -1\n\t\t\t\t\t\t&& handlers.length === 1) {\n\t\t\t\t\tif (entry && entry.uninstall)\n\t\t\t\t\t\tentry.uninstall.call(this, type);\n\t\t\t\t\tdelete this._callbacks[type];\n\t\t\t\t} else if (index !== -1) {\n\t\t\t\t\thandlers.splice(index, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\n\t\tonce: function(type, func) {\n\t\t\treturn this.on(type, function() {\n\t\t\t\tfunc.apply(this, arguments);\n\t\t\t\tthis.off(type, func);\n\t\t\t});\n\t\t},\n\t\n\t\temit: function(type, event) {\n\t\t\tvar handlers = this._callbacks && this._callbacks[type];\n\t\t\tif (!handlers)\n\t\t\t\treturn false;\n\t\t\tvar args = [].slice.call(arguments, 1);\n\t\t\thandlers = handlers.slice();\n\t\t\tfor (var i = 0, l = handlers.length; i < l; i++) {\n\t\t\t\tif (handlers[i].apply(this, args) === false) {\n\t\t\t\t\tif (event && event.stop)\n\t\t\t\t\t\tevent.stop();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\t\n\t\tresponds: function(type) {\n\t\t\treturn !!(this._callbacks && this._callbacks[type]);\n\t\t},\n\t\n\t\tattach: '#on',\n\t\tdetach: '#off',\n\t\tfire: '#emit',\n\t\n\t\t_installEvents: function(install) {\n\t\t\tvar handlers = this._callbacks,\n\t\t\t\tkey = install ? 'install' : 'uninstall';\n\t\t\tfor (var type in handlers) {\n\t\t\t\tif (handlers[type].length > 0) {\n\t\t\t\t\tvar types = this._eventTypes,\n\t\t\t\t\t\tentry = types && types[type],\n\t\t\t\t\t\tfunc = entry && entry[key];\n\t\t\t\t\tif (func)\n\t\t\t\t\t\tfunc.call(this, type);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\tstatics: {\n\t\t\tinject: function inject(src) {\n\t\t\t\tvar events = src._events;\n\t\t\t\tif (events) {\n\t\t\t\t\tvar types = {};\n\t\t\t\t\tBase.each(events, function(entry, key) {\n\t\t\t\t\t\tvar isString = typeof entry === 'string',\n\t\t\t\t\t\t\tname = isString ? entry : key,\n\t\t\t\t\t\t\tpart = Base.capitalize(name),\n\t\t\t\t\t\t\ttype = name.substring(2).toLowerCase();\n\t\t\t\t\t\ttypes[type] = isString ? {} : entry;\n\t\t\t\t\t\tname = '_' + name;\n\t\t\t\t\t\tsrc['get' + part] = function() {\n\t\t\t\t\t\t\treturn this[name];\n\t\t\t\t\t\t};\n\t\t\t\t\t\tsrc['set' + part] = function(func) {\n\t\t\t\t\t\t\tvar prev = this[name];\n\t\t\t\t\t\t\tif (prev)\n\t\t\t\t\t\t\t\tthis.off(type, prev);\n\t\t\t\t\t\t\tif (func)\n\t\t\t\t\t\t\t\tthis.on(type, func);\n\t\t\t\t\t\t\tthis[name] = func;\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t\tsrc._eventTypes = types;\n\t\t\t\t}\n\t\t\t\treturn inject.base.apply(this, arguments);\n\t\t\t}\n\t\t}\n\t};\n\t\n\tvar PaperScope = Base.extend({\n\t\t_class: 'PaperScope',\n\t\n\t\tinitialize: function PaperScope() {\n\t\t\tpaper = this;\n\t\t\tthis.settings = new Base({\n\t\t\t\tapplyMatrix: true,\n\t\t\t\thandleSize: 4,\n\t\t\t\thitTolerance: 0\n\t\t\t});\n\t\t\tthis.project = null;\n\t\t\tthis.projects = [];\n\t\t\tthis.tools = [];\n\t\t\tthis.palettes = [];\n\t\t\tthis._id = PaperScope._id++;\n\t\t\tPaperScope._scopes[this._id] = this;\n\t\t\tvar proto = PaperScope.prototype;\n\t\t\tif (!this.support) {\n\t\t\t\tvar ctx = CanvasProvider.getContext(1, 1);\n\t\t\t\tproto.support = {\n\t\t\t\t\tnativeDash: 'setLineDash' in ctx || 'mozDash' in ctx,\n\t\t\t\t\tnativeBlendModes: BlendMode.nativeModes\n\t\t\t\t};\n\t\t\t\tCanvasProvider.release(ctx);\n\t\t\t}\n\t\n\t\t\tif (!this.browser) {\n\t\t\t\tvar agent = navigator.userAgent.toLowerCase(),\n\t\t\t\t\tplatform = (/(win)/.exec(agent)\n\t\t\t\t\t\t\t|| /(mac)/.exec(agent)\n\t\t\t\t\t\t\t|| /(linux)/.exec(agent)\n\t\t\t\t\t\t\t|| [])[0],\n\t\t\t\t\tbrowser = proto.browser = { platform: platform };\n\t\t\t\tif (platform)\n\t\t\t\t\tbrowser[platform] = true;\n\t\t\t\tagent.replace(\n\t\t\t\t\t/(opera|chrome|safari|webkit|firefox|msie|trident|atom)\\/?\\s*([.\\d]+)(?:.*version\\/([.\\d]+))?(?:.*rv\\:([.\\d]+))?/g,\n\t\t\t\t\tfunction(all, n, v1, v2, rv) {\n\t\t\t\t\t\tif (!browser.chrome) {\n\t\t\t\t\t\t\tvar v = n === 'opera' ? v2 : v1;\n\t\t\t\t\t\t\tif (n === 'trident') {\n\t\t\t\t\t\t\t\tv = rv;\n\t\t\t\t\t\t\t\tn = 'msie';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbrowser.version = v;\n\t\t\t\t\t\t\tbrowser.versionNumber = parseFloat(v);\n\t\t\t\t\t\t\tbrowser.name = n;\n\t\t\t\t\t\t\tbrowser[n] = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tif (browser.chrome)\n\t\t\t\t\tdelete browser.webkit;\n\t\t\t\tif (browser.atom)\n\t\t\t\t\tdelete browser.chrome;\n\t\t\t}\n\t\t},\n\t\n\t\tversion: \"0.9.25\",\n\t\n\t\tgetView: function() {\n\t\t\treturn this.project && this.project.getView();\n\t\t},\n\t\n\t\tgetPaper: function() {\n\t\t\treturn this;\n\t\t},\n\t\n\t\texecute: function(code, url, options) {\n\t\t\tpaper.PaperScript.execute(code, this, url, options);\n\t\t\tView.updateFocus();\n\t\t},\n\t\n\t\tinstall: function(scope) {\n\t\t\tvar that = this;\n\t\t\tBase.each(['project', 'view', 'tool'], function(key) {\n\t\t\t\tBase.define(scope, key, {\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\tget: function() {\n\t\t\t\t\t\treturn that[key];\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t\tfor (var key in this)\n\t\t\t\tif (!/^_/.test(key) && this[key])\n\t\t\t\t\tscope[key] = this[key];\n\t\t},\n\t\n\t\tsetup: function(element) {\n\t\t\tpaper = this;\n\t\t\tthis.project = new Project(element);\n\t\t\treturn this;\n\t\t},\n\t\n\t\tactivate: function() {\n\t\t\tpaper = this;\n\t\t},\n\t\n\t\tclear: function() {\n\t\t\tfor (var i = this.projects.length - 1; i >= 0; i--)\n\t\t\t\tthis.projects[i].remove();\n\t\t\tfor (var i = this.tools.length - 1; i >= 0; i--)\n\t\t\t\tthis.tools[i].remove();\n\t\t\tfor (var i = this.palettes.length - 1; i >= 0; i--)\n\t\t\t\tthis.palettes[i].remove();\n\t\t},\n\t\n\t\tremove: function() {\n\t\t\tthis.clear();\n\t\t\tdelete PaperScope._scopes[this._id];\n\t\t},\n\t\n\t\tstatics: new function() {\n\t\t\tfunction handleAttribute(name) {\n\t\t\t\tname += 'Attribute';\n\t\t\t\treturn function(el, attr) {\n\t\t\t\t\treturn el[name](attr) || el[name]('data-paper-' + attr);\n\t\t\t\t};\n\t\t\t}\n\t\n\t\t\treturn {\n\t\t\t\t_scopes: {},\n\t\t\t\t_id: 0,\n\t\n\t\t\t\tget: function(id) {\n\t\t\t\t\treturn this._scopes[id] || null;\n\t\t\t\t},\n\t\n\t\t\t\tgetAttribute: handleAttribute('get'),\n\t\t\t\thasAttribute: handleAttribute('has')\n\t\t\t};\n\t\t}\n\t});\n\t\n\tvar PaperScopeItem = Base.extend(Emitter, {\n\t\n\t\tinitialize: function(activate) {\n\t\t\tthis._scope = paper;\n\t\t\tthis._index = this._scope[this._list].push(this) - 1;\n\t\t\tif (activate || !this._scope[this._reference])\n\t\t\t\tthis.activate();\n\t\t},\n\t\n\t\tactivate: function() {\n\t\t\tif (!this._scope)\n\t\t\t\treturn false;\n\t\t\tvar prev = this._scope[this._reference];\n\t\t\tif (prev && prev !== this)\n\t\t\t\tprev.emit('deactivate');\n\t\t\tthis._scope[this._reference] = this;\n\t\t\tthis.emit('activate', prev);\n\t\t\treturn true;\n\t\t},\n\t\n\t\tisActive: function() {\n\t\t\treturn this._scope[this._reference] === this;\n\t\t},\n\t\n\t\tremove: function() {\n\t\t\tif (this._index == null)\n\t\t\t\treturn false;\n\t\t\tBase.splice(this._scope[this._list], null, this._index, 1);\n\t\t\tif (this._scope[this._reference] == this)\n\t\t\t\tthis._scope[this._reference] = null;\n\t\t\tthis._scope = null;\n\t\t\treturn true;\n\t\t}\n\t});\n\t\n\tvar Formatter = Base.extend({\n\t\tinitialize: function(precision) {\n\t\t\tthis.precision = precision || 5;\n\t\t\tthis.multiplier = Math.pow(10, this.precision);\n\t\t},\n\t\n\t\tnumber: function(val) {\n\t\t\treturn Math.round(val * this.multiplier) / this.multiplier;\n\t\t},\n\t\n\t\tpair: function(val1, val2, separator) {\n\t\t\treturn this.number(val1) + (separator || ',') + this.number(val2);\n\t\t},\n\t\n\t\tpoint: function(val, separator) {\n\t\t\treturn this.number(val.x) + (separator || ',') + this.number(val.y);\n\t\t},\n\t\n\t\tsize: function(val, separator) {\n\t\t\treturn this.number(val.width) + (separator || ',')\n\t\t\t\t\t+ this.number(val.height);\n\t\t},\n\t\n\t\trectangle: function(val, separator) {\n\t\t\treturn this.point(val, separator) + (separator || ',')\n\t\t\t\t\t+ this.size(val, separator);\n\t\t}\n\t});\n\t\n\tFormatter.instance = new Formatter();\n\t\n\tvar Numerical = new function() {\n\t\n\t\tvar abscissas = [\n\t\t\t[  0.5773502691896257645091488],\n\t\t\t[0,0.7745966692414833770358531],\n\t\t\t[  0.3399810435848562648026658,0.8611363115940525752239465],\n\t\t\t[0,0.5384693101056830910363144,0.9061798459386639927976269],\n\t\t\t[  0.2386191860831969086305017,0.6612093864662645136613996,0.9324695142031520278123016],\n\t\t\t[0,0.4058451513773971669066064,0.7415311855993944398638648,0.9491079123427585245261897],\n\t\t\t[  0.1834346424956498049394761,0.5255324099163289858177390,0.7966664774136267395915539,0.9602898564975362316835609],\n\t\t\t[0,0.3242534234038089290385380,0.6133714327005903973087020,0.8360311073266357942994298,0.9681602395076260898355762],\n\t\t\t[  0.1488743389816312108848260,0.4333953941292471907992659,0.6794095682990244062343274,0.8650633666889845107320967,0.9739065285171717200779640],\n\t\t\t[0,0.2695431559523449723315320,0.5190961292068118159257257,0.7301520055740493240934163,0.8870625997680952990751578,0.9782286581460569928039380],\n\t\t\t[  0.1252334085114689154724414,0.3678314989981801937526915,0.5873179542866174472967024,0.7699026741943046870368938,0.9041172563704748566784659,0.9815606342467192506905491],\n\t\t\t[0,0.2304583159551347940655281,0.4484927510364468528779129,0.6423493394403402206439846,0.8015780907333099127942065,0.9175983992229779652065478,0.9841830547185881494728294],\n\t\t\t[  0.1080549487073436620662447,0.3191123689278897604356718,0.5152486363581540919652907,0.6872929048116854701480198,0.8272013150697649931897947,0.9284348836635735173363911,0.9862838086968123388415973],\n\t\t\t[0,0.2011940939974345223006283,0.3941513470775633698972074,0.5709721726085388475372267,0.7244177313601700474161861,0.8482065834104272162006483,0.9372733924007059043077589,0.9879925180204854284895657],\n\t\t\t[  0.0950125098376374401853193,0.2816035507792589132304605,0.4580167776572273863424194,0.6178762444026437484466718,0.7554044083550030338951012,0.8656312023878317438804679,0.9445750230732325760779884,0.9894009349916499325961542]\n\t\t];\n\t\n\t\tvar weights = [\n\t\t\t[1],\n\t\t\t[0.8888888888888888888888889,0.5555555555555555555555556],\n\t\t\t[0.6521451548625461426269361,0.3478548451374538573730639],\n\t\t\t[0.5688888888888888888888889,0.4786286704993664680412915,0.2369268850561890875142640],\n\t\t\t[0.4679139345726910473898703,0.3607615730481386075698335,0.1713244923791703450402961],\n\t\t\t[0.4179591836734693877551020,0.3818300505051189449503698,0.2797053914892766679014678,0.1294849661688696932706114],\n\t\t\t[0.3626837833783619829651504,0.3137066458778872873379622,0.2223810344533744705443560,0.1012285362903762591525314],\n\t\t\t[0.3302393550012597631645251,0.3123470770400028400686304,0.2606106964029354623187429,0.1806481606948574040584720,0.0812743883615744119718922],\n\t\t\t[0.2955242247147528701738930,0.2692667193099963550912269,0.2190863625159820439955349,0.1494513491505805931457763,0.0666713443086881375935688],\n\t\t\t[0.2729250867779006307144835,0.2628045445102466621806889,0.2331937645919904799185237,0.1862902109277342514260976,0.1255803694649046246346943,0.0556685671161736664827537],\n\t\t\t[0.2491470458134027850005624,0.2334925365383548087608499,0.2031674267230659217490645,0.1600783285433462263346525,0.1069393259953184309602547,0.0471753363865118271946160],\n\t\t\t[0.2325515532308739101945895,0.2262831802628972384120902,0.2078160475368885023125232,0.1781459807619457382800467,0.1388735102197872384636018,0.0921214998377284479144218,0.0404840047653158795200216],\n\t\t\t[0.2152638534631577901958764,0.2051984637212956039659241,0.1855383974779378137417166,0.1572031671581935345696019,0.1215185706879031846894148,0.0801580871597602098056333,0.0351194603317518630318329],\n\t\t\t[0.2025782419255612728806202,0.1984314853271115764561183,0.1861610000155622110268006,0.1662692058169939335532009,0.1395706779261543144478048,0.1071592204671719350118695,0.0703660474881081247092674,0.0307532419961172683546284],\n\t\t\t[0.1894506104550684962853967,0.1826034150449235888667637,0.1691565193950025381893121,0.1495959888165767320815017,0.1246289712555338720524763,0.0951585116824927848099251,0.0622535239386478928628438,0.0271524594117540948517806]\n\t\t];\n\t\n\t\tvar abs = Math.abs,\n\t\t\tsqrt = Math.sqrt,\n\t\t\tpow = Math.pow,\n\t\t\tEPSILON = 1e-12,\n\t\t\tMACHINE_EPSILON = 1.12e-16;\n\t\n\t\tfunction clip(value, min, max) {\n\t\t\treturn value < min ? min : value > max ? max : value;\n\t\t}\n\t\n\t\treturn {\n\t\t\tTOLERANCE: 1e-6,\n\t\t\tEPSILON: EPSILON,\n\t\t\tMACHINE_EPSILON: MACHINE_EPSILON,\n\t\t\tCURVETIME_EPSILON: 4e-7,\n\t\t\tGEOMETRIC_EPSILON: 2e-7,\n\t\t\tWINDING_EPSILON: 2e-7,\n\t\t\tTRIGONOMETRIC_EPSILON: 1e-7,\n\t\t\tCLIPPING_EPSILON: 1e-7,\n\t\t\tKAPPA: 4 * (sqrt(2) - 1) / 3,\n\t\n\t\t\tisZero: function(val) {\n\t\t\t\treturn val >= -EPSILON && val <= EPSILON;\n\t\t\t},\n\t\n\t\t\tintegrate: function(f, a, b, n) {\n\t\t\t\tvar x = abscissas[n - 2],\n\t\t\t\t\tw = weights[n - 2],\n\t\t\t\t\tA = (b - a) * 0.5,\n\t\t\t\t\tB = A + a,\n\t\t\t\t\ti = 0,\n\t\t\t\t\tm = (n + 1) >> 1,\n\t\t\t\t\tsum = n & 1 ? w[i++] * f(B) : 0;\n\t\t\t\twhile (i < m) {\n\t\t\t\t\tvar Ax = A * x[i];\n\t\t\t\t\tsum += w[i++] * (f(B + Ax) + f(B - Ax));\n\t\t\t\t}\n\t\t\t\treturn A * sum;\n\t\t\t},\n\t\n\t\t\tfindRoot: function(f, df, x, a, b, n, tolerance) {\n\t\t\t\tfor (var i = 0; i < n; i++) {\n\t\t\t\t\tvar fx = f(x),\n\t\t\t\t\t\tdx = fx / df(x),\n\t\t\t\t\t\tnx = x - dx;\n\t\t\t\t\tif (abs(dx) < tolerance)\n\t\t\t\t\t\treturn nx;\n\t\t\t\t\tif (fx > 0) {\n\t\t\t\t\t\tb = x;\n\t\t\t\t\t\tx = nx <= a ? (a + b) * 0.5 : nx;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ta = x;\n\t\t\t\t\t\tx = nx >= b ? (a + b) * 0.5 : nx;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn x;\n\t\t\t},\n\t\n\t\t\tsolveQuadratic: function(a, b, c, roots, min, max) {\n\t\t\t\tvar count = 0,\n\t\t\t\t\teMin = min - EPSILON,\n\t\t\t\t\teMax = max + EPSILON,\n\t\t\t\t\tx1, x2 = Infinity,\n\t\t\t\t\tB = b,\n\t\t\t\t\tD;\n\t\t\t\tb /= -2;\n\t\t\t\tD = b * b - a * c;\n\t\t\t\tif (D !== 0 && abs(D) < MACHINE_EPSILON) {\n\t\t\t\t\tvar gmC = pow(abs(a * b * c), 1 / 3);\n\t\t\t\t\tif (gmC < 1e-8) {\n\t\t\t\t\t\tvar mult = pow(10,\n\t\t\t\t\t\t\t\tabs(Math.floor(Math.log(gmC) * Math.LOG10E)));\n\t\t\t\t\t\tif (!isFinite(mult))\n\t\t\t\t\t\t\tmult = 0;\n\t\t\t\t\t\ta *= mult;\n\t\t\t\t\t\tb *= mult;\n\t\t\t\t\t\tc *= mult;\n\t\t\t\t\t\tD = b * b - a * c;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (abs(a) < EPSILON) {\n\t\t\t\t\tif (abs(B) < EPSILON)\n\t\t\t\t\t\treturn abs(c) < EPSILON ? -1 : 0;\n\t\t\t\t\tx1 = -c / B;\n\t\t\t\t} else if (D >= -MACHINE_EPSILON) {\n\t\t\t\t\tvar Q = D < 0 ? 0 : sqrt(D),\n\t\t\t\t\t\tR = b + (b < 0 ? -Q : Q);\n\t\t\t\t\tif (R === 0) {\n\t\t\t\t\t\tx1 = c / a;\n\t\t\t\t\t\tx2 = -x1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tx1 = R / a;\n\t\t\t\t\t\tx2 = c / R;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (isFinite(x1) && (min == null || x1 > eMin && x1 < eMax))\n\t\t\t\t\troots[count++] = min == null ? x1 : clip(x1, min, max);\n\t\t\t\tif (x2 !== x1\n\t\t\t\t\t\t&& isFinite(x2) && (min == null || x2 > eMin && x2 < eMax))\n\t\t\t\t\troots[count++] = min == null ? x2 : clip(x2, min, max);\n\t\t\t\treturn count;\n\t\t\t},\n\t\n\t\t\tsolveCubic: function(a, b, c, d, roots, min, max) {\n\t\t\t\tvar count = 0,\n\t\t\t\t\tx, b1, c2;\n\t\t\t\tif (abs(a) < EPSILON) {\n\t\t\t\t\ta = b;\n\t\t\t\t\tb1 = c;\n\t\t\t\t\tc2 = d;\n\t\t\t\t\tx = Infinity;\n\t\t\t\t} else if (abs(d) < EPSILON) {\n\t\t\t\t\tb1 = b;\n\t\t\t\t\tc2 = c;\n\t\t\t\t\tx = 0;\n\t\t\t\t} else {\n\t\t\t\t\tvar ec = 1 + MACHINE_EPSILON,\n\t\t\t\t\t\tx0, q, qd, t, r, s, tmp;\n\t\t\t\t\tx = -(b / a) / 3;\n\t\t\t\t\ttmp = a * x,\n\t\t\t\t\tb1 = tmp + b,\n\t\t\t\t\tc2 = b1 * x + c,\n\t\t\t\t\tqd = (tmp + b1) * x + c2,\n\t\t\t\t\tq = c2 * x + d;\n\t\t\t\t\tt = q /a;\n\t\t\t\t\tr = pow(abs(t), 1/3);\n\t\t\t\t\ts = t < 0 ? -1 : 1;\n\t\t\t\t\tt = -qd / a;\n\t\t\t\t\tr = t > 0 ? 1.3247179572 * Math.max(r, sqrt(t)) : r;\n\t\t\t\t\tx0 = x - s * r;\n\t\t\t\t\tif (x0 !== x) {\n\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\tx = x0;\n\t\t\t\t\t\t\ttmp = a * x,\n\t\t\t\t\t\t\tb1 = tmp + b,\n\t\t\t\t\t\t\tc2 = b1 * x + c,\n\t\t\t\t\t\t\tqd = (tmp + b1) * x + c2,\n\t\t\t\t\t\t\tq = c2 * x + d;\n\t\t\t\t\t\t\tx0 = qd === 0 ? x : x - q / qd / ec;\n\t\t\t\t\t\t\tif (x0 === x) {\n\t\t\t\t\t\t\t\tx = x0;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} while (s * x0 > s * x);\n\t\t\t\t\t\tif (abs(a) * x * x > abs(d / x)) {\n\t\t\t\t\t\t\tc2 = -d / x;\n\t\t\t\t\t\t\tb1 = (c2 - c) / x;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tvar count = Numerical.solveQuadratic(a, b1, c2, roots, min, max);\n\t\t\t\tif (isFinite(x) && (count === 0 || x !== roots[count - 1])\n\t\t\t\t\t\t&& (min == null || x > min - EPSILON && x < max + EPSILON))\n\t\t\t\t\troots[count++] = min == null ? x : clip(x, min, max);\n\t\t\t\treturn count;\n\t\t\t}\n\t\t};\n\t};\n\t\n\tvar UID = {\n\t\t_id: 1,\n\t\t_pools: {},\n\t\n\t\tget: function(ctor) {\n\t\t\tif (ctor) {\n\t\t\t\tvar name = ctor._class,\n\t\t\t\t\tpool = this._pools[name];\n\t\t\t\tif (!pool)\n\t\t\t\t\tpool = this._pools[name] = { _id: 1 };\n\t\t\t\treturn pool._id++;\n\t\t\t} else {\n\t\t\t\treturn this._id++;\n\t\t\t}\n\t\t}\n\t};\n\t\n\tvar Point = Base.extend({\n\t\t_class: 'Point',\n\t\t_readIndex: true,\n\t\n\t\tinitialize: function Point(arg0, arg1) {\n\t\t\tvar type = typeof arg0;\n\t\t\tif (type === 'number') {\n\t\t\t\tvar hasY = typeof arg1 === 'number';\n\t\t\t\tthis.x = arg0;\n\t\t\t\tthis.y = hasY ? arg1 : arg0;\n\t\t\t\tif (this.__read)\n\t\t\t\t\tthis.__read = hasY ? 2 : 1;\n\t\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\t\tthis.x = this.y = 0;\n\t\t\t\tif (this.__read)\n\t\t\t\t\tthis.__read = arg0 === null ? 1 : 0;\n\t\t\t} else {\n\t\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\t\tthis.x = arg0[0];\n\t\t\t\t\tthis.y = arg0.length > 1 ? arg0[1] : arg0[0];\n\t\t\t\t} else if (arg0.x != null) {\n\t\t\t\t\tthis.x = arg0.x;\n\t\t\t\t\tthis.y = arg0.y;\n\t\t\t\t} else if (arg0.width != null) {\n\t\t\t\t\tthis.x = arg0.width;\n\t\t\t\t\tthis.y = arg0.height;\n\t\t\t\t} else if (arg0.angle != null) {\n\t\t\t\t\tthis.x = arg0.length;\n\t\t\t\t\tthis.y = 0;\n\t\t\t\t\tthis.setAngle(arg0.angle);\n\t\t\t\t} else {\n\t\t\t\t\tthis.x = this.y = 0;\n\t\t\t\t\tif (this.__read)\n\t\t\t\t\t\tthis.__read = 0;\n\t\t\t\t}\n\t\t\t\tif (this.__read)\n\t\t\t\t\tthis.__read = 1;\n\t\t\t}\n\t\t},\n\t\n\t\tset: function(x, y) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\treturn this;\n\t\t},\n\t\n\t\tequals: function(point) {\n\t\t\treturn this === point || point\n\t\t\t\t\t&& (this.x === point.x && this.y === point.y\n\t\t\t\t\t\t|| Array.isArray(point)\n\t\t\t\t\t\t\t&& this.x === point[0] && this.y === point[1])\n\t\t\t\t\t|| false;\n\t\t},\n\t\n\t\tclone: function() {\n\t\t\treturn new Point(this.x, this.y);\n\t\t},\n\t\n\t\ttoString: function() {\n\t\t\tvar f = Formatter.instance;\n\t\t\treturn '{ x: ' + f.number(this.x) + ', y: ' + f.number(this.y) + ' }';\n\t\t},\n\t\n\t\t_serialize: function(options) {\n\t\t\tvar f = options.formatter;\n\t\t\treturn [f.number(this.x), f.number(this.y)];\n\t\t},\n\t\n\t\tgetLength: function() {\n\t\t\treturn Math.sqrt(this.x * this.x + this.y * this.y);\n\t\t},\n\t\n\t\tsetLength: function(length) {\n\t\t\tif (this.isZero()) {\n\t\t\t\tvar angle = this._angle || 0;\n\t\t\t\tthis.set(\n\t\t\t\t\tMath.cos(angle) * length,\n\t\t\t\t\tMath.sin(angle) * length\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tvar scale = length / this.getLength();\n\t\t\t\tif (Numerical.isZero(scale))\n\t\t\t\t\tthis.getAngle();\n\t\t\t\tthis.set(\n\t\t\t\t\tthis.x * scale,\n\t\t\t\t\tthis.y * scale\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t\tgetAngle: function() {\n\t\t\treturn this.getAngleInRadians.apply(this, arguments) * 180 / Math.PI;\n\t\t},\n\t\n\t\tsetAngle: function(angle) {\n\t\t\tthis.setAngleInRadians.call(this, angle * Math.PI / 180);\n\t\t},\n\t\n\t\tgetAngleInDegrees: '#getAngle',\n\t\tsetAngleInDegrees: '#setAngle',\n\t\n\t\tgetAngleInRadians: function() {\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn this.isZero()\n\t\t\t\t\t\t? this._angle || 0\n\t\t\t\t\t\t: this._angle = Math.atan2(this.y, this.x);\n\t\t\t} else {\n\t\t\t\tvar point = Point.read(arguments),\n\t\t\t\t\tdiv = this.getLength() * point.getLength();\n\t\t\t\tif (Numerical.isZero(div)) {\n\t\t\t\t\treturn NaN;\n\t\t\t\t} else {\n\t\t\t\t\tvar a = this.dot(point) / div;\n\t\t\t\t\treturn Math.acos(a < -1 ? -1 : a > 1 ? 1 : a);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\tsetAngleInRadians: function(angle) {\n\t\t\tthis._angle = angle;\n\t\t\tif (!this.isZero()) {\n\t\t\t\tvar length = this.getLength();\n\t\t\t\tthis.set(\n\t\t\t\t\tMath.cos(angle) * length,\n\t\t\t\t\tMath.sin(angle) * length\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t\n\t\tgetQuadrant: function() {\n\t\t\treturn this.x >= 0 ? this.y >= 0 ? 1 : 4 : this.y >= 0 ? 2 : 3;\n\t\t}\n\t}, {\n\t\tbeans: false,\n\t\n\t\tgetDirectedAngle: function() {\n\t\t\tvar point = Point.read(arguments);\n\t\t\treturn Math.atan2(this.cross(point), this.dot(point)) * 180 / Math.PI;\n\t\t},\n\t\n\t\tgetDistance: function() {\n\t\t\tvar point = Point.read(arguments),\n\t\t\t\tx = point.x - this.x,\n\t\t\t\ty = point.y - this.y,\n\t\t\t\td = x * x + y * y,\n\t\t\t\tsquared = Base.read(arguments);\n\t\t\treturn squared ? d : Math.sqrt(d);\n\t\t},\n\t\n\t\tnormalize: function(length) {\n\t\t\tif (length === undefined)\n\t\t\t\tlength = 1;\n\t\t\tvar current = this.getLength(),\n\t\t\t\tscale = current !== 0 ? length / current : 0,\n\t\t\t\tpoint = new Point(this.x * scale, this.y * scale);\n\t\t\tif (scale >= 0)\n\t\t\t\tpoint._angle = this._angle;\n\t\t\treturn point;\n\t\t},\n\t\n\t\trotate: function(angle, center) {\n\t\t\tif (angle === 0)\n\t\t\t\treturn this.clone();\n\t\t\tangle = angle * Math.PI / 180;\n\t\t\tvar point = center ? this.subtract(center) : this,\n\t\t\t\tsin = Math.sin(angle),\n\t\t\t\tcos = Math.cos(angle);\n\t\t\tpoint = new Point(\n\t\t\t\tpoint.x * cos - point.y * sin,\n\t\t\t\tpoint.x * sin + point.y * cos\n\t\t\t);\n\t\t\treturn center ? point.add(center) : point;\n\t\t},\n\t\n\t\ttransform: function(matrix) {\n\t\t\treturn matrix ? matrix._transformPoint(this) : this;\n\t\t},\n\t\n\t\tadd: function() {\n\t\t\tvar point = Point.read(arguments);\n\t\t\treturn new Point(this.x + point.x, this.y + point.y);\n\t\t},\n\t\n\t\tsubtract: function() {\n\t\t\tvar point = Point.read(arguments);\n\t\t\treturn new Point(this.x - point.x, this.y - point.y);\n\t\t},\n\t\n\t\tmultiply: function() {\n\t\t\tvar point = Point.read(arguments);\n\t\t\treturn new Point(this.x * point.x, this.y * point.y);\n\t\t},\n\t\n\t\tdivide: function() {\n\t\t\tvar point = Point.read(arguments);\n\t\t\treturn new Point(this.x / point.x, this.y / point.y);\n\t\t},\n\t\n\t\tmodulo: function() {\n\t\t\tvar point = Point.read(arguments);\n\t\t\treturn new Point(this.x % point.x, this.y % point.y);\n\t\t},\n\t\n\t\tnegate: function() {\n\t\t\treturn new Point(-this.x, -this.y);\n\t\t},\n\t\n\t\tisInside: function() {\n\t\t\treturn Rectangle.read(arguments).contains(this);\n\t\t},\n\t\n\t\tisClose: function() {\n\t\t\tvar point = Point.read(arguments),\n\t\t\t\ttolerance = Base.read(arguments);\n\t\t\treturn this.getDistance(point) < tolerance;\n\t\t},\n\t\n\t\tisCollinear: function() {\n\t\t\tvar point = Point.read(arguments);\n\t\t\treturn Point.isCollinear(this.x, this.y, point.x, point.y);\n\t\t},\n\t\n\t\tisColinear: '#isCollinear',\n\t\n\t\tisOrthogonal: function() {\n\t\t\tvar point = Point.read(arguments);\n\t\t\treturn Point.isOrthogonal(this.x, this.y, point.x, point.y);\n\t\t},\n\t\n\t\tisZero: function() {\n\t\t\treturn Numerical.isZero(this.x) && Numerical.isZero(this.y);\n\t\t},\n\t\n\t\tisNaN: function() {\n\t\t\treturn isNaN(this.x) || isNaN(this.y);\n\t\t},\n\t\n\t\tdot: function() {\n\t\t\tvar point = Point.read(arguments);\n\t\t\treturn this.x * point.x + this.y * point.y;\n\t\t},\n\t\n\t\tcross: function() {\n\t\t\tvar point = Point.read(arguments);\n\t\t\treturn this.x * point.y - this.y * point.x;\n\t\t},\n\t\n\t\tproject: function() {\n\t\t\tvar point = Point.read(arguments),\n\t\t\t\tscale = point.isZero() ? 0 : this.dot(point) / point.dot(point);\n\t\t\treturn new Point(\n\t\t\t\tpoint.x * scale,\n\t\t\t\tpoint.y * scale\n\t\t\t);\n\t\t},\n\t\n\t\tstatics: {\n\t\t\tmin: function() {\n\t\t\t\tvar point1 = Point.read(arguments),\n\t\t\t\t\tpoint2 = Point.read(arguments);\n\t\t\t\treturn new Point(\n\t\t\t\t\tMath.min(point1.x, point2.x),\n\t\t\t\t\tMath.min(point1.y, point2.y)\n\t\t\t\t);\n\t\t\t},\n\t\n\t\t\tmax: function() {\n\t\t\t\tvar point1 = Point.read(arguments),\n\t\t\t\t\tpoint2 = Point.read(arguments);\n\t\t\t\treturn new Point(\n\t\t\t\t\tMath.max(point1.x, point2.x),\n\t\t\t\t\tMath.max(point1.y, point2.y)\n\t\t\t\t);\n\t\t\t},\n\t\n\t\t\trandom: function() {\n\t\t\t\treturn new Point(Math.random(), Math.random());\n\t\t\t},\n\t\n\t\t\tisCollinear: function(x1, y1, x2, y2) {\n\t\t\t\treturn Math.abs(x1 * y2 - y1 * x2)\n\t\t\t\t\t\t<= Math.sqrt((x1 * x1 + y1 * y1) * (x2 * x2 + y2 * y2))\n\t\t\t\t\t\t\t* 1e-7;\n\t\t\t},\n\t\n\t\t\tisOrthogonal: function(x1, y1, x2, y2) {\n\t\t\t\treturn Math.abs(x1 * x2 + y1 * y2)\n\t\t\t\t\t\t<= Math.sqrt((x1 * x1 + y1 * y1) * (x2 * x2 + y2 * y2))\n\t\t\t\t\t\t\t* 1e-7;\n\t\t\t}\n\t\t}\n\t}, Base.each(['round', 'ceil', 'floor', 'abs'], function(name) {\n\t\tvar op = Math[name];\n\t\tthis[name] = function() {\n\t\t\treturn new Point(op(this.x), op(this.y));\n\t\t};\n\t}, {}));\n\t\n\tvar LinkedPoint = Point.extend({\n\t\tinitialize: function Point(x, y, owner, setter) {\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._owner = owner;\n\t\t\tthis._setter = setter;\n\t\t},\n\t\n\t\tset: function(x, y, _dontNotify) {\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tif (!_dontNotify)\n\t\t\t\tthis._owner[this._setter](this);\n\t\t\treturn this;\n\t\t},\n\t\n\t\tgetX: function() {\n\t\t\treturn this._x;\n\t\t},\n\t\n\t\tsetX: function(x) {\n\t\t\tthis._x = x;\n\t\t\tthis._owner[this._setter](this);\n\t\t},\n\t\n\t\tgetY: function() {\n\t\t\treturn this._y;\n\t\t},\n\t\n\t\tsetY: function(y) {\n\t\t\tthis._y = y;\n\t\t\tthis._owner[this._setter](this);\n\t\t}\n\t});\n\t\n\tvar Size = Base.extend({\n\t\t_class: 'Size',\n\t\t_readIndex: true,\n\t\n\t\tinitialize: function Size(arg0, arg1) {\n\t\t\tvar type = typeof arg0;\n\t\t\tif (type === 'number') {\n\t\t\t\tvar hasHeight = typeof arg1 === 'number';\n\t\t\t\tthis.width = arg0;\n\t\t\t\tthis.height = hasHeight ? arg1 : arg0;\n\t\t\t\tif (this.__read)\n\t\t\t\t\tthis.__read = hasHeight ? 2 : 1;\n\t\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\t\tthis.width = this.height = 0;\n\t\t\t\tif (this.__read)\n\t\t\t\t\tthis.__read = arg0 === null ? 1 : 0;\n\t\t\t} else {\n\t\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\t\tthis.width = arg0[0];\n\t\t\t\t\tthis.height = arg0.length > 1 ? arg0[1] : arg0[0];\n\t\t\t\t} else if (arg0.width != null) {\n\t\t\t\t\tthis.width = arg0.width;\n\t\t\t\t\tthis.height = arg0.height;\n\t\t\t\t} else if (arg0.x != null) {\n\t\t\t\t\tthis.width = arg0.x;\n\t\t\t\t\tthis.height = arg0.y;\n\t\t\t\t} else {\n\t\t\t\t\tthis.width = this.height = 0;\n\t\t\t\t\tif (this.__read)\n\t\t\t\t\t\tthis.__read = 0;\n\t\t\t\t}\n\t\t\t\tif (this.__read)\n\t\t\t\t\tthis.__read = 1;\n\t\t\t}\n\t\t},\n\t\n\t\tset: function(width, height) {\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\treturn this;\n\t\t},\n\t\n\t\tequals: function(size) {\n\t\t\treturn size === this || size && (this.width === size.width\n\t\t\t\t\t&& this.height === size.height\n\t\t\t\t\t|| Array.isArray(size) && this.width === size[0]\n\t\t\t\t\t\t&& this.height === size[1]) || false;\n\t\t},\n\t\n\t\tclone: function() {\n\t\t\treturn new Size(this.width, this.height);\n\t\t},\n\t\n\t\ttoString: function() {\n\t\t\tvar f = Formatter.instance;\n\t\t\treturn '{ width: ' + f.number(this.width)\n\t\t\t\t\t+ ', height: ' + f.number(this.height) + ' }';\n\t\t},\n\t\n\t\t_serialize: function(options) {\n\t\t\tvar f = options.formatter;\n\t\t\treturn [f.number(this.width),\n\t\t\t\t\tf.number(this.height)];\n\t\t},\n\t\n\t\tadd: function() {\n\t\t\tvar size = Size.read(arguments);\n\t\t\treturn new Size(this.width + size.width, this.height + size.height);\n\t\t},\n\t\n\t\tsubtract: function() {\n\t\t\tvar size = Size.read(arguments);\n\t\t\treturn new Size(this.width - size.width, this.height - size.height);\n\t\t},\n\t\n\t\tmultiply: function() {\n\t\t\tvar size = Size.read(arguments);\n\t\t\treturn new Size(this.width * size.width, this.height * size.height);\n\t\t},\n\t\n\t\tdivide: function() {\n\t\t\tvar size = Size.read(arguments);\n\t\t\treturn new Size(this.width / size.width, this.height / size.height);\n\t\t},\n\t\n\t\tmodulo: function() {\n\t\t\tvar size = Size.read(arguments);\n\t\t\treturn new Size(this.width % size.width, this.height % size.height);\n\t\t},\n\t\n\t\tnegate: function() {\n\t\t\treturn new Size(-this.width, -this.height);\n\t\t},\n\t\n\t\tisZero: function() {\n\t\t\treturn Numerical.isZero(this.width) && Numerical.isZero(this.height);\n\t\t},\n\t\n\t\tisNaN: function() {\n\t\t\treturn isNaN(this.width) || isNaN(this.height);\n\t\t},\n\t\n\t\tstatics: {\n\t\t\tmin: function(size1, size2) {\n\t\t\t\treturn new Size(\n\t\t\t\t\tMath.min(size1.width, size2.width),\n\t\t\t\t\tMath.min(size1.height, size2.height));\n\t\t\t},\n\t\n\t\t\tmax: function(size1, size2) {\n\t\t\t\treturn new Size(\n\t\t\t\t\tMath.max(size1.width, size2.width),\n\t\t\t\t\tMath.max(size1.height, size2.height));\n\t\t\t},\n\t\n\t\t\trandom: function() {\n\t\t\t\treturn new Size(Math.random(), Math.random());\n\t\t\t}\n\t\t}\n\t}, Base.each(['round', 'ceil', 'floor', 'abs'], function(name) {\n\t\tvar op = Math[name];\n\t\tthis[name] = function() {\n\t\t\treturn new Size(op(this.width), op(this.height));\n\t\t};\n\t}, {}));\n\t\n\tvar LinkedSize = Size.extend({\n\t\tinitialize: function Size(width, height, owner, setter) {\n\t\t\tthis._width = width;\n\t\t\tthis._height = height;\n\t\t\tthis._owner = owner;\n\t\t\tthis._setter = setter;\n\t\t},\n\t\n\t\tset: function(width, height, _dontNotify) {\n\t\t\tthis._width = width;\n\t\t\tthis._height = height;\n\t\t\tif (!_dontNotify)\n\t\t\t\tthis._owner[this._setter](this);\n\t\t\treturn this;\n\t\t},\n\t\n\t\tgetWidth: function() {\n\t\t\treturn this._width;\n\t\t},\n\t\n\t\tsetWidth: function(width) {\n\t\t\tthis._width = width;\n\t\t\tthis._owner[this._setter](this);\n\t\t},\n\t\n\t\tgetHeight: function() {\n\t\t\treturn this._height;\n\t\t},\n\t\n\t\tsetHeight: function(height) {\n\t\t\tthis._height = height;\n\t\t\tthis._owner[this._setter](this);\n\t\t}\n\t});\n\t\n\tvar Rectangle = Base.extend({\n\t\t_class: 'Rectangle',\n\t\t_readIndex: true,\n\t\tbeans: true,\n\t\n\t\tinitialize: function Rectangle(arg0, arg1, arg2, arg3) {\n\t\t\tvar type = typeof arg0,\n\t\t\t\tread = 0;\n\t\t\tif (type === 'number') {\n\t\t\t\tthis.x = arg0;\n\t\t\t\tthis.y = arg1;\n\t\t\t\tthis.width = arg2;\n\t\t\t\tthis.height = arg3;\n\t\t\t\tread = 4;\n\t\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\t\tthis.x = this.y = this.width = this.height = 0;\n\t\t\t\tread = arg0 === null ? 1 : 0;\n\t\t\t} else if (arguments.length === 1) {\n\t\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\t\tthis.x = arg0[0];\n\t\t\t\t\tthis.y = arg0[1];\n\t\t\t\t\tthis.width = arg0[2];\n\t\t\t\t\tthis.height = arg0[3];\n\t\t\t\t\tread = 1;\n\t\t\t\t} else if (arg0.x !== undefined || arg0.width !== undefined) {\n\t\t\t\t\tthis.x = arg0.x || 0;\n\t\t\t\t\tthis.y = arg0.y || 0;\n\t\t\t\t\tthis.width = arg0.width || 0;\n\t\t\t\t\tthis.height = arg0.height || 0;\n\t\t\t\t\tread = 1;\n\t\t\t\t} else if (arg0.from === undefined && arg0.to === undefined) {\n\t\t\t\t\tthis.x = this.y = this.width = this.height = 0;\n\t\t\t\t\tthis._set(arg0);\n\t\t\t\t\tread = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!read) {\n\t\t\t\tvar point = Point.readNamed(arguments, 'from'),\n\t\t\t\t\tnext = Base.peek(arguments);\n\t\t\t\tthis.x = point.x;\n\t\t\t\tthis.y = point.y;\n\t\t\t\tif (next && next.x !== undefined || Base.hasNamed(arguments, 'to')) {\n\t\t\t\t\tvar to = Point.readNamed(arguments, 'to');\n\t\t\t\t\tthis.width = to.x - point.x;\n\t\t\t\t\tthis.height = to.y - point.y;\n\t\t\t\t\tif (this.width < 0) {\n\t\t\t\t\t\tthis.x = to.x;\n\t\t\t\t\t\tthis.width = -this.width;\n\t\t\t\t\t}\n\t\t\t\t\tif (this.height < 0) {\n\t\t\t\t\t\tthis.y = to.y;\n\t\t\t\t\t\tthis.height = -this.height;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvar size = Size.read(arguments);\n\t\t\t\t\tthis.width = size.width;\n\t\t\t\t\tthis.height = size.height;\n\t\t\t\t}\n\t\t\t\tread = arguments.__index;\n\t\t\t}\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = read;\n\t\t},\n\t\n\t\tset: function(x, y, width, height) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\treturn this;\n\t\t},\n\t\n\t\tclone: function() {\n\t\t\treturn new Rectangle(this.x, this.y, this.width, this.height);\n\t\t},\n\t\n\t\tequals: function(rect) {\n\t\t\tvar rt = Base.isPlainValue(rect)\n\t\t\t\t\t? Rectangle.read(arguments)\n\t\t\t\t\t: rect;\n\t\t\treturn rt === this\n\t\t\t\t\t|| rt && this.x === rt.x && this.y === rt.y\n\t\t\t\t\t\t&& this.width === rt.width && this.height === rt.height\n\t\t\t\t\t|| false;\n\t\t},\n\t\n\t\ttoString: function() {\n\t\t\tvar f = Formatter.instance;\n\t\t\treturn '{ x: ' + f.number(this.x)\n\t\t\t\t\t+ ', y: ' + f.number(this.y)\n\t\t\t\t\t+ ', width: ' + f.number(this.width)\n\t\t\t\t\t+ ', height: ' + f.number(this.height)\n\t\t\t\t\t+ ' }';\n\t\t},\n\t\n\t\t_serialize: function(options) {\n\t\t\tvar f = options.formatter;\n\t\t\treturn [f.number(this.x),\n\t\t\t\t\tf.number(this.y),\n\t\t\t\t\tf.number(this.width),\n\t\t\t\t\tf.number(this.height)];\n\t\t},\n\t\n\t\tgetPoint: function(_dontLink) {\n\t\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\t\treturn new ctor(this.x, this.y, this, 'setPoint');\n\t\t},\n\t\n\t\tsetPoint: function() {\n\t\t\tvar point = Point.read(arguments);\n\t\t\tthis.x = point.x;\n\t\t\tthis.y = point.y;\n\t\t},\n\t\n\t\tgetSize: function(_dontLink) {\n\t\t\tvar ctor = _dontLink ? Size : LinkedSize;\n\t\t\treturn new ctor(this.width, this.height, this, 'setSize');\n\t\t},\n\t\n\t\tsetSize: function() {\n\t\t\tvar size = Size.read(arguments);\n\t\t\tif (this._fixX)\n\t\t\t\tthis.x += (this.width - size.width) * this._fixX;\n\t\t\tif (this._fixY)\n\t\t\t\tthis.y += (this.height - size.height) * this._fixY;\n\t\t\tthis.width = size.width;\n\t\t\tthis.height = size.height;\n\t\t\tthis._fixW = 1;\n\t\t\tthis._fixH = 1;\n\t\t},\n\t\n\t\tgetLeft: function() {\n\t\t\treturn this.x;\n\t\t},\n\t\n\t\tsetLeft: function(left) {\n\t\t\tif (!this._fixW)\n\t\t\t\tthis.width -= left - this.x;\n\t\t\tthis.x = left;\n\t\t\tthis._fixX = 0;\n\t\t},\n\t\n\t\tgetTop: function() {\n\t\t\treturn this.y;\n\t\t},\n\t\n\t\tsetTop: function(top) {\n\t\t\tif (!this._fixH)\n\t\t\t\tthis.height -= top - this.y;\n\t\t\tthis.y = top;\n\t\t\tthis._fixY = 0;\n\t\t},\n\t\n\t\tgetRight: function() {\n\t\t\treturn this.x + this.width;\n\t\t},\n\t\n\t\tsetRight: function(right) {\n\t\t\tif (this._fixX !== undefined && this._fixX !== 1)\n\t\t\t\tthis._fixW = 0;\n\t\t\tif (this._fixW)\n\t\t\t\tthis.x = right - this.width;\n\t\t\telse\n\t\t\t\tthis.width = right - this.x;\n\t\t\tthis._fixX = 1;\n\t\t},\n\t\n\t\tgetBottom: function() {\n\t\t\treturn this.y + this.height;\n\t\t},\n\t\n\t\tsetBottom: function(bottom) {\n\t\t\tif (this._fixY !== undefined && this._fixY !== 1)\n\t\t\t\tthis._fixH = 0;\n\t\t\tif (this._fixH)\n\t\t\t\tthis.y = bottom - this.height;\n\t\t\telse\n\t\t\t\tthis.height = bottom - this.y;\n\t\t\tthis._fixY = 1;\n\t\t},\n\t\n\t\tgetCenterX: function() {\n\t\t\treturn this.x + this.width * 0.5;\n\t\t},\n\t\n\t\tsetCenterX: function(x) {\n\t\t\tthis.x = x - this.width * 0.5;\n\t\t\tthis._fixX = 0.5;\n\t\t},\n\t\n\t\tgetCenterY: function() {\n\t\t\treturn this.y + this.height * 0.5;\n\t\t},\n\t\n\t\tsetCenterY: function(y) {\n\t\t\tthis.y = y - this.height * 0.5;\n\t\t\tthis._fixY = 0.5;\n\t\t},\n\t\n\t\tgetCenter: function(_dontLink) {\n\t\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\t\treturn new ctor(this.getCenterX(), this.getCenterY(), this, 'setCenter');\n\t\t},\n\t\n\t\tsetCenter: function() {\n\t\t\tvar point = Point.read(arguments);\n\t\t\tthis.setCenterX(point.x);\n\t\t\tthis.setCenterY(point.y);\n\t\t\treturn this;\n\t\t},\n\t\n\t\tgetArea: function() {\n\t\t\treturn this.width * this.height;\n\t\t},\n\t\n\t\tisEmpty: function() {\n\t\t\treturn this.width === 0 || this.height === 0;\n\t\t},\n\t\n\t\tcontains: function(arg) {\n\t\t\treturn arg && arg.width !== undefined\n\t\t\t\t\t|| (Array.isArray(arg) ? arg : arguments).length == 4\n\t\t\t\t\t? this._containsRectangle(Rectangle.read(arguments))\n\t\t\t\t\t: this._containsPoint(Point.read(arguments));\n\t\t},\n\t\n\t\t_containsPoint: function(point) {\n\t\t\tvar x = point.x,\n\t\t\t\ty = point.y;\n\t\t\treturn x >= this.x && y >= this.y\n\t\t\t\t\t&& x <= this.x + this.width\n\t\t\t\t\t&& y <= this.y + this.height;\n\t\t},\n\t\n\t\t_containsRectangle: function(rect) {\n\t\t\tvar x = rect.x,\n\t\t\t\ty = rect.y;\n\t\t\treturn x >= this.x && y >= this.y\n\t\t\t\t\t&& x + rect.width <= this.x + this.width\n\t\t\t\t\t&& y + rect.height <= this.y + this.height;\n\t\t},\n\t\n\t\tintersects: function() {\n\t\t\tvar rect = Rectangle.read(arguments);\n\t\t\treturn rect.x + rect.width > this.x\n\t\t\t\t\t&& rect.y + rect.height > this.y\n\t\t\t\t\t&& rect.x < this.x + this.width\n\t\t\t\t\t&& rect.y < this.y + this.height;\n\t\t},\n\t\n\t\ttouches: function() {\n\t\t\tvar rect = Rectangle.read(arguments);\n\t\t\treturn rect.x + rect.width >= this.x\n\t\t\t\t\t&& rect.y + rect.height >= this.y\n\t\t\t\t\t&& rect.x <= this.x + this.width\n\t\t\t\t\t&& rect.y <= this.y + this.height;\n\t\t},\n\t\n\t\tintersect: function() {\n\t\t\tvar rect = Rectangle.read(arguments),\n\t\t\t\tx1 = Math.max(this.x, rect.x),\n\t\t\t\ty1 = Math.max(this.y, rect.y),\n\t\t\t\tx2 = Math.min(this.x + this.width, rect.x + rect.width),\n\t\t\t\ty2 = Math.min(this.y + this.height, rect.y + rect.height);\n\t\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t\t},\n\t\n\t\tunite: function() {\n\t\t\tvar rect = Rectangle.read(arguments),\n\t\t\t\tx1 = Math.min(this.x, rect.x),\n\t\t\t\ty1 = Math.min(this.y, rect.y),\n\t\t\t\tx2 = Math.max(this.x + this.width, rect.x + rect.width),\n\t\t\t\ty2 = Math.max(this.y + this.height, rect.y + rect.height);\n\t\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t\t},\n\t\n\t\tinclude: function() {\n\t\t\tvar point = Point.read(arguments);\n\t\t\tvar x1 = Math.min(this.x, point.x),\n\t\t\t\ty1 = Math.min(this.y, point.y),\n\t\t\t\tx2 = Math.max(this.x + this.width, point.x),\n\t\t\t\ty2 = Math.max(this.y + this.height, point.y);\n\t\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t\t},\n\t\n\t\texpand: function() {\n\t\t\tvar amount = Size.read(arguments),\n\t\t\t\thor = amount.width,\n\t\t\t\tver = amount.height;\n\t\t\treturn new Rectangle(this.x - hor / 2, this.y - ver / 2,\n\t\t\t\t\tthis.width + hor, this.height + ver);\n\t\t},\n\t\n\t\tscale: function(hor, ver) {\n\t\t\treturn this.expand(this.width * hor - this.width,\n\t\t\t\t\tthis.height * (ver === undefined ? hor : ver) - this.height);\n\t\t}\n\t}, Base.each([\n\t\t\t['Top', 'Left'], ['Top', 'Right'],\n\t\t\t['Bottom', 'Left'], ['Bottom', 'Right'],\n\t\t\t['Left', 'Center'], ['Top', 'Center'],\n\t\t\t['Right', 'Center'], ['Bottom', 'Center']\n\t\t],\n\t\tfunction(parts, index) {\n\t\t\tvar part = parts.join('');\n\t\t\tvar xFirst = /^[RL]/.test(part);\n\t\t\tif (index >= 4)\n\t\t\t\tparts[1] += xFirst ? 'Y' : 'X';\n\t\t\tvar x = parts[xFirst ? 0 : 1],\n\t\t\t\ty = parts[xFirst ? 1 : 0],\n\t\t\t\tgetX = 'get' + x,\n\t\t\t\tgetY = 'get' + y,\n\t\t\t\tsetX = 'set' + x,\n\t\t\t\tsetY = 'set' + y,\n\t\t\t\tget = 'get' + part,\n\t\t\t\tset = 'set' + part;\n\t\t\tthis[get] = function(_dontLink) {\n\t\t\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\t\t\treturn new ctor(this[getX](), this[getY](), this, set);\n\t\t\t};\n\t\t\tthis[set] = function() {\n\t\t\t\tvar point = Point.read(arguments);\n\t\t\t\tthis[setX](point.x);\n\t\t\t\tthis[setY](point.y);\n\t\t\t};\n\t\t}, {\n\t\t\tbeans: true\n\t\t}\n\t));\n\t\n\tvar LinkedRectangle = Rectangle.extend({\n\t\tinitialize: function Rectangle(x, y, width, height, owner, setter) {\n\t\t\tthis.set(x, y, width, height, true);\n\t\t\tthis._owner = owner;\n\t\t\tthis._setter = setter;\n\t\t},\n\t\n\t\tset: function(x, y, width, height, _dontNotify) {\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._width = width;\n\t\t\tthis._height = height;\n\t\t\tif (!_dontNotify)\n\t\t\t\tthis._owner[this._setter](this);\n\t\t\treturn this;\n\t\t}\n\t},\n\tnew function() {\n\t\tvar proto = Rectangle.prototype;\n\t\n\t\treturn Base.each(['x', 'y', 'width', 'height'], function(key) {\n\t\t\tvar part = Base.capitalize(key);\n\t\t\tvar internal = '_' + key;\n\t\t\tthis['get' + part] = function() {\n\t\t\t\treturn this[internal];\n\t\t\t};\n\t\n\t\t\tthis['set' + part] = function(value) {\n\t\t\t\tthis[internal] = value;\n\t\t\t\tif (!this._dontNotify)\n\t\t\t\t\tthis._owner[this._setter](this);\n\t\t\t};\n\t\t}, Base.each(['Point', 'Size', 'Center',\n\t\t\t\t'Left', 'Top', 'Right', 'Bottom', 'CenterX', 'CenterY',\n\t\t\t\t'TopLeft', 'TopRight', 'BottomLeft', 'BottomRight',\n\t\t\t\t'LeftCenter', 'TopCenter', 'RightCenter', 'BottomCenter'],\n\t\t\tfunction(key) {\n\t\t\t\tvar name = 'set' + key;\n\t\t\t\tthis[name] = function() {\n\t\t\t\t\tthis._dontNotify = true;\n\t\t\t\t\tproto[name].apply(this, arguments);\n\t\t\t\t\tthis._dontNotify = false;\n\t\t\t\t\tthis._owner[this._setter](this);\n\t\t\t\t};\n\t\t\t}, {\n\t\t\t\tisSelected: function() {\n\t\t\t\t\treturn this._owner._boundsSelected;\n\t\t\t\t},\n\t\n\t\t\t\tsetSelected: function(selected) {\n\t\t\t\t\tvar owner = this._owner;\n\t\t\t\t\tif (owner.setSelected) {\n\t\t\t\t\t\towner._boundsSelected = selected;\n\t\t\t\t\t\towner.setSelected(selected || owner._selectedSegmentState > 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t});\n\t\n\tvar Matrix = Base.extend({\n\t\t_class: 'Matrix',\n\t\n\t\tinitialize: function Matrix(arg) {\n\t\t\tvar count = arguments.length,\n\t\t\t\tok = true;\n\t\t\tif (count === 6) {\n\t\t\t\tthis.set.apply(this, arguments);\n\t\t\t} else if (count === 1) {\n\t\t\t\tif (arg instanceof Matrix) {\n\t\t\t\t\tthis.set(arg._a, arg._c, arg._b, arg._d, arg._tx, arg._ty);\n\t\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\t\tthis.set.apply(this, arg);\n\t\t\t\t} else {\n\t\t\t\t\tok = false;\n\t\t\t\t}\n\t\t\t} else if (count === 0) {\n\t\t\t\tthis.reset();\n\t\t\t} else {\n\t\t\t\tok = false;\n\t\t\t}\n\t\t\tif (!ok)\n\t\t\t\tthrow new Error('Unsupported matrix parameters');\n\t\t},\n\t\n\t\tset: function(a, c, b, d, tx, ty, _dontNotify) {\n\t\t\tthis._a = a;\n\t\t\tthis._c = c;\n\t\t\tthis._b = b;\n\t\t\tthis._d = d;\n\t\t\tthis._tx = tx;\n\t\t\tthis._ty = ty;\n\t\t\tif (!_dontNotify)\n\t\t\t\tthis._changed();\n\t\t\treturn this;\n\t\t},\n\t\n\t\t_serialize: function(options) {\n\t\t\treturn Base.serialize(this.getValues(), options);\n\t\t},\n\t\n\t\t_changed: function() {\n\t\t\tvar owner = this._owner;\n\t\t\tif (owner) {\n\t\t\t\tif (owner._applyMatrix) {\n\t\t\t\t\towner.transform(null, true);\n\t\t\t\t} else {\n\t\t\t\t\towner._changed(9);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\tclone: function() {\n\t\t\treturn new Matrix(this._a, this._c, this._b, this._d,\n\t\t\t\t\tthis._tx, this._ty);\n\t\t},\n\t\n\t\tequals: function(mx) {\n\t\t\treturn mx === this || mx && this._a === mx._a && this._b === mx._b\n\t\t\t\t\t&& this._c === mx._c && this._d === mx._d\n\t\t\t\t\t&& this._tx === mx._tx && this._ty === mx._ty\n\t\t\t\t\t|| false;\n\t\t},\n\t\n\t\ttoString: function() {\n\t\t\tvar f = Formatter.instance;\n\t\t\treturn '[[' + [f.number(this._a), f.number(this._b),\n\t\t\t\t\t\tf.number(this._tx)].join(', ') + '], ['\n\t\t\t\t\t+ [f.number(this._c), f.number(this._d),\n\t\t\t\t\t\tf.number(this._ty)].join(', ') + ']]';\n\t\t},\n\t\n\t\treset: function(_dontNotify) {\n\t\t\tthis._a = this._d = 1;\n\t\t\tthis._c = this._b = this._tx = this._ty = 0;\n\t\t\tif (!_dontNotify)\n\t\t\t\tthis._changed();\n\t\t\treturn this;\n\t\t},\n\t\n\t\tapply: function(recursively, _setApplyMatrix) {\n\t\t\tvar owner = this._owner;\n\t\t\tif (owner) {\n\t\t\t\towner.transform(null, true, Base.pick(recursively, true),\n\t\t\t\t\t\t_setApplyMatrix);\n\t\t\t\treturn this.isIdentity();\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\n\t\ttranslate: function() {\n\t\t\tvar point = Point.read(arguments),\n\t\t\t\tx = point.x,\n\t\t\t\ty = point.y;\n\t\t\tthis._tx += x * this._a + y * this._b;\n\t\t\tthis._ty += x * this._c + y * this._d;\n\t\t\tthis._changed();\n\t\t\treturn this;\n\t\t},\n\t\n\t\tscale: function() {\n\t\t\tvar scale = Point.read(arguments),\n\t\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\t\tif (center)\n\t\t\t\tthis.translate(center);\n\t\t\tthis._a *= scale.x;\n\t\t\tthis._c *= scale.x;\n\t\t\tthis._b *= scale.y;\n\t\t\tthis._d *= scale.y;\n\t\t\tif (center)\n\t\t\t\tthis.translate(center.negate());\n\t\t\tthis._changed();\n\t\t\treturn this;\n\t\t},\n\t\n\t\trotate: function(angle ) {\n\t\t\tangle *= Math.PI / 180;\n\t\t\tvar center = Point.read(arguments, 1),\n\t\t\t\tx = center.x,\n\t\t\t\ty = center.y,\n\t\t\t\tcos = Math.cos(angle),\n\t\t\t\tsin = Math.sin(angle),\n\t\t\t\ttx = x - x * cos + y * sin,\n\t\t\t\tty = y - x * sin - y * cos,\n\t\t\t\ta = this._a,\n\t\t\t\tb = this._b,\n\t\t\t\tc = this._c,\n\t\t\t\td = this._d;\n\t\t\tthis._a = cos * a + sin * b;\n\t\t\tthis._b = -sin * a + cos * b;\n\t\t\tthis._c = cos * c + sin * d;\n\t\t\tthis._d = -sin * c + cos * d;\n\t\t\tthis._tx += tx * a + ty * b;\n\t\t\tthis._ty += tx * c + ty * d;\n\t\t\tthis._changed();\n\t\t\treturn this;\n\t\t},\n\t\n\t\tshear: function() {\n\t\t\tvar shear = Point.read(arguments),\n\t\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\t\tif (center)\n\t\t\t\tthis.translate(center);\n\t\t\tvar a = this._a,\n\t\t\t\tc = this._c;\n\t\t\tthis._a += shear.y * this._b;\n\t\t\tthis._c += shear.y * this._d;\n\t\t\tthis._b += shear.x * a;\n\t\t\tthis._d += shear.x * c;\n\t\t\tif (center)\n\t\t\t\tthis.translate(center.negate());\n\t\t\tthis._changed();\n\t\t\treturn this;\n\t\t},\n\t\n\t\tskew: function() {\n\t\t\tvar skew = Point.read(arguments),\n\t\t\t\tcenter = Point.read(arguments, 0, { readNull: true }),\n\t\t\t\ttoRadians = Math.PI / 180,\n\t\t\t\tshear = new Point(Math.tan(skew.x * toRadians),\n\t\t\t\t\tMath.tan(skew.y * toRadians));\n\t\t\treturn this.shear(shear, center);\n\t\t},\n\t\n\t\tconcatenate: function(mx) {\n\t\t\tvar a1 = this._a,\n\t\t\t\tb1 = this._b,\n\t\t\t\tc1 = this._c,\n\t\t\t\td1 = this._d,\n\t\t\t\ta2 = mx._a,\n\t\t\t\tb2 = mx._b,\n\t\t\t\tc2 = mx._c,\n\t\t\t\td2 = mx._d,\n\t\t\t\ttx2 = mx._tx,\n\t\t\t\tty2 = mx._ty;\n\t\t\tthis._a = a2 * a1 + c2 * b1;\n\t\t\tthis._b = b2 * a1 + d2 * b1;\n\t\t\tthis._c = a2 * c1 + c2 * d1;\n\t\t\tthis._d = b2 * c1 + d2 * d1;\n\t\t\tthis._tx += tx2 * a1 + ty2 * b1;\n\t\t\tthis._ty += tx2 * c1 + ty2 * d1;\n\t\t\tthis._changed();\n\t\t\treturn this;\n\t\t},\n\t\n\t\tpreConcatenate: function(mx) {\n\t\t\tvar a1 = this._a,\n\t\t\t\tb1 = this._b,\n\t\t\t\tc1 = this._c,\n\t\t\t\td1 = this._d,\n\t\t\t\ttx1 = this._tx,\n\t\t\t\tty1 = this._ty,\n\t\t\t\ta2 = mx._a,\n\t\t\t\tb2 = mx._b,\n\t\t\t\tc2 = mx._c,\n\t\t\t\td2 = mx._d,\n\t\t\t\ttx2 = mx._tx,\n\t\t\t\tty2 = mx._ty;\n\t\t\tthis._a = a2 * a1 + b2 * c1;\n\t\t\tthis._b = a2 * b1 + b2 * d1;\n\t\t\tthis._c = c2 * a1 + d2 * c1;\n\t\t\tthis._d = c2 * b1 + d2 * d1;\n\t\t\tthis._tx = a2 * tx1 + b2 * ty1 + tx2;\n\t\t\tthis._ty = c2 * tx1 + d2 * ty1 + ty2;\n\t\t\tthis._changed();\n\t\t\treturn this;\n\t\t},\n\t\n\t\tchain: function(mx) {\n\t\t\tvar a1 = this._a,\n\t\t\t\tb1 = this._b,\n\t\t\t\tc1 = this._c,\n\t\t\t\td1 = this._d,\n\t\t\t\ttx1 = this._tx,\n\t\t\t\tty1 = this._ty,\n\t\t\t\ta2 = mx._a,\n\t\t\t\tb2 = mx._b,\n\t\t\t\tc2 = mx._c,\n\t\t\t\td2 = mx._d,\n\t\t\t\ttx2 = mx._tx,\n\t\t\t\tty2 = mx._ty;\n\t\t\treturn new Matrix(\n\t\t\t\t\ta2 * a1 + c2 * b1,\n\t\t\t\t\ta2 * c1 + c2 * d1,\n\t\t\t\t\tb2 * a1 + d2 * b1,\n\t\t\t\t\tb2 * c1 + d2 * d1,\n\t\t\t\t\ttx1 + tx2 * a1 + ty2 * b1,\n\t\t\t\t\tty1 + tx2 * c1 + ty2 * d1);\n\t\t},\n\t\n\t\tisIdentity: function() {\n\t\t\treturn this._a === 1 && this._c === 0 && this._b === 0 && this._d === 1\n\t\t\t\t\t&& this._tx === 0 && this._ty === 0;\n\t\t},\n\t\n\t\torNullIfIdentity: function() {\n\t\t\treturn this.isIdentity() ? null : this;\n\t\t},\n\t\n\t\tisInvertible: function() {\n\t\t\treturn !!this._getDeterminant();\n\t\t},\n\t\n\t\tisSingular: function() {\n\t\t\treturn !this._getDeterminant();\n\t\t},\n\t\n\t\ttransform: function( src, dst, count) {\n\t\t\treturn arguments.length < 3\n\t\t\t\t? this._transformPoint(Point.read(arguments))\n\t\t\t\t: this._transformCoordinates(src, dst, count);\n\t\t},\n\t\n\t\t_transformPoint: function(point, dest, _dontNotify) {\n\t\t\tvar x = point.x,\n\t\t\t\ty = point.y;\n\t\t\tif (!dest)\n\t\t\t\tdest = new Point();\n\t\t\treturn dest.set(\n\t\t\t\tx * this._a + y * this._b + this._tx,\n\t\t\t\tx * this._c + y * this._d + this._ty,\n\t\t\t\t_dontNotify\n\t\t\t);\n\t\t},\n\t\n\t\t_transformCoordinates: function(src, dst, count) {\n\t\t\tvar i = 0,\n\t\t\t\tj = 0,\n\t\t\t\tmax = 2 * count;\n\t\t\twhile (i < max) {\n\t\t\t\tvar x = src[i++],\n\t\t\t\t\ty = src[i++];\n\t\t\t\tdst[j++] = x * this._a + y * this._b + this._tx;\n\t\t\t\tdst[j++] = x * this._c + y * this._d + this._ty;\n\t\t\t}\n\t\t\treturn dst;\n\t\t},\n\t\n\t\t_transformCorners: function(rect) {\n\t\t\tvar x1 = rect.x,\n\t\t\t\ty1 = rect.y,\n\t\t\t\tx2 = x1 + rect.width,\n\t\t\t\ty2 = y1 + rect.height,\n\t\t\t\tcoords = [ x1, y1, x2, y1, x2, y2, x1, y2 ];\n\t\t\treturn this._transformCoordinates(coords, coords, 4);\n\t\t},\n\t\n\t\t_transformBounds: function(bounds, dest, _dontNotify) {\n\t\t\tvar coords = this._transformCorners(bounds),\n\t\t\t\tmin = coords.slice(0, 2),\n\t\t\t\tmax = min.slice();\n\t\t\tfor (var i = 2; i < 8; i++) {\n\t\t\t\tvar val = coords[i],\n\t\t\t\t\tj = i & 1;\n\t\t\t\tif (val < min[j])\n\t\t\t\t\tmin[j] = val;\n\t\t\t\telse if (val > max[j])\n\t\t\t\t\tmax[j] = val;\n\t\t\t}\n\t\t\tif (!dest)\n\t\t\t\tdest = new Rectangle();\n\t\t\treturn dest.set(min[0], min[1], max[0] - min[0], max[1] - min[1],\n\t\t\t\t\t_dontNotify);\n\t\t},\n\t\n\t\tinverseTransform: function() {\n\t\t\treturn this._inverseTransform(Point.read(arguments));\n\t\t},\n\t\n\t\t_getDeterminant: function() {\n\t\t\tvar det = this._a * this._d - this._b * this._c;\n\t\t\treturn isFinite(det) && !Numerical.isZero(det)\n\t\t\t\t\t&& isFinite(this._tx) && isFinite(this._ty)\n\t\t\t\t\t? det : null;\n\t\t},\n\t\n\t\t_inverseTransform: function(point, dest, _dontNotify) {\n\t\t\tvar det = this._getDeterminant();\n\t\t\tif (!det)\n\t\t\t\treturn null;\n\t\t\tvar x = point.x - this._tx,\n\t\t\t\ty = point.y - this._ty;\n\t\t\tif (!dest)\n\t\t\t\tdest = new Point();\n\t\t\treturn dest.set(\n\t\t\t\t(x * this._d - y * this._b) / det,\n\t\t\t\t(y * this._a - x * this._c) / det,\n\t\t\t\t_dontNotify\n\t\t\t);\n\t\t},\n\t\n\t\tdecompose: function() {\n\t\t\tvar a = this._a, b = this._b, c = this._c, d = this._d;\n\t\t\tif (Numerical.isZero(a * d - b * c))\n\t\t\t\treturn null;\n\t\n\t\t\tvar scaleX = Math.sqrt(a * a + b * b);\n\t\t\ta /= scaleX;\n\t\t\tb /= scaleX;\n\t\n\t\t\tvar shear = a * c + b * d;\n\t\t\tc -= a * shear;\n\t\t\td -= b * shear;\n\t\n\t\t\tvar scaleY = Math.sqrt(c * c + d * d);\n\t\t\tc /= scaleY;\n\t\t\td /= scaleY;\n\t\t\tshear /= scaleY;\n\t\n\t\t\tif (a * d < b * c) {\n\t\t\t\ta = -a;\n\t\t\t\tb = -b;\n\t\t\t\tshear = -shear;\n\t\t\t\tscaleX = -scaleX;\n\t\t\t}\n\t\n\t\t\treturn {\n\t\t\t\tscaling: new Point(scaleX, scaleY),\n\t\t\t\trotation: -Math.atan2(b, a) * 180 / Math.PI,\n\t\t\t\tshearing: shear\n\t\t\t};\n\t\t},\n\t\n\t\tgetValues: function() {\n\t\t\treturn [ this._a, this._c, this._b, this._d, this._tx, this._ty ];\n\t\t},\n\t\n\t\tgetTranslation: function() {\n\t\t\treturn new Point(this._tx, this._ty);\n\t\t},\n\t\n\t\tgetScaling: function() {\n\t\t\treturn (this.decompose() || {}).scaling;\n\t\t},\n\t\n\t\tgetRotation: function() {\n\t\t\treturn (this.decompose() || {}).rotation;\n\t\t},\n\t\n\t\tinverted: function() {\n\t\t\tvar det = this._getDeterminant();\n\t\t\treturn det && new Matrix(\n\t\t\t\t\tthis._d / det,\n\t\t\t\t\t-this._c / det,\n\t\t\t\t\t-this._b / det,\n\t\t\t\t\tthis._a / det,\n\t\t\t\t\t(this._b * this._ty - this._d * this._tx) / det,\n\t\t\t\t\t(this._c * this._tx - this._a * this._ty) / det);\n\t\t},\n\t\n\t\tshiftless: function() {\n\t\t\treturn new Matrix(this._a, this._c, this._b, this._d, 0, 0);\n\t\t},\n\t\n\t\tapplyToContext: function(ctx) {\n\t\t\tctx.transform(this._a, this._c, this._b, this._d, this._tx, this._ty);\n\t\t}\n\t}, Base.each(['a', 'c', 'b', 'd', 'tx', 'ty'], function(name) {\n\t\tvar part = Base.capitalize(name),\n\t\t\tprop = '_' + name;\n\t\tthis['get' + part] = function() {\n\t\t\treturn this[prop];\n\t\t};\n\t\tthis['set' + part] = function(value) {\n\t\t\tthis[prop] = value;\n\t\t\tthis._changed();\n\t\t};\n\t}, {}));\n\t\n\tvar Line = Base.extend({\n\t\t_class: 'Line',\n\t\n\t\tinitialize: function Line(arg0, arg1, arg2, arg3, arg4) {\n\t\t\tvar asVector = false;\n\t\t\tif (arguments.length >= 4) {\n\t\t\t\tthis._px = arg0;\n\t\t\t\tthis._py = arg1;\n\t\t\t\tthis._vx = arg2;\n\t\t\t\tthis._vy = arg3;\n\t\t\t\tasVector = arg4;\n\t\t\t} else {\n\t\t\t\tthis._px = arg0.x;\n\t\t\t\tthis._py = arg0.y;\n\t\t\t\tthis._vx = arg1.x;\n\t\t\t\tthis._vy = arg1.y;\n\t\t\t\tasVector = arg2;\n\t\t\t}\n\t\t\tif (!asVector) {\n\t\t\t\tthis._vx -= this._px;\n\t\t\t\tthis._vy -= this._py;\n\t\t\t}\n\t\t},\n\t\n\t\tgetPoint: function() {\n\t\t\treturn new Point(this._px, this._py);\n\t\t},\n\t\n\t\tgetVector: function() {\n\t\t\treturn new Point(this._vx, this._vy);\n\t\t},\n\t\n\t\tgetLength: function() {\n\t\t\treturn this.getVector().getLength();\n\t\t},\n\t\n\t\tintersect: function(line, isInfinite) {\n\t\t\treturn Line.intersect(\n\t\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\t\tline._px, line._py, line._vx, line._vy,\n\t\t\t\t\ttrue, isInfinite);\n\t\t},\n\t\n\t\tgetSide: function(point, isInfinite) {\n\t\t\treturn Line.getSide(\n\t\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\t\tpoint.x, point.y, true, isInfinite);\n\t\t},\n\t\n\t\tgetDistance: function(point) {\n\t\t\treturn Math.abs(Line.getSignedDistance(\n\t\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\t\tpoint.x, point.y, true));\n\t\t},\n\t\n\t\tisCollinear: function(line) {\n\t\t\treturn Point.isCollinear(this._vx, this._vy, line._vx, line._vy);\n\t\t},\n\t\n\t\tisOrthogonal: function(line) {\n\t\t\treturn Point.isOrthogonal(this._vx, this._vy, line._vx, line._vy);\n\t\t},\n\t\n\t\tstatics: {\n\t\t\tintersect: function(p1x, p1y, v1x, v1y, p2x, p2y, v2x, v2y, asVector,\n\t\t\t\t\tisInfinite) {\n\t\t\t\tif (!asVector) {\n\t\t\t\t\tv1x -= p1x;\n\t\t\t\t\tv1y -= p1y;\n\t\t\t\t\tv2x -= p2x;\n\t\t\t\t\tv2y -= p2y;\n\t\t\t\t}\n\t\t\t\tvar cross = v1x * v2y - v1y * v2x;\n\t\t\t\tif (!Numerical.isZero(cross)) {\n\t\t\t\t\tvar dx = p1x - p2x,\n\t\t\t\t\t\tdy = p1y - p2y,\n\t\t\t\t\t\tu1 = (v2x * dy - v2y * dx) / cross,\n\t\t\t\t\t\tu2 = (v1x * dy - v1y * dx) / cross,\n\t\t\t\t\t\tepsilon = 1e-12,\n\t\t\t\t\t\tuMin = -epsilon,\n\t\t\t\t\t\tuMax = 1 + epsilon;\n\t\t\t\t\tif (isInfinite\n\t\t\t\t\t\t\t|| uMin < u1 && u1 < uMax && uMin < u2 && u2 < uMax) {\n\t\t\t\t\t\tif (!isInfinite) {\n\t\t\t\t\t\t\tu1 = u1 <= 0 ? 0 : u1 >= 1 ? 1 : u1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn new Point(\n\t\t\t\t\t\t\t\tp1x + u1 * v1x,\n\t\t\t\t\t\t\t\tp1y + u1 * v1y);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\tgetSide: function(px, py, vx, vy, x, y, asVector, isInfinite) {\n\t\t\t\tif (!asVector) {\n\t\t\t\t\tvx -= px;\n\t\t\t\t\tvy -= py;\n\t\t\t\t}\n\t\t\t\tvar v2x = x - px,\n\t\t\t\t\tv2y = y - py,\n\t\t\t\t\tccw = v2x * vy - v2y * vx;\n\t\t\t\tif (ccw === 0 && !isInfinite) {\n\t\t\t\t\tccw = (v2x * vx + v2x * vx) / (vx * vx + vy * vy);\n\t\t\t\t\tif (ccw >= 0 && ccw <= 1)\n\t\t\t\t\t\tccw = 0;\n\t\t\t\t}\n\t\t\t\treturn ccw < 0 ? -1 : ccw > 0 ? 1 : 0;\n\t\t\t},\n\t\n\t\t\tgetSignedDistance: function(px, py, vx, vy, x, y, asVector) {\n\t\t\t\tif (!asVector) {\n\t\t\t\t\tvx -= px;\n\t\t\t\t\tvy -= py;\n\t\t\t\t}\n\t\t\t\treturn vx === 0 ? vy > 0 ? x - px : px - x\n\t\t\t\t\t : vy === 0 ? vx < 0 ? y - py : py - y\n\t\t\t\t\t : ((x-px) * vy - (y-py) * vx) / Math.sqrt(vx * vx + vy * vy);\n\t\t\t}\n\t\t}\n\t});\n\t\n\tvar Project = PaperScopeItem.extend({\n\t\t_class: 'Project',\n\t\t_list: 'projects',\n\t\t_reference: 'project',\n\t\n\t\tinitialize: function Project(element) {\n\t\t\tPaperScopeItem.call(this, true);\n\t\t\tthis.layers = [];\n\t\t\tthis._activeLayer = null;\n\t\t\tthis.symbols = [];\n\t\t\tthis._currentStyle = new Style(null, null, this);\n\t\t\tthis._view = View.create(this,\n\t\t\t\t\telement || CanvasProvider.getCanvas(1, 1));\n\t\t\tthis._selectedItems = {};\n\t\t\tthis._selectedItemCount = 0;\n\t\t\tthis._updateVersion = 0;\n\t\t},\n\t\n\t\t_serialize: function(options, dictionary) {\n\t\t\treturn Base.serialize(this.layers, options, true, dictionary);\n\t\t},\n\t\n\t\tclear: function() {\n\t\t\tfor (var i = this.layers.length - 1; i >= 0; i--)\n\t\t\t\tthis.layers[i].remove();\n\t\t\tthis.symbols = [];\n\t\t},\n\t\n\t\tisEmpty: function() {\n\t\t\treturn this.layers.length === 0;\n\t\t},\n\t\n\t\tremove: function remove() {\n\t\t\tif (!remove.base.call(this))\n\t\t\t\treturn false;\n\t\t\tif (this._view)\n\t\t\t\tthis._view.remove();\n\t\t\treturn true;\n\t\t},\n\t\n\t\tgetView: function() {\n\t\t\treturn this._view;\n\t\t},\n\t\n\t\tgetCurrentStyle: function() {\n\t\t\treturn this._currentStyle;\n\t\t},\n\t\n\t\tsetCurrentStyle: function(style) {\n\t\t\tthis._currentStyle.initialize(style);\n\t\t},\n\t\n\t\tgetIndex: function() {\n\t\t\treturn this._index;\n\t\t},\n\t\n\t\tgetOptions: function() {\n\t\t\treturn this._scope.settings;\n\t\t},\n\t\n\t\tgetActiveLayer: function() {\n\t\t\treturn this._activeLayer || new Layer({ project: this });\n\t\t},\n\t\n\t\tgetSelectedItems: function() {\n\t\t\tvar items = [];\n\t\t\tfor (var id in this._selectedItems) {\n\t\t\t\tvar item = this._selectedItems[id];\n\t\t\t\tif (item.isInserted())\n\t\t\t\t\titems.push(item);\n\t\t\t}\n\t\t\treturn items;\n\t\t},\n\t\n\t\tinsertChild: function(index, item, _preserve) {\n\t\t\tif (item instanceof Layer) {\n\t\t\t\titem._remove(false, true);\n\t\t\t\tBase.splice(this.layers, [item], index, 0);\n\t\t\t\titem._setProject(this, true);\n\t\t\t\tif (this._changes)\n\t\t\t\t\titem._changed(5);\n\t\t\t\tif (!this._activeLayer)\n\t\t\t\t\tthis._activeLayer = item;\n\t\t\t} else if (item instanceof Item) {\n\t\t\t\t(this._activeLayer\n\t\t\t\t\t|| this.insertChild(index, new Layer(Item.NO_INSERT)))\n\t\t\t\t\t\t.insertChild(index, item, _preserve);\n\t\t\t} else {\n\t\t\t\titem = null;\n\t\t\t}\n\t\t\treturn item;\n\t\t},\n\t\n\t\taddChild: function(item, _preserve) {\n\t\t\treturn this.insertChild(undefined, item, _preserve);\n\t\t},\n\t\n\t\t_updateSelection: function(item) {\n\t\t\tvar id = item._id,\n\t\t\t\tselectedItems = this._selectedItems;\n\t\t\tif (item._selected) {\n\t\t\t\tif (selectedItems[id] !== item) {\n\t\t\t\t\tthis._selectedItemCount++;\n\t\t\t\t\tselectedItems[id] = item;\n\t\t\t\t}\n\t\t\t} else if (selectedItems[id] === item) {\n\t\t\t\tthis._selectedItemCount--;\n\t\t\t\tdelete selectedItems[id];\n\t\t\t}\n\t\t},\n\t\n\t\tselectAll: function() {\n\t\t\tvar layers = this.layers;\n\t\t\tfor (var i = 0, l = layers.length; i < l; i++)\n\t\t\t\tlayers[i].setFullySelected(true);\n\t\t},\n\t\n\t\tdeselectAll: function() {\n\t\t\tvar selectedItems = this._selectedItems;\n\t\t\tfor (var i in selectedItems)\n\t\t\t\tselectedItems[i].setFullySelected(false);\n\t\t},\n\t\n\t\thitTest: function() {\n\t\t\tvar point = Point.read(arguments),\n\t\t\t\toptions = HitResult.getOptions(Base.read(arguments));\n\t\t\tfor (var i = this.layers.length - 1; i >= 0; i--) {\n\t\t\t\tvar res = this.layers[i]._hitTest(point, options);\n\t\t\t\tif (res) return res;\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\n\t\tgetItems: function(match) {\n\t\t\treturn Item._getItems(this.layers, match);\n\t\t},\n\t\n\t\tgetItem: function(match) {\n\t\t\treturn Item._getItems(this.layers, match, null, null, true)[0] || null;\n\t\t},\n\t\n\t\timportJSON: function(json) {\n\t\t\tthis.activate();\n\t\t\tvar layer = this._activeLayer;\n\t\t\treturn Base.importJSON(json, layer && layer.isEmpty() && layer);\n\t\t},\n\t\n\t\tdraw: function(ctx, matrix, pixelRatio) {\n\t\t\tthis._updateVersion++;\n\t\t\tctx.save();\n\t\t\tmatrix.applyToContext(ctx);\n\t\t\tvar param = new Base({\n\t\t\t\toffset: new Point(0, 0),\n\t\t\t\tpixelRatio: pixelRatio,\n\t\t\t\tviewMatrix: matrix.isIdentity() ? null : matrix,\n\t\t\t\tmatrices: [new Matrix()],\n\t\t\t\tupdateMatrix: true\n\t\t\t});\n\t\t\tfor (var i = 0, layers = this.layers, l = layers.length; i < l; i++)\n\t\t\t\tlayers[i].draw(ctx, param);\n\t\t\tctx.restore();\n\t\n\t\t\tif (this._selectedItemCount > 0) {\n\t\t\t\tctx.save();\n\t\t\t\tctx.strokeWidth = 1;\n\t\t\t\tvar items = this._selectedItems,\n\t\t\t\t\tsize = this._scope.settings.handleSize,\n\t\t\t\t\tversion = this._updateVersion;\n\t\t\t\tfor (var id in items)\n\t\t\t\t\titems[id]._drawSelection(ctx, matrix, size, items, version);\n\t\t\t\tctx.restore();\n\t\t\t}\n\t\t}\n\t});\n\t\n\tvar Symbol = Base.extend({\n\t\t_class: 'Symbol',\n\t\n\t\tinitialize: function Symbol(item, dontCenter) {\n\t\t\tthis._id = UID.get();\n\t\t\tthis.project = paper.project;\n\t\t\tthis.project.symbols.push(this);\n\t\t\tif (item)\n\t\t\t\tthis.setDefinition(item, dontCenter);\n\t\t},\n\t\n\t\t_serialize: function(options, dictionary) {\n\t\t\treturn dictionary.add(this, function() {\n\t\t\t\treturn Base.serialize([this._class, this._definition],\n\t\t\t\t\t\toptions, false, dictionary);\n\t\t\t});\n\t\t},\n\t\n\t\t_changed: function(flags) {\n\t\t\tif (flags & 8) {\n\t\t\t\tItem._clearBoundsCache(this);\n\t\t\t}\n\t\t\tif (flags & 1) {\n\t\t\t\tthis.project._needsUpdate = true;\n\t\t\t}\n\t\t},\n\t\n\t\tgetDefinition: function() {\n\t\t\treturn this._definition;\n\t\t},\n\t\n\t\tsetDefinition: function(item, _dontCenter) {\n\t\t\tif (item._parentSymbol)\n\t\t\t\titem = item.clone();\n\t\t\tif (this._definition)\n\t\t\t\tthis._definition._parentSymbol = null;\n\t\t\tthis._definition = item;\n\t\t\titem.remove();\n\t\t\titem.setSelected(false);\n\t\t\tif (!_dontCenter)\n\t\t\t\titem.setPosition(new Point());\n\t\t\titem._parentSymbol = this;\n\t\t\tthis._changed(9);\n\t\t},\n\t\n\t\tplace: function(position) {\n\t\t\treturn new PlacedSymbol(this, position);\n\t\t},\n\t\n\t\tclone: function() {\n\t\t\treturn new Symbol(this._definition.clone(false));\n\t\t},\n\t\n\t\tequals: function(symbol) {\n\t\t\treturn symbol === this\n\t\t\t\t\t|| symbol && this.definition.equals(symbol.definition)\n\t\t\t\t\t|| false;\n\t\t}\n\t});\n\t\n\tvar Item = Base.extend(Emitter, {\n\t\tstatics: {\n\t\t\textend: function extend(src) {\n\t\t\t\tif (src._serializeFields)\n\t\t\t\t\tsrc._serializeFields = new Base(\n\t\t\t\t\t\t\tthis.prototype._serializeFields, src._serializeFields);\n\t\t\t\treturn extend.base.apply(this, arguments);\n\t\t\t},\n\t\n\t\t\tNO_INSERT: { insert: false }\n\t\t},\n\t\n\t\t_class: 'Item',\n\t\t_applyMatrix: true,\n\t\t_canApplyMatrix: true,\n\t\t_boundsSelected: false,\n\t\t_selectChildren: false,\n\t\t_serializeFields: {\n\t\t\tname: null,\n\t\t\tapplyMatrix: null,\n\t\t\tmatrix: new Matrix(),\n\t\t\tpivot: null,\n\t\t\tlocked: false,\n\t\t\tvisible: true,\n\t\t\tblendMode: 'normal',\n\t\t\topacity: 1,\n\t\t\tguide: false,\n\t\t\tselected: false,\n\t\t\tclipMask: false,\n\t\t\tdata: {}\n\t\t},\n\t\n\t\tinitialize: function Item() {\n\t\t},\n\t\n\t\t_initialize: function(props, point) {\n\t\t\tvar hasProps = props && Base.isPlainObject(props),\n\t\t\t\tinternal = hasProps && props.internal === true,\n\t\t\t\tmatrix = this._matrix = new Matrix(),\n\t\t\t\tproject = hasProps && props.project || paper.project;\n\t\t\tif (!internal)\n\t\t\t\tthis._id = UID.get();\n\t\t\tthis._applyMatrix = this._canApplyMatrix && paper.settings.applyMatrix;\n\t\t\tif (point)\n\t\t\t\tmatrix.translate(point);\n\t\t\tmatrix._owner = this;\n\t\t\tthis._style = new Style(project._currentStyle, this, project);\n\t\t\tif (!this._project) {\n\t\t\t\tif (internal || hasProps && props.insert === false) {\n\t\t\t\t\tthis._setProject(project);\n\t\t\t\t} else if (hasProps && props.parent) {\n\t\t\t\t\tthis.setParent(props.parent);\n\t\t\t\t} else {\n\t\t\t\t\t(project._activeLayer || new Layer()).addChild(this);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (hasProps && props !== Item.NO_INSERT)\n\t\t\t\tthis._set(props, { insert: true, project: true, parent: true },\n\t\t\t\t\t\ttrue);\n\t\t\treturn hasProps;\n\t\t},\n\t\n\t\t_events: Base.each(['onMouseDown', 'onMouseUp', 'onMouseDrag', 'onClick',\n\t\t\t\t'onDoubleClick', 'onMouseMove', 'onMouseEnter', 'onMouseLeave'],\n\t\t\tfunction(name) {\n\t\t\t\tthis[name] = {\n\t\t\t\t\tinstall: function(type) {\n\t\t\t\t\t\tthis.getView()._installEvent(type);\n\t\t\t\t\t},\n\t\n\t\t\t\t\tuninstall: function(type) {\n\t\t\t\t\t\tthis.getView()._uninstallEvent(type);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}, {\n\t\t\t\tonFrame: {\n\t\t\t\t\tinstall: function() {\n\t\t\t\t\t\tthis.getView()._animateItem(this, true);\n\t\t\t\t\t},\n\t\n\t\t\t\t\tuninstall: function() {\n\t\t\t\t\t\tthis.getView()._animateItem(this, false);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\n\t\t\t\tonLoad: {}\n\t\t\t}\n\t\t),\n\t\n\t\t_serialize: function(options, dictionary) {\n\t\t\tvar props = {},\n\t\t\t\tthat = this;\n\t\n\t\t\tfunction serialize(fields) {\n\t\t\t\tfor (var key in fields) {\n\t\t\t\t\tvar value = that[key];\n\t\t\t\t\tif (!Base.equals(value, key === 'leading'\n\t\t\t\t\t\t\t? fields.fontSize * 1.2 : fields[key])) {\n\t\t\t\t\t\tprops[key] = Base.serialize(value, options,\n\t\t\t\t\t\t\t\tkey !== 'data', dictionary);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tserialize(this._serializeFields);\n\t\t\tif (!(this instanceof Group))\n\t\t\t\tserialize(this._style._defaults);\n\t\t\treturn [ this._class, props ];\n\t\t},\n\t\n\t\t_changed: function(flags) {\n\t\t\tvar symbol = this._parentSymbol,\n\t\t\t\tcacheParent = this._parent || symbol,\n\t\t\t\tproject = this._project;\n\t\t\tif (flags & 8) {\n\t\t\t\tthis._bounds = this._position = this._decomposed =\n\t\t\t\t\t\tthis._globalMatrix = this._currentPath = undefined;\n\t\t\t}\n\t\t\tif (cacheParent\n\t\t\t\t\t&& (flags & 40)) {\n\t\t\t\tItem._clearBoundsCache(cacheParent);\n\t\t\t}\n\t\t\tif (flags & 2) {\n\t\t\t\tItem._clearBoundsCache(this);\n\t\t\t}\n\t\t\tif (project) {\n\t\t\t\tif (flags & 1) {\n\t\t\t\t\tproject._needsUpdate = true;\n\t\t\t\t}\n\t\t\t\tif (project._changes) {\n\t\t\t\t\tvar entry = project._changesById[this._id];\n\t\t\t\t\tif (entry) {\n\t\t\t\t\t\tentry.flags |= flags;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tentry = { item: this, flags: flags };\n\t\t\t\t\t\tproject._changesById[this._id] = entry;\n\t\t\t\t\t\tproject._changes.push(entry);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (symbol)\n\t\t\t\tsymbol._changed(flags);\n\t\t},\n\t\n\t\tset: function(props) {\n\t\t\tif (props)\n\t\t\t\tthis._set(props);\n\t\t\treturn this;\n\t\t},\n\t\n\t\tgetId: function() {\n\t\t\treturn this._id;\n\t\t},\n\t\n\t\tgetName: function() {\n\t\t\treturn this._name;\n\t\t},\n\t\n\t\tsetName: function(name, unique) {\n\t\n\t\t\tif (this._name)\n\t\t\t\tthis._removeNamed();\n\t\t\tif (name === (+name) + '')\n\t\t\t\tthrow new Error(\n\t\t\t\t\t\t'Names consisting only of numbers are not supported.');\n\t\t\tvar parent = this._parent;\n\t\t\tif (name && parent) {\n\t\t\t\tvar children = parent._children,\n\t\t\t\t\tnamedChildren = parent._namedChildren,\n\t\t\t\t\torig = name,\n\t\t\t\t\ti = 1;\n\t\t\t\twhile (unique && children[name])\n\t\t\t\t\tname = orig + ' ' + (i++);\n\t\t\t\t(namedChildren[name] = namedChildren[name] || []).push(this);\n\t\t\t\tchildren[name] = this;\n\t\t\t}\n\t\t\tthis._name = name || undefined;\n\t\t\tthis._changed(128);\n\t\t},\n\t\n\t\tgetStyle: function() {\n\t\t\treturn this._style;\n\t\t},\n\t\n\t\tsetStyle: function(style) {\n\t\t\tthis.getStyle().set(style);\n\t\t}\n\t}, Base.each(['locked', 'visible', 'blendMode', 'opacity', 'guide'],\n\t\tfunction(name) {\n\t\t\tvar part = Base.capitalize(name),\n\t\t\t\tname = '_' + name;\n\t\t\tthis['get' + part] = function() {\n\t\t\t\treturn this[name];\n\t\t\t};\n\t\t\tthis['set' + part] = function(value) {\n\t\t\t\tif (value != this[name]) {\n\t\t\t\t\tthis[name] = value;\n\t\t\t\t\tthis._changed(name === '_locked'\n\t\t\t\t\t\t\t? 128 : 129);\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\t{}), {\n\t\tbeans: true,\n\t\n\t\t_locked: false,\n\t\n\t\t_visible: true,\n\t\n\t\t_blendMode: 'normal',\n\t\n\t\t_opacity: 1,\n\t\n\t\t_guide: false,\n\t\n\t\tisSelected: function() {\n\t\t\tif (this._selectChildren) {\n\t\t\t\tvar children = this._children;\n\t\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\t\tif (children[i].isSelected())\n\t\t\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn this._selected;\n\t\t},\n\t\n\t\tsetSelected: function(selected, noChildren) {\n\t\t\tif (!noChildren && this._selectChildren) {\n\t\t\t\tvar children = this._children;\n\t\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\t\tchildren[i].setSelected(selected);\n\t\t\t}\n\t\t\tif ((selected = !!selected) ^ this._selected) {\n\t\t\t\tthis._selected = selected;\n\t\t\t\tthis._project._updateSelection(this);\n\t\t\t\tthis._changed(129);\n\t\t\t}\n\t\t},\n\t\n\t\t_selected: false,\n\t\n\t\tisFullySelected: function() {\n\t\t\tvar children = this._children;\n\t\t\tif (children && this._selected) {\n\t\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\t\tif (!children[i].isFullySelected())\n\t\t\t\t\t\treturn false;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn this._selected;\n\t\t},\n\t\n\t\tsetFullySelected: function(selected) {\n\t\t\tvar children = this._children;\n\t\t\tif (children) {\n\t\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\t\tchildren[i].setFullySelected(selected);\n\t\t\t}\n\t\t\tthis.setSelected(selected, true);\n\t\t},\n\t\n\t\tisClipMask: function() {\n\t\t\treturn this._clipMask;\n\t\t},\n\t\n\t\tsetClipMask: function(clipMask) {\n\t\t\tif (this._clipMask != (clipMask = !!clipMask)) {\n\t\t\t\tthis._clipMask = clipMask;\n\t\t\t\tif (clipMask) {\n\t\t\t\t\tthis.setFillColor(null);\n\t\t\t\t\tthis.setStrokeColor(null);\n\t\t\t\t}\n\t\t\t\tthis._changed(129);\n\t\t\t\tif (this._parent)\n\t\t\t\t\tthis._parent._changed(1024);\n\t\t\t}\n\t\t},\n\t\n\t\t_clipMask: false,\n\t\n\t\tgetData: function() {\n\t\t\tif (!this._data)\n\t\t\t\tthis._data = {};\n\t\t\treturn this._data;\n\t\t},\n\t\n\t\tsetData: function(data) {\n\t\t\tthis._data = data;\n\t\t},\n\t\n\t\tgetPosition: function(_dontLink) {\n\t\t\tvar position = this._position,\n\t\t\t\tctor = _dontLink ? Point : LinkedPoint;\n\t\t\tif (!position) {\n\t\t\t\tvar pivot = this._pivot;\n\t\t\t\tposition = this._position = pivot\n\t\t\t\t\t\t? this._matrix._transformPoint(pivot)\n\t\t\t\t\t\t: this.getBounds().getCenter(true);\n\t\t\t}\n\t\t\treturn new ctor(position.x, position.y, this, 'setPosition');\n\t\t},\n\t\n\t\tsetPosition: function() {\n\t\t\tthis.translate(Point.read(arguments).subtract(this.getPosition(true)));\n\t\t},\n\t\n\t\tgetPivot: function(_dontLink) {\n\t\t\tvar pivot = this._pivot;\n\t\t\tif (pivot) {\n\t\t\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\t\t\tpivot = new ctor(pivot.x, pivot.y, this, 'setPivot');\n\t\t\t}\n\t\t\treturn pivot;\n\t\t},\n\t\n\t\tsetPivot: function() {\n\t\t\tthis._pivot = Point.read(arguments, 0, { clone: true, readNull: true });\n\t\t\tthis._position = undefined;\n\t\t},\n\t\n\t\t_pivot: null,\n\t}, Base.each(['bounds', 'strokeBounds', 'handleBounds', 'roughBounds',\n\t\t\t'internalBounds', 'internalRoughBounds'],\n\t\tfunction(key) {\n\t\t\tvar getter = 'get' + Base.capitalize(key),\n\t\t\t\tmatch = key.match(/^internal(.*)$/),\n\t\t\t\tinternalGetter = match ? 'get' + match[1] : null;\n\t\t\tthis[getter] = function(_matrix) {\n\t\t\t\tvar boundsGetter = this._boundsGetter,\n\t\t\t\t\tname = !internalGetter && (typeof boundsGetter === 'string'\n\t\t\t\t\t\t\t? boundsGetter : boundsGetter && boundsGetter[getter])\n\t\t\t\t\t\t\t|| getter,\n\t\t\t\t\tbounds = this._getCachedBounds(name, _matrix, this,\n\t\t\t\t\t\t\tinternalGetter);\n\t\t\t\treturn key === 'bounds'\n\t\t\t\t\t\t? new LinkedRectangle(bounds.x, bounds.y, bounds.width,\n\t\t\t\t\t\t\t\tbounds.height, this, 'setBounds')\n\t\t\t\t\t\t: bounds;\n\t\t\t};\n\t\t},\n\t{\n\t\tbeans: true,\n\t\n\t\t_getBounds: function(getter, matrix, cacheItem) {\n\t\t\tvar children = this._children;\n\t\t\tif (!children || children.length == 0)\n\t\t\t\treturn new Rectangle();\n\t\t\tItem._updateBoundsCache(this, cacheItem);\n\t\t\tvar x1 = Infinity,\n\t\t\t\tx2 = -x1,\n\t\t\t\ty1 = x1,\n\t\t\t\ty2 = x2;\n\t\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\t\tvar child = children[i];\n\t\t\t\tif (child._visible && !child.isEmpty()) {\n\t\t\t\t\tvar rect = child._getCachedBounds(getter,\n\t\t\t\t\t\t\tmatrix && matrix.chain(child._matrix), cacheItem);\n\t\t\t\t\tx1 = Math.min(rect.x, x1);\n\t\t\t\t\ty1 = Math.min(rect.y, y1);\n\t\t\t\t\tx2 = Math.max(rect.x + rect.width, x2);\n\t\t\t\t\ty2 = Math.max(rect.y + rect.height, y2);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn isFinite(x1)\n\t\t\t\t\t? new Rectangle(x1, y1, x2 - x1, y2 - y1)\n\t\t\t\t\t: new Rectangle();\n\t\t},\n\t\n\t\tsetBounds: function() {\n\t\t\tvar rect = Rectangle.read(arguments),\n\t\t\t\tbounds = this.getBounds(),\n\t\t\t\tmatrix = new Matrix(),\n\t\t\t\tcenter = rect.getCenter();\n\t\t\tmatrix.translate(center);\n\t\t\tif (rect.width != bounds.width || rect.height != bounds.height) {\n\t\t\t\tmatrix.scale(\n\t\t\t\t\t\tbounds.width != 0 ? rect.width / bounds.width : 1,\n\t\t\t\t\t\tbounds.height != 0 ? rect.height / bounds.height : 1);\n\t\t\t}\n\t\t\tcenter = bounds.getCenter();\n\t\t\tmatrix.translate(-center.x, -center.y);\n\t\t\tthis.transform(matrix);\n\t\t},\n\t\n\t\t_getCachedBounds: function(getter, matrix, cacheItem, internalGetter) {\n\t\t\tmatrix = matrix && matrix.orNullIfIdentity();\n\t\t\tvar _matrix = internalGetter ? null : this._matrix.orNullIfIdentity(),\n\t\t\t\tcache = (!matrix || matrix.equals(_matrix)) && getter;\n\t\t\tItem._updateBoundsCache(this._parent || this._parentSymbol, cacheItem);\n\t\t\tif (cache && this._bounds && this._bounds[cache])\n\t\t\t\treturn this._bounds[cache].clone();\n\t\t\tvar bounds = this._getBounds(internalGetter || getter,\n\t\t\t\t\tmatrix || _matrix, cacheItem);\n\t\t\tif (cache) {\n\t\t\t\tif (!this._bounds)\n\t\t\t\t\tthis._bounds = {};\n\t\t\t\tvar cached = this._bounds[cache] = bounds.clone();\n\t\t\t\tcached._internal = !!internalGetter;\n\t\t\t}\n\t\t\treturn bounds;\n\t\t},\n\t\n\t\tstatics: {\n\t\t\t_updateBoundsCache: function(parent, item) {\n\t\t\t\tif (parent) {\n\t\t\t\t\tvar id = item._id,\n\t\t\t\t\t\tref = parent._boundsCache = parent._boundsCache || {\n\t\t\t\t\t\t\tids: {},\n\t\t\t\t\t\t\tlist: []\n\t\t\t\t\t\t};\n\t\t\t\t\tif (!ref.ids[id]) {\n\t\t\t\t\t\tref.list.push(item);\n\t\t\t\t\t\tref.ids[id] = item;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\t_clearBoundsCache: function(item) {\n\t\t\t\tvar cache = item._boundsCache;\n\t\t\t\tif (cache) {\n\t\t\t\t\titem._bounds = item._position = item._boundsCache = undefined;\n\t\t\t\t\tfor (var i = 0, list = cache.list, l = list.length; i < l; i++){\n\t\t\t\t\t\tvar other = list[i];\n\t\t\t\t\t\tif (other !== item) {\n\t\t\t\t\t\t\tother._bounds = other._position = undefined;\n\t\t\t\t\t\t\tif (other._boundsCache)\n\t\t\t\t\t\t\t\tItem._clearBoundsCache(other);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t}), {\n\t\tbeans: true,\n\t\n\t\t_decompose: function() {\n\t\t\treturn this._decomposed = this._matrix.decompose();\n\t\t},\n\t\n\t\tgetRotation: function() {\n\t\t\tvar decomposed = this._decomposed || this._decompose();\n\t\t\treturn decomposed && decomposed.rotation;\n\t\t},\n\t\n\t\tsetRotation: function(rotation) {\n\t\t\tvar current = this.getRotation();\n\t\t\tif (current != null && rotation != null) {\n\t\t\t\tvar decomposed = this._decomposed;\n\t\t\t\tthis.rotate(rotation - current);\n\t\t\t\tdecomposed.rotation = rotation;\n\t\t\t\tthis._decomposed = decomposed;\n\t\t\t}\n\t\t},\n\t\n\t\tgetScaling: function(_dontLink) {\n\t\t\tvar decomposed = this._decomposed || this._decompose(),\n\t\t\t\tscaling = decomposed && decomposed.scaling,\n\t\t\t\tctor = _dontLink ? Point : LinkedPoint;\n\t\t\treturn scaling && new ctor(scaling.x, scaling.y, this, 'setScaling');\n\t\t},\n\t\n\t\tsetScaling: function() {\n\t\t\tvar current = this.getScaling();\n\t\t\tif (current) {\n\t\t\t\tvar scaling = Point.read(arguments, 0, { clone: true }),\n\t\t\t\t\tdecomposed = this._decomposed;\n\t\t\t\tthis.scale(scaling.x / current.x, scaling.y / current.y);\n\t\t\t\tdecomposed.scaling = scaling;\n\t\t\t\tthis._decomposed = decomposed;\n\t\t\t}\n\t\t},\n\t\n\t\tgetMatrix: function() {\n\t\t\treturn this._matrix;\n\t\t},\n\t\n\t\tsetMatrix: function() {\n\t\t\tvar matrix = this._matrix;\n\t\t\tmatrix.initialize.apply(matrix, arguments);\n\t\t\tif (this._applyMatrix) {\n\t\t\t\tthis.transform(null, true);\n\t\t\t} else {\n\t\t\t\tthis._changed(9);\n\t\t\t}\n\t\t},\n\t\n\t\tgetGlobalMatrix: function(_dontClone) {\n\t\t\tvar matrix = this._globalMatrix,\n\t\t\t\tupdateVersion = this._project._updateVersion;\n\t\t\tif (matrix && matrix._updateVersion !== updateVersion)\n\t\t\t\tmatrix = null;\n\t\t\tif (!matrix) {\n\t\t\t\tmatrix = this._globalMatrix = this._matrix.clone();\n\t\t\t\tvar parent = this._parent;\n\t\t\t\tif (parent)\n\t\t\t\t\tmatrix.preConcatenate(parent.getGlobalMatrix(true));\n\t\t\t\tmatrix._updateVersion = updateVersion;\n\t\t\t}\n\t\t\treturn _dontClone ? matrix : matrix.clone();\n\t\t},\n\t\n\t\tgetApplyMatrix: function() {\n\t\t\treturn this._applyMatrix;\n\t\t},\n\t\n\t\tsetApplyMatrix: function(apply) {\n\t\t\tif (this._applyMatrix = this._canApplyMatrix && !!apply)\n\t\t\t\tthis.transform(null, true);\n\t\t},\n\t\n\t\tgetTransformContent: '#getApplyMatrix',\n\t\tsetTransformContent: '#setApplyMatrix',\n\t}, {\n\t\tgetProject: function() {\n\t\t\treturn this._project;\n\t\t},\n\t\n\t\t_setProject: function(project, installEvents) {\n\t\t\tif (this._project !== project) {\n\t\t\t\tif (this._project)\n\t\t\t\t\tthis._installEvents(false);\n\t\t\t\tthis._project = project;\n\t\t\t\tvar children = this._children;\n\t\t\t\tfor (var i = 0, l = children && children.length; i < l; i++)\n\t\t\t\t\tchildren[i]._setProject(project);\n\t\t\t\tinstallEvents = true;\n\t\t\t}\n\t\t\tif (installEvents)\n\t\t\t\tthis._installEvents(true);\n\t\t},\n\t\n\t\tgetView: function() {\n\t\t\treturn this._project.getView();\n\t\t},\n\t\n\t\t_installEvents: function _installEvents(install) {\n\t\t\t_installEvents.base.call(this, install);\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children && children.length; i < l; i++)\n\t\t\t\tchildren[i]._installEvents(install);\n\t\t},\n\t\n\t\tgetLayer: function() {\n\t\t\tvar parent = this;\n\t\t\twhile (parent = parent._parent) {\n\t\t\t\tif (parent instanceof Layer)\n\t\t\t\t\treturn parent;\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\n\t\tgetParent: function() {\n\t\t\treturn this._parent;\n\t\t},\n\t\n\t\tsetParent: function(item) {\n\t\t\treturn item.addChild(this);\n\t\t},\n\t\n\t\tgetChildren: function() {\n\t\t\treturn this._children;\n\t\t},\n\t\n\t\tsetChildren: function(items) {\n\t\t\tthis.removeChildren();\n\t\t\tthis.addChildren(items);\n\t\t},\n\t\n\t\tgetFirstChild: function() {\n\t\t\treturn this._children && this._children[0] || null;\n\t\t},\n\t\n\t\tgetLastChild: function() {\n\t\t\treturn this._children && this._children[this._children.length - 1]\n\t\t\t\t\t|| null;\n\t\t},\n\t\n\t\tgetNextSibling: function() {\n\t\t\treturn this._parent && this._parent._children[this._index + 1] || null;\n\t\t},\n\t\n\t\tgetPreviousSibling: function() {\n\t\t\treturn this._parent && this._parent._children[this._index - 1] || null;\n\t\t},\n\t\n\t\tgetIndex: function() {\n\t\t\treturn this._index;\n\t\t},\n\t\n\t\tequals: function(item) {\n\t\t\treturn item === this || item && this._class === item._class\n\t\t\t\t\t&& this._style.equals(item._style)\n\t\t\t\t\t&& this._matrix.equals(item._matrix)\n\t\t\t\t\t&& this._locked === item._locked\n\t\t\t\t\t&& this._visible === item._visible\n\t\t\t\t\t&& this._blendMode === item._blendMode\n\t\t\t\t\t&& this._opacity === item._opacity\n\t\t\t\t\t&& this._clipMask === item._clipMask\n\t\t\t\t\t&& this._guide === item._guide\n\t\t\t\t\t&& this._equals(item)\n\t\t\t\t\t|| false;\n\t\t},\n\t\n\t\t_equals: function(item) {\n\t\t\treturn Base.equals(this._children, item._children);\n\t\t},\n\t\n\t\tclone: function(insert) {\n\t\t\treturn this._clone(new this.constructor(Item.NO_INSERT), insert);\n\t\t},\n\t\n\t\t_clone: function(copy, insert, includeMatrix) {\n\t\t\tvar keys = ['_locked', '_visible', '_blendMode', '_opacity',\n\t\t\t\t\t'_clipMask', '_guide'],\n\t\t\t\tchildren = this._children;\n\t\t\tcopy.setStyle(this._style);\n\t\t\tfor (var i = 0, l = children && children.length; i < l; i++) {\n\t\t\t\tcopy.addChild(children[i].clone(false), true);\n\t\t\t}\n\t\t\tfor (var i = 0, l = keys.length; i < l; i++) {\n\t\t\t\tvar key = keys[i];\n\t\t\t\tif (this.hasOwnProperty(key))\n\t\t\t\t\tcopy[key] = this[key];\n\t\t\t}\n\t\t\tif (includeMatrix !== false)\n\t\t\t\tcopy._matrix.initialize(this._matrix);\n\t\t\tcopy.setApplyMatrix(this._applyMatrix);\n\t\t\tcopy.setPivot(this._pivot);\n\t\t\tcopy.setSelected(this._selected);\n\t\t\tcopy._data = this._data ? Base.clone(this._data) : null;\n\t\t\tif (insert || insert === undefined)\n\t\t\t\tcopy.insertAbove(this);\n\t\t\tif (this._name)\n\t\t\t\tcopy.setName(this._name, true);\n\t\t\treturn copy;\n\t\t},\n\t\n\t\tcopyTo: function(itemOrProject) {\n\t\t\treturn itemOrProject.addChild(this.clone(false));\n\t\t},\n\t\n\t\trasterize: function(resolution) {\n\t\t\tvar bounds = this.getStrokeBounds(),\n\t\t\t\tscale = (resolution || this.getView().getResolution()) / 72,\n\t\t\t\ttopLeft = bounds.getTopLeft().floor(),\n\t\t\t\tbottomRight = bounds.getBottomRight().ceil(),\n\t\t\t\tsize = new Size(bottomRight.subtract(topLeft)),\n\t\t\t\tcanvas = CanvasProvider.getCanvas(size.multiply(scale)),\n\t\t\t\tctx = canvas.getContext('2d'),\n\t\t\t\tmatrix = new Matrix().scale(scale).translate(topLeft.negate());\n\t\t\tctx.save();\n\t\t\tmatrix.applyToContext(ctx);\n\t\t\tthis.draw(ctx, new Base({ matrices: [matrix] }));\n\t\t\tctx.restore();\n\t\t\tvar raster = new Raster(Item.NO_INSERT);\n\t\t\traster.setCanvas(canvas);\n\t\t\traster.transform(new Matrix().translate(topLeft.add(size.divide(2)))\n\t\t\t\t\t.scale(1 / scale));\n\t\t\traster.insertAbove(this);\n\t\t\treturn raster;\n\t\t},\n\t\n\t\tcontains: function() {\n\t\t\treturn !!this._contains(\n\t\t\t\t\tthis._matrix._inverseTransform(Point.read(arguments)));\n\t\t},\n\t\n\t\t_contains: function(point) {\n\t\t\tif (this._children) {\n\t\t\t\tfor (var i = this._children.length - 1; i >= 0; i--) {\n\t\t\t\t\tif (this._children[i].contains(point))\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn point.isInside(this.getInternalBounds());\n\t\t},\n\t\n\t\tisInside: function() {\n\t\t\treturn Rectangle.read(arguments).contains(this.getBounds());\n\t\t},\n\t\n\t\t_asPathItem: function() {\n\t\t\treturn new Path.Rectangle({\n\t\t\t\trectangle: this.getInternalBounds(),\n\t\t\t\tmatrix: this._matrix,\n\t\t\t\tinsert: false,\n\t\t\t});\n\t\t},\n\t\n\t\tintersects: function(item, _matrix) {\n\t\t\tif (!(item instanceof Item))\n\t\t\t\treturn false;\n\t\t\treturn this._asPathItem().getIntersections(item._asPathItem(), null,\n\t\t\t\t\t_matrix || item._matrix, true).length > 0;\n\t\t},\n\t\n\t\thitTest: function() {\n\t\t\treturn this._hitTest(\n\t\t\t\t\tPoint.read(arguments),\n\t\t\t\t\tHitResult.getOptions(Base.read(arguments)));\n\t\t},\n\t\n\t\t_hitTest: function(point, options) {\n\t\t\tif (this._locked || !this._visible || this._guide && !options.guides\n\t\t\t\t\t|| this.isEmpty())\n\t\t\t\treturn null;\n\t\n\t\t\tvar matrix = this._matrix,\n\t\t\t\tparentTotalMatrix = options._totalMatrix,\n\t\t\t\tview = this.getView(),\n\t\t\t\ttotalMatrix = options._totalMatrix = parentTotalMatrix\n\t\t\t\t\t\t? parentTotalMatrix.chain(matrix)\n\t\t\t\t\t\t: this.getGlobalMatrix().preConcatenate(view._matrix),\n\t\t\t\ttolerancePadding = options._tolerancePadding = new Size(\n\t\t\t\t\t\t\tPath._getPenPadding(1, totalMatrix.inverted())\n\t\t\t\t\t\t).multiply(\n\t\t\t\t\t\t\tMath.max(options.tolerance, 1e-6)\n\t\t\t\t\t\t);\n\t\t\tpoint = matrix._inverseTransform(point);\n\t\n\t\t\tif (!this._children && !this.getInternalRoughBounds()\n\t\t\t\t\t.expand(tolerancePadding.multiply(2))._containsPoint(point))\n\t\t\t\treturn null;\n\t\t\tvar checkSelf = !(options.guides && !this._guide\n\t\t\t\t\t|| options.selected && !this._selected\n\t\t\t\t\t|| options.type && options.type !== Base.hyphenate(this._class)\n\t\t\t\t\t|| options.class && !(this instanceof options.class)),\n\t\t\t\tthat = this,\n\t\t\t\tres;\n\t\n\t\t\tfunction checkBounds(type, part) {\n\t\t\t\tvar pt = bounds['get' + part]();\n\t\t\t\tif (point.subtract(pt).divide(tolerancePadding).length <= 1)\n\t\t\t\t\treturn new HitResult(type, that,\n\t\t\t\t\t\t\t{ name: Base.hyphenate(part), point: pt });\n\t\t\t}\n\t\n\t\t\tif (checkSelf && (options.center || options.bounds) && this._parent) {\n\t\t\t\tvar bounds = this.getInternalBounds();\n\t\t\t\tif (options.center)\n\t\t\t\t\tres = checkBounds('center', 'Center');\n\t\t\t\tif (!res && options.bounds) {\n\t\t\t\t\tvar points = [\n\t\t\t\t\t\t'TopLeft', 'TopRight', 'BottomLeft', 'BottomRight',\n\t\t\t\t\t\t'LeftCenter', 'TopCenter', 'RightCenter', 'BottomCenter'\n\t\t\t\t\t];\n\t\t\t\t\tfor (var i = 0; i < 8 && !res; i++)\n\t\t\t\t\t\tres = checkBounds('bounds', points[i]);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tvar children = !res && this._children;\n\t\t\tif (children) {\n\t\t\t\tvar opts = this._getChildHitTestOptions(options);\n\t\t\t\tfor (var i = children.length - 1; i >= 0 && !res; i--)\n\t\t\t\t\tres = children[i]._hitTest(point, opts);\n\t\t\t}\n\t\t\tif (!res && checkSelf)\n\t\t\t\tres = this._hitTestSelf(point, options);\n\t\t\tif (res && res.point)\n\t\t\t\tres.point = matrix.transform(res.point);\n\t\t\toptions._totalMatrix = parentTotalMatrix;\n\t\t\treturn res;\n\t\t},\n\t\n\t\t_getChildHitTestOptions: function(options) {\n\t\t\treturn options;\n\t\t},\n\t\n\t\t_hitTestSelf: function(point, options) {\n\t\t\tif (options.fill && this.hasFill() && this._contains(point))\n\t\t\t\treturn new HitResult('fill', this);\n\t\t},\n\t\n\t\tmatches: function(name, compare) {\n\t\t\tfunction matchObject(obj1, obj2) {\n\t\t\t\tfor (var i in obj1) {\n\t\t\t\t\tif (obj1.hasOwnProperty(i)) {\n\t\t\t\t\t\tvar val1 = obj1[i],\n\t\t\t\t\t\t\tval2 = obj2[i];\n\t\t\t\t\t\tif (Base.isPlainObject(val1) && Base.isPlainObject(val2)) {\n\t\t\t\t\t\t\tif (!matchObject(val1, val2))\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t} else if (!Base.equals(val1, val2)) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tvar type = typeof name;\n\t\t\tif (type === 'object') {\n\t\t\t\tfor (var key in name) {\n\t\t\t\t\tif (name.hasOwnProperty(key) && !this.matches(key, name[key]))\n\t\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else if (type === 'function') {\n\t\t\t\treturn name(this);\n\t\t\t} else {\n\t\t\t\tvar value = /^(empty|editable)$/.test(name)\n\t\t\t\t\t\t? this['is' + Base.capitalize(name)]()\n\t\t\t\t\t\t: name === 'type'\n\t\t\t\t\t\t\t? Base.hyphenate(this._class)\n\t\t\t\t\t\t\t: this[name];\n\t\t\t\tif (/^(constructor|class)$/.test(name)) {\n\t\t\t\t\tif (!(this instanceof compare))\n\t\t\t\t\t\treturn false;\n\t\t\t\t} else if (compare instanceof RegExp) {\n\t\t\t\t\tif (!compare.test(value))\n\t\t\t\t\t\treturn false;\n\t\t\t\t} else if (typeof compare === 'function') {\n\t\t\t\t\tif (!compare(value))\n\t\t\t\t\t\treturn false;\n\t\t\t\t} else if (Base.isPlainObject(compare)) {\n\t\t\t\t\tif (!matchObject(compare, value))\n\t\t\t\t\t\treturn false;\n\t\t\t\t} else if (!Base.equals(value, compare)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\t\n\t\tgetItems: function(match) {\n\t\t\treturn Item._getItems(this._children, match, this._matrix);\n\t\t},\n\t\n\t\tgetItem: function(match) {\n\t\t\treturn Item._getItems(this._children, match, this._matrix, null, true)\n\t\t\t\t\t[0] || null;\n\t\t},\n\t\n\t\tstatics: {\n\t\t\t_getItems: function _getItems(children, match, matrix, param,\n\t\t\t\t\tfirstOnly) {\n\t\t\t\tif (!param && typeof match === 'object') {\n\t\t\t\t\tvar overlapping = match.overlapping,\n\t\t\t\t\t\tinside = match.inside,\n\t\t\t\t\t\tbounds = overlapping || inside,\n\t\t\t\t\t\trect = bounds && Rectangle.read([bounds]);\n\t\t\t\t\tparam = {\n\t\t\t\t\t\titems: [],\n\t\t\t\t\t\tinside: !!inside,\n\t\t\t\t\t\toverlapping: !!overlapping,\n\t\t\t\t\t\trect: rect,\n\t\t\t\t\t\tpath: overlapping && new Path.Rectangle({\n\t\t\t\t\t\t\trectangle: rect,\n\t\t\t\t\t\t\tinsert: false\n\t\t\t\t\t\t})\n\t\t\t\t\t};\n\t\t\t\t\tif (bounds)\n\t\t\t\t\t\tmatch = Base.set({}, match,\n\t\t\t\t\t\t\t\t{ inside: true, overlapping: true });\n\t\t\t\t}\n\t\t\t\tvar items = param && param.items,\n\t\t\t\t\trect = param && param.rect;\n\t\t\t\tmatrix = rect && (matrix || new Matrix());\n\t\t\t\tfor (var i = 0, l = children && children.length; i < l; i++) {\n\t\t\t\t\tvar child = children[i],\n\t\t\t\t\t\tchildMatrix = matrix && matrix.chain(child._matrix),\n\t\t\t\t\t\tadd = true;\n\t\t\t\t\tif (rect) {\n\t\t\t\t\t\tvar bounds = child.getBounds(childMatrix);\n\t\t\t\t\t\tif (!rect.intersects(bounds))\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\tif (!(param.inside && rect.contains(bounds))\n\t\t\t\t\t\t\t\t&& !(param.overlapping && (bounds.contains(rect)\n\t\t\t\t\t\t\t\t\t|| param.path.intersects(child, childMatrix))))\n\t\t\t\t\t\t\tadd = false;\n\t\t\t\t\t}\n\t\t\t\t\tif (add && child.matches(match)) {\n\t\t\t\t\t\titems.push(child);\n\t\t\t\t\t\tif (firstOnly)\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t_getItems(child._children, match,\n\t\t\t\t\t\t\tchildMatrix, param,\n\t\t\t\t\t\t\tfirstOnly);\n\t\t\t\t\tif (firstOnly && items.length > 0)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\treturn items;\n\t\t\t}\n\t\t}\n\t}, {\n\t\n\t\timportJSON: function(json) {\n\t\t\tvar res = Base.importJSON(json, this);\n\t\t\treturn res !== this\n\t\t\t\t\t? this.addChild(res)\n\t\t\t\t\t: res;\n\t\t},\n\t\n\t\taddChild: function(item, _preserve) {\n\t\t\treturn this.insertChild(undefined, item, _preserve);\n\t\t},\n\t\n\t\tinsertChild: function(index, item, _preserve) {\n\t\t\tvar res = item ? this.insertChildren(index, [item], _preserve) : null;\n\t\t\treturn res && res[0];\n\t\t},\n\t\n\t\taddChildren: function(items, _preserve) {\n\t\t\treturn this.insertChildren(this._children.length, items, _preserve);\n\t\t},\n\t\n\t\tinsertChildren: function(index, items, _preserve, _proto) {\n\t\t\tvar children = this._children;\n\t\t\tif (children && items && items.length > 0) {\n\t\t\t\titems = Array.prototype.slice.apply(items);\n\t\t\t\tfor (var i = items.length - 1; i >= 0; i--) {\n\t\t\t\t\tvar item = items[i];\n\t\t\t\t\tif (_proto && !(item instanceof _proto)) {\n\t\t\t\t\t\titems.splice(i, 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar shift = item._parent === this && item._index < index;\n\t\t\t\t\t\tif (item._remove(false, true) && shift)\n\t\t\t\t\t\t\tindex--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tBase.splice(children, items, index, 0);\n\t\t\t\tvar project = this._project,\n\t\t\t\t\tnotifySelf = project && project._changes;\n\t\t\t\tfor (var i = 0, l = items.length; i < l; i++) {\n\t\t\t\t\tvar item = items[i];\n\t\t\t\t\titem._parent = this;\n\t\t\t\t\titem._setProject(this._project, true);\n\t\t\t\t\tif (item._name)\n\t\t\t\t\t\titem.setName(item._name);\n\t\t\t\t\tif (notifySelf)\n\t\t\t\t\t\tthis._changed(5);\n\t\t\t\t}\n\t\t\t\tthis._changed(11);\n\t\t\t} else {\n\t\t\t\titems = null;\n\t\t\t}\n\t\t\treturn items;\n\t\t},\n\t\n\t\t_insertSibling: function(index, item, _preserve) {\n\t\t\treturn this._parent\n\t\t\t\t\t? this._parent.insertChild(index, item, _preserve)\n\t\t\t\t\t: null;\n\t\t},\n\t\n\t\tinsertAbove: function(item, _preserve) {\n\t\t\treturn item._insertSibling(item._index + 1, this, _preserve);\n\t\t},\n\t\n\t\tinsertBelow: function(item, _preserve) {\n\t\t\treturn item._insertSibling(item._index, this, _preserve);\n\t\t},\n\t\n\t\tsendToBack: function() {\n\t\t\treturn (this._parent || this instanceof Layer && this._project)\n\t\t\t\t\t.insertChild(0, this);\n\t\t},\n\t\n\t\tbringToFront: function() {\n\t\t\treturn (this._parent || this instanceof Layer && this._project)\n\t\t\t\t\t.addChild(this);\n\t\t},\n\t\n\t\tappendTop: '#addChild',\n\t\n\t\tappendBottom: function(item) {\n\t\t\treturn this.insertChild(0, item);\n\t\t},\n\t\n\t\tmoveAbove: '#insertAbove',\n\t\n\t\tmoveBelow: '#insertBelow',\n\t\n\t\treduce: function() {\n\t\t\tif (this._children && this._children.length === 1) {\n\t\t\t\tvar child = this._children[0].reduce();\n\t\t\t\tchild.insertAbove(this);\n\t\t\t\tchild.setStyle(this._style);\n\t\t\t\tthis.remove();\n\t\t\t\treturn child;\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\n\t\t_removeNamed: function() {\n\t\t\tvar parent = this._parent;\n\t\t\tif (parent) {\n\t\t\t\tvar children = parent._children,\n\t\t\t\t\tnamedChildren = parent._namedChildren,\n\t\t\t\t\tname = this._name,\n\t\t\t\t\tnamedArray = namedChildren[name],\n\t\t\t\t\tindex = namedArray ? namedArray.indexOf(this) : -1;\n\t\t\t\tif (index !== -1) {\n\t\t\t\t\tif (children[name] == this)\n\t\t\t\t\t\tdelete children[name];\n\t\t\t\t\tnamedArray.splice(index, 1);\n\t\t\t\t\tif (namedArray.length) {\n\t\t\t\t\t\tchildren[name] = namedArray[namedArray.length - 1];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdelete namedChildren[name];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\t_remove: function(notifySelf, notifyParent) {\n\t\t\tvar parent = this._parent;\n\t\t\tif (parent) {\n\t\t\t\tif (this._name)\n\t\t\t\t\tthis._removeNamed();\n\t\t\t\tif (this._index != null)\n\t\t\t\t\tBase.splice(parent._children, null, this._index, 1);\n\t\t\t\tthis._installEvents(false);\n\t\t\t\tif (notifySelf) {\n\t\t\t\t\tvar project = this._project;\n\t\t\t\t\tif (project && project._changes)\n\t\t\t\t\t\tthis._changed(5);\n\t\t\t\t}\n\t\t\t\tif (notifyParent)\n\t\t\t\t\tparent._changed(11);\n\t\t\t\tthis._parent = null;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\n\t\tremove: function() {\n\t\t\treturn this._remove(true, true);\n\t\t},\n\t\n\t\treplaceWith: function(item) {\n\t\t\tvar ok = item && item.insertBelow(this);\n\t\t\tif (ok)\n\t\t\t\tthis.remove();\n\t\t\treturn ok;\n\t\t},\n\t\n\t\tremoveChildren: function(from, to) {\n\t\t\tif (!this._children)\n\t\t\t\treturn null;\n\t\t\tfrom = from || 0;\n\t\t\tto = Base.pick(to, this._children.length);\n\t\t\tvar removed = Base.splice(this._children, null, from, to - from);\n\t\t\tfor (var i = removed.length - 1; i >= 0; i--) {\n\t\t\t\tremoved[i]._remove(true, false);\n\t\t\t}\n\t\t\tif (removed.length > 0)\n\t\t\t\tthis._changed(11);\n\t\t\treturn removed;\n\t\t},\n\t\n\t\tclear: '#removeChildren',\n\t\n\t\treverseChildren: function() {\n\t\t\tif (this._children) {\n\t\t\t\tthis._children.reverse();\n\t\t\t\tfor (var i = 0, l = this._children.length; i < l; i++)\n\t\t\t\t\tthis._children[i]._index = i;\n\t\t\t\tthis._changed(11);\n\t\t\t}\n\t\t},\n\t\n\t\tisEmpty: function() {\n\t\t\treturn !this._children || this._children.length === 0;\n\t\t},\n\t\n\t\tisEditable: function() {\n\t\t\tvar item = this;\n\t\t\twhile (item) {\n\t\t\t\tif (!item._visible || item._locked)\n\t\t\t\t\treturn false;\n\t\t\t\titem = item._parent;\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\t\n\t\thasFill: function() {\n\t\t\treturn this.getStyle().hasFill();\n\t\t},\n\t\n\t\thasStroke: function() {\n\t\t\treturn this.getStyle().hasStroke();\n\t\t},\n\t\n\t\thasShadow: function() {\n\t\t\treturn this.getStyle().hasShadow();\n\t\t},\n\t\n\t\t_getOrder: function(item) {\n\t\t\tfunction getList(item) {\n\t\t\t\tvar list = [];\n\t\t\t\tdo {\n\t\t\t\t\tlist.unshift(item);\n\t\t\t\t} while (item = item._parent);\n\t\t\t\treturn list;\n\t\t\t}\n\t\t\tvar list1 = getList(this),\n\t\t\t\tlist2 = getList(item);\n\t\t\tfor (var i = 0, l = Math.min(list1.length, list2.length); i < l; i++) {\n\t\t\t\tif (list1[i] != list2[i]) {\n\t\t\t\t\treturn list1[i]._index < list2[i]._index ? 1 : -1;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn 0;\n\t\t},\n\t\n\t\thasChildren: function() {\n\t\t\treturn this._children && this._children.length > 0;\n\t\t},\n\t\n\t\tisInserted: function() {\n\t\t\treturn this._parent ? this._parent.isInserted() : false;\n\t\t},\n\t\n\t\tisAbove: function(item) {\n\t\t\treturn this._getOrder(item) === -1;\n\t\t},\n\t\n\t\tisBelow: function(item) {\n\t\t\treturn this._getOrder(item) === 1;\n\t\t},\n\t\n\t\tisParent: function(item) {\n\t\t\treturn this._parent === item;\n\t\t},\n\t\n\t\tisChild: function(item) {\n\t\t\treturn item && item._parent === this;\n\t\t},\n\t\n\t\tisDescendant: function(item) {\n\t\t\tvar parent = this;\n\t\t\twhile (parent = parent._parent) {\n\t\t\t\tif (parent == item)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\n\t\tisAncestor: function(item) {\n\t\t\treturn item ? item.isDescendant(this) : false;\n\t\t},\n\t\n\t\tisSibling: function(item) {\n\t\t\treturn this._parent === item._parent;\n\t\t},\n\t\n\t\tisGroupedWith: function(item) {\n\t\t\tvar parent = this._parent;\n\t\t\twhile (parent) {\n\t\t\t\tif (parent._parent\n\t\t\t\t\t&& /^(Group|Layer|CompoundPath)$/.test(parent._class)\n\t\t\t\t\t&& item.isDescendant(parent))\n\t\t\t\t\t\treturn true;\n\t\t\t\tparent = parent._parent;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\n\t\ttranslate: function() {\n\t\t\tvar mx = new Matrix();\n\t\t\treturn this.transform(mx.translate.apply(mx, arguments));\n\t\t},\n\t\n\t\trotate: function(angle ) {\n\t\t\treturn this.transform(new Matrix().rotate(angle,\n\t\t\t\t\tPoint.read(arguments, 1, { readNull: true })\n\t\t\t\t\t\t|| this.getPosition(true)));\n\t\t}\n\t}, Base.each(['scale', 'shear', 'skew'], function(name) {\n\t\tthis[name] = function() {\n\t\t\tvar point = Point.read(arguments),\n\t\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\t\treturn this.transform(new Matrix()[name](point,\n\t\t\t\t\tcenter || this.getPosition(true)));\n\t\t};\n\t}, {\n\t\n\t}), {\n\t\ttransform: function(matrix, _applyMatrix, _applyRecursively,\n\t\t\t\t_setApplyMatrix) {\n\t\t\tif (matrix && matrix.isIdentity())\n\t\t\t\tmatrix = null;\n\t\t\tvar _matrix = this._matrix,\n\t\t\t\tapplyMatrix = (_applyMatrix || this._applyMatrix)\n\t\t\t\t\t\t&& ((!_matrix.isIdentity() || matrix)\n\t\t\t\t\t\t\t|| _applyMatrix && _applyRecursively && this._children);\n\t\t\tif (!matrix && !applyMatrix)\n\t\t\t\treturn this;\n\t\t\tif (matrix)\n\t\t\t\t_matrix.preConcatenate(matrix);\n\t\t\tif (applyMatrix = applyMatrix && this._transformContent(_matrix,\n\t\t\t\t\t\t_applyRecursively, _setApplyMatrix)) {\n\t\t\t\tvar pivot = this._pivot,\n\t\t\t\t\tstyle = this._style,\n\t\t\t\t\tfillColor = style.getFillColor(true),\n\t\t\t\t\tstrokeColor = style.getStrokeColor(true);\n\t\t\t\tif (pivot)\n\t\t\t\t\t_matrix._transformPoint(pivot, pivot, true);\n\t\t\t\tif (fillColor)\n\t\t\t\t\tfillColor.transform(_matrix);\n\t\t\t\tif (strokeColor)\n\t\t\t\t\tstrokeColor.transform(_matrix);\n\t\t\t\t_matrix.reset(true);\n\t\t\t\tif (_setApplyMatrix && this._canApplyMatrix)\n\t\t\t\t\tthis._applyMatrix = true;\n\t\t\t}\n\t\t\tvar bounds = this._bounds,\n\t\t\t\tposition = this._position;\n\t\t\tthis._changed(9);\n\t\t\tvar decomp = bounds && matrix && matrix.decompose();\n\t\t\tif (decomp && !decomp.shearing && decomp.rotation % 90 === 0) {\n\t\t\t\tfor (var key in bounds) {\n\t\t\t\t\tvar rect = bounds[key];\n\t\t\t\t\tif (applyMatrix || !rect._internal)\n\t\t\t\t\t\tmatrix._transformBounds(rect, rect);\n\t\t\t\t}\n\t\t\t\tvar getter = this._boundsGetter,\n\t\t\t\t\trect = bounds[getter && getter.getBounds || getter || 'getBounds'];\n\t\t\t\tif (rect)\n\t\t\t\t\tthis._position = rect.getCenter(true);\n\t\t\t\tthis._bounds = bounds;\n\t\t\t} else if (matrix && position) {\n\t\t\t\tthis._position = matrix._transformPoint(position, position);\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\n\t\t_transformContent: function(matrix, applyRecursively, setApplyMatrix) {\n\t\t\tvar children = this._children;\n\t\t\tif (children) {\n\t\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\t\tchildren[i].transform(matrix, true, applyRecursively,\n\t\t\t\t\t\t\tsetApplyMatrix);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t},\n\t\n\t\tglobalToLocal: function() {\n\t\t\treturn this.getGlobalMatrix(true)._inverseTransform(\n\t\t\t\t\tPoint.read(arguments));\n\t\t},\n\t\n\t\tlocalToGlobal: function() {\n\t\t\treturn this.getGlobalMatrix(true)._transformPoint(\n\t\t\t\t\tPoint.read(arguments));\n\t\t},\n\t\n\t\tparentToLocal: function() {\n\t\t\treturn this._matrix._inverseTransform(Point.read(arguments));\n\t\t},\n\t\n\t\tlocalToParent: function() {\n\t\t\treturn this._matrix._transformPoint(Point.read(arguments));\n\t\t},\n\t\n\t\tfitBounds: function(rectangle, fill) {\n\t\t\trectangle = Rectangle.read(arguments);\n\t\t\tvar bounds = this.getBounds(),\n\t\t\t\titemRatio = bounds.height / bounds.width,\n\t\t\t\trectRatio = rectangle.height / rectangle.width,\n\t\t\t\tscale = (fill ? itemRatio > rectRatio : itemRatio < rectRatio)\n\t\t\t\t\t\t? rectangle.width / bounds.width\n\t\t\t\t\t\t: rectangle.height / bounds.height,\n\t\t\t\tnewBounds = new Rectangle(new Point(),\n\t\t\t\t\t\tnew Size(bounds.width * scale, bounds.height * scale));\n\t\t\tnewBounds.setCenter(rectangle.getCenter());\n\t\t\tthis.setBounds(newBounds);\n\t\t},\n\t\n\t\t_setStyles: function(ctx) {\n\t\t\tvar style = this._style,\n\t\t\t\tfillColor = style.getFillColor(),\n\t\t\t\tstrokeColor = style.getStrokeColor(),\n\t\t\t\tshadowColor = style.getShadowColor();\n\t\t\tif (fillColor)\n\t\t\t\tctx.fillStyle = fillColor.toCanvasStyle(ctx);\n\t\t\tif (strokeColor) {\n\t\t\t\tvar strokeWidth = style.getStrokeWidth();\n\t\t\t\tif (strokeWidth > 0) {\n\t\t\t\t\tctx.strokeStyle = strokeColor.toCanvasStyle(ctx);\n\t\t\t\t\tctx.lineWidth = strokeWidth;\n\t\t\t\t\tvar strokeJoin = style.getStrokeJoin(),\n\t\t\t\t\t\tstrokeCap = style.getStrokeCap(),\n\t\t\t\t\t\tmiterLimit = style.getMiterLimit();\n\t\t\t\t\tif (strokeJoin)\n\t\t\t\t\t\tctx.lineJoin = strokeJoin;\n\t\t\t\t\tif (strokeCap)\n\t\t\t\t\t\tctx.lineCap = strokeCap;\n\t\t\t\t\tif (miterLimit)\n\t\t\t\t\t\tctx.miterLimit = miterLimit;\n\t\t\t\t\tif (paper.support.nativeDash) {\n\t\t\t\t\t\tvar dashArray = style.getDashArray(),\n\t\t\t\t\t\t\tdashOffset = style.getDashOffset();\n\t\t\t\t\t\tif (dashArray && dashArray.length) {\n\t\t\t\t\t\t\tif ('setLineDash' in ctx) {\n\t\t\t\t\t\t\t\tctx.setLineDash(dashArray);\n\t\t\t\t\t\t\t\tctx.lineDashOffset = dashOffset;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tctx.mozDash = dashArray;\n\t\t\t\t\t\t\t\tctx.mozDashOffset = dashOffset;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (shadowColor) {\n\t\t\t\tvar shadowBlur = style.getShadowBlur();\n\t\t\t\tif (shadowBlur > 0) {\n\t\t\t\t\tctx.shadowColor = shadowColor.toCanvasStyle(ctx);\n\t\t\t\t\tctx.shadowBlur = shadowBlur;\n\t\t\t\t\tvar offset = this.getShadowOffset();\n\t\t\t\t\tctx.shadowOffsetX = offset.x;\n\t\t\t\t\tctx.shadowOffsetY = offset.y;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\tdraw: function(ctx, param, parentStrokeMatrix) {\n\t\t\tvar updateVersion = this._updateVersion = this._project._updateVersion;\n\t\t\tif (!this._visible || this._opacity === 0)\n\t\t\t\treturn;\n\t\t\tvar matrices = param.matrices,\n\t\t\t\tviewMatrix = param.viewMatrix,\n\t\t\t\tmatrix = this._matrix,\n\t\t\t\tglobalMatrix = matrices[matrices.length - 1].chain(matrix);\n\t\t\tif (!globalMatrix.isInvertible())\n\t\t\t\treturn;\n\t\n\t\t\tfunction getViewMatrix(matrix) {\n\t\t\t\treturn viewMatrix ? viewMatrix.chain(matrix) : matrix;\n\t\t\t}\n\t\n\t\t\tmatrices.push(globalMatrix);\n\t\t\tif (param.updateMatrix) {\n\t\t\t\tglobalMatrix._updateVersion = updateVersion;\n\t\t\t\tthis._globalMatrix = globalMatrix;\n\t\t\t}\n\t\n\t\t\tvar blendMode = this._blendMode,\n\t\t\t\topacity = this._opacity,\n\t\t\t\tnormalBlend = blendMode === 'normal',\n\t\t\t\tnativeBlend = BlendMode.nativeModes[blendMode],\n\t\t\t\tdirect = normalBlend && opacity === 1\n\t\t\t\t\t\t|| param.dontStart\n\t\t\t\t\t\t|| param.clip\n\t\t\t\t\t\t|| (nativeBlend || normalBlend && opacity < 1)\n\t\t\t\t\t\t\t&& this._canComposite(),\n\t\t\t\tpixelRatio = param.pixelRatio || 1,\n\t\t\t\tmainCtx, itemOffset, prevOffset;\n\t\t\tif (!direct) {\n\t\t\t\tvar bounds = this.getStrokeBounds(getViewMatrix(globalMatrix));\n\t\t\t\tif (!bounds.width || !bounds.height)\n\t\t\t\t\treturn;\n\t\t\t\tprevOffset = param.offset;\n\t\t\t\titemOffset = param.offset = bounds.getTopLeft().floor();\n\t\t\t\tmainCtx = ctx;\n\t\t\t\tctx = CanvasProvider.getContext(bounds.getSize().ceil().add(1)\n\t\t\t\t\t\t.multiply(pixelRatio));\n\t\t\t\tif (pixelRatio !== 1)\n\t\t\t\t\tctx.scale(pixelRatio, pixelRatio);\n\t\t\t}\n\t\t\tctx.save();\n\t\t\tvar strokeMatrix = parentStrokeMatrix\n\t\t\t\t\t? parentStrokeMatrix.chain(matrix)\n\t\t\t\t\t: !this.getStrokeScaling(true) && getViewMatrix(globalMatrix),\n\t\t\t\tclip = !direct && param.clipItem,\n\t\t\t\ttransform = !strokeMatrix || clip;\n\t\t\tif (direct) {\n\t\t\t\tctx.globalAlpha = opacity;\n\t\t\t\tif (nativeBlend)\n\t\t\t\t\tctx.globalCompositeOperation = blendMode;\n\t\t\t} else if (transform) {\n\t\t\t\tctx.translate(-itemOffset.x, -itemOffset.y);\n\t\t\t}\n\t\t\tif (transform)\n\t\t\t\t(direct ? matrix : getViewMatrix(globalMatrix)).applyToContext(ctx);\n\t\t\tif (clip)\n\t\t\t\tparam.clipItem.draw(ctx, param.extend({ clip: true }));\n\t\t\tif (strokeMatrix) {\n\t\t\t\tctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n\t\t\t\tvar offset = param.offset;\n\t\t\t\tif (offset)\n\t\t\t\t\tctx.translate(-offset.x, -offset.y);\n\t\t\t}\n\t\t\tthis._draw(ctx, param, strokeMatrix);\n\t\t\tctx.restore();\n\t\t\tmatrices.pop();\n\t\t\tif (param.clip && !param.dontFinish)\n\t\t\t\tctx.clip();\n\t\t\tif (!direct) {\n\t\t\t\tBlendMode.process(blendMode, ctx, mainCtx, opacity,\n\t\t\t\t\t\titemOffset.subtract(prevOffset).multiply(pixelRatio));\n\t\t\t\tCanvasProvider.release(ctx);\n\t\t\t\tparam.offset = prevOffset;\n\t\t\t}\n\t\t},\n\t\n\t\t_isUpdated: function(updateVersion) {\n\t\t\tvar parent = this._parent;\n\t\t\tif (parent instanceof CompoundPath)\n\t\t\t\treturn parent._isUpdated(updateVersion);\n\t\t\tvar updated = this._updateVersion === updateVersion;\n\t\t\tif (!updated && parent && parent._visible\n\t\t\t\t\t&& parent._isUpdated(updateVersion)) {\n\t\t\t\tthis._updateVersion = updateVersion;\n\t\t\t\tupdated = true;\n\t\t\t}\n\t\t\treturn updated;\n\t\t},\n\t\n\t\t_drawSelection: function(ctx, matrix, size, selectedItems, updateVersion) {\n\t\t\tif ((this._drawSelected || this._boundsSelected)\n\t\t\t\t\t&& this._isUpdated(updateVersion)) {\n\t\t\t\tvar color = this.getSelectedColor(true)\n\t\t\t\t\t\t|| this.getLayer().getSelectedColor(true),\n\t\t\t\t\tmx = matrix.chain(this.getGlobalMatrix(true));\n\t\t\t\tctx.strokeStyle = ctx.fillStyle = color\n\t\t\t\t\t\t? color.toCanvasStyle(ctx) : '#009dec';\n\t\t\t\tif (this._drawSelected)\n\t\t\t\t\tthis._drawSelected(ctx, mx, selectedItems);\n\t\t\t\tif (this._boundsSelected) {\n\t\t\t\t\tvar half = size / 2,\n\t\t\t\t\t\tcoords = mx._transformCorners(this.getInternalBounds());\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tfor (var i = 0; i < 8; i++)\n\t\t\t\t\t\tctx[i === 0 ? 'moveTo' : 'lineTo'](coords[i], coords[++i]);\n\t\t\t\t\tctx.closePath();\n\t\t\t\t\tctx.stroke();\n\t\t\t\t\tfor (var i = 0; i < 8; i++)\n\t\t\t\t\t\tctx.fillRect(coords[i] - half, coords[++i] - half,\n\t\t\t\t\t\t\t\tsize, size);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\t_canComposite: function() {\n\t\t\treturn false;\n\t\t}\n\t}, Base.each(['down', 'drag', 'up', 'move'], function(name) {\n\t\tthis['removeOn' + Base.capitalize(name)] = function() {\n\t\t\tvar hash = {};\n\t\t\thash[name] = true;\n\t\t\treturn this.removeOn(hash);\n\t\t};\n\t}, {\n\t\n\t\tremoveOn: function(obj) {\n\t\t\tfor (var name in obj) {\n\t\t\t\tif (obj[name]) {\n\t\t\t\t\tvar key = 'mouse' + name,\n\t\t\t\t\t\tproject = this._project,\n\t\t\t\t\t\tsets = project._removeSets = project._removeSets || {};\n\t\t\t\t\tsets[key] = sets[key] || {};\n\t\t\t\t\tsets[key][this._id] = this;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t}));\n\t\n\tvar Group = Item.extend({\n\t\t_class: 'Group',\n\t\t_selectChildren: true,\n\t\t_serializeFields: {\n\t\t\tchildren: []\n\t\t},\n\t\n\t\tinitialize: function Group(arg) {\n\t\t\tthis._children = [];\n\t\t\tthis._namedChildren = {};\n\t\t\tif (!this._initialize(arg))\n\t\t\t\tthis.addChildren(Array.isArray(arg) ? arg : arguments);\n\t\t},\n\t\n\t\t_changed: function _changed(flags) {\n\t\t\t_changed.base.call(this, flags);\n\t\t\tif (flags & 1026) {\n\t\t\t\tthis._clipItem = undefined;\n\t\t\t}\n\t\t},\n\t\n\t\t_getClipItem: function() {\n\t\t\tvar clipItem = this._clipItem;\n\t\t\tif (clipItem === undefined) {\n\t\t\t\tclipItem = null;\n\t\t\t\tfor (var i = 0, l = this._children.length; i < l; i++) {\n\t\t\t\t\tvar child = this._children[i];\n\t\t\t\t\tif (child._clipMask) {\n\t\t\t\t\t\tclipItem = child;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._clipItem = clipItem;\n\t\t\t}\n\t\t\treturn clipItem;\n\t\t},\n\t\n\t\tisClipped: function() {\n\t\t\treturn !!this._getClipItem();\n\t\t},\n\t\n\t\tsetClipped: function(clipped) {\n\t\t\tvar child = this.getFirstChild();\n\t\t\tif (child)\n\t\t\t\tchild.setClipMask(clipped);\n\t\t},\n\t\n\t\t_draw: function(ctx, param) {\n\t\t\tvar clip = param.clip,\n\t\t\t\tclipItem = !clip && this._getClipItem(),\n\t\t\t\tdraw = true;\n\t\t\tparam = param.extend({ clipItem: clipItem, clip: false });\n\t\t\tif (clip) {\n\t\t\t\tif (this._currentPath) {\n\t\t\t\t\tctx.currentPath = this._currentPath;\n\t\t\t\t\tdraw = false;\n\t\t\t\t} else {\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tparam.dontStart = param.dontFinish = true;\n\t\t\t\t}\n\t\t\t} else if (clipItem) {\n\t\t\t\tclipItem.draw(ctx, param.extend({ clip: true }));\n\t\t\t}\n\t\t\tif (draw) {\n\t\t\t\tfor (var i = 0, l = this._children.length; i < l; i++) {\n\t\t\t\t\tvar item = this._children[i];\n\t\t\t\t\tif (item !== clipItem)\n\t\t\t\t\t\titem.draw(ctx, param);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (clip) {\n\t\t\t\tthis._currentPath = ctx.currentPath;\n\t\t\t}\n\t\t}\n\t});\n\t\n\tvar Layer = Group.extend({\n\t\t_class: 'Layer',\n\t\n\t\tinitialize: function Layer(arg) {\n\t\t\tvar props = Base.isPlainObject(arg)\n\t\t\t\t\t? new Base(arg)\n\t\t\t\t\t: { children: Array.isArray(arg) ? arg : arguments },\n\t\t\t\tinsert = props.insert;\n\t\t\tprops.insert = false;\n\t\t\tGroup.call(this, props);\n\t\t\tif (insert || insert === undefined) {\n\t\t\t\tthis._project.addChild(this);\n\t\t\t\tthis.activate();\n\t\t\t}\n\t\t},\n\t\n\t\t_remove: function _remove(notifySelf, notifyParent) {\n\t\t\tif (this._parent)\n\t\t\t\treturn _remove.base.call(this, notifySelf, notifyParent);\n\t\t\tif (this._index != null) {\n\t\t\t\tvar project = this._project;\n\t\t\t\tif (project._activeLayer === this)\n\t\t\t\t\tproject._activeLayer = this.getNextSibling()\n\t\t\t\t\t\t\t|| this.getPreviousSibling();\n\t\t\t\tBase.splice(project.layers, null, this._index, 1);\n\t\t\t\tthis._installEvents(false);\n\t\t\t\tif (notifySelf && project._changes)\n\t\t\t\t\tthis._changed(5);\n\t\t\t\tif (notifyParent) {\n\t\t\t\t\tproject._needsUpdate = true;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\n\t\tgetNextSibling: function getNextSibling() {\n\t\t\treturn this._parent ? getNextSibling.base.call(this)\n\t\t\t\t\t: this._project.layers[this._index + 1] || null;\n\t\t},\n\t\n\t\tgetPreviousSibling: function getPreviousSibling() {\n\t\t\treturn this._parent ? getPreviousSibling.base.call(this)\n\t\t\t\t\t: this._project.layers[this._index - 1] || null;\n\t\t},\n\t\n\t\tisInserted: function isInserted() {\n\t\t\treturn this._parent ? isInserted.base.call(this) : this._index != null;\n\t\t},\n\t\n\t\tactivate: function() {\n\t\t\tthis._project._activeLayer = this;\n\t\t},\n\t\n\t\t_insertSibling: function _insertSibling(index, item, _preserve) {\n\t\t\treturn !this._parent\n\t\t\t\t\t? this._project.insertChild(index, item, _preserve)\n\t\t\t\t\t: _insertSibling.base.call(this, index, item, _preserve);\n\t\t}\n\t});\n\t\n\tvar Shape = Item.extend({\n\t\t_class: 'Shape',\n\t\t_applyMatrix: false,\n\t\t_canApplyMatrix: false,\n\t\t_boundsSelected: true,\n\t\t_serializeFields: {\n\t\t\ttype: null,\n\t\t\tsize: null,\n\t\t\tradius: null\n\t\t},\n\t\n\t\tinitialize: function Shape(props) {\n\t\t\tthis._initialize(props);\n\t\t},\n\t\n\t\t_equals: function(item) {\n\t\t\treturn this._type === item._type\n\t\t\t\t&& this._size.equals(item._size)\n\t\t\t\t&& Base.equals(this._radius, item._radius);\n\t\t},\n\t\n\t\tclone: function(insert) {\n\t\t\tvar copy = new Shape(Item.NO_INSERT);\n\t\t\tcopy.setType(this._type);\n\t\t\tcopy.setSize(this._size);\n\t\t\tcopy.setRadius(this._radius);\n\t\t\treturn this._clone(copy, insert);\n\t\t},\n\t\n\t\tgetType: function() {\n\t\t\treturn this._type;\n\t\t},\n\t\n\t\tsetType: function(type) {\n\t\t\tthis._type = type;\n\t\t},\n\t\n\t\tgetShape: '#getType',\n\t\tsetShape: '#setType',\n\t\n\t\tgetSize: function() {\n\t\t\tvar size = this._size;\n\t\t\treturn new LinkedSize(size.width, size.height, this, 'setSize');\n\t\t},\n\t\n\t\tsetSize: function() {\n\t\t\tvar size = Size.read(arguments);\n\t\t\tif (!this._size) {\n\t\t\t\tthis._size = size.clone();\n\t\t\t} else if (!this._size.equals(size)) {\n\t\t\t\tvar type = this._type,\n\t\t\t\t\twidth = size.width,\n\t\t\t\t\theight = size.height;\n\t\t\t\tif (type === 'rectangle') {\n\t\t\t\t\tvar radius = Size.min(this._radius, size.divide(2));\n\t\t\t\t\tthis._radius.set(radius.width, radius.height);\n\t\t\t\t} else if (type === 'circle') {\n\t\t\t\t\twidth = height = (width + height) / 2;\n\t\t\t\t\tthis._radius = width / 2;\n\t\t\t\t} else if (type === 'ellipse') {\n\t\t\t\t\tthis._radius.set(width / 2, height / 2);\n\t\t\t\t}\n\t\t\t\tthis._size.set(width, height);\n\t\t\t\tthis._changed(9);\n\t\t\t}\n\t\t},\n\t\n\t\tgetRadius: function() {\n\t\t\tvar rad = this._radius;\n\t\t\treturn this._type === 'circle'\n\t\t\t\t\t? rad\n\t\t\t\t\t: new LinkedSize(rad.width, rad.height, this, 'setRadius');\n\t\t},\n\t\n\t\tsetRadius: function(radius) {\n\t\t\tvar type = this._type;\n\t\t\tif (type === 'circle') {\n\t\t\t\tif (radius === this._radius)\n\t\t\t\t\treturn;\n\t\t\t\tvar size = radius * 2;\n\t\t\t\tthis._radius = radius;\n\t\t\t\tthis._size.set(size, size);\n\t\t\t} else {\n\t\t\t\tradius = Size.read(arguments);\n\t\t\t\tif (!this._radius) {\n\t\t\t\t\tthis._radius = radius.clone();\n\t\t\t\t} else {\n\t\t\t\t\tif (this._radius.equals(radius))\n\t\t\t\t\t\treturn;\n\t\t\t\t\tthis._radius.set(radius.width, radius.height);\n\t\t\t\t\tif (type === 'rectangle') {\n\t\t\t\t\t\tvar size = Size.max(this._size, radius.multiply(2));\n\t\t\t\t\t\tthis._size.set(size.width, size.height);\n\t\t\t\t\t} else if (type === 'ellipse') {\n\t\t\t\t\t\tthis._size.set(radius.width * 2, radius.height * 2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._changed(9);\n\t\t},\n\t\n\t\tisEmpty: function() {\n\t\t\treturn false;\n\t\t},\n\t\n\t\ttoPath: function(insert) {\n\t\t\tvar path = this._clone(new Path[Base.capitalize(this._type)]({\n\t\t\t\tcenter: new Point(),\n\t\t\t\tsize: this._size,\n\t\t\t\tradius: this._radius,\n\t\t\t\tinsert: false\n\t\t\t}), insert);\n\t\t\tif (paper.settings.applyMatrix)\n\t\t\t\tpath.setApplyMatrix(true);\n\t\t\treturn path;\n\t\t},\n\t\n\t\t_draw: function(ctx, param, strokeMatrix) {\n\t\t\tvar style = this._style,\n\t\t\t\thasFill = style.hasFill(),\n\t\t\t\thasStroke = style.hasStroke(),\n\t\t\t\tdontPaint = param.dontFinish || param.clip,\n\t\t\t\tuntransformed = !strokeMatrix;\n\t\t\tif (hasFill || hasStroke || dontPaint) {\n\t\t\t\tvar type = this._type,\n\t\t\t\t\tradius = this._radius,\n\t\t\t\t\tisCircle = type === 'circle';\n\t\t\t\tif (!param.dontStart)\n\t\t\t\t\tctx.beginPath();\n\t\t\t\tif (untransformed && isCircle) {\n\t\t\t\t\tctx.arc(0, 0, radius, 0, Math.PI * 2, true);\n\t\t\t\t} else {\n\t\t\t\t\tvar rx = isCircle ? radius : radius.width,\n\t\t\t\t\t\try = isCircle ? radius : radius.height,\n\t\t\t\t\t\tsize = this._size,\n\t\t\t\t\t\twidth = size.width,\n\t\t\t\t\t\theight = size.height;\n\t\t\t\t\tif (untransformed && type === 'rectangle' && rx === 0 && ry === 0) {\n\t\t\t\t\t\tctx.rect(-width / 2, -height / 2, width, height);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar x = width / 2,\n\t\t\t\t\t\t\ty = height / 2,\n\t\t\t\t\t\t\tkappa = 1 - 0.5522847498307936,\n\t\t\t\t\t\t\tcx = rx * kappa,\n\t\t\t\t\t\t\tcy = ry * kappa,\n\t\t\t\t\t\t\tc = [\n\t\t\t\t\t\t\t\t-x, -y + ry,\n\t\t\t\t\t\t\t\t-x, -y + cy,\n\t\t\t\t\t\t\t\t-x + cx, -y,\n\t\t\t\t\t\t\t\t-x + rx, -y,\n\t\t\t\t\t\t\t\tx - rx, -y,\n\t\t\t\t\t\t\t\tx - cx, -y,\n\t\t\t\t\t\t\t\tx, -y + cy,\n\t\t\t\t\t\t\t\tx, -y + ry,\n\t\t\t\t\t\t\t\tx, y - ry,\n\t\t\t\t\t\t\t\tx, y - cy,\n\t\t\t\t\t\t\t\tx - cx, y,\n\t\t\t\t\t\t\t\tx - rx, y,\n\t\t\t\t\t\t\t\t-x + rx, y,\n\t\t\t\t\t\t\t\t-x + cx, y,\n\t\t\t\t\t\t\t\t-x, y - cy,\n\t\t\t\t\t\t\t\t-x, y - ry\n\t\t\t\t\t\t\t];\n\t\t\t\t\t\tif (strokeMatrix)\n\t\t\t\t\t\t\tstrokeMatrix.transform(c, c, 32);\n\t\t\t\t\t\tctx.moveTo(c[0], c[1]);\n\t\t\t\t\t\tctx.bezierCurveTo(c[2], c[3], c[4], c[5], c[6], c[7]);\n\t\t\t\t\t\tif (x !== rx)\n\t\t\t\t\t\t\tctx.lineTo(c[8], c[9]);\n\t\t\t\t\t\tctx.bezierCurveTo(c[10], c[11], c[12], c[13], c[14], c[15]);\n\t\t\t\t\t\tif (y !== ry)\n\t\t\t\t\t\t\tctx.lineTo(c[16], c[17]);\n\t\t\t\t\t\tctx.bezierCurveTo(c[18], c[19], c[20], c[21], c[22], c[23]);\n\t\t\t\t\t\tif (x !== rx)\n\t\t\t\t\t\t\tctx.lineTo(c[24], c[25]);\n\t\t\t\t\t\tctx.bezierCurveTo(c[26], c[27], c[28], c[29], c[30], c[31]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tctx.closePath();\n\t\t\t}\n\t\t\tif (!dontPaint && (hasFill || hasStroke)) {\n\t\t\t\tthis._setStyles(ctx);\n\t\t\t\tif (hasFill) {\n\t\t\t\t\tctx.fill(style.getWindingRule());\n\t\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\t\t\t\tif (hasStroke)\n\t\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t},\n\t\n\t\t_canComposite: function() {\n\t\t\treturn !(this.hasFill() && this.hasStroke());\n\t\t},\n\t\n\t\t_getBounds: function(getter, matrix) {\n\t\t\tvar rect = new Rectangle(this._size).setCenter(0, 0);\n\t\t\tif (getter !== 'getBounds' && this.hasStroke())\n\t\t\t\trect = rect.expand(this.getStrokeWidth());\n\t\t\treturn matrix ? matrix._transformBounds(rect) : rect;\n\t\t}\n\t},\n\tnew function() {\n\t\tfunction getCornerCenter(that, point, expand) {\n\t\t\tvar radius = that._radius;\n\t\t\tif (!radius.isZero()) {\n\t\t\t\tvar halfSize = that._size.divide(2);\n\t\t\t\tfor (var i = 0; i < 4; i++) {\n\t\t\t\t\tvar dir = new Point(i & 1 ? 1 : -1, i > 1 ? 1 : -1),\n\t\t\t\t\t\tcorner = dir.multiply(halfSize),\n\t\t\t\t\t\tcenter = corner.subtract(dir.multiply(radius)),\n\t\t\t\t\t\trect = new Rectangle(corner, center);\n\t\t\t\t\tif ((expand ? rect.expand(expand) : rect).contains(point))\n\t\t\t\t\t\treturn center;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\tfunction getEllipseRadius(point, radius) {\n\t\t\tvar angle = point.getAngleInRadians(),\n\t\t\t\twidth = radius.width * 2,\n\t\t\t\theight = radius.height * 2,\n\t\t\t\tx = width * Math.sin(angle),\n\t\t\t\ty = height * Math.cos(angle);\n\t\t\treturn width * height / (2 * Math.sqrt(x * x + y * y));\n\t\t}\n\t\n\t\treturn {\n\t\t\t_contains: function _contains(point) {\n\t\t\t\tif (this._type === 'rectangle') {\n\t\t\t\t\tvar center = getCornerCenter(this, point);\n\t\t\t\t\treturn center\n\t\t\t\t\t\t\t? point.subtract(center).divide(this._radius)\n\t\t\t\t\t\t\t\t.getLength() <= 1\n\t\t\t\t\t\t\t: _contains.base.call(this, point);\n\t\t\t\t} else {\n\t\t\t\t\treturn point.divide(this.size).getLength() <= 0.5;\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\t_hitTestSelf: function _hitTestSelf(point, options) {\n\t\t\t\tvar hit = false;\n\t\t\t\tif (this.hasStroke()) {\n\t\t\t\t\tvar type = this._type,\n\t\t\t\t\t\tradius = this._radius,\n\t\t\t\t\t\tstrokeWidth = this.getStrokeWidth() + 2 * options.tolerance;\n\t\t\t\t\tif (type === 'rectangle') {\n\t\t\t\t\t\tvar center = getCornerCenter(this, point, strokeWidth);\n\t\t\t\t\t\tif (center) {\n\t\t\t\t\t\t\tvar pt = point.subtract(center);\n\t\t\t\t\t\t\thit = 2 * Math.abs(pt.getLength()\n\t\t\t\t\t\t\t\t\t- getEllipseRadius(pt, radius)) <= strokeWidth;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar rect = new Rectangle(this._size).setCenter(0, 0),\n\t\t\t\t\t\t\t\touter = rect.expand(strokeWidth),\n\t\t\t\t\t\t\t\tinner = rect.expand(-strokeWidth);\n\t\t\t\t\t\t\thit = outer._containsPoint(point)\n\t\t\t\t\t\t\t\t\t&& !inner._containsPoint(point);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (type === 'ellipse')\n\t\t\t\t\t\t\tradius = getEllipseRadius(point, radius);\n\t\t\t\t\t\thit = 2 * Math.abs(point.getLength() - radius)\n\t\t\t\t\t\t\t\t<= strokeWidth;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn hit\n\t\t\t\t\t\t? new HitResult('stroke', this)\n\t\t\t\t\t\t: _hitTestSelf.base.apply(this, arguments);\n\t\t\t}\n\t\t};\n\t}, {\n\t\n\tstatics: new function() {\n\t\tfunction createShape(type, point, size, radius, args) {\n\t\t\tvar item = new Shape(Base.getNamed(args));\n\t\t\titem._type = type;\n\t\t\titem._size = size;\n\t\t\titem._radius = radius;\n\t\t\treturn item.translate(point);\n\t\t}\n\t\n\t\treturn {\n\t\t\tCircle: function() {\n\t\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\t\tradius = Base.readNamed(arguments, 'radius');\n\t\t\t\treturn createShape('circle', center, new Size(radius * 2), radius,\n\t\t\t\t\t\targuments);\n\t\t\t},\n\t\n\t\t\tRectangle: function() {\n\t\t\t\tvar rect = Rectangle.readNamed(arguments, 'rectangle'),\n\t\t\t\t\tradius = Size.min(Size.readNamed(arguments, 'radius'),\n\t\t\t\t\t\t\trect.getSize(true).divide(2));\n\t\t\t\treturn createShape('rectangle', rect.getCenter(true),\n\t\t\t\t\t\trect.getSize(true), radius, arguments);\n\t\t\t},\n\t\n\t\t\tEllipse: function() {\n\t\t\t\tvar ellipse = Shape._readEllipse(arguments),\n\t\t\t\t\tradius = ellipse.radius;\n\t\t\t\treturn createShape('ellipse', ellipse.center, radius.multiply(2),\n\t\t\t\t\t\tradius, arguments);\n\t\t\t},\n\t\n\t\t\t_readEllipse: function(args) {\n\t\t\t\tvar center,\n\t\t\t\t\tradius;\n\t\t\t\tif (Base.hasNamed(args, 'radius')) {\n\t\t\t\t\tcenter = Point.readNamed(args, 'center');\n\t\t\t\t\tradius = Size.readNamed(args, 'radius');\n\t\t\t\t} else {\n\t\t\t\t\tvar rect = Rectangle.readNamed(args, 'rectangle');\n\t\t\t\t\tcenter = rect.getCenter(true);\n\t\t\t\t\tradius = rect.getSize(true).divide(2);\n\t\t\t\t}\n\t\t\t\treturn { center: center, radius: radius };\n\t\t\t}\n\t\t};\n\t}});\n\t\n\tvar Raster = Item.extend({\n\t\t_class: 'Raster',\n\t\t_applyMatrix: false,\n\t\t_canApplyMatrix: false,\n\t\t_boundsGetter: 'getBounds',\n\t\t_boundsSelected: true,\n\t\t_serializeFields: {\n\t\t\tcrossOrigin: null,\n\t\t\tsource: null\n\t\t},\n\t\n\t\tinitialize: function Raster(object, position) {\n\t\t\tif (!this._initialize(object,\n\t\t\t\t\tposition !== undefined && Point.read(arguments, 1))) {\n\t\t\t\tif (typeof object === 'string') {\n\t\t\t\t\tthis.setSource(object);\n\t\t\t\t} else {\n\t\t\t\t\tthis.setImage(object);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!this._size) {\n\t\t\t\tthis._size = new Size();\n\t\t\t\tthis._loaded = false;\n\t\t\t}\n\t\t},\n\t\n\t\t_equals: function(item) {\n\t\t\treturn this.getSource() === item.getSource();\n\t\t},\n\t\n\t\tclone: function(insert) {\n\t\t\tvar copy = new Raster(Item.NO_INSERT),\n\t\t\t\timage = this._image,\n\t\t\t\tcanvas = this._canvas;\n\t\t\tif (image) {\n\t\t\t\tcopy.setImage(image);\n\t\t\t} else if (canvas) {\n\t\t\t\tvar copyCanvas = CanvasProvider.getCanvas(this._size);\n\t\t\t\tcopyCanvas.getContext('2d').drawImage(canvas, 0, 0);\n\t\t\t\tcopy.setImage(copyCanvas);\n\t\t\t}\n\t\t\tcopy._crossOrigin = this._crossOrigin;\n\t\t\treturn this._clone(copy, insert);\n\t\t},\n\t\n\t\tgetSize: function() {\n\t\t\tvar size = this._size;\n\t\t\treturn new LinkedSize(size ? size.width : 0, size ? size.height : 0,\n\t\t\t\t\tthis, 'setSize');\n\t\t},\n\t\n\t\tsetSize: function() {\n\t\t\tvar size = Size.read(arguments);\n\t\t\tif (!size.equals(this._size)) {\n\t\t\t\tif (size.width > 0 && size.height > 0) {\n\t\t\t\t\tvar element = this.getElement();\n\t\t\t\t\tthis.setImage(CanvasProvider.getCanvas(size));\n\t\t\t\t\tif (element)\n\t\t\t\t\t\tthis.getContext(true).drawImage(element, 0, 0,\n\t\t\t\t\t\t\t\tsize.width, size.height);\n\t\t\t\t} else {\n\t\t\t\t\tif (this._canvas)\n\t\t\t\t\t\tCanvasProvider.release(this._canvas);\n\t\t\t\t\tthis._size = size.clone();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\tgetWidth: function() {\n\t\t\treturn this._size ? this._size.width : 0;\n\t\t},\n\t\n\t\tsetWidth: function(width) {\n\t\t\tthis.setSize(width, this.getHeight());\n\t\t},\n\t\n\t\tgetHeight: function() {\n\t\t\treturn this._size ? this._size.height : 0;\n\t\t},\n\t\n\t\tsetHeight: function(height) {\n\t\t\tthis.setSize(this.getWidth(), height);\n\t\t},\n\t\n\t\tisEmpty: function() {\n\t\t\tvar size = this._size;\n\t\t\treturn !size || size.width === 0 && size.height === 0;\n\t\t},\n\t\n\t\tgetResolution: function() {\n\t\t\tvar matrix = this._matrix,\n\t\t\t\torig = new Point(0, 0).transform(matrix),\n\t\t\t\tu = new Point(1, 0).transform(matrix).subtract(orig),\n\t\t\t\tv = new Point(0, 1).transform(matrix).subtract(orig);\n\t\t\treturn new Size(\n\t\t\t\t72 / u.getLength(),\n\t\t\t\t72 / v.getLength()\n\t\t\t);\n\t\t},\n\t\n\t\tgetPpi: '#getResolution',\n\t\n\t\tgetImage: function() {\n\t\t\treturn this._image;\n\t\t},\n\t\n\t\tsetImage: function(image) {\n\t\t\tif (this._canvas)\n\t\t\t\tCanvasProvider.release(this._canvas);\n\t\t\tif (image && image.getContext) {\n\t\t\t\tthis._image = null;\n\t\t\t\tthis._canvas = image;\n\t\t\t\tthis._loaded = true;\n\t\t\t} else {\n\t\t\t\tthis._image = image;\n\t\t\t\tthis._canvas = null;\n\t\t\t\tthis._loaded = image && image.complete;\n\t\t\t}\n\t\t\tthis._size = new Size(\n\t\t\t\t\timage ? image.naturalWidth || image.width : 0,\n\t\t\t\t\timage ? image.naturalHeight || image.height : 0);\n\t\t\tthis._context = null;\n\t\t\tthis._changed(521);\n\t\t},\n\t\n\t\tgetCanvas: function() {\n\t\t\tif (!this._canvas) {\n\t\t\t\tvar ctx = CanvasProvider.getContext(this._size);\n\t\t\t\ttry {\n\t\t\t\t\tif (this._image)\n\t\t\t\t\t\tctx.drawImage(this._image, 0, 0);\n\t\t\t\t\tthis._canvas = ctx.canvas;\n\t\t\t\t} catch (e) {\n\t\t\t\t\tCanvasProvider.release(ctx);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this._canvas;\n\t\t},\n\t\n\t\tsetCanvas: '#setImage',\n\t\n\t\tgetContext: function(modify) {\n\t\t\tif (!this._context)\n\t\t\t\tthis._context = this.getCanvas().getContext('2d');\n\t\t\tif (modify) {\n\t\t\t\tthis._image = null;\n\t\t\t\tthis._changed(513);\n\t\t\t}\n\t\t\treturn this._context;\n\t\t},\n\t\n\t\tsetContext: function(context) {\n\t\t\tthis._context = context;\n\t\t},\n\t\n\t\tgetSource: function() {\n\t\t\treturn this._image && this._image.src || this.toDataURL();\n\t\t},\n\t\n\t\tsetSource: function(src) {\n\t\t\tvar that = this,\n\t\t\t\tcrossOrigin = this._crossOrigin,\n\t\t\t\timage;\n\t\n\t\t\tfunction loaded() {\n\t\t\t\tvar view = that.getView();\n\t\t\t\tif (view) {\n\t\t\t\t\tpaper = view._scope;\n\t\t\t\t\tthat.setImage(image);\n\t\t\t\t\tthat.emit('load');\n\t\t\t\t\tview.update();\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\timage = document.getElementById(src) || new Image();\n\t\t\tif (crossOrigin)\n\t\t\t\timage.crossOrigin = crossOrigin;\n\t\t\tif (image.naturalWidth && image.naturalHeight) {\n\t\t\t\tsetTimeout(loaded, 0);\n\t\t\t} else {\n\t\t\t\tDomEvent.add(image, { load: loaded });\n\t\t\t\tif (!image.src)\n\t\t\t\t\timage.src = src;\n\t\t\t}\n\t\t\tthis.setImage(image);\n\t\t},\n\t\n\t\tgetCrossOrigin: function() {\n\t\t\treturn this._image && this._image.crossOrigin || this._crossOrigin || '';\n\t\t},\n\t\n\t\tsetCrossOrigin: function(crossOrigin) {\n\t\t\tthis._crossOrigin = crossOrigin;\n\t\t\tif (this._image)\n\t\t\t\tthis._image.crossOrigin = crossOrigin;\n\t\t},\n\t\n\t\tgetElement: function() {\n\t\t\treturn this._canvas || this._loaded && this._image;\n\t\t}\n\t}, {\n\t\tbeans: false,\n\t\n\t\tgetSubCanvas: function() {\n\t\t\tvar rect = Rectangle.read(arguments),\n\t\t\t\tctx = CanvasProvider.getContext(rect.getSize());\n\t\t\tctx.drawImage(this.getCanvas(), rect.x, rect.y,\n\t\t\t\t\trect.width, rect.height, 0, 0, rect.width, rect.height);\n\t\t\treturn ctx.canvas;\n\t\t},\n\t\n\t\tgetSubRaster: function() {\n\t\t\tvar rect = Rectangle.read(arguments),\n\t\t\t\traster = new Raster(Item.NO_INSERT);\n\t\t\traster.setImage(this.getSubCanvas(rect));\n\t\t\traster.translate(rect.getCenter().subtract(this.getSize().divide(2)));\n\t\t\traster._matrix.preConcatenate(this._matrix);\n\t\t\traster.insertAbove(this);\n\t\t\treturn raster;\n\t\t},\n\t\n\t\ttoDataURL: function() {\n\t\t\tvar src = this._image && this._image.src;\n\t\t\tif (/^data:/.test(src))\n\t\t\t\treturn src;\n\t\t\tvar canvas = this.getCanvas();\n\t\t\treturn canvas ? canvas.toDataURL.apply(canvas, arguments) : null;\n\t\t},\n\t\n\t\tdrawImage: function(image ) {\n\t\t\tvar point = Point.read(arguments, 1);\n\t\t\tthis.getContext(true).drawImage(image, point.x, point.y);\n\t\t},\n\t\n\t\tgetAverageColor: function(object) {\n\t\t\tvar bounds, path;\n\t\t\tif (!object) {\n\t\t\t\tbounds = this.getBounds();\n\t\t\t} else if (object instanceof PathItem) {\n\t\t\t\tpath = object;\n\t\t\t\tbounds = object.getBounds();\n\t\t\t} else if (object.width) {\n\t\t\t\tbounds = new Rectangle(object);\n\t\t\t} else if (object.x) {\n\t\t\t\tbounds = new Rectangle(object.x - 0.5, object.y - 0.5, 1, 1);\n\t\t\t}\n\t\t\tvar sampleSize = 32,\n\t\t\t\twidth = Math.min(bounds.width, sampleSize),\n\t\t\t\theight = Math.min(bounds.height, sampleSize);\n\t\t\tvar ctx = Raster._sampleContext;\n\t\t\tif (!ctx) {\n\t\t\t\tctx = Raster._sampleContext = CanvasProvider.getContext(\n\t\t\t\t\t\tnew Size(sampleSize));\n\t\t\t} else {\n\t\t\t\tctx.clearRect(0, 0, sampleSize + 1, sampleSize + 1);\n\t\t\t}\n\t\t\tctx.save();\n\t\t\tvar matrix = new Matrix()\n\t\t\t\t\t.scale(width / bounds.width, height / bounds.height)\n\t\t\t\t\t.translate(-bounds.x, -bounds.y);\n\t\t\tmatrix.applyToContext(ctx);\n\t\t\tif (path)\n\t\t\t\tpath.draw(ctx, new Base({ clip: true, matrices: [matrix] }));\n\t\t\tthis._matrix.applyToContext(ctx);\n\t\t\tvar element = this.getElement(),\n\t\t\t\tsize = this._size;\n\t\t\tif (element)\n\t\t\t\tctx.drawImage(element, -size.width / 2, -size.height / 2);\n\t\t\tctx.restore();\n\t\t\tvar pixels = ctx.getImageData(0.5, 0.5, Math.ceil(width),\n\t\t\t\t\tMath.ceil(height)).data,\n\t\t\t\tchannels = [0, 0, 0],\n\t\t\t\ttotal = 0;\n\t\t\tfor (var i = 0, l = pixels.length; i < l; i += 4) {\n\t\t\t\tvar alpha = pixels[i + 3];\n\t\t\t\ttotal += alpha;\n\t\t\t\talpha /= 255;\n\t\t\t\tchannels[0] += pixels[i] * alpha;\n\t\t\t\tchannels[1] += pixels[i + 1] * alpha;\n\t\t\t\tchannels[2] += pixels[i + 2] * alpha;\n\t\t\t}\n\t\t\tfor (var i = 0; i < 3; i++)\n\t\t\t\tchannels[i] /= total;\n\t\t\treturn total ? Color.read(channels) : null;\n\t\t},\n\t\n\t\tgetPixel: function() {\n\t\t\tvar point = Point.read(arguments);\n\t\t\tvar data = this.getContext().getImageData(point.x, point.y, 1, 1).data;\n\t\t\treturn new Color('rgb', [data[0] / 255, data[1] / 255, data[2] / 255],\n\t\t\t\t\tdata[3] / 255);\n\t\t},\n\t\n\t\tsetPixel: function() {\n\t\t\tvar point = Point.read(arguments),\n\t\t\t\tcolor = Color.read(arguments),\n\t\t\t\tcomponents = color._convert('rgb'),\n\t\t\t\talpha = color._alpha,\n\t\t\t\tctx = this.getContext(true),\n\t\t\t\timageData = ctx.createImageData(1, 1),\n\t\t\t\tdata = imageData.data;\n\t\t\tdata[0] = components[0] * 255;\n\t\t\tdata[1] = components[1] * 255;\n\t\t\tdata[2] = components[2] * 255;\n\t\t\tdata[3] = alpha != null ? alpha * 255 : 255;\n\t\t\tctx.putImageData(imageData, point.x, point.y);\n\t\t},\n\t\n\t\tcreateImageData: function() {\n\t\t\tvar size = Size.read(arguments);\n\t\t\treturn this.getContext().createImageData(size.width, size.height);\n\t\t},\n\t\n\t\tgetImageData: function() {\n\t\t\tvar rect = Rectangle.read(arguments);\n\t\t\tif (rect.isEmpty())\n\t\t\t\trect = new Rectangle(this._size);\n\t\t\treturn this.getContext().getImageData(rect.x, rect.y,\n\t\t\t\t\trect.width, rect.height);\n\t\t},\n\t\n\t\tsetImageData: function(data ) {\n\t\t\tvar point = Point.read(arguments, 1);\n\t\t\tthis.getContext(true).putImageData(data, point.x, point.y);\n\t\t},\n\t\n\t\t_getBounds: function(getter, matrix) {\n\t\t\tvar rect = new Rectangle(this._size).setCenter(0, 0);\n\t\t\treturn matrix ? matrix._transformBounds(rect) : rect;\n\t\t},\n\t\n\t\t_hitTestSelf: function(point) {\n\t\t\tif (this._contains(point)) {\n\t\t\t\tvar that = this;\n\t\t\t\treturn new HitResult('pixel', that, {\n\t\t\t\t\toffset: point.add(that._size.divide(2)).round(),\n\t\t\t\t\tcolor: {\n\t\t\t\t\t\tget: function() {\n\t\t\t\t\t\t\treturn that.getPixel(this.offset);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\n\t\t_draw: function(ctx) {\n\t\t\tvar element = this.getElement();\n\t\t\tif (element) {\n\t\t\t\tctx.globalAlpha = this._opacity;\n\t\t\t\tctx.drawImage(element,\n\t\t\t\t\t\t-this._size.width / 2, -this._size.height / 2);\n\t\t\t}\n\t\t},\n\t\n\t\t_canComposite: function() {\n\t\t\treturn true;\n\t\t}\n\t});\n\t\n\tvar PlacedSymbol = Item.extend({\n\t\t_class: 'PlacedSymbol',\n\t\t_applyMatrix: false,\n\t\t_canApplyMatrix: false,\n\t\t_boundsGetter: { getBounds: 'getStrokeBounds' },\n\t\t_boundsSelected: true,\n\t\t_serializeFields: {\n\t\t\tsymbol: null\n\t\t},\n\t\n\t\tinitialize: function PlacedSymbol(arg0, arg1) {\n\t\t\tif (!this._initialize(arg0,\n\t\t\t\t\targ1 !== undefined && Point.read(arguments, 1)))\n\t\t\t\tthis.setSymbol(arg0 instanceof Symbol ? arg0 : new Symbol(arg0));\n\t\t},\n\t\n\t\t_equals: function(item) {\n\t\t\treturn this._symbol === item._symbol;\n\t\t},\n\t\n\t\tgetSymbol: function() {\n\t\t\treturn this._symbol;\n\t\t},\n\t\n\t\tsetSymbol: function(symbol) {\n\t\t\tthis._symbol = symbol;\n\t\t\tthis._changed(9);\n\t\t},\n\t\n\t\tclone: function(insert) {\n\t\t\tvar copy = new PlacedSymbol(Item.NO_INSERT);\n\t\t\tcopy.setSymbol(this._symbol);\n\t\t\treturn this._clone(copy, insert);\n\t\t},\n\t\n\t\tisEmpty: function() {\n\t\t\treturn this._symbol._definition.isEmpty();\n\t\t},\n\t\n\t\t_getBounds: function(getter, matrix, cacheItem) {\n\t\t\tvar definition = this.symbol._definition;\n\t\t\treturn definition._getCachedBounds(getter,\n\t\t\t\t\tmatrix && matrix.chain(definition._matrix), cacheItem);\n\t\t},\n\t\n\t\t_hitTestSelf: function(point, options) {\n\t\t\tvar res = this._symbol._definition._hitTest(point, options);\n\t\t\tif (res)\n\t\t\t\tres.item = this;\n\t\t\treturn res;\n\t\t},\n\t\n\t\t_draw: function(ctx, param) {\n\t\t\tthis.symbol._definition.draw(ctx, param);\n\t\t}\n\t\n\t});\n\t\n\tvar HitResult = Base.extend({\n\t\t_class: 'HitResult',\n\t\n\t\tinitialize: function HitResult(type, item, values) {\n\t\t\tthis.type = type;\n\t\t\tthis.item = item;\n\t\t\tif (values) {\n\t\t\t\tvalues.enumerable = true;\n\t\t\t\tthis.inject(values);\n\t\t\t}\n\t\t},\n\t\n\t\tstatics: {\n\t\t\tgetOptions: function(options) {\n\t\t\t\treturn new Base({\n\t\t\t\t\ttype: null,\n\t\t\t\t\ttolerance: paper.settings.hitTolerance,\n\t\t\t\t\tfill: !options,\n\t\t\t\t\tstroke: !options,\n\t\t\t\t\tsegments: !options,\n\t\t\t\t\thandles: false,\n\t\t\t\t\tends: false,\n\t\t\t\t\tcenter: false,\n\t\t\t\t\tbounds: false,\n\t\t\t\t\tguides: false,\n\t\t\t\t\tselected: false\n\t\t\t\t}, options);\n\t\t\t}\n\t\t}\n\t});\n\t\n\tvar Segment = Base.extend({\n\t\t_class: 'Segment',\n\t\tbeans: true,\n\t\n\t\tinitialize: function Segment(arg0, arg1, arg2, arg3, arg4, arg5) {\n\t\t\tvar count = arguments.length,\n\t\t\t\tpoint, handleIn, handleOut;\n\t\t\tif (count === 0) {\n\t\t\t} else if (count === 1) {\n\t\t\t\tif ('point' in arg0) {\n\t\t\t\t\tpoint = arg0.point;\n\t\t\t\t\thandleIn = arg0.handleIn;\n\t\t\t\t\thandleOut = arg0.handleOut;\n\t\t\t\t} else {\n\t\t\t\t\tpoint = arg0;\n\t\t\t\t}\n\t\t\t} else if (count === 2 && typeof arg0 === 'number') {\n\t\t\t\tpoint = arguments;\n\t\t\t} else if (count <= 3) {\n\t\t\t\tpoint = arg0;\n\t\t\t\thandleIn = arg1;\n\t\t\t\thandleOut = arg2;\n\t\t\t} else {\n\t\t\t\tpoint = arg0 !== undefined ? [ arg0, arg1 ] : null;\n\t\t\t\thandleIn = arg2 !== undefined ? [ arg2, arg3 ] : null;\n\t\t\t\thandleOut = arg4 !== undefined ? [ arg4, arg5 ] : null;\n\t\t\t}\n\t\t\tnew SegmentPoint(point, this, '_point');\n\t\t\tnew SegmentPoint(handleIn, this, '_handleIn');\n\t\t\tnew SegmentPoint(handleOut, this, '_handleOut');\n\t\t},\n\t\n\t\t_serialize: function(options) {\n\t\t\treturn Base.serialize(this.hasHandles()\n\t\t\t\t\t? [this._point, this._handleIn, this._handleOut]\n\t\t\t\t\t: this._point,\n\t\t\t\t\toptions, true);\n\t\t},\n\t\n\t\t_changed: function(point) {\n\t\t\tvar path = this._path;\n\t\t\tif (!path)\n\t\t\t\treturn;\n\t\t\tvar curves = path._curves,\n\t\t\t\tindex = this._index,\n\t\t\t\tcurve;\n\t\t\tif (curves) {\n\t\t\t\tif ((!point || point === this._point || point === this._handleIn)\n\t\t\t\t\t\t&& (curve = index > 0 ? curves[index - 1] : path._closed\n\t\t\t\t\t\t\t? curves[curves.length - 1] : null))\n\t\t\t\t\tcurve._changed();\n\t\t\t\tif ((!point || point === this._point || point === this._handleOut)\n\t\t\t\t\t\t&& (curve = curves[index]))\n\t\t\t\t\tcurve._changed();\n\t\t\t}\n\t\t\tpath._changed(25);\n\t\t},\n\t\n\t\tgetPoint: function() {\n\t\t\treturn this._point;\n\t\t},\n\t\n\t\tsetPoint: function() {\n\t\t\tvar point = Point.read(arguments);\n\t\t\tthis._point.set(point.x, point.y);\n\t\t},\n\t\n\t\tgetHandleIn: function() {\n\t\t\treturn this._handleIn;\n\t\t},\n\t\n\t\tsetHandleIn: function() {\n\t\t\tvar point = Point.read(arguments);\n\t\t\tthis._handleIn.set(point.x, point.y);\n\t\t},\n\t\n\t\tgetHandleOut: function() {\n\t\t\treturn this._handleOut;\n\t\t},\n\t\n\t\tsetHandleOut: function() {\n\t\t\tvar point = Point.read(arguments);\n\t\t\tthis._handleOut.set(point.x, point.y);\n\t\t},\n\t\n\t\thasHandles: function() {\n\t\t\treturn !this._handleIn.isZero() || !this._handleOut.isZero();\n\t\t},\n\t\n\t\tclearHandles: function() {\n\t\t\tthis._handleIn.set(0, 0);\n\t\t\tthis._handleOut.set(0, 0);\n\t\t},\n\t\n\t\t_selectionState: 0,\n\t\n\t\tisSelected: function(_point) {\n\t\t\tvar state = this._selectionState;\n\t\t\treturn !_point ? !!(state & 7)\n\t\t\t\t: _point === this._point ? !!(state & 4)\n\t\t\t\t: _point === this._handleIn ? !!(state & 1)\n\t\t\t\t: _point === this._handleOut ? !!(state & 2)\n\t\t\t\t: false;\n\t\t},\n\t\n\t\tsetSelected: function(selected, _point) {\n\t\t\tvar path = this._path,\n\t\t\t\tselected = !!selected,\n\t\t\t\tstate = this._selectionState,\n\t\t\t\toldState = state,\n\t\t\t\tflag = !_point ? 7\n\t\t\t\t\t\t: _point === this._point ? 4\n\t\t\t\t\t\t: _point === this._handleIn ? 1\n\t\t\t\t\t\t: _point === this._handleOut ? 2\n\t\t\t\t\t\t: 0;\n\t\t\tif (selected) {\n\t\t\t\tstate |= flag;\n\t\t\t} else {\n\t\t\t\tstate &= ~flag;\n\t\t\t}\n\t\t\tthis._selectionState = state;\n\t\t\tif (path && state !== oldState) {\n\t\t\t\tpath._updateSelection(this, oldState, state);\n\t\t\t\tpath._changed(129);\n\t\t\t}\n\t\t},\n\t\n\t\tgetIndex: function() {\n\t\t\treturn this._index !== undefined ? this._index : null;\n\t\t},\n\t\n\t\tgetPath: function() {\n\t\t\treturn this._path || null;\n\t\t},\n\t\n\t\tgetCurve: function() {\n\t\t\tvar path = this._path,\n\t\t\t\tindex = this._index;\n\t\t\tif (path) {\n\t\t\t\tif (index > 0 && !path._closed\n\t\t\t\t\t\t&& index === path._segments.length - 1)\n\t\t\t\t\tindex--;\n\t\t\t\treturn path.getCurves()[index] || null;\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\n\t\tgetLocation: function() {\n\t\t\tvar curve = this.getCurve();\n\t\t\treturn curve\n\t\t\t\t\t? new CurveLocation(curve, this === curve._segment1 ? 0 : 1)\n\t\t\t\t\t: null;\n\t\t},\n\t\n\t\tgetNext: function() {\n\t\t\tvar segments = this._path && this._path._segments;\n\t\t\treturn segments && (segments[this._index + 1]\n\t\t\t\t\t|| this._path._closed && segments[0]) || null;\n\t\t},\n\t\n\t\tgetPrevious: function() {\n\t\t\tvar segments = this._path && this._path._segments;\n\t\t\treturn segments && (segments[this._index - 1]\n\t\t\t\t\t|| this._path._closed && segments[segments.length - 1]) || null;\n\t\t},\n\t\n\t\tisFirst: function() {\n\t\t\treturn this._index === 0;\n\t\t},\n\t\n\t\tisLast: function() {\n\t\t\tvar path = this._path;\n\t\t\treturn path && this._index === path._segments.length - 1 || false;\n\t\t},\n\t\n\t\treverse: function() {\n\t\t\tvar handleIn = this._handleIn,\n\t\t\t\thandleOut = this._handleOut,\n\t\t\t\tinX = handleIn._x,\n\t\t\t\tinY = handleIn._y;\n\t\t\thandleIn.set(handleOut._x, handleOut._y);\n\t\t\thandleOut.set(inX, inY);\n\t\t},\n\t\n\t\treversed: function() {\n\t\t\treturn new Segment(this._point, this._handleOut, this._handleIn);\n\t\t},\n\t\n\t\tremove: function() {\n\t\t\treturn this._path ? !!this._path.removeSegment(this._index) : false;\n\t\t},\n\t\n\t\tclone: function() {\n\t\t\treturn new Segment(this._point, this._handleIn, this._handleOut);\n\t\t},\n\t\n\t\tequals: function(segment) {\n\t\t\treturn segment === this || segment && this._class === segment._class\n\t\t\t\t\t&& this._point.equals(segment._point)\n\t\t\t\t\t&& this._handleIn.equals(segment._handleIn)\n\t\t\t\t\t&& this._handleOut.equals(segment._handleOut)\n\t\t\t\t\t|| false;\n\t\t},\n\t\n\t\ttoString: function() {\n\t\t\tvar parts = [ 'point: ' + this._point ];\n\t\t\tif (!this._handleIn.isZero())\n\t\t\t\tparts.push('handleIn: ' + this._handleIn);\n\t\t\tif (!this._handleOut.isZero())\n\t\t\t\tparts.push('handleOut: ' + this._handleOut);\n\t\t\treturn '{ ' + parts.join(', ') + ' }';\n\t\t},\n\t\n\t\ttransform: function(matrix) {\n\t\t\tthis._transformCoordinates(matrix, new Array(6), true);\n\t\t\tthis._changed();\n\t\t},\n\t\n\t\t_transformCoordinates: function(matrix, coords, change) {\n\t\t\tvar point = this._point,\n\t\t\t\thandleIn = !change || !this._handleIn.isZero()\n\t\t\t\t\t\t? this._handleIn : null,\n\t\t\t\thandleOut = !change || !this._handleOut.isZero()\n\t\t\t\t\t\t? this._handleOut : null,\n\t\t\t\tx = point._x,\n\t\t\t\ty = point._y,\n\t\t\t\ti = 2;\n\t\t\tcoords[0] = x;\n\t\t\tcoords[1] = y;\n\t\t\tif (handleIn) {\n\t\t\t\tcoords[i++] = handleIn._x + x;\n\t\t\t\tcoords[i++] = handleIn._y + y;\n\t\t\t}\n\t\t\tif (handleOut) {\n\t\t\t\tcoords[i++] = handleOut._x + x;\n\t\t\t\tcoords[i++] = handleOut._y + y;\n\t\t\t}\n\t\t\tif (matrix) {\n\t\t\t\tmatrix._transformCoordinates(coords, coords, i / 2);\n\t\t\t\tx = coords[0];\n\t\t\t\ty = coords[1];\n\t\t\t\tif (change) {\n\t\t\t\t\tpoint._x = x;\n\t\t\t\t\tpoint._y = y;\n\t\t\t\t\ti  = 2;\n\t\t\t\t\tif (handleIn) {\n\t\t\t\t\t\thandleIn._x = coords[i++] - x;\n\t\t\t\t\t\thandleIn._y = coords[i++] - y;\n\t\t\t\t\t}\n\t\t\t\t\tif (handleOut) {\n\t\t\t\t\t\thandleOut._x = coords[i++] - x;\n\t\t\t\t\t\thandleOut._y = coords[i++] - y;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (!handleIn) {\n\t\t\t\t\t\tcoords[i++] = x;\n\t\t\t\t\t\tcoords[i++] = y;\n\t\t\t\t\t}\n\t\t\t\t\tif (!handleOut) {\n\t\t\t\t\t\tcoords[i++] = x;\n\t\t\t\t\t\tcoords[i++] = y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn coords;\n\t\t}\n\t});\n\t\n\tvar SegmentPoint = Point.extend({\n\t\tinitialize: function SegmentPoint(point, owner, key) {\n\t\t\tvar x, y, selected;\n\t\t\tif (!point) {\n\t\t\t\tx = y = 0;\n\t\t\t} else if ((x = point[0]) !== undefined) {\n\t\t\t\ty = point[1];\n\t\t\t} else {\n\t\t\t\tvar pt = point;\n\t\t\t\tif ((x = pt.x) === undefined) {\n\t\t\t\t\tpt = Point.read(arguments);\n\t\t\t\t\tx = pt.x;\n\t\t\t\t}\n\t\t\t\ty = pt.y;\n\t\t\t\tselected = pt.selected;\n\t\t\t}\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._owner = owner;\n\t\t\towner[key] = this;\n\t\t\tif (selected)\n\t\t\t\tthis.setSelected(true);\n\t\t},\n\t\n\t\tset: function(x, y) {\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._owner._changed(this);\n\t\t\treturn this;\n\t\t},\n\t\n\t\t_serialize: function(options) {\n\t\t\tvar f = options.formatter,\n\t\t\t\tx = f.number(this._x),\n\t\t\t\ty = f.number(this._y);\n\t\t\treturn this.isSelected()\n\t\t\t\t\t? { x: x, y: y, selected: true }\n\t\t\t\t\t: [x, y];\n\t\t},\n\t\n\t\tgetX: function() {\n\t\t\treturn this._x;\n\t\t},\n\t\n\t\tsetX: function(x) {\n\t\t\tthis._x = x;\n\t\t\tthis._owner._changed(this);\n\t\t},\n\t\n\t\tgetY: function() {\n\t\t\treturn this._y;\n\t\t},\n\t\n\t\tsetY: function(y) {\n\t\t\tthis._y = y;\n\t\t\tthis._owner._changed(this);\n\t\t},\n\t\n\t\tisZero: function() {\n\t\t\treturn Numerical.isZero(this._x) && Numerical.isZero(this._y);\n\t\t},\n\t\n\t\tsetSelected: function(selected) {\n\t\t\tthis._owner.setSelected(selected, this);\n\t\t},\n\t\n\t\tisSelected: function() {\n\t\t\treturn this._owner.isSelected(this);\n\t\t}\n\t});\n\t\n\tvar Curve = Base.extend({\n\t\t_class: 'Curve',\n\t\n\t\tinitialize: function Curve(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n\t\t\tvar count = arguments.length,\n\t\t\t\tseg1, seg2,\n\t\t\t\tpoint1, point2,\n\t\t\t\thandle1, handle2;\n\t\t\tif (count === 3) {\n\t\t\t\tthis._path = arg0;\n\t\t\t\tseg1 = arg1;\n\t\t\t\tseg2 = arg2;\n\t\t\t} else if (count === 0) {\n\t\t\t\tseg1 = new Segment();\n\t\t\t\tseg2 = new Segment();\n\t\t\t} else if (count === 1) {\n\t\t\t\tif ('segment1' in arg0) {\n\t\t\t\t\tseg1 = new Segment(arg0.segment1);\n\t\t\t\t\tseg2 = new Segment(arg0.segment2);\n\t\t\t\t} else if ('point1' in arg0) {\n\t\t\t\t\tpoint1 = arg0.point1;\n\t\t\t\t\thandle1 = arg0.handle1;\n\t\t\t\t\thandle2 = arg0.handle2;\n\t\t\t\t\tpoint2 = arg0.point2;\n\t\t\t\t} else if (Array.isArray(arg0)) {\n\t\t\t\t\tpoint1 = [arg0[0], arg0[1]];\n\t\t\t\t\tpoint2 = [arg0[6], arg0[7]];\n\t\t\t\t\thandle1 = [arg0[2] - arg0[0], arg0[3] - arg0[1]];\n\t\t\t\t\thandle2 = [arg0[4] - arg0[6], arg0[5] - arg0[7]];\n\t\t\t\t}\n\t\t\t} else if (count === 2) {\n\t\t\t\tseg1 = new Segment(arg0);\n\t\t\t\tseg2 = new Segment(arg1);\n\t\t\t} else if (count === 4) {\n\t\t\t\tpoint1 = arg0;\n\t\t\t\thandle1 = arg1;\n\t\t\t\thandle2 = arg2;\n\t\t\t\tpoint2 = arg3;\n\t\t\t} else if (count === 8) {\n\t\t\t\tpoint1 = [arg0, arg1];\n\t\t\t\tpoint2 = [arg6, arg7];\n\t\t\t\thandle1 = [arg2 - arg0, arg3 - arg1];\n\t\t\t\thandle2 = [arg4 - arg6, arg5 - arg7];\n\t\t\t}\n\t\t\tthis._segment1 = seg1 || new Segment(point1, null, handle1);\n\t\t\tthis._segment2 = seg2 || new Segment(point2, handle2, null);\n\t\t},\n\t\n\t\t_serialize: function(options) {\n\t\t\treturn Base.serialize(this.hasHandles()\n\t\t\t\t\t? [this.getPoint1(), this.getHandle1(), this.getHandle2(),\n\t\t\t\t\t\tthis.getPoint2()]\n\t\t\t\t\t: [this.getPoint1(), this.getPoint2()],\n\t\t\t\t\toptions, true);\n\t\t},\n\t\n\t\t_changed: function() {\n\t\t\tthis._length = this._bounds = undefined;\n\t\t},\n\t\n\t\tclone: function() {\n\t\t\treturn new Curve(this._segment1, this._segment2);\n\t\t},\n\t\n\t\ttoString: function() {\n\t\t\tvar parts = [ 'point1: ' + this._segment1._point ];\n\t\t\tif (!this._segment1._handleOut.isZero())\n\t\t\t\tparts.push('handle1: ' + this._segment1._handleOut);\n\t\t\tif (!this._segment2._handleIn.isZero())\n\t\t\t\tparts.push('handle2: ' + this._segment2._handleIn);\n\t\t\tparts.push('point2: ' + this._segment2._point);\n\t\t\treturn '{ ' + parts.join(', ') + ' }';\n\t\t},\n\t\n\t\tremove: function() {\n\t\t\tvar removed = false;\n\t\t\tif (this._path) {\n\t\t\t\tvar segment2 = this._segment2,\n\t\t\t\t\thandleOut = segment2._handleOut;\n\t\t\t\tremoved = segment2.remove();\n\t\t\t\tif (removed)\n\t\t\t\t\tthis._segment1._handleOut.set(handleOut.x, handleOut.y);\n\t\t\t}\n\t\t\treturn removed;\n\t\t},\n\t\n\t\tgetPoint1: function() {\n\t\t\treturn this._segment1._point;\n\t\t},\n\t\n\t\tsetPoint1: function() {\n\t\t\tvar point = Point.read(arguments);\n\t\t\tthis._segment1._point.set(point.x, point.y);\n\t\t},\n\t\n\t\tgetPoint2: function() {\n\t\t\treturn this._segment2._point;\n\t\t},\n\t\n\t\tsetPoint2: function() {\n\t\t\tvar point = Point.read(arguments);\n\t\t\tthis._segment2._point.set(point.x, point.y);\n\t\t},\n\t\n\t\tgetHandle1: function() {\n\t\t\treturn this._segment1._handleOut;\n\t\t},\n\t\n\t\tsetHandle1: function() {\n\t\t\tvar point = Point.read(arguments);\n\t\t\tthis._segment1._handleOut.set(point.x, point.y);\n\t\t},\n\t\n\t\tgetHandle2: function() {\n\t\t\treturn this._segment2._handleIn;\n\t\t},\n\t\n\t\tsetHandle2: function() {\n\t\t\tvar point = Point.read(arguments);\n\t\t\tthis._segment2._handleIn.set(point.x, point.y);\n\t\t},\n\t\n\t\tgetSegment1: function() {\n\t\t\treturn this._segment1;\n\t\t},\n\t\n\t\tgetSegment2: function() {\n\t\t\treturn this._segment2;\n\t\t},\n\t\n\t\tgetPath: function() {\n\t\t\treturn this._path;\n\t\t},\n\t\n\t\tgetIndex: function() {\n\t\t\treturn this._segment1._index;\n\t\t},\n\t\n\t\tgetNext: function() {\n\t\t\tvar curves = this._path && this._path._curves;\n\t\t\treturn curves && (curves[this._segment1._index + 1]\n\t\t\t\t\t|| this._path._closed && curves[0]) || null;\n\t\t},\n\t\n\t\tgetPrevious: function() {\n\t\t\tvar curves = this._path && this._path._curves;\n\t\t\treturn curves && (curves[this._segment1._index - 1]\n\t\t\t\t\t|| this._path._closed && curves[curves.length - 1]) || null;\n\t\t},\n\t\n\t\tisFirst: function() {\n\t\t\treturn this._segment1._index === 0;\n\t\t},\n\t\n\t\tisLast: function() {\n\t\t\tvar path = this._path;\n\t\t\treturn path && this._segment1._index === path._curves.length - 1\n\t\t\t\t\t|| false;\n\t\t},\n\t\n\t\tisSelected: function() {\n\t\t\treturn this.getPoint1().isSelected()\n\t\t\t\t\t&& this.getHandle2().isSelected()\n\t\t\t\t\t&& this.getHandle2().isSelected()\n\t\t\t\t\t&& this.getPoint2().isSelected();\n\t\t},\n\t\n\t\tsetSelected: function(selected) {\n\t\t\tthis.getPoint1().setSelected(selected);\n\t\t\tthis.getHandle1().setSelected(selected);\n\t\t\tthis.getHandle2().setSelected(selected);\n\t\t\tthis.getPoint2().setSelected(selected);\n\t\t},\n\t\n\t\tgetValues: function(matrix) {\n\t\t\treturn Curve.getValues(this._segment1, this._segment2, matrix);\n\t\t},\n\t\n\t\tgetPoints: function() {\n\t\t\tvar coords = this.getValues(),\n\t\t\t\tpoints = [];\n\t\t\tfor (var i = 0; i < 8; i += 2)\n\t\t\t\tpoints.push(new Point(coords[i], coords[i + 1]));\n\t\t\treturn points;\n\t\t},\n\t\n\t\tgetLength: function() {\n\t\t\tif (this._length == null)\n\t\t\t\tthis._length = Curve.getLength(this.getValues(), 0, 1);\n\t\t\treturn this._length;\n\t\t},\n\t\n\t\tgetArea: function() {\n\t\t\treturn Curve.getArea(this.getValues());\n\t\t},\n\t\n\t\tgetLine: function() {\n\t\t\treturn new Line(this._segment1._point, this._segment2._point);\n\t\t},\n\t\n\t\tgetPart: function(from, to) {\n\t\t\treturn new Curve(Curve.getPart(this.getValues(), from, to));\n\t\t},\n\t\n\t\tgetPartLength: function(from, to) {\n\t\t\treturn Curve.getLength(this.getValues(), from, to);\n\t\t},\n\t\n\t\tgetIntersections: function(curve) {\n\t\t\treturn Curve._getIntersections(this.getValues(),\n\t\t\t\t\tcurve && curve !== this ? curve.getValues() : null,\n\t\t\t\t\tthis, curve, [], {});\n\t\t},\n\t\n\t\t_getParameter: function(offset, isParameter) {\n\t\t\treturn isParameter\n\t\t\t\t\t? offset\n\t\t\t\t\t: offset && offset.curve === this\n\t\t\t\t\t\t? offset.parameter\n\t\t\t\t\t\t: offset === undefined && isParameter === undefined\n\t\t\t\t\t\t\t? 0.5\n\t\t\t\t\t\t\t: this.getParameterAt(offset, 0);\n\t\t},\n\t\n\t\tdivide: function(offset, isParameter, _setHandles) {\n\t\t\tvar parameter = this._getParameter(offset, isParameter),\n\t\t\t\ttMin = 4e-7,\n\t\t\t\ttMax = 1 - tMin,\n\t\t\t\tres = null;\n\t\t\tif (parameter >= tMin && parameter <= tMax) {\n\t\t\t\tvar parts = Curve.subdivide(this.getValues(), parameter),\n\t\t\t\t\tleft = parts[0],\n\t\t\t\t\tright = parts[1],\n\t\t\t\t\tsetHandles = _setHandles || this.hasHandles(),\n\t\t\t\t\tsegment1 = this._segment1,\n\t\t\t\t\tsegment2 = this._segment2,\n\t\t\t\t\tpath = this._path;\n\t\t\t\tif (setHandles) {\n\t\t\t\t\tsegment1._handleOut.set(left[2] - left[0],\n\t\t\t\t\t\t\tleft[3] - left[1]);\n\t\t\t\t\tsegment2._handleIn.set(right[4] - right[6],\n\t\t\t\t\t\t\tright[5] - right[7]);\n\t\t\t\t}\n\t\t\t\tvar x = left[6], y = left[7],\n\t\t\t\t\tsegment = new Segment(new Point(x, y),\n\t\t\t\t\t\t\tsetHandles && new Point(left[4] - x, left[5] - y),\n\t\t\t\t\t\t\tsetHandles && new Point(right[2] - x, right[3] - y));\n\t\t\t\tif (path) {\n\t\t\t\t\tpath.insert(segment1._index + 1, segment);\n\t\t\t\t\tres = this.getNext();\n\t\t\t\t} else {\n\t\t\t\t\tthis._segment2 = segment;\n\t\t\t\t\tres = new Curve(segment, segment2);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn res;\n\t\t},\n\t\n\t\tsplit: function(offset, isParameter) {\n\t\t\treturn this._path\n\t\t\t\t? this._path.split(this._segment1._index,\n\t\t\t\t\t\tthis._getParameter(offset, isParameter))\n\t\t\t\t: null;\n\t\t},\n\t\n\t\treversed: function() {\n\t\t\treturn new Curve(this._segment2.reversed(), this._segment1.reversed());\n\t\t},\n\t\n\t\tclearHandles: function() {\n\t\t\tthis._segment1._handleOut.set(0, 0);\n\t\t\tthis._segment2._handleIn.set(0, 0);\n\t\t},\n\t\n\tstatics: {\n\t\tgetValues: function(segment1, segment2, matrix) {\n\t\t\tvar p1 = segment1._point,\n\t\t\t\th1 = segment1._handleOut,\n\t\t\t\th2 = segment2._handleIn,\n\t\t\t\tp2 = segment2._point,\n\t\t\t\tvalues = [\n\t\t\t\t\tp1._x, p1._y,\n\t\t\t\t\tp1._x + h1._x, p1._y + h1._y,\n\t\t\t\t\tp2._x + h2._x, p2._y + h2._y,\n\t\t\t\t\tp2._x, p2._y\n\t\t\t\t];\n\t\t\tif (matrix)\n\t\t\t\tmatrix._transformCoordinates(values, values, 4);\n\t\t\treturn values;\n\t\t},\n\t\n\t\tsubdivide: function(v, t) {\n\t\t\tvar p1x = v[0], p1y = v[1],\n\t\t\t\tc1x = v[2], c1y = v[3],\n\t\t\t\tc2x = v[4], c2y = v[5],\n\t\t\t\tp2x = v[6], p2y = v[7];\n\t\t\tif (t === undefined)\n\t\t\t\tt = 0.5;\n\t\t\tvar u = 1 - t,\n\t\t\t\tp3x = u * p1x + t * c1x, p3y = u * p1y + t * c1y,\n\t\t\t\tp4x = u * c1x + t * c2x, p4y = u * c1y + t * c2y,\n\t\t\t\tp5x = u * c2x + t * p2x, p5y = u * c2y + t * p2y,\n\t\t\t\tp6x = u * p3x + t * p4x, p6y = u * p3y + t * p4y,\n\t\t\t\tp7x = u * p4x + t * p5x, p7y = u * p4y + t * p5y,\n\t\t\t\tp8x = u * p6x + t * p7x, p8y = u * p6y + t * p7y;\n\t\t\treturn [\n\t\t\t\t[p1x, p1y, p3x, p3y, p6x, p6y, p8x, p8y],\n\t\t\t\t[p8x, p8y, p7x, p7y, p5x, p5y, p2x, p2y]\n\t\t\t];\n\t\t},\n\t\n\t\tsolveCubic: function (v, coord, val, roots, min, max) {\n\t\t\tvar p1 = v[coord],\n\t\t\t\tc1 = v[coord + 2],\n\t\t\t\tc2 = v[coord + 4],\n\t\t\t\tp2 = v[coord + 6],\n\t\t\t\tc = 3 * (c1 - p1),\n\t\t\t\tb = 3 * (c2 - c1) - c,\n\t\t\t\ta = p2 - p1 - c - b;\n\t\t\treturn Numerical.solveCubic(a, b, c, p1 - val, roots, min, max);\n\t\t},\n\t\n\t\tgetParameterOf: function(v, point) {\n\t\t\tvar p1 = new Point(v[0], v[1]),\n\t\t\t\tp2 = new Point(v[6], v[7]),\n\t\t\t\tepsilon = 1e-12,\n\t\t\t\tt = point.isClose(p1, epsilon) ? 0\n\t\t\t\t  : point.isClose(p2, epsilon) ? 1\n\t\t\t\t  : null;\n\t\t\tif (t !== null)\n\t\t\t\treturn t;\n\t\t\tvar coords = [point.x, point.y],\n\t\t\t\troots = [],\n\t\t\t\tgeomEpsilon = 2e-7;\n\t\t\tfor (var c = 0; c < 2; c++) {\n\t\t\t\tvar count = Curve.solveCubic(v, c, coords[c], roots, 0, 1);\n\t\t\t\tfor (var i = 0; i < count; i++) {\n\t\t\t\t\tt = roots[i];\n\t\t\t\t\tif (point.isClose(Curve.getPoint(v, t), geomEpsilon))\n\t\t\t\t\t\treturn t;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn point.isClose(p1, geomEpsilon) ? 0\n\t\t\t\t : point.isClose(p2, geomEpsilon) ? 1\n\t\t\t\t : null;\n\t\t},\n\t\n\t\tgetNearestParameter: function(v, point) {\n\t\t\tif (Curve.isStraight(v)) {\n\t\t\t\tvar p1x = v[0], p1y = v[1],\n\t\t\t\t\tp2x = v[6], p2y = v[7],\n\t\t\t\t\tvx = p2x - p1x, vy = p2y - p1y,\n\t\t\t\t\tdet = vx * vx + vy * vy;\n\t\t\t\tif (det === 0)\n\t\t\t\t\treturn 0;\n\t\t\t\tvar u = ((point.x - p1x) * vx + (point.y - p1y) * vy) / det;\n\t\t\t\treturn u < 1e-12 ? 0\n\t\t\t\t\t : u > 0.999999999999 ? 1\n\t\t\t\t\t : Curve.getParameterOf(v,\n\t\t\t\t\t\tnew Point(p1x + u * vx, p1y + u * vy));\n\t\t\t}\n\t\n\t\t\tvar count = 100,\n\t\t\t\tminDist = Infinity,\n\t\t\t\tminT = 0;\n\t\n\t\t\tfunction refine(t) {\n\t\t\t\tif (t >= 0 && t <= 1) {\n\t\t\t\t\tvar dist = point.getDistance(Curve.getPoint(v, t), true);\n\t\t\t\t\tif (dist < minDist) {\n\t\t\t\t\t\tminDist = dist;\n\t\t\t\t\t\tminT = t;\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tfor (var i = 0; i <= count; i++)\n\t\t\t\trefine(i / count);\n\t\n\t\t\tvar step = 1 / (count * 2);\n\t\t\twhile (step > 4e-7) {\n\t\t\t\tif (!refine(minT - step) && !refine(minT + step))\n\t\t\t\t\tstep /= 2;\n\t\t\t}\n\t\t\treturn minT;\n\t\t},\n\t\n\t\tgetPart: function(v, from, to) {\n\t\t\tvar flip = from > to;\n\t\t\tif (flip) {\n\t\t\t\tvar tmp = from;\n\t\t\t\tfrom = to;\n\t\t\t\tto = tmp;\n\t\t\t}\n\t\t\tif (from > 0)\n\t\t\t\tv = Curve.subdivide(v, from)[1];\n\t\t\tif (to < 1)\n\t\t\t\tv = Curve.subdivide(v, (to - from) / (1 - from))[0];\n\t\t\treturn flip\n\t\t\t\t\t? [v[6], v[7], v[4], v[5], v[2], v[3], v[0], v[1]]\n\t\t\t\t\t: v;\n\t\t},\n\t\n\t\thasHandles: function(v) {\n\t\t\tvar isZero = Numerical.isZero;\n\t\t\treturn !(isZero(v[0] - v[2]) && isZero(v[1] - v[3])\n\t\t\t\t\t&& isZero(v[4] - v[6]) && isZero(v[5] - v[7]));\n\t\t},\n\t\n\t\tisFlatEnough: function(v, tolerance) {\n\t\t\tvar p1x = v[0], p1y = v[1],\n\t\t\t\tc1x = v[2], c1y = v[3],\n\t\t\t\tc2x = v[4], c2y = v[5],\n\t\t\t\tp2x = v[6], p2y = v[7],\n\t\t\t\tux = 3 * c1x - 2 * p1x - p2x,\n\t\t\t\tuy = 3 * c1y - 2 * p1y - p2y,\n\t\t\t\tvx = 3 * c2x - 2 * p2x - p1x,\n\t\t\t\tvy = 3 * c2y - 2 * p2y - p1y;\n\t\t\treturn Math.max(ux * ux, vx * vx) + Math.max(uy * uy, vy * vy)\n\t\t\t\t\t< 10 * tolerance * tolerance;\n\t\t},\n\t\n\t\tgetArea: function(v) {\n\t\t\tvar p1x = v[0], p1y = v[1],\n\t\t\t\tp2x = v[6], p2y = v[7],\n\t\t\t\th1x = (v[2] + p1x) / 2,\n\t\t\t\th1y = (v[3] + p1y) / 2,\n\t\t\t\th2x = (v[4] + v[6]) / 2,\n\t\t\t\th2y = (v[5] + v[7]) / 2;\n\t\t\treturn 6 * ((p1x - h1x) * (h1y + p1y)\n\t\t\t\t\t  + (h1x - h2x) * (h2y + h1y)\n\t\t\t\t\t  + (h2x - p2x) * (p2y + h2y)) / 10;\n\t\t},\n\t\n\t\tgetBounds: function(v) {\n\t\t\tvar min = v.slice(0, 2),\n\t\t\t\tmax = min.slice(),\n\t\t\t\troots = [0, 0];\n\t\t\tfor (var i = 0; i < 2; i++)\n\t\t\t\tCurve._addBounds(v[i], v[i + 2], v[i + 4], v[i + 6],\n\t\t\t\t\t\ti, 0, min, max, roots);\n\t\t\treturn new Rectangle(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n\t\t},\n\t\n\t\t_addBounds: function(v0, v1, v2, v3, coord, padding, min, max, roots) {\n\t\t\tfunction add(value, padding) {\n\t\t\t\tvar left = value - padding,\n\t\t\t\t\tright = value + padding;\n\t\t\t\tif (left < min[coord])\n\t\t\t\t\tmin[coord] = left;\n\t\t\t\tif (right > max[coord])\n\t\t\t\t\tmax[coord] = right;\n\t\t\t}\n\t\t\tvar a = 3 * (v1 - v2) - v0 + v3,\n\t\t\t\tb = 2 * (v0 + v2) - 4 * v1,\n\t\t\t\tc = v1 - v0,\n\t\t\t\tcount = Numerical.solveQuadratic(a, b, c, roots),\n\t\t\t\ttMin = 4e-7,\n\t\t\t\ttMax = 1 - tMin;\n\t\t\tadd(v3, 0);\n\t\t\tfor (var i = 0; i < count; i++) {\n\t\t\t\tvar t = roots[i],\n\t\t\t\t\tu = 1 - t;\n\t\t\t\tif (tMin < t && t < tMax)\n\t\t\t\t\tadd(u * u * u * v0\n\t\t\t\t\t\t+ 3 * u * u * t * v1\n\t\t\t\t\t\t+ 3 * u * t * t * v2\n\t\t\t\t\t\t+ t * t * t * v3,\n\t\t\t\t\t\tpadding);\n\t\t\t}\n\t\t}\n\t}}, Base.each(\n\t\t['getBounds', 'getStrokeBounds', 'getHandleBounds', 'getRoughBounds'],\n\t\tfunction(name) {\n\t\t\tthis[name] = function() {\n\t\t\t\tif (!this._bounds)\n\t\t\t\t\tthis._bounds = {};\n\t\t\t\tvar bounds = this._bounds[name];\n\t\t\t\tif (!bounds) {\n\t\t\t\t\tvar path = this._path;\n\t\t\t\t\tbounds = this._bounds[name] = Path[name](\n\t\t\t\t\t\t\t[this._segment1, this._segment2], false,\n\t\t\t\t\t\t\tpath && path.getStyle());\n\t\t\t\t}\n\t\t\t\treturn bounds.clone();\n\t\t\t};\n\t\t},\n\t{\n\t\n\t}), Base.each({\n\t\tisStraight: function(l, h1, h2) {\n\t\t\tif (h1.isZero() && h2.isZero()) {\n\t\t\t\treturn true;\n\t\t\t} else if (l.isZero()) {\n\t\t\t\treturn false;\n\t\t\t} else if (h1.isCollinear(l) && h2.isCollinear(l)) {\n\t\t\t\tvar div = l.dot(l),\n\t\t\t\t\tp1 = l.dot(h1) / div,\n\t\t\t\t\tp2 = l.dot(h2) / div;\n\t\t\t\treturn p1 >= 0 && p1 <= 1 && p2 <= 0 && p2 >= -1;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\n\t\tisLinear: function(l, h1, h2) {\n\t\t\tvar third = l.divide(3);\n\t\t\treturn h1.equals(third) && h2.negate().equals(third);\n\t\t}\n\t}, function(test, name) {\n\t\tthis[name] = function() {\n\t\t\tvar seg1 = this._segment1,\n\t\t\t\tseg2 = this._segment2;\n\t\t\treturn test(seg2._point.subtract(seg1._point),\n\t\t\t\t\tseg1._handleOut, seg2._handleIn);\n\t\t};\n\t\n\t\tthis.statics[name] = function(v) {\n\t\t\tvar p1x = v[0], p1y = v[1],\n\t\t\t\tp2x = v[6], p2y = v[7];\n\t\t\treturn test(new Point(p2x - p1x, p2y - p1y),\n\t\t\t\t\tnew Point(v[2] - p1x, v[3] - p1y),\n\t\t\t\t\tnew Point(v[4] - p2x, v[5] - p2y));\n\t\t};\n\t}, {\n\t\tstatics: {},\n\t\n\t\thasHandles: function() {\n\t\t\treturn !this._segment1._handleOut.isZero()\n\t\t\t\t\t|| !this._segment2._handleIn.isZero();\n\t\t},\n\t\n\t\tisCollinear: function(curve) {\n\t\t\treturn curve && this.isStraight() && curve.isStraight()\n\t\t\t\t\t&& this.getLine().isCollinear(curve.getLine());\n\t\t},\n\t\n\t\tisHorizontal: function() {\n\t\t\treturn this.isStraight() && Math.abs(this.getTangentAt(0.5, true).y)\n\t\t\t\t\t< 1e-7;\n\t\t},\n\t\n\t\tisVertical: function() {\n\t\t\treturn this.isStraight() && Math.abs(this.getTangentAt(0.5, true).x)\n\t\t\t\t\t< 1e-7;\n\t\t}\n\t}), {\n\t\tbeans: false,\n\t\n\t\tgetParameterAt: function(offset, start) {\n\t\t\treturn Curve.getParameterAt(this.getValues(), offset, start);\n\t\t},\n\t\n\t\tgetParameterOf: function() {\n\t\t\treturn Curve.getParameterOf(this.getValues(), Point.read(arguments));\n\t\t},\n\t\n\t\tgetLocationAt: function(offset, isParameter) {\n\t\t\tvar t = isParameter ? offset : this.getParameterAt(offset);\n\t\t\treturn t != null && t >= 0 && t <= 1\n\t\t\t\t\t? new CurveLocation(this, t)\n\t\t\t\t\t: null;\n\t\t},\n\t\n\t\tgetLocationOf: function() {\n\t\t\treturn this.getLocationAt(this.getParameterOf(Point.read(arguments)),\n\t\t\t\t\ttrue);\n\t\t},\n\t\n\t\tgetOffsetOf: function() {\n\t\t\tvar loc = this.getLocationOf.apply(this, arguments);\n\t\t\treturn loc ? loc.getOffset() : null;\n\t\t},\n\t\n\t\tgetNearestLocation: function() {\n\t\t\tvar point = Point.read(arguments),\n\t\t\t\tvalues = this.getValues(),\n\t\t\t\tt = Curve.getNearestParameter(values, point),\n\t\t\t\tpt = Curve.getPoint(values, t);\n\t\t\treturn new CurveLocation(this, t, pt, null, point.getDistance(pt));\n\t\t},\n\t\n\t\tgetNearestPoint: function() {\n\t\t\treturn this.getNearestLocation.apply(this, arguments).getPoint();\n\t\t}\n\t\n\t},\n\tnew function() {\n\t\tvar methods = ['getPoint', 'getTangent', 'getNormal', 'getWeightedTangent',\n\t\t\t'getWeightedNormal', 'getCurvature'];\n\t\treturn Base.each(methods,\n\t\tfunction(name) {\n\t\t\tthis[name + 'At'] = function(offset, isParameter) {\n\t\t\t\tvar values = this.getValues();\n\t\t\t\treturn Curve[name](values, isParameter ? offset\n\t\t\t\t\t\t: Curve.getParameterAt(values, offset, 0));\n\t\t\t};\n\t\t}, {\n\t\t\tstatics: {\n\t\t\t\tevaluateMethods: methods\n\t\t\t}\n\t\t})\n\t},\n\tnew function() {\n\t\n\t\tfunction getLengthIntegrand(v) {\n\t\t\tvar p1x = v[0], p1y = v[1],\n\t\t\t\tc1x = v[2], c1y = v[3],\n\t\t\t\tc2x = v[4], c2y = v[5],\n\t\t\t\tp2x = v[6], p2y = v[7],\n\t\n\t\t\t\tax = 9 * (c1x - c2x) + 3 * (p2x - p1x),\n\t\t\t\tbx = 6 * (p1x + c2x) - 12 * c1x,\n\t\t\t\tcx = 3 * (c1x - p1x),\n\t\n\t\t\t\tay = 9 * (c1y - c2y) + 3 * (p2y - p1y),\n\t\t\t\tby = 6 * (p1y + c2y) - 12 * c1y,\n\t\t\t\tcy = 3 * (c1y - p1y);\n\t\n\t\t\treturn function(t) {\n\t\t\t\tvar dx = (ax * t + bx) * t + cx,\n\t\t\t\t\tdy = (ay * t + by) * t + cy;\n\t\t\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t\t\t};\n\t\t}\n\t\n\t\tfunction getIterations(a, b) {\n\t\t\treturn Math.max(2, Math.min(16, Math.ceil(Math.abs(b - a) * 32)));\n\t\t}\n\t\n\t\tfunction evaluate(v, t, type, normalized) {\n\t\t\tif (t == null || t < 0 || t > 1)\n\t\t\t\treturn null;\n\t\t\tvar p1x = v[0], p1y = v[1],\n\t\t\t\tc1x = v[2], c1y = v[3],\n\t\t\t\tc2x = v[4], c2y = v[5],\n\t\t\t\tp2x = v[6], p2y = v[7],\n\t\t\t\ttMin = 4e-7,\n\t\t\t\ttMax = 1 - tMin,\n\t\t\t\tx, y;\n\t\n\t\t\tif (type === 0 && (t < tMin || t > tMax)) {\n\t\t\t\tvar isZero = t < tMin;\n\t\t\t\tx = isZero ? p1x : p2x;\n\t\t\t\ty = isZero ? p1y : p2y;\n\t\t\t} else {\n\t\t\t\tvar cx = 3 * (c1x - p1x),\n\t\t\t\t\tbx = 3 * (c2x - c1x) - cx,\n\t\t\t\t\tax = p2x - p1x - cx - bx,\n\t\n\t\t\t\t\tcy = 3 * (c1y - p1y),\n\t\t\t\t\tby = 3 * (c2y - c1y) - cy,\n\t\t\t\t\tay = p2y - p1y - cy - by;\n\t\t\t\tif (type === 0) {\n\t\t\t\t\tx = ((ax * t + bx) * t + cx) * t + p1x;\n\t\t\t\t\ty = ((ay * t + by) * t + cy) * t + p1y;\n\t\t\t\t} else {\n\t\t\t\t\tif (t < tMin) {\n\t\t\t\t\t\tx = cx;\n\t\t\t\t\t\ty = cy;\n\t\t\t\t\t} else if (t > tMax) {\n\t\t\t\t\t\tx = 3 * (p2x - c2x);\n\t\t\t\t\t\ty = 3 * (p2y - c2y);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tx = (3 * ax * t + 2 * bx) * t + cx;\n\t\t\t\t\t\ty = (3 * ay * t + 2 * by) * t + cy;\n\t\t\t\t\t}\n\t\t\t\t\tif (normalized) {\n\t\t\t\t\t\tif (x === 0 && y === 0 && (t < tMin || t > tMax)) {\n\t\t\t\t\t\t\tx = c2x - c1x;\n\t\t\t\t\t\t\ty = c2y - c1y;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar len = Math.sqrt(x * x + y * y);\n\t\t\t\t\t\tif (len) {\n\t\t\t\t\t\t\tx /= len;\n\t\t\t\t\t\t\ty /= len;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (type === 3) {\n\t\t\t\t\t\tvar x2 = 6 * ax * t + 2 * bx,\n\t\t\t\t\t\t\ty2 = 6 * ay * t + 2 * by,\n\t\t\t\t\t\t\td = Math.pow(x * x + y * y, 3 / 2);\n\t\t\t\t\t\tx = d !== 0 ? (x * y2 - y * x2) / d : 0;\n\t\t\t\t\t\ty = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn type === 2 ? new Point(y, -x) : new Point(x, y);\n\t\t}\n\t\n\t\treturn { statics: {\n\t\n\t\t\tgetLength: function(v, a, b) {\n\t\t\t\tif (a === undefined)\n\t\t\t\t\ta = 0;\n\t\t\t\tif (b === undefined)\n\t\t\t\t\tb = 1;\n\t\t\t\tif (a === 0 && b === 1 && Curve.isStraight(v)) {\n\t\t\t\t\tvar dx = v[6] - v[0],\n\t\t\t\t\t\tdy = v[7] - v[1];\n\t\t\t\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t\t\t\t}\n\t\t\t\tvar ds = getLengthIntegrand(v);\n\t\t\t\treturn Numerical.integrate(ds, a, b, getIterations(a, b));\n\t\t\t},\n\t\n\t\t\tgetParameterAt: function(v, offset, start) {\n\t\t\t\tif (start === undefined)\n\t\t\t\t\tstart = offset < 0 ? 1 : 0\n\t\t\t\tif (offset === 0)\n\t\t\t\t\treturn start;\n\t\t\t\tvar abs = Math.abs,\n\t\t\t\t\tforward = offset > 0,\n\t\t\t\t\ta = forward ? start : 0,\n\t\t\t\t\tb = forward ? 1 : start,\n\t\t\t\t\tds = getLengthIntegrand(v),\n\t\t\t\t\trangeLength = Numerical.integrate(ds, a, b,\n\t\t\t\t\t\t\tgetIterations(a, b));\n\t\t\t\tif (abs(offset - rangeLength) < 1e-12) {\n\t\t\t\t\treturn forward ? b : a;\n\t\t\t\t} else if (abs(offset) > rangeLength) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tvar guess = offset / rangeLength,\n\t\t\t\t\tlength = 0;\n\t\t\t\tfunction f(t) {\n\t\t\t\t\tlength += Numerical.integrate(ds, start, t,\n\t\t\t\t\t\t\tgetIterations(start, t));\n\t\t\t\t\tstart = t;\n\t\t\t\t\treturn length - offset;\n\t\t\t\t}\n\t\t\t\treturn Numerical.findRoot(f, ds, start + guess, a, b, 32,\n\t\t\t\t\t\t1e-12);\n\t\t\t},\n\t\n\t\t\tgetPoint: function(v, t) {\n\t\t\t\treturn evaluate(v, t, 0, false);\n\t\t\t},\n\t\n\t\t\tgetTangent: function(v, t) {\n\t\t\t\treturn evaluate(v, t, 1, true);\n\t\t\t},\n\t\n\t\t\tgetWeightedTangent: function(v, t) {\n\t\t\t\treturn evaluate(v, t, 1, false);\n\t\t\t},\n\t\n\t\t\tgetNormal: function(v, t) {\n\t\t\t\treturn evaluate(v, t, 2, true);\n\t\t\t},\n\t\n\t\t\tgetWeightedNormal: function(v, t) {\n\t\t\t\treturn evaluate(v, t, 2, false);\n\t\t\t},\n\t\n\t\t\tgetCurvature: function(v, t) {\n\t\t\t\treturn evaluate(v, t, 3, false).x;\n\t\t\t}\n\t\t}};\n\t},\n\tnew function() {\n\t\n\t\tfunction addLocation(locations, param, v1, c1, t1, p1, v2, c2, t2, p2,\n\t\t\t\toverlap) {\n\t\t\tvar startConnected = param.startConnected,\n\t\t\t\tendConnected = param.endConnected,\n\t\t\t\ttMin = 4e-7,\n\t\t\t\ttMax = 1 - tMin;\n\t\t\tif (t1 == null)\n\t\t\t\tt1 = Curve.getParameterOf(v1, p1);\n\t\t\tif (t1 !== null && t1 >= (startConnected ? tMin : 0) &&\n\t\t\t\tt1 <= (endConnected ? tMax : 1)) {\n\t\t\t\tif (t2 == null)\n\t\t\t\t\tt2 = Curve.getParameterOf(v2, p2);\n\t\t\t\tif (t2 !== null && t2 >= (endConnected ? tMin : 0) &&\n\t\t\t\t\tt2 <= (startConnected ? tMax : 1)) {\n\t\t\t\t\tvar renormalize = param.renormalize;\n\t\t\t\t\tif (renormalize) {\n\t\t\t\t\t\tvar res = renormalize(t1, t2);\n\t\t\t\t\t\tt1 = res[0];\n\t\t\t\t\t\tt2 = res[1];\n\t\t\t\t\t}\n\t\t\t\t\tvar loc1 = new CurveLocation(c1, t1,\n\t\t\t\t\t\t\tp1 || Curve.getPoint(v1, t1), overlap),\n\t\t\t\t\t\tloc2 = new CurveLocation(c2, t2,\n\t\t\t\t\t\t\tp2 || Curve.getPoint(v2, t2), overlap),\n\t\t\t\t\t\tflip = loc1.getPath() === loc2.getPath()\n\t\t\t\t\t\t\t&& loc1.getIndex() > loc2.getIndex(),\n\t\t\t\t\t\tloc = flip ? loc2 : loc1,\n\t\t\t\t\t\tinclude = param.include;\n\t\t\t\t\tloc1._intersection = loc2;\n\t\t\t\t\tloc2._intersection = loc1;\n\t\t\t\t\tif (!include || include(loc)) {\n\t\t\t\t\t\tCurveLocation.insert(locations, loc, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\tfunction addCurveIntersections(v1, v2, c1, c2, locations, param,\n\t\t\t\ttMin, tMax, uMin, uMax, oldTDiff, reverse, recursion) {\n\t\t\tif (++recursion >= 24)\n\t\t\t\treturn;\n\t\t\tvar q0x = v2[0], q0y = v2[1], q3x = v2[6], q3y = v2[7],\n\t\t\t\tgetSignedDistance = Line.getSignedDistance,\n\t\t\t\td1 = getSignedDistance(q0x, q0y, q3x, q3y, v2[2], v2[3]),\n\t\t\t\td2 = getSignedDistance(q0x, q0y, q3x, q3y, v2[4], v2[5]),\n\t\t\t\tfactor = d1 * d2 > 0 ? 3 / 4 : 4 / 9,\n\t\t\t\tdMin = factor * Math.min(0, d1, d2),\n\t\t\t\tdMax = factor * Math.max(0, d1, d2),\n\t\t\t\tdp0 = getSignedDistance(q0x, q0y, q3x, q3y, v1[0], v1[1]),\n\t\t\t\tdp1 = getSignedDistance(q0x, q0y, q3x, q3y, v1[2], v1[3]),\n\t\t\t\tdp2 = getSignedDistance(q0x, q0y, q3x, q3y, v1[4], v1[5]),\n\t\t\t\tdp3 = getSignedDistance(q0x, q0y, q3x, q3y, v1[6], v1[7]),\n\t\t\t\thull = getConvexHull(dp0, dp1, dp2, dp3),\n\t\t\t\ttop = hull[0],\n\t\t\t\tbottom = hull[1],\n\t\t\t\ttMinClip,\n\t\t\t\ttMaxClip;\n\t\t\tif ((tMinClip = clipConvexHull(top, bottom, dMin, dMax)) == null ||\n\t\t\t\t(tMaxClip = clipConvexHull(top.reverse(), bottom.reverse(),\n\t\t\t\t\tdMin, dMax)) == null)\n\t\t\t\treturn;\n\t\t\tv1 = Curve.getPart(v1, tMinClip, tMaxClip);\n\t\t\tvar tDiff = tMaxClip - tMinClip,\n\t\t\t\ttMinNew = tMin + (tMax - tMin) * tMinClip,\n\t\t\t\ttMaxNew = tMin + (tMax - tMin) * tMaxClip;\n\t\t\tif (oldTDiff > 0.5 && tDiff > 0.5) {\n\t\t\t\tif (tMaxNew - tMinNew > uMax - uMin) {\n\t\t\t\t\tvar parts = Curve.subdivide(v1, 0.5),\n\t\t\t\t\t\tt = tMinNew + (tMaxNew - tMinNew) / 2;\n\t\t\t\t\taddCurveIntersections(\n\t\t\t\t\t\tv2, parts[0], c2, c1, locations, param,\n\t\t\t\t\t\tuMin, uMax, tMinNew, t, tDiff, !reverse, recursion);\n\t\t\t\t\taddCurveIntersections(\n\t\t\t\t\t\tv2, parts[1], c2, c1, locations, param,\n\t\t\t\t\t\tuMin, uMax, t, tMaxNew, tDiff, !reverse, recursion);\n\t\t\t\t} else {\n\t\t\t\t\tvar parts = Curve.subdivide(v2, 0.5),\n\t\t\t\t\t\tt = uMin + (uMax - uMin) / 2;\n\t\t\t\t\taddCurveIntersections(\n\t\t\t\t\t\tparts[0], v1, c2, c1, locations, param,\n\t\t\t\t\t\tuMin, t, tMinNew, tMaxNew, tDiff, !reverse, recursion);\n\t\t\t\t\taddCurveIntersections(\n\t\t\t\t\t\tparts[1], v1, c2, c1, locations, param,\n\t\t\t\t\t\tt, uMax, tMinNew, tMaxNew, tDiff, !reverse, recursion);\n\t\t\t\t}\n\t\t\t} else if (Math.max(uMax - uMin, tMaxNew - tMinNew)\n\t\t\t\t\t< 1e-7) {\n\t\t\t\tvar t1 = tMinNew + (tMaxNew - tMinNew) / 2,\n\t\t\t\t\tt2 = uMin + (uMax - uMin) / 2;\n\t\t\t\tv1 = c1.getValues();\n\t\t\t\tv2 = c2.getValues();\n\t\t\t\taddLocation(locations, param,\n\t\t\t\t\treverse ? v2 : v1, reverse ? c2 : c1, reverse ? t2 : t1, null,\n\t\t\t\t\treverse ? v1 : v2, reverse ? c1 : c2, reverse ? t1 : t2, null);\n\t\t\t} else if (tDiff > 1e-12) {\n\t\t\t\taddCurveIntersections(v2, v1, c2, c1, locations, param,\n\t\t\t\t\t\tuMin, uMax, tMinNew, tMaxNew, tDiff, !reverse, recursion);\n\t\t\t}\n\t\t}\n\t\n\t\tfunction getConvexHull(dq0, dq1, dq2, dq3) {\n\t\t\tvar p0 = [ 0, dq0 ],\n\t\t\t\tp1 = [ 1 / 3, dq1 ],\n\t\t\t\tp2 = [ 2 / 3, dq2 ],\n\t\t\t\tp3 = [ 1, dq3 ],\n\t\t\t\tdist1 = dq1 - (2 * dq0 + dq3) / 3,\n\t\t\t\tdist2 = dq2 - (dq0 + 2 * dq3) / 3,\n\t\t\t\thull;\n\t\t\tif (dist1 * dist2 < 0) {\n\t\t\t\thull = [[p0, p1, p3], [p0, p2, p3]];\n\t\t\t} else {\n\t\t\t\tvar distRatio = dist1 / dist2;\n\t\t\t\thull = [\n\t\t\t\t\tdistRatio >= 2 ? [p0, p1, p3]\n\t\t\t\t\t: distRatio <= .5 ? [p0, p2, p3]\n\t\t\t\t\t: [p0, p1, p2, p3],\n\t\t\t\t\t[p0, p3]\n\t\t\t\t];\n\t\t\t}\n\t\t\treturn (dist1 || dist2) < 0 ? hull.reverse() : hull;\n\t\t}\n\t\n\t\tfunction clipConvexHull(hullTop, hullBottom, dMin, dMax) {\n\t\t\tif (hullTop[0][1] < dMin) {\n\t\t\t\treturn clipConvexHullPart(hullTop, true, dMin);\n\t\t\t} else if (hullBottom[0][1] > dMax) {\n\t\t\t\treturn clipConvexHullPart(hullBottom, false, dMax);\n\t\t\t} else {\n\t\t\t\treturn hullTop[0][0];\n\t\t\t}\n\t\t}\n\t\n\t\tfunction clipConvexHullPart(part, top, threshold) {\n\t\t\tvar px = part[0][0],\n\t\t\t\tpy = part[0][1];\n\t\t\tfor (var i = 1, l = part.length; i < l; i++) {\n\t\t\t\tvar qx = part[i][0],\n\t\t\t\t\tqy = part[i][1];\n\t\t\t\tif (top ? qy >= threshold : qy <= threshold) {\n\t\t\t\t\treturn qy === threshold ? qx\n\t\t\t\t\t\t\t: px + (threshold - py) * (qx - px) / (qy - py);\n\t\t\t\t}\n\t\t\t\tpx = qx;\n\t\t\t\tpy = qy;\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t\n\t\tfunction addCurveLineIntersections(v1, v2, c1, c2, locations, param) {\n\t\t\tvar flip = Curve.isStraight(v1),\n\t\t\t\tvc = flip ? v2 : v1,\n\t\t\t\tvl = flip ? v1 : v2,\n\t\t\t\tlx1 = vl[0], ly1 = vl[1],\n\t\t\t\tlx2 = vl[6], ly2 = vl[7],\n\t\t\t\tldx = lx2 - lx1,\n\t\t\t\tldy = ly2 - ly1,\n\t\t\t\tangle = Math.atan2(-ldy, ldx),\n\t\t\t\tsin = Math.sin(angle),\n\t\t\t\tcos = Math.cos(angle),\n\t\t\t\trvc = [];\n\t\t\tfor(var i = 0; i < 8; i += 2) {\n\t\t\t\tvar x = vc[i] - lx1,\n\t\t\t\t\ty = vc[i + 1] - ly1;\n\t\t\t\trvc.push(\n\t\t\t\t\tx * cos - y * sin,\n\t\t\t\t\tx * sin + y * cos);\n\t\t\t}\n\t\t\tvar roots = [],\n\t\t\t\tcount = Curve.solveCubic(rvc, 1, 0, roots, 0, 1);\n\t\t\tfor (var i = 0; i < count; i++) {\n\t\t\t\tvar tc = roots[i],\n\t\t\t\t\tpc = Curve.getPoint(vc, tc),\n\t\t\t\t\ttl = Curve.getParameterOf(vl, pc);\n\t\t\t\tif (tl !== null) {\n\t\t\t\t\tvar pl = Curve.getPoint(vl, tl),\n\t\t\t\t\t\tt1 = flip ? tl : tc,\n\t\t\t\t\t\tt2 = flip ? tc : tl;\n\t\t\t\t\tif (!param.endConnected || t2 > Numerical.CURVETIME_EPSILON) {\n\t\t\t\t\t\taddLocation(locations, param,\n\t\t\t\t\t\t\t\tv1, c1, t1, flip ? pl : pc,\n\t\t\t\t\t\t\t\tv2, c2, t2, flip ? pc : pl);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\tfunction addLineIntersection(v1, v2, c1, c2, locations, param) {\n\t\t\tvar pt = Line.intersect(\n\t\t\t\t\tv1[0], v1[1], v1[6], v1[7],\n\t\t\t\t\tv2[0], v2[1], v2[6], v2[7]);\n\t\t\tif (pt) {\n\t\t\t\taddLocation(locations, param, v1, c1, null, pt, v2, c2, null, pt);\n\t\t\t}\n\t\t}\n\t\n\t\treturn { statics: {\n\t\t\t_getIntersections: function(v1, v2, c1, c2, locations, param) {\n\t\t\t\tif (!v2) {\n\t\t\t\t\treturn Curve._getSelfIntersection(v1, c1, locations, param);\n\t\t\t\t}\n\t\t\t\tvar c1p1x = v1[0], c1p1y = v1[1],\n\t\t\t\t\tc1p2x = v1[6], c1p2y = v1[7],\n\t\t\t\t\tc2p1x = v2[0], c2p1y = v2[1],\n\t\t\t\t\tc2p2x = v2[6], c2p2y = v2[7],\n\t\t\t\t\tc1s1x = (3 * v1[2] + c1p1x) / 4,\n\t\t\t\t\tc1s1y = (3 * v1[3] + c1p1y) / 4,\n\t\t\t\t\tc1s2x = (3 * v1[4] + c1p2x) / 4,\n\t\t\t\t\tc1s2y = (3 * v1[5] + c1p2y) / 4,\n\t\t\t\t\tc2s1x = (3 * v2[2] + c2p1x) / 4,\n\t\t\t\t\tc2s1y = (3 * v2[3] + c2p1y) / 4,\n\t\t\t\t\tc2s2x = (3 * v2[4] + c2p2x) / 4,\n\t\t\t\t\tc2s2y = (3 * v2[5] + c2p2y) / 4,\n\t\t\t\t\tmin = Math.min,\n\t\t\t\t\tmax = Math.max;\n\t\t\t\tif (!(\tmax(c1p1x, c1s1x, c1s2x, c1p2x) >=\n\t\t\t\t\t\tmin(c2p1x, c2s1x, c2s2x, c2p2x) &&\n\t\t\t\t\t\tmin(c1p1x, c1s1x, c1s2x, c1p2x) <=\n\t\t\t\t\t\tmax(c2p1x, c2s1x, c2s2x, c2p2x) &&\n\t\t\t\t\t\tmax(c1p1y, c1s1y, c1s2y, c1p2y) >=\n\t\t\t\t\t\tmin(c2p1y, c2s1y, c2s2y, c2p2y) &&\n\t\t\t\t\t\tmin(c1p1y, c1s1y, c1s2y, c1p2y) <=\n\t\t\t\t\t\tmax(c2p1y, c2s1y, c2s2y, c2p2y)))\n\t\t\t\t\treturn locations;\n\t\t\t\tif (!param.startConnected && !param.endConnected) {\n\t\t\t\t\tvar overlaps = Curve.getOverlaps(v1, v2);\n\t\t\t\t\tif (overlaps) {\n\t\t\t\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\t\t\t\tvar overlap = overlaps[i];\n\t\t\t\t\t\t\taddLocation(locations, param,\n\t\t\t\t\t\t\t\tv1, c1, overlap[0], null,\n\t\t\t\t\t\t\t\tv2, c2, overlap[1], null, true);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn locations;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tvar straight1 = Curve.isStraight(v1),\n\t\t\t\t\tstraight2 = Curve.isStraight(v2),\n\t\t\t\t\tstraight = straight1 && straight2,\n\t\t\t\t\tepsilon = 1e-12,\n\t\t\t\t\tbefore = locations.length;\n\t\t\t\t(straight\n\t\t\t\t\t? addLineIntersection\n\t\t\t\t\t: straight1 || straight2\n\t\t\t\t\t\t? addCurveLineIntersections\n\t\t\t\t\t\t: addCurveIntersections)(\n\t\t\t\t\t\t\tv1, v2, c1, c2, locations, param,\n\t\t\t\t\t\t\t0, 1, 0, 1, 0, false, 0);\n\t\t\t\tif (straight && locations.length > before)\n\t\t\t\t\treturn locations;\n\t\t\t\tvar c1p1 = new Point(c1p1x, c1p1y),\n\t\t\t\t\tc1p2 = new Point(c1p2x, c1p2y),\n\t\t\t\t\tc2p1 = new Point(c2p1x, c2p1y),\n\t\t\t\t\tc2p2 = new Point(c2p2x, c2p2y);\n\t\t\t\tif (c1p1.isClose(c2p1, epsilon))\n\t\t\t\t\taddLocation(locations, param, v1, c1, 0, c1p1, v2, c2, 0, c2p1);\n\t\t\t\tif (!param.startConnected && c1p1.isClose(c2p2, epsilon))\n\t\t\t\t\taddLocation(locations, param, v1, c1, 0, c1p1, v2, c2, 1, c2p2);\n\t\t\t\tif (!param.endConnected && c1p2.isClose(c2p1, epsilon))\n\t\t\t\t\taddLocation(locations, param, v1, c1, 1, c1p2, v2, c2, 0, c2p1);\n\t\t\t\tif (c1p2.isClose(c2p2, epsilon))\n\t\t\t\t\taddLocation(locations, param, v1, c1, 1, c1p2, v2, c2, 1, c2p2);\n\t\t\t\treturn locations;\n\t\t\t},\n\t\n\t\t\t_getSelfIntersection: function(v1, c1, locations, param) {\n\t\t\t\tvar p1x = v1[0], p1y = v1[1],\n\t\t\t\t\th1x = v1[2], h1y = v1[3],\n\t\t\t\t\th2x = v1[4], h2y = v1[5],\n\t\t\t\t\tp2x = v1[6], p2y = v1[7];\n\t\t\t\tvar line = new Line(p1x, p1y, p2x, p2y, false),\n\t\t\t\t\tside1 = line.getSide(new Point(h1x, h1y), true),\n\t\t\t\t\tside2 = line.getSide(new Point(h2x, h2y), true);\n\t\t\t\tif (side1 === side2) {\n\t\t\t\t\tvar edgeSum = (p1x - h2x) * (h1y - p2y)\n\t\t\t\t\t\t\t\t+ (h1x - p2x) * (h2y - p1y);\n\t\t\t\t\tif (edgeSum * side1 > 0)\n\t\t\t\t\t\treturn locations;\n\t\t\t\t}\n\t\t\t\tvar ax = p2x - 3 * h2x + 3 * h1x - p1x,\n\t\t\t\t\tbx = h2x - 2 * h1x + p1x,\n\t\t\t\t\tcx = h1x - p1x,\n\t\t\t\t\tay = p2y - 3 * h2y + 3 * h1y - p1y,\n\t\t\t\t\tby = h2y - 2 * h1y + p1y,\n\t\t\t\t\tcy = h1y - p1y,\n\t\t\t\t\tac = ay * cx - ax * cy,\n\t\t\t\t\tab = ay * bx - ax * by,\n\t\t\t\t\tbc = by * cx - bx * cy;\n\t\t\t\tif (ac * ac - 4 * ab * bc < 0) {\n\t\t\t\t\tvar roots = [],\n\t\t\t\t\t\ttSplit,\n\t\t\t\t\t\tcount = Numerical.solveCubic(\n\t\t\t\t\t\t\t\tax * ax\t + ay * ay,\n\t\t\t\t\t\t\t\t3 * (ax * bx + ay * by),\n\t\t\t\t\t\t\t\t2 * (bx * bx + by * by) + ax * cx + ay * cy,\n\t\t\t\t\t\t\t\tbx * cx + by * cy,\n\t\t\t\t\t\t\t\troots, 0, 1);\n\t\t\t\t\tif (count > 0) {\n\t\t\t\t\t\tfor (var i = 0, maxCurvature = 0; i < count; i++) {\n\t\t\t\t\t\t\tvar curvature = Math.abs(\n\t\t\t\t\t\t\t\t\tc1.getCurvatureAt(roots[i], true));\n\t\t\t\t\t\t\tif (curvature > maxCurvature) {\n\t\t\t\t\t\t\t\tmaxCurvature = curvature;\n\t\t\t\t\t\t\t\ttSplit = roots[i];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar parts = Curve.subdivide(v1, tSplit);\n\t\t\t\t\t\tparam.endConnected = true;\n\t\t\t\t\t\tparam.renormalize = function(t1, t2) {\n\t\t\t\t\t\t\treturn [t1 * tSplit, t2 * (1 - tSplit) + tSplit];\n\t\t\t\t\t\t};\n\t\t\t\t\t\tCurve._getIntersections(parts[0], parts[1], c1, c1,\n\t\t\t\t\t\t\t\tlocations, param);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn locations;\n\t\t\t},\n\t\n\t\t\tgetOverlaps: function(v1, v2) {\n\t\t\t\tvar abs = Math.abs,\n\t\t\t\t\ttimeEpsilon = 4e-7,\n\t\t\t\t\tgeomEpsilon = 2e-7,\n\t\t\t\t\tstraight1 = Curve.isStraight(v1),\n\t\t\t\t\tstraight2 = Curve.isStraight(v2),\n\t\t\t\t\tstraight =\tstraight1 && straight2;\n\t\n\t\t\t\tfunction getLineLengthSquared(v) {\n\t\t\t\t\tvar x = v[6] - v[0],\n\t\t\t\t\t\ty = v[7] - v[1];\n\t\t\t\t\treturn x * x + y * y;\n\t\t\t\t}\n\t\n\t\t\t\tif (straight) {\n\t\t\t\t\tvar flip = getLineLengthSquared(v1) < getLineLengthSquared(v2),\n\t\t\t\t\t\tl1 = flip ? v2 : v1,\n\t\t\t\t\t\tl2 = flip ? v1 : v2,\n\t\t\t\t\t\tline = new Line(l1[0], l1[1], l1[6], l1[7]);\n\t\t\t\t\tif (line.getDistance(new Point(l2[0], l2[1])) > geomEpsilon ||\n\t\t\t\t\t\tline.getDistance(new Point(l2[6], l2[7])) > geomEpsilon)\n\t\t\t\t\t\treturn null;\n\t\t\t\t} else if (straight1 ^ straight2) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\n\t\t\t\tvar v = [v1, v2],\n\t\t\t\t\tpairs = [];\n\t\t\t\tfor (var i = 0, t1 = 0;\n\t\t\t\t\t\ti < 2 && pairs.length < 2;\n\t\t\t\t\t\ti += t1 === 0 ? 0 : 1, t1 = t1 ^ 1) {\n\t\t\t\t\tvar t2 = Curve.getParameterOf(v[i ^ 1], new Point(\n\t\t\t\t\t\t\tv[i][t1 === 0 ? 0 : 6],\n\t\t\t\t\t\t\tv[i][t1 === 0 ? 1 : 7]));\n\t\t\t\t\tif (t2 != null) {\n\t\t\t\t\t\tvar pair = i === 0 ? [t1, t2] : [t2, t1];\n\t\t\t\t\t\tif (pairs.length === 0 ||\n\t\t\t\t\t\t\tabs(pair[0] - pairs[0][0]) > timeEpsilon &&\n\t\t\t\t\t\t\tabs(pair[1] - pairs[0][1]) > timeEpsilon)\n\t\t\t\t\t\t\tpairs.push(pair);\n\t\t\t\t\t}\n\t\t\t\t\tif (i === 1 && pairs.length === 0)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (pairs.length !== 2) {\n\t\t\t\t\tpairs = null;\n\t\t\t\t} else if (!straight) {\n\t\t\t\t\tvar o1 = Curve.getPart(v1, pairs[0][0], pairs[1][0]),\n\t\t\t\t\t\to2 = Curve.getPart(v2, pairs[0][1], pairs[1][1]);\n\t\t\t\t\tif (abs(o2[2] - o1[2]) > geomEpsilon ||\n\t\t\t\t\t\tabs(o2[3] - o1[3]) > geomEpsilon ||\n\t\t\t\t\t\tabs(o2[4] - o1[4]) > geomEpsilon ||\n\t\t\t\t\t\tabs(o2[5] - o1[5]) > geomEpsilon)\n\t\t\t\t\t\tpairs = null;\n\t\t\t\t}\n\t\t\t\treturn pairs;\n\t\t\t}\n\t\t}};\n\t});\n\t\n\tvar CurveLocation = Base.extend({\n\t\t_class: 'CurveLocation',\n\t\tbeans: true,\n\t\n\t\tinitialize: function CurveLocation(curve, parameter, point,\n\t\t\t\t_overlap, _distance) {\n\t\t\tif (parameter > 0.9999996) {\n\t\t\t\tvar next = curve.getNext();\n\t\t\t\tif (next) {\n\t\t\t\t\tparameter = 0;\n\t\t\t\t\tcurve = next;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._id = UID.get(CurveLocation);\n\t\t\tthis._setCurve(curve);\n\t\t\tthis._parameter = parameter;\n\t\t\tthis._point = point || curve.getPointAt(parameter, true);\n\t\t\tthis._overlap = _overlap;\n\t\t\tthis._distance = _distance;\n\t\t\tthis._intersection = this._next = this._prev = null;\n\t\t},\n\t\n\t\t_setCurve: function(curve) {\n\t\t\tvar path = curve._path;\n\t\t\tthis._version = path ? path._version : 0;\n\t\t\tthis._curve = curve;\n\t\t\tthis._segment = null;\n\t\t\tthis._segment1 = curve._segment1;\n\t\t\tthis._segment2 = curve._segment2;\n\t\t},\n\t\n\t\t_setSegment: function(segment) {\n\t\t\tthis._setCurve(segment.getCurve());\n\t\t\tthis._segment = segment;\n\t\t\tthis._parameter = segment === this._segment1 ? 0 : 1;\n\t\t\tthis._point = segment._point.clone();\n\t\t},\n\t\n\t\tgetSegment: function() {\n\t\t\tvar curve = this.getCurve(),\n\t\t\t\tsegment = this._segment;\n\t\t\tif (!segment) {\n\t\t\t\tvar parameter = this.getParameter();\n\t\t\t\tif (parameter === 0) {\n\t\t\t\t\tsegment = curve._segment1;\n\t\t\t\t} else if (parameter === 1) {\n\t\t\t\t\tsegment = curve._segment2;\n\t\t\t\t} else if (parameter != null) {\n\t\t\t\t\tsegment = curve.getPartLength(0, parameter)\n\t\t\t\t\t\t< curve.getPartLength(parameter, 1)\n\t\t\t\t\t\t\t? curve._segment1\n\t\t\t\t\t\t\t: curve._segment2;\n\t\t\t\t}\n\t\t\t\tthis._segment = segment;\n\t\t\t}\n\t\t\treturn segment;\n\t\t},\n\t\n\t\tgetCurve: function() {\n\t\t\tvar curve = this._curve,\n\t\t\t\tpath = curve && curve._path,\n\t\t\t\tthat = this;\n\t\t\tif (path && path._version !== this._version) {\n\t\t\t\tcurve = this._parameter = this._curve = this._offset = null;\n\t\t\t}\n\t\n\t\t\tfunction trySegment(segment) {\n\t\t\t\tvar curve = segment && segment.getCurve();\n\t\t\t\tif (curve && (that._parameter = curve.getParameterOf(that._point))\n\t\t\t\t\t\t!= null) {\n\t\t\t\t\tthat._setCurve(curve);\n\t\t\t\t\tthat._segment = segment;\n\t\t\t\t\treturn curve;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn curve\n\t\t\t\t|| trySegment(this._segment)\n\t\t\t\t|| trySegment(this._segment1)\n\t\t\t\t|| trySegment(this._segment2.getPrevious());\n\t\t},\n\t\n\t\tgetPath: function() {\n\t\t\tvar curve = this.getCurve();\n\t\t\treturn curve && curve._path;\n\t\t},\n\t\n\t\tgetIndex: function() {\n\t\t\tvar curve = this.getCurve();\n\t\t\treturn curve && curve.getIndex();\n\t\t},\n\t\n\t\tgetParameter: function() {\n\t\t\tvar curve = this.getCurve(),\n\t\t\t\tparameter = this._parameter;\n\t\t\treturn curve && parameter == null\n\t\t\t\t? this._parameter = curve.getParameterOf(this._point)\n\t\t\t\t: parameter;\n\t\t},\n\t\n\t\tgetPoint: function() {\n\t\t\treturn this._point;\n\t\t},\n\t\n\t\tgetOffset: function() {\n\t\t\tvar offset = this._offset;\n\t\t\tif (offset == null) {\n\t\t\t\toffset = 0;\n\t\t\t\tvar path = this.getPath(),\n\t\t\t\t\tindex = this.getIndex();\n\t\t\t\tif (path && index != null) {\n\t\t\t\t\tvar curves = path.getCurves();\n\t\t\t\t\tfor (var i = 0; i < index; i++)\n\t\t\t\t\t\toffset += curves[i].getLength();\n\t\t\t\t}\n\t\t\t\tthis._offset = offset += this.getCurveOffset();\n\t\t\t}\n\t\t\treturn offset;\n\t\t},\n\t\n\t\tgetCurveOffset: function() {\n\t\t\tvar curve = this.getCurve(),\n\t\t\t\tparameter = this.getParameter();\n\t\t\treturn parameter != null && curve && curve.getPartLength(0, parameter);\n\t\t},\n\t\n\t\tgetIntersection: function() {\n\t\t\treturn this._intersection;\n\t\t},\n\t\n\t\tgetDistance: function() {\n\t\t\treturn this._distance;\n\t\t},\n\t\n\t\tdivide: function() {\n\t\t\tvar curve = this.getCurve(),\n\t\t\t\tres = null;\n\t\t\tif (curve) {\n\t\t\t\tres = curve.divide(this.getParameter(), true);\n\t\t\t\tif (res)\n\t\t\t\t\tthis._setSegment(res._segment1);\n\t\t\t}\n\t\t\treturn res;\n\t\t},\n\t\n\t\tsplit: function() {\n\t\t\tvar curve = this.getCurve();\n\t\t\treturn curve ? curve.split(this.getParameter(), true) : null;\n\t\t},\n\t\n\t\tequals: function(loc, _ignoreOther) {\n\t\t\tvar res = this === loc,\n\t\t\t\tepsilon = 2e-7;\n\t\t\tif (!res && loc instanceof CurveLocation\n\t\t\t\t\t&& this.getPath() === loc.getPath()\n\t\t\t\t\t&& this.getPoint().isClose(loc.getPoint(), epsilon)) {\n\t\t\t\tvar c1 = this.getCurve(),\n\t\t\t\t\tc2 = loc.getCurve(),\n\t\t\t\t\tabs = Math.abs,\n\t\t\t\t\tdiff = abs(\n\t\t\t\t\t\t((c1.isLast() && c2.isFirst() ? -1 : c1.getIndex())\n\t\t\t\t\t\t\t\t+ this.getParameter()) -\n\t\t\t\t\t\t((c2.isLast() && c1.isFirst() ? -1 : c2.getIndex())\n\t\t\t\t\t\t\t\t+ loc.getParameter()));\n\t\t\t\tres = (diff < 4e-7\n\t\t\t\t\t|| ((diff = abs(this.getOffset() - loc.getOffset())) < epsilon\n\t\t\t\t\t\t|| abs(this.getPath().getLength() - diff) < epsilon))\n\t\t\t\t\t&& (_ignoreOther\n\t\t\t\t\t\t|| (!this._intersection && !loc._intersection\n\t\t\t\t\t\t\t|| this._intersection && this._intersection.equals(\n\t\t\t\t\t\t\t\t\tloc._intersection, true)));\n\t\t\t}\n\t\t\treturn res;\n\t\t},\n\t\n\t\ttoString: function() {\n\t\t\tvar parts = [],\n\t\t\t\tpoint = this.getPoint(),\n\t\t\t\tf = Formatter.instance;\n\t\t\tif (point)\n\t\t\t\tparts.push('point: ' + point);\n\t\t\tvar index = this.getIndex();\n\t\t\tif (index != null)\n\t\t\t\tparts.push('index: ' + index);\n\t\t\tvar parameter = this.getParameter();\n\t\t\tif (parameter != null)\n\t\t\t\tparts.push('parameter: ' + f.number(parameter));\n\t\t\tif (this._distance != null)\n\t\t\t\tparts.push('distance: ' + f.number(this._distance));\n\t\t\treturn '{ ' + parts.join(', ') + ' }';\n\t\t},\n\t\n\t\tisTouching: function() {\n\t\t\tvar inter = this._intersection;\n\t\t\tif (inter && this.getTangent().isCollinear(inter.getTangent())) {\n\t\t\t\tvar curve1 = this.getCurve(),\n\t\t\t\t\tcurve2 = inter.getCurve();\n\t\t\t\treturn !(curve1.isStraight() && curve2.isStraight()\n\t\t\t\t\t\t&& curve1.getLine().intersect(curve2.getLine()));\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\n\t\tisCrossing: function() {\n\t\t\tvar inter = this._intersection;\n\t\t\tif (!inter)\n\t\t\t\treturn false;\n\t\t\tvar t1 = this.getParameter(),\n\t\t\t\tt2 = inter.getParameter(),\n\t\t\t\ttMin = 4e-7,\n\t\t\t\ttMax = 1 - tMin;\n\t\t\tif (t1 >= tMin && t1 <= tMax || t2 >= tMin && t2 <= tMax)\n\t\t\t\treturn !this.isTouching();\n\t\t\tvar c2 = this.getCurve(),\n\t\t\t\tc1 = c2.getPrevious(),\n\t\t\t\tc4 = inter.getCurve(),\n\t\t\t\tc3 = c4.getPrevious(),\n\t\t\t\tPI = Math.PI;\n\t\t\tif (!c1 || !c3)\n\t\t\t\treturn false;\n\t\n\t\t\tfunction isInRange(angle, min, max) {\n\t\t\t\treturn min < max\n\t\t\t\t\t? angle > min && angle < max\n\t\t\t\t\t: angle > min && angle <= PI || angle >= -PI && angle < max;\n\t\t\t}\n\t\n\t\t\tvar a1 = c1.getTangentAt(tMax, true).negate().getAngleInRadians(),\n\t\t\t\ta2 = c2.getTangentAt(tMin, true).getAngleInRadians(),\n\t\t\t\ta3 = c3.getTangentAt(tMax, true).negate().getAngleInRadians(),\n\t\t\t\ta4 = c4.getTangentAt(tMin, true).getAngleInRadians();\n\t\n\t\t\treturn (isInRange(a3, a1, a2) ^ isInRange(a4, a1, a2))\n\t\t\t\t&& (isInRange(a3, a2, a1) ^ isInRange(a4, a2, a1));\n\t\t},\n\t\n\t\tisOverlap: function() {\n\t\t\treturn !!this._overlap;\n\t\t}\n\t}, Base.each(Curve.evaluateMethods, function(name) {\n\t\tvar get = name + 'At';\n\t\tthis[name] = function() {\n\t\t\tvar parameter = this.getParameter(),\n\t\t\t\tcurve = this.getCurve();\n\t\t\treturn parameter != null && curve && curve[get](parameter, true);\n\t\t};\n\t}, {\n\t\tpreserve: true\n\t}),\n\tnew function() {\n\t\n\t\tfunction insert(locations, loc, merge) {\n\t\t\tvar length = locations.length,\n\t\t\t\tl = 0,\n\t\t\t\tr = length - 1;\n\t\n\t\t\tfunction search(index, dir) {\n\t\t\t\tfor (var i = index + dir; i >= -1 && i <= length; i += dir) {\n\t\t\t\t\tvar loc2 = locations[((i % length) + length) % length];\n\t\t\t\t\tif (!loc.getPoint().isClose(loc2.getPoint(),\n\t\t\t\t\t\t\t2e-7))\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tif (loc.equals(loc2))\n\t\t\t\t\t\treturn loc2;\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\n\t\t\twhile (l <= r) {\n\t\t\t\tvar m = (l + r) >>> 1,\n\t\t\t\t\tloc2 = locations[m],\n\t\t\t\t\tfound;\n\t\t\t\tif (merge && (found = loc.equals(loc2) ? loc2\n\t\t\t\t\t\t: (search(m, -1) || search(m, 1)))) {\n\t\t\t\t\tif (loc._overlap) {\n\t\t\t\t\t\tfound._overlap = found._intersection._overlap = true;\n\t\t\t\t\t}\n\t\t\t\t\treturn found;\n\t\t\t\t}\n\t\t\tvar path1 = loc.getPath(),\n\t\t\t\tpath2 = loc2.getPath(),\n\t\t\t\tdiff = path1 === path2\n\t\t\t\t\t? (loc.getIndex() + loc.getParameter())\n\t\t\t\t\t- (loc2.getIndex() + loc2.getParameter())\n\t\t\t\t\t: path1._id - path2._id;\n\t\t\t\tif (diff < 0) {\n\t\t\t\t\tr = m - 1;\n\t\t\t\t} else {\n\t\t\t\t\tl = m + 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlocations.splice(l, 0, loc);\n\t\t\treturn loc;\n\t\t}\n\t\n\t\treturn { statics: {\n\t\t\tinsert: insert,\n\t\n\t\t\texpand: function(locations) {\n\t\t\t\tvar expanded = locations.slice();\n\t\t\t\tfor (var i = 0, l = locations.length; i < l; i++) {\n\t\t\t\t\tinsert(expanded, locations[i]._intersection, false);\n\t\t\t\t}\n\t\t\t\treturn expanded;\n\t\t\t}\n\t\t}};\n\t});\n\t\n\tvar PathItem = Item.extend({\n\t\t_class: 'PathItem',\n\t\n\t\tinitialize: function PathItem() {\n\t\t},\n\t\n\t\tgetIntersections: function(path, include, _matrix, _returnFirst) {\n\t\t\tvar self = this === path || !path,\n\t\t\t\tmatrix1 = this._matrix.orNullIfIdentity(),\n\t\t\t\tmatrix2 = self ? matrix1\n\t\t\t\t\t: (_matrix || path._matrix).orNullIfIdentity();\n\t\t\tif (!self && !this.getBounds(matrix1).touches(path.getBounds(matrix2)))\n\t\t\t\treturn [];\n\t\t\tvar curves1 = this.getCurves(),\n\t\t\t\tcurves2 = self ? curves1 : path.getCurves(),\n\t\t\t\tlength1 = curves1.length,\n\t\t\t\tlength2 = self ? length1 : curves2.length,\n\t\t\t\tvalues2 = [],\n\t\t\t\tarrays = [],\n\t\t\t\tlocations,\n\t\t\t\tpath;\n\t\t\tfor (var i = 0; i < length2; i++)\n\t\t\t\tvalues2[i] = curves2[i].getValues(matrix2);\n\t\t\tfor (var i = 0; i < length1; i++) {\n\t\t\t\tvar curve1 = curves1[i],\n\t\t\t\t\tvalues1 = self ? values2[i] : curve1.getValues(matrix1),\n\t\t\t\t\tpath1 = curve1.getPath();\n\t\t\t\tif (path1 !== path) {\n\t\t\t\t\tpath = path1;\n\t\t\t\t\tlocations = [];\n\t\t\t\t\tarrays.push(locations);\n\t\t\t\t}\n\t\t\t\tif (self) {\n\t\t\t\t\tCurve._getSelfIntersection(values1, curve1, locations, {\n\t\t\t\t\t\tinclude: include,\n\t\t\t\t\t\tstartConnected: length1 === 1 &&\n\t\t\t\t\t\t\t\tcurve1.getPoint1().equals(curve1.getPoint2())\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tfor (var j = self ? i + 1 : 0; j < length2; j++) {\n\t\t\t\t\tif (_returnFirst && locations.length)\n\t\t\t\t\t\treturn locations;\n\t\t\t\t\tvar curve2 = curves2[j];\n\t\t\t\t\tCurve._getIntersections(\n\t\t\t\t\t\tvalues1, values2[j], curve1, curve2, locations,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tinclude: include,\n\t\t\t\t\t\t\tstartConnected: self && curve1.getPrevious() === curve2,\n\t\t\t\t\t\t\tendConnected: self && curve1.getNext() === curve2\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\tlocations = [];\n\t\t\tfor (var i = 0, l = arrays.length; i < l; i++) {\n\t\t\t\tlocations.push.apply(locations, arrays[i]);\n\t\t\t}\n\t\t\treturn locations;\n\t\t},\n\t\n\t\tgetCrossings: function(path) {\n\t\t\treturn this.getIntersections(path, function(inter) {\n\t\t\t\treturn inter.isCrossing();\n\t\t\t});\n\t\t},\n\t\n\t\t_asPathItem: function() {\n\t\t\treturn this;\n\t\t},\n\t\n\t\tsetPathData: function(data) {\n\t\n\t\t\tvar parts = data.match(/[mlhvcsqtaz][^mlhvcsqtaz]*/ig),\n\t\t\t\tcoords,\n\t\t\t\trelative = false,\n\t\t\t\tprevious,\n\t\t\t\tcontrol,\n\t\t\t\tcurrent = new Point(),\n\t\t\t\tstart = new Point();\n\t\n\t\t\tfunction getCoord(index, coord) {\n\t\t\t\tvar val = +coords[index];\n\t\t\t\tif (relative)\n\t\t\t\t\tval += current[coord];\n\t\t\t\treturn val;\n\t\t\t}\n\t\n\t\t\tfunction getPoint(index) {\n\t\t\t\treturn new Point(\n\t\t\t\t\tgetCoord(index, 'x'),\n\t\t\t\t\tgetCoord(index + 1, 'y')\n\t\t\t\t);\n\t\t\t}\n\t\n\t\t\tthis.clear();\n\t\n\t\t\tfor (var i = 0, l = parts && parts.length; i < l; i++) {\n\t\t\t\tvar part = parts[i],\n\t\t\t\t\tcommand = part[0],\n\t\t\t\t\tlower = command.toLowerCase();\n\t\t\t\tcoords = part.match(/[+-]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?/g);\n\t\t\t\tvar length = coords && coords.length;\n\t\t\t\trelative = command === lower;\n\t\t\t\tif (previous === 'z' && !/[mz]/.test(lower))\n\t\t\t\t\tthis.moveTo(current = start);\n\t\t\t\tswitch (lower) {\n\t\t\t\tcase 'm':\n\t\t\t\tcase 'l':\n\t\t\t\t\tvar move = lower === 'm';\n\t\t\t\t\tfor (var j = 0; j < length; j += 2)\n\t\t\t\t\t\tthis[j === 0 && move ? 'moveTo' : 'lineTo'](\n\t\t\t\t\t\t\t\tcurrent = getPoint(j));\n\t\t\t\t\tcontrol = current;\n\t\t\t\t\tif (move)\n\t\t\t\t\t\tstart = current;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'h':\n\t\t\t\tcase 'v':\n\t\t\t\t\tvar coord = lower === 'h' ? 'x' : 'y';\n\t\t\t\t\tfor (var j = 0; j < length; j++) {\n\t\t\t\t\t\tcurrent[coord] = getCoord(j, coord);\n\t\t\t\t\t\tthis.lineTo(current);\n\t\t\t\t\t}\n\t\t\t\t\tcontrol = current;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'c':\n\t\t\t\t\tfor (var j = 0; j < length; j += 6) {\n\t\t\t\t\t\tthis.cubicCurveTo(\n\t\t\t\t\t\t\t\tgetPoint(j),\n\t\t\t\t\t\t\t\tcontrol = getPoint(j + 2),\n\t\t\t\t\t\t\t\tcurrent = getPoint(j + 4));\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 's':\n\t\t\t\t\tfor (var j = 0; j < length; j += 4) {\n\t\t\t\t\t\tthis.cubicCurveTo(\n\t\t\t\t\t\t\t\t/[cs]/.test(previous)\n\t\t\t\t\t\t\t\t\t\t? current.multiply(2).subtract(control)\n\t\t\t\t\t\t\t\t\t\t: current,\n\t\t\t\t\t\t\t\tcontrol = getPoint(j),\n\t\t\t\t\t\t\t\tcurrent = getPoint(j + 2));\n\t\t\t\t\t\tprevious = lower;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'q':\n\t\t\t\t\tfor (var j = 0; j < length; j += 4) {\n\t\t\t\t\t\tthis.quadraticCurveTo(\n\t\t\t\t\t\t\t\tcontrol = getPoint(j),\n\t\t\t\t\t\t\t\tcurrent = getPoint(j + 2));\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 't':\n\t\t\t\t\tfor (var j = 0; j < length; j += 2) {\n\t\t\t\t\t\tthis.quadraticCurveTo(\n\t\t\t\t\t\t\t\tcontrol = (/[qt]/.test(previous)\n\t\t\t\t\t\t\t\t\t\t? current.multiply(2).subtract(control)\n\t\t\t\t\t\t\t\t\t\t: current),\n\t\t\t\t\t\t\t\tcurrent = getPoint(j));\n\t\t\t\t\t\tprevious = lower;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'a':\n\t\t\t\t\tfor (var j = 0; j < length; j += 7) {\n\t\t\t\t\t\tthis.arcTo(current = getPoint(j + 5),\n\t\t\t\t\t\t\t\tnew Size(+coords[j], +coords[j + 1]),\n\t\t\t\t\t\t\t\t+coords[j + 2], +coords[j + 4], +coords[j + 3]);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'z':\n\t\t\t\t\tthis.closePath(true);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tprevious = lower;\n\t\t\t}\n\t\t},\n\t\n\t\t_canComposite: function() {\n\t\t\treturn !(this.hasFill() && this.hasStroke());\n\t\t},\n\t\n\t\t_contains: function(point) {\n\t\t\tvar winding = this._getWinding(point, false, true);\n\t\t\treturn !!(this.getWindingRule() === 'evenodd' ? winding & 1 : winding);\n\t\t}\n\t\n\t});\n\t\n\tvar Path = PathItem.extend({\n\t\t_class: 'Path',\n\t\t_serializeFields: {\n\t\t\tsegments: [],\n\t\t\tclosed: false\n\t\t},\n\t\n\t\tinitialize: function Path(arg) {\n\t\t\tthis._closed = false;\n\t\t\tthis._segments = [];\n\t\t\tthis._version = 0;\n\t\t\tvar segments = Array.isArray(arg)\n\t\t\t\t? typeof arg[0] === 'object'\n\t\t\t\t\t? arg\n\t\t\t\t\t: arguments\n\t\t\t\t: arg && (arg.size === undefined && (arg.x !== undefined\n\t\t\t\t\t\t|| arg.point !== undefined))\n\t\t\t\t\t? arguments\n\t\t\t\t\t: null;\n\t\t\tif (segments && segments.length > 0) {\n\t\t\t\tthis.setSegments(segments);\n\t\t\t} else {\n\t\t\t\tthis._curves = undefined;\n\t\t\t\tthis._selectedSegmentState = 0;\n\t\t\t\tif (!segments && typeof arg === 'string') {\n\t\t\t\t\tthis.setPathData(arg);\n\t\t\t\t\targ = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._initialize(!segments && arg);\n\t\t},\n\t\n\t\t_equals: function(item) {\n\t\t\treturn this._closed === item._closed\n\t\t\t\t\t&& Base.equals(this._segments, item._segments);\n\t\t},\n\t\n\t\tclone: function(insert) {\n\t\t\tvar copy = new Path(Item.NO_INSERT);\n\t\t\tcopy.setSegments(this._segments);\n\t\t\tcopy._closed = this._closed;\n\t\t\tif (this._clockwise !== undefined)\n\t\t\t\tcopy._clockwise = this._clockwise;\n\t\t\treturn this._clone(copy, insert);\n\t\t},\n\t\n\t\t_changed: function _changed(flags) {\n\t\t\t_changed.base.call(this, flags);\n\t\t\tif (flags & 8) {\n\t\t\t\tvar parent = this._parent;\n\t\t\t\tif (parent)\n\t\t\t\t\tparent._currentPath = undefined;\n\t\t\t\tthis._length = this._area = this._clockwise = this._monoCurves =\n\t\t\t\t\t\tundefined;\n\t\t\t\tif (flags & 16) {\n\t\t\t\t\tthis._version++;\n\t\t\t\t} else if (this._curves) {\n\t\t\t\t   for (var i = 0, l = this._curves.length; i < l; i++)\n\t\t\t\t\t\tthis._curves[i]._changed();\n\t\t\t\t}\n\t\t\t} else if (flags & 32) {\n\t\t\t\tthis._bounds = undefined;\n\t\t\t}\n\t\t},\n\t\n\t\tgetStyle: function() {\n\t\t\tvar parent = this._parent;\n\t\t\treturn (parent instanceof CompoundPath ? parent : this)._style;\n\t\t},\n\t\n\t\tgetSegments: function() {\n\t\t\treturn this._segments;\n\t\t},\n\t\n\t\tsetSegments: function(segments) {\n\t\t\tvar fullySelected = this.isFullySelected();\n\t\t\tthis._segments.length = 0;\n\t\t\tthis._selectedSegmentState = 0;\n\t\t\tthis._curves = undefined;\n\t\t\tif (segments && segments.length > 0)\n\t\t\t\tthis._add(Segment.readAll(segments));\n\t\t\tif (fullySelected)\n\t\t\t\tthis.setFullySelected(true);\n\t\t},\n\t\n\t\tgetFirstSegment: function() {\n\t\t\treturn this._segments[0];\n\t\t},\n\t\n\t\tgetLastSegment: function() {\n\t\t\treturn this._segments[this._segments.length - 1];\n\t\t},\n\t\n\t\tgetCurves: function() {\n\t\t\tvar curves = this._curves,\n\t\t\t\tsegments = this._segments;\n\t\t\tif (!curves) {\n\t\t\t\tvar length = this._countCurves();\n\t\t\t\tcurves = this._curves = new Array(length);\n\t\t\t\tfor (var i = 0; i < length; i++)\n\t\t\t\t\tcurves[i] = new Curve(this, segments[i],\n\t\t\t\t\t\tsegments[i + 1] || segments[0]);\n\t\t\t}\n\t\t\treturn curves;\n\t\t},\n\t\n\t\tgetFirstCurve: function() {\n\t\t\treturn this.getCurves()[0];\n\t\t},\n\t\n\t\tgetLastCurve: function() {\n\t\t\tvar curves = this.getCurves();\n\t\t\treturn curves[curves.length - 1];\n\t\t},\n\t\n\t\tisClosed: function() {\n\t\t\treturn this._closed;\n\t\t},\n\t\n\t\tsetClosed: function(closed) {\n\t\t\tif (this._closed != (closed = !!closed)) {\n\t\t\t\tthis._closed = closed;\n\t\t\t\tif (this._curves) {\n\t\t\t\t\tvar length = this._curves.length = this._countCurves();\n\t\t\t\t\tif (closed)\n\t\t\t\t\t\tthis._curves[length - 1] = new Curve(this,\n\t\t\t\t\t\t\tthis._segments[length - 1], this._segments[0]);\n\t\t\t\t}\n\t\t\t\tthis._changed(25);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tbeans: true,\n\t\n\t\tgetPathData: function(_matrix, _precision) {\n\t\t\tvar segments = this._segments,\n\t\t\t\tlength = segments.length,\n\t\t\t\tf = new Formatter(_precision),\n\t\t\t\tcoords = new Array(6),\n\t\t\t\tfirst = true,\n\t\t\t\tcurX, curY,\n\t\t\t\tprevX, prevY,\n\t\t\t\tinX, inY,\n\t\t\t\toutX, outY,\n\t\t\t\tparts = [];\n\t\n\t\t\tfunction addSegment(segment, skipLine) {\n\t\t\t\tsegment._transformCoordinates(_matrix, coords, false);\n\t\t\t\tcurX = coords[0];\n\t\t\t\tcurY = coords[1];\n\t\t\t\tif (first) {\n\t\t\t\t\tparts.push('M' + f.pair(curX, curY));\n\t\t\t\t\tfirst = false;\n\t\t\t\t} else {\n\t\t\t\t\tinX = coords[2];\n\t\t\t\t\tinY = coords[3];\n\t\t\t\t\tif (inX === curX && inY === curY\n\t\t\t\t\t\t\t&& outX === prevX && outY === prevY) {\n\t\t\t\t\t\tif (!skipLine)\n\t\t\t\t\t\t\tparts.push('l' + f.pair(curX - prevX, curY - prevY));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tparts.push('c' + f.pair(outX - prevX, outY - prevY)\n\t\t\t\t\t\t\t\t+ ' ' + f.pair(inX - prevX, inY - prevY)\n\t\t\t\t\t\t\t\t+ ' ' + f.pair(curX - prevX, curY - prevY));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tprevX = curX;\n\t\t\t\tprevY = curY;\n\t\t\t\toutX = coords[4];\n\t\t\t\toutY = coords[5];\n\t\t\t}\n\t\n\t\t\tif (length === 0)\n\t\t\t\treturn '';\n\t\n\t\t\tfor (var i = 0; i < length; i++)\n\t\t\t\taddSegment(segments[i]);\n\t\t\tif (this._closed && length > 0) {\n\t\t\t\taddSegment(segments[0], true);\n\t\t\t\tparts.push('z');\n\t\t\t}\n\t\t\treturn parts.join('');\n\t\t}\n\t}, {\n\t\n\t\tisEmpty: function() {\n\t\t\treturn this._segments.length === 0;\n\t\t},\n\t\n\t\t_transformContent: function(matrix) {\n\t\t\tvar coords = new Array(6);\n\t\t\tfor (var i = 0, l = this._segments.length; i < l; i++)\n\t\t\t\tthis._segments[i]._transformCoordinates(matrix, coords, true);\n\t\t\treturn true;\n\t\t},\n\t\n\t\t_add: function(segs, index) {\n\t\t\tvar segments = this._segments,\n\t\t\t\tcurves = this._curves,\n\t\t\t\tamount = segs.length,\n\t\t\t\tappend = index == null,\n\t\t\t\tindex = append ? segments.length : index;\n\t\t\tfor (var i = 0; i < amount; i++) {\n\t\t\t\tvar segment = segs[i];\n\t\t\t\tif (segment._path)\n\t\t\t\t\tsegment = segs[i] = segment.clone();\n\t\t\t\tsegment._path = this;\n\t\t\t\tsegment._index = index + i;\n\t\t\t\tif (segment._selectionState)\n\t\t\t\t\tthis._updateSelection(segment, 0, segment._selectionState);\n\t\t\t}\n\t\t\tif (append) {\n\t\t\t\tsegments.push.apply(segments, segs);\n\t\t\t} else {\n\t\t\t\tsegments.splice.apply(segments, [index, 0].concat(segs));\n\t\t\t\tfor (var i = index + amount, l = segments.length; i < l; i++)\n\t\t\t\t\tsegments[i]._index = i;\n\t\t\t}\n\t\t\tif (curves) {\n\t\t\t\tvar total = this._countCurves(),\n\t\t\t\t\tfrom = index + amount - 1 === total ? index - 1 : index,\n\t\t\t\t\tstart = from,\n\t\t\t\t\tto = Math.min(from + amount, total);\n\t\t\t\tif (segs._curves) {\n\t\t\t\t\tcurves.splice.apply(curves, [from, 0].concat(segs._curves));\n\t\t\t\t\tstart += segs._curves.length;\n\t\t\t\t}\n\t\t\t\tfor (var i = start; i < to; i++)\n\t\t\t\t\tcurves.splice(i, 0, new Curve(this, null, null));\n\t\t\t\tthis._adjustCurves(from, to);\n\t\t\t}\n\t\t\tthis._changed(25);\n\t\t\treturn segs;\n\t\t},\n\t\n\t\t_adjustCurves: function(from, to) {\n\t\t\tvar segments = this._segments,\n\t\t\t\tcurves = this._curves,\n\t\t\t\tcurve;\n\t\t\tfor (var i = from; i < to; i++) {\n\t\t\t\tcurve = curves[i];\n\t\t\t\tcurve._path = this;\n\t\t\t\tcurve._segment1 = segments[i];\n\t\t\t\tcurve._segment2 = segments[i + 1] || segments[0];\n\t\t\t\tcurve._changed();\n\t\t\t}\n\t\t\tif (curve = curves[this._closed && from === 0 ? segments.length - 1\n\t\t\t\t\t: from - 1]) {\n\t\t\t\tcurve._segment2 = segments[from] || segments[0];\n\t\t\t\tcurve._changed();\n\t\t\t}\n\t\t\tif (curve = curves[to]) {\n\t\t\t\tcurve._segment1 = segments[to];\n\t\t\t\tcurve._changed();\n\t\t\t}\n\t\t},\n\t\n\t\t_countCurves: function() {\n\t\t\tvar length = this._segments.length;\n\t\t\treturn !this._closed && length > 0 ? length - 1 : length;\n\t\t},\n\t\n\t\tadd: function(segment1 ) {\n\t\t\treturn arguments.length > 1 && typeof segment1 !== 'number'\n\t\t\t\t? this._add(Segment.readAll(arguments))\n\t\t\t\t: this._add([ Segment.read(arguments) ])[0];\n\t\t},\n\t\n\t\tinsert: function(index, segment1 ) {\n\t\t\treturn arguments.length > 2 && typeof segment1 !== 'number'\n\t\t\t\t? this._add(Segment.readAll(arguments, 1), index)\n\t\t\t\t: this._add([ Segment.read(arguments, 1) ], index)[0];\n\t\t},\n\t\n\t\taddSegment: function() {\n\t\t\treturn this._add([ Segment.read(arguments) ])[0];\n\t\t},\n\t\n\t\tinsertSegment: function(index ) {\n\t\t\treturn this._add([ Segment.read(arguments, 1) ], index)[0];\n\t\t},\n\t\n\t\taddSegments: function(segments) {\n\t\t\treturn this._add(Segment.readAll(segments));\n\t\t},\n\t\n\t\tinsertSegments: function(index, segments) {\n\t\t\treturn this._add(Segment.readAll(segments), index);\n\t\t},\n\t\n\t\tremoveSegment: function(index) {\n\t\t\treturn this.removeSegments(index, index + 1)[0] || null;\n\t\t},\n\t\n\t\tremoveSegments: function(from, to, _includeCurves) {\n\t\t\tfrom = from || 0;\n\t\t\tto = Base.pick(to, this._segments.length);\n\t\t\tvar segments = this._segments,\n\t\t\t\tcurves = this._curves,\n\t\t\t\tcount = segments.length,\n\t\t\t\tremoved = segments.splice(from, to - from),\n\t\t\t\tamount = removed.length;\n\t\t\tif (!amount)\n\t\t\t\treturn removed;\n\t\t\tfor (var i = 0; i < amount; i++) {\n\t\t\t\tvar segment = removed[i];\n\t\t\t\tif (segment._selectionState)\n\t\t\t\t\tthis._updateSelection(segment, segment._selectionState, 0);\n\t\t\t\tsegment._index = segment._path = null;\n\t\t\t}\n\t\t\tfor (var i = from, l = segments.length; i < l; i++)\n\t\t\t\tsegments[i]._index = i;\n\t\t\tif (curves) {\n\t\t\t\tvar index = from > 0 && to === count + (this._closed ? 1 : 0)\n\t\t\t\t\t\t? from - 1\n\t\t\t\t\t\t: from,\n\t\t\t\t\tcurves = curves.splice(index, amount);\n\t\t\t\tif (_includeCurves)\n\t\t\t\t\tremoved._curves = curves.slice(1);\n\t\t\t\tthis._adjustCurves(index, index);\n\t\t\t}\n\t\t\tthis._changed(25);\n\t\t\treturn removed;\n\t\t},\n\t\n\t\tclear: '#removeSegments',\n\t\n\t\thasHandles: function() {\n\t\t\tvar segments = this._segments;\n\t\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\t\tif (segments[i].hasHandles())\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\n\t\tclearHandles: function() {\n\t\t\tvar segments = this._segments;\n\t\t\tfor (var i = 0, l = segments.length; i < l; i++)\n\t\t\t\tsegments[i].clearHandles();\n\t\t},\n\t\n\t\tgetLength: function() {\n\t\t\tif (this._length == null) {\n\t\t\t\tvar curves = this.getCurves(),\n\t\t\t\t\tlength = 0;\n\t\t\t\tfor (var i = 0, l = curves.length; i < l; i++)\n\t\t\t\t\tlength += curves[i].getLength();\n\t\t\t\tthis._length = length;\n\t\t\t}\n\t\t\treturn this._length;\n\t\t},\n\t\n\t\tgetArea: function() {\n\t\t\tif (this._area == null) {\n\t\t\t\tvar segments = this._segments,\n\t\t\t\t\tcount = segments.length,\n\t\t\t\t\tlast = count - 1,\n\t\t\t\t\tarea = 0;\n\t\t\t\tfor (var i = 0, l = this._closed ? count : last; i < l; i++) {\n\t\t\t\t\tarea += Curve.getArea(Curve.getValues(\n\t\t\t\t\t\t\tsegments[i], segments[i < last ? i + 1 : 0]));\n\t\t\t\t}\n\t\t\t\tthis._area = area;\n\t\t\t}\n\t\t\treturn this._area;\n\t\t},\n\t\n\t\tisClockwise: function() {\n\t\t\tif (this._clockwise !== undefined)\n\t\t\t\treturn this._clockwise;\n\t\t\treturn this.getArea() >= 0;\n\t\t},\n\t\n\t\tsetClockwise: function(clockwise) {\n\t\t\tif (this.isClockwise() != (clockwise = !!clockwise))\n\t\t\t\tthis.reverse();\n\t\t\tthis._clockwise = clockwise;\n\t\t},\n\t\n\t\tisFullySelected: function() {\n\t\t\tvar length = this._segments.length;\n\t\t\treturn this._selected && length > 0 && this._selectedSegmentState\n\t\t\t\t\t=== length * 7;\n\t\t},\n\t\n\t\tsetFullySelected: function(selected) {\n\t\t\tif (selected)\n\t\t\t\tthis._selectSegments(true);\n\t\t\tthis.setSelected(selected);\n\t\t},\n\t\n\t\tsetSelected: function setSelected(selected) {\n\t\t\tif (!selected)\n\t\t\t\tthis._selectSegments(false);\n\t\t\tsetSelected.base.call(this, selected);\n\t\t},\n\t\n\t\t_selectSegments: function(selected) {\n\t\t\tvar length = this._segments.length;\n\t\t\tthis._selectedSegmentState = selected\n\t\t\t\t\t? length * 7 : 0;\n\t\t\tfor (var i = 0; i < length; i++)\n\t\t\t\tthis._segments[i]._selectionState = selected\n\t\t\t\t\t\t? 7 : 0;\n\t\t},\n\t\n\t\t_updateSelection: function(segment, oldState, newState) {\n\t\t\tsegment._selectionState = newState;\n\t\t\tvar total = this._selectedSegmentState += newState - oldState;\n\t\t\tif (total > 0)\n\t\t\t\tthis.setSelected(true);\n\t\t},\n\t\n\t\tflatten: function(maxDistance) {\n\t\t\tvar iterator = new PathIterator(this, 64, 0.1),\n\t\t\t\tpos = 0,\n\t\t\t\tstep = iterator.length / Math.ceil(iterator.length / maxDistance),\n\t\t\t\tend = iterator.length + (this._closed ? -step : step) / 2;\n\t\t\tvar segments = [];\n\t\t\twhile (pos <= end) {\n\t\t\t\tsegments.push(new Segment(iterator.getPointAt(pos)));\n\t\t\t\tpos += step;\n\t\t\t}\n\t\t\tthis.setSegments(segments);\n\t\t},\n\t\n\t\treduce: function() {\n\t\t\tvar curves = this.getCurves();\n\t\t\tfor (var i = curves.length - 1; i >= 0; i--) {\n\t\t\t\tvar curve = curves[i];\n\t\t\t\tif (!curve.hasHandles() && (curve.getLength() === 0\n\t\t\t\t\t\t|| curve.isCollinear(curve.getNext())))\n\t\t\t\t\tcurve.remove();\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\n\t\tsimplify: function(tolerance) {\n\t\t\tif (this._segments.length > 2) {\n\t\t\t\tvar fitter = new PathFitter(this, tolerance || 2.5);\n\t\t\t\tthis.setSegments(fitter.fit());\n\t\t\t}\n\t\t},\n\t\n\t\tsplit: function(index, parameter) {\n\t\t\tif (parameter === null)\n\t\t\t\treturn null;\n\t\t\tif (arguments.length === 1) {\n\t\t\t\tvar arg = index;\n\t\t\t\tif (typeof arg === 'number')\n\t\t\t\t\targ = this.getLocationAt(arg);\n\t\t\t\tif (!arg)\n\t\t\t\t\treturn null\n\t\t\t\tindex = arg.index;\n\t\t\t\tparameter = arg.parameter;\n\t\t\t}\n\t\t\tvar tMin = 4e-7,\n\t\t\t\ttMax = 1 - tMin;\n\t\t\tif (parameter >= tMax) {\n\t\t\t\tindex++;\n\t\t\t\tparameter--;\n\t\t\t}\n\t\t\tvar curves = this.getCurves();\n\t\t\tif (index >= 0 && index < curves.length) {\n\t\t\t\tif (parameter >= tMin) {\n\t\t\t\t\tcurves[index++].divide(parameter, true);\n\t\t\t\t}\n\t\t\t\tvar segs = this.removeSegments(index, this._segments.length, true),\n\t\t\t\t\tpath;\n\t\t\t\tif (this._closed) {\n\t\t\t\t\tthis.setClosed(false);\n\t\t\t\t\tpath = this;\n\t\t\t\t} else {\n\t\t\t\t\tpath = new Path(Item.NO_INSERT);\n\t\t\t\t\tpath.insertAbove(this, true);\n\t\t\t\t\tthis._clone(path);\n\t\t\t\t}\n\t\t\t\tpath._add(segs, 0);\n\t\t\t\tthis.addSegment(segs[0]);\n\t\t\t\treturn path;\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\n\t\treverse: function() {\n\t\t\tthis._segments.reverse();\n\t\t\tfor (var i = 0, l = this._segments.length; i < l; i++) {\n\t\t\t\tvar segment = this._segments[i];\n\t\t\t\tvar handleIn = segment._handleIn;\n\t\t\t\tsegment._handleIn = segment._handleOut;\n\t\t\t\tsegment._handleOut = handleIn;\n\t\t\t\tsegment._index = i;\n\t\t\t}\n\t\t\tthis._curves = null;\n\t\t\tif (this._clockwise !== undefined)\n\t\t\t\tthis._clockwise = !this._clockwise;\n\t\t\tthis._changed(9);\n\t\t},\n\t\n\t\tjoin: function(path) {\n\t\t\tif (path) {\n\t\t\t\tvar segments = path._segments,\n\t\t\t\t\tlast1 = this.getLastSegment(),\n\t\t\t\t\tlast2 = path.getLastSegment();\n\t\t\t\tif (!last2)\n\t\t\t\t\treturn this;\n\t\t\t\tif (last1 && last1._point.equals(last2._point))\n\t\t\t\t\tpath.reverse();\n\t\t\t\tvar first2 = path.getFirstSegment();\n\t\t\t\tif (last1 && last1._point.equals(first2._point)) {\n\t\t\t\t\tlast1.setHandleOut(first2._handleOut);\n\t\t\t\t\tthis._add(segments.slice(1));\n\t\t\t\t} else {\n\t\t\t\t\tvar first1 = this.getFirstSegment();\n\t\t\t\t\tif (first1 && first1._point.equals(first2._point))\n\t\t\t\t\t\tpath.reverse();\n\t\t\t\t\tlast2 = path.getLastSegment();\n\t\t\t\t\tif (first1 && first1._point.equals(last2._point)) {\n\t\t\t\t\t\tfirst1.setHandleIn(last2._handleIn);\n\t\t\t\t\t\tthis._add(segments.slice(0, segments.length - 1), 0);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._add(segments.slice());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (path._closed)\n\t\t\t\t\tthis._add([segments[0]]);\n\t\t\t\tpath.remove();\n\t\t\t}\n\t\t\tvar first = this.getFirstSegment(),\n\t\t\t\tlast = this.getLastSegment();\n\t\t\tif (first !== last && first._point.equals(last._point)) {\n\t\t\t\tfirst.setHandleIn(last._handleIn);\n\t\t\t\tlast.remove();\n\t\t\t\tthis.setClosed(true);\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\n\t\ttoShape: function(insert) {\n\t\t\tif (!this._closed)\n\t\t\t\treturn null;\n\t\n\t\t\tvar segments = this._segments,\n\t\t\t\ttype,\n\t\t\t\tsize,\n\t\t\t\tradius,\n\t\t\t\ttopCenter;\n\t\n\t\t\tfunction isCollinear(i, j) {\n\t\t\t\tvar seg1 = segments[i],\n\t\t\t\t\tseg2 = seg1.getNext(),\n\t\t\t\t\tseg3 = segments[j],\n\t\t\t\t\tseg4 = seg3.getNext();\n\t\t\t\treturn seg1._handleOut.isZero() && seg2._handleIn.isZero()\n\t\t\t\t\t\t&& seg3._handleOut.isZero() && seg4._handleIn.isZero()\n\t\t\t\t\t\t&& seg2._point.subtract(seg1._point).isCollinear(\n\t\t\t\t\t\t\tseg4._point.subtract(seg3._point));\n\t\t\t}\n\t\n\t\t\tfunction isOrthogonal(i) {\n\t\t\t\tvar seg2 = segments[i],\n\t\t\t\t\tseg1 = seg2.getPrevious(),\n\t\t\t\t\tseg3 = seg2.getNext();\n\t\t\t\treturn seg1._handleOut.isZero() && seg2._handleIn.isZero()\n\t\t\t\t\t\t&& seg2._handleOut.isZero() && seg3._handleIn.isZero()\n\t\t\t\t\t\t&& seg2._point.subtract(seg1._point).isOrthogonal(\n\t\t\t\t\t\t\tseg3._point.subtract(seg2._point));\n\t\t\t}\n\t\n\t\t\tfunction isArc(i) {\n\t\t\t\tvar seg1 = segments[i],\n\t\t\t\t\tseg2 = seg1.getNext(),\n\t\t\t\t\thandle1 = seg1._handleOut,\n\t\t\t\t\thandle2 = seg2._handleIn,\n\t\t\t\t\tkappa = 0.5522847498307936;\n\t\t\t\tif (handle1.isOrthogonal(handle2)) {\n\t\t\t\t\tvar pt1 = seg1._point,\n\t\t\t\t\t\tpt2 = seg2._point,\n\t\t\t\t\t\tcorner = new Line(pt1, handle1, true).intersect(\n\t\t\t\t\t\t\t\tnew Line(pt2, handle2, true), true);\n\t\t\t\t\treturn corner && Numerical.isZero(handle1.getLength() /\n\t\t\t\t\t\t\tcorner.subtract(pt1).getLength() - kappa)\n\t\t\t\t\t\t&& Numerical.isZero(handle2.getLength() /\n\t\t\t\t\t\t\tcorner.subtract(pt2).getLength() - kappa);\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\tfunction getDistance(i, j) {\n\t\t\t\treturn segments[i]._point.getDistance(segments[j]._point);\n\t\t\t}\n\t\n\t\t\tif (!this.hasHandles() && segments.length === 4\n\t\t\t\t\t&& isCollinear(0, 2) && isCollinear(1, 3) && isOrthogonal(1)) {\n\t\t\t\ttype = Shape.Rectangle;\n\t\t\t\tsize = new Size(getDistance(0, 3), getDistance(0, 1));\n\t\t\t\ttopCenter = segments[1]._point.add(segments[2]._point).divide(2);\n\t\t\t} else if (segments.length === 8 && isArc(0) && isArc(2) && isArc(4)\n\t\t\t\t\t&& isArc(6) && isCollinear(1, 5) && isCollinear(3, 7)) {\n\t\t\t\ttype = Shape.Rectangle;\n\t\t\t\tsize = new Size(getDistance(1, 6), getDistance(0, 3));\n\t\t\t\tradius = size.subtract(new Size(getDistance(0, 7),\n\t\t\t\t\t\tgetDistance(1, 2))).divide(2);\n\t\t\t\ttopCenter = segments[3]._point.add(segments[4]._point).divide(2);\n\t\t\t} else if (segments.length === 4\n\t\t\t\t\t&& isArc(0) && isArc(1) && isArc(2) && isArc(3)) {\n\t\t\t\tif (Numerical.isZero(getDistance(0, 2) - getDistance(1, 3))) {\n\t\t\t\t\ttype = Shape.Circle;\n\t\t\t\t\tradius = getDistance(0, 2) / 2;\n\t\t\t\t} else {\n\t\t\t\t\ttype = Shape.Ellipse;\n\t\t\t\t\tradius = new Size(getDistance(2, 0) / 2, getDistance(3, 1) / 2);\n\t\t\t\t}\n\t\t\t\ttopCenter = segments[1]._point;\n\t\t\t}\n\t\n\t\t\tif (type) {\n\t\t\t\tvar center = this.getPosition(true),\n\t\t\t\t\tshape = this._clone(new type({\n\t\t\t\t\t\tcenter: center,\n\t\t\t\t\t\tsize: size,\n\t\t\t\t\t\tradius: radius,\n\t\t\t\t\t\tinsert: false\n\t\t\t\t\t}), insert, false);\n\t\t\t\tshape.rotate(topCenter.subtract(center).getAngle() + 90);\n\t\t\t\treturn shape;\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\n\t\t_hitTestSelf: function(point, options) {\n\t\t\tvar that = this,\n\t\t\t\tstyle = this.getStyle(),\n\t\t\t\tsegments = this._segments,\n\t\t\t\tnumSegments = segments.length,\n\t\t\t\tclosed = this._closed,\n\t\t\t\ttolerancePadding = options._tolerancePadding,\n\t\t\t\tstrokePadding = tolerancePadding,\n\t\t\t\tjoin, cap, miterLimit,\n\t\t\t\tarea, loc, res,\n\t\t\t\thitStroke = options.stroke && style.hasStroke(),\n\t\t\t\thitFill = options.fill && style.hasFill(),\n\t\t\t\thitCurves = options.curves,\n\t\t\t\tradius = hitStroke\n\t\t\t\t\t\t? style.getStrokeWidth() / 2\n\t\t\t\t\t\t: hitFill && options.tolerance > 0 || hitCurves\n\t\t\t\t\t\t\t? 0 : null;\n\t\t\tif (radius !== null) {\n\t\t\t\tif (radius > 0) {\n\t\t\t\t\tjoin = style.getStrokeJoin();\n\t\t\t\t\tcap = style.getStrokeCap();\n\t\t\t\t\tmiterLimit = radius * style.getMiterLimit();\n\t\t\t\t\tstrokePadding = tolerancePadding.add(new Point(radius, radius));\n\t\t\t\t} else {\n\t\t\t\t\tjoin = cap = 'round';\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tfunction isCloseEnough(pt, padding) {\n\t\t\t\treturn point.subtract(pt).divide(padding).length <= 1;\n\t\t\t}\n\t\n\t\t\tfunction checkSegmentPoint(seg, pt, name) {\n\t\t\t\tif (!options.selected || pt.isSelected()) {\n\t\t\t\t\tvar anchor = seg._point;\n\t\t\t\t\tif (pt !== anchor)\n\t\t\t\t\t\tpt = pt.add(anchor);\n\t\t\t\t\tif (isCloseEnough(pt, strokePadding)) {\n\t\t\t\t\t\treturn new HitResult(name, that, {\n\t\t\t\t\t\t\tsegment: seg,\n\t\t\t\t\t\t\tpoint: pt\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tfunction checkSegmentPoints(seg, ends) {\n\t\t\t\treturn (ends || options.segments)\n\t\t\t\t\t&& checkSegmentPoint(seg, seg._point, 'segment')\n\t\t\t\t\t|| (!ends && options.handles) && (\n\t\t\t\t\t\tcheckSegmentPoint(seg, seg._handleIn, 'handle-in') ||\n\t\t\t\t\t\tcheckSegmentPoint(seg, seg._handleOut, 'handle-out'));\n\t\t\t}\n\t\n\t\t\tfunction addToArea(point) {\n\t\t\t\tarea.add(point);\n\t\t\t}\n\t\n\t\t\tfunction checkSegmentStroke(segment) {\n\t\t\t\tif (join !== 'round' || cap !== 'round') {\n\t\t\t\t\tarea = new Path({ internal: true, closed: true });\n\t\t\t\t\tif (closed || segment._index > 0\n\t\t\t\t\t\t\t&& segment._index < numSegments - 1) {\n\t\t\t\t\t\tif (join !== 'round' && (segment._handleIn.isZero()\n\t\t\t\t\t\t\t\t|| segment._handleOut.isZero()))\n\t\t\t\t\t\t\tPath._addBevelJoin(segment, join, radius, miterLimit,\n\t\t\t\t\t\t\t\t\taddToArea, true);\n\t\t\t\t\t} else if (cap !== 'round') {\n\t\t\t\t\t\tPath._addSquareCap(segment, cap, radius, addToArea, true);\n\t\t\t\t\t}\n\t\t\t\t\tif (!area.isEmpty()) {\n\t\t\t\t\t\tvar loc;\n\t\t\t\t\t\treturn area.contains(point)\n\t\t\t\t\t\t\t|| (loc = area.getNearestLocation(point))\n\t\t\t\t\t\t\t\t&& isCloseEnough(loc.getPoint(), tolerancePadding);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn isCloseEnough(segment._point, strokePadding);\n\t\t\t}\n\t\n\t\t\tif (options.ends && !options.segments && !closed) {\n\t\t\t\tif (res = checkSegmentPoints(segments[0], true)\n\t\t\t\t\t\t|| checkSegmentPoints(segments[numSegments - 1], true))\n\t\t\t\t\treturn res;\n\t\t\t} else if (options.segments || options.handles) {\n\t\t\t\tfor (var i = 0; i < numSegments; i++)\n\t\t\t\t\tif (res = checkSegmentPoints(segments[i]))\n\t\t\t\t\t\treturn res;\n\t\t\t}\n\t\t\tif (radius !== null) {\n\t\t\t\tloc = this.getNearestLocation(point);\n\t\t\t\tif (loc) {\n\t\t\t\t\tvar parameter = loc.getParameter();\n\t\t\t\t\tif (parameter === 0 || parameter === 1 && numSegments > 1) {\n\t\t\t\t\t\tif (!checkSegmentStroke(loc.getSegment()))\n\t\t\t\t\t\t\tloc = null;\n\t\t\t\t\t} else if (!isCloseEnough(loc.getPoint(), strokePadding)) {\n\t\t\t\t\t\tloc = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!loc && join === 'miter' && numSegments > 1) {\n\t\t\t\t\tfor (var i = 0; i < numSegments; i++) {\n\t\t\t\t\t\tvar segment = segments[i];\n\t\t\t\t\t\tif (point.getDistance(segment._point) <= miterLimit\n\t\t\t\t\t\t\t\t&& checkSegmentStroke(segment)) {\n\t\t\t\t\t\t\tloc = segment.getLocation();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn !loc && hitFill && this._contains(point)\n\t\t\t\t\t|| loc && !hitStroke && !hitCurves\n\t\t\t\t\t\t? new HitResult('fill', this)\n\t\t\t\t\t\t: loc\n\t\t\t\t\t\t\t? new HitResult(hitStroke ? 'stroke' : 'curve', this, {\n\t\t\t\t\t\t\t\tlocation: loc,\n\t\t\t\t\t\t\t\tpoint: loc.getPoint()\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t: null;\n\t\t}\n\t\n\t}, Base.each(Curve.evaluateMethods,\n\t\tfunction(name) {\n\t\t\tthis[name + 'At'] = function(offset, isParameter) {\n\t\t\t\tvar loc = this.getLocationAt(offset, isParameter);\n\t\t\t\treturn loc && loc[name]();\n\t\t\t};\n\t\t},\n\t{\n\t\tbeans: false,\n\t\n\t\tgetLocationOf: function() {\n\t\t\tvar point = Point.read(arguments),\n\t\t\t\tcurves = this.getCurves();\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar loc = curves[i].getLocationOf(point);\n\t\t\t\tif (loc)\n\t\t\t\t\treturn loc;\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\n\t\tgetOffsetOf: function() {\n\t\t\tvar loc = this.getLocationOf.apply(this, arguments);\n\t\t\treturn loc ? loc.getOffset() : null;\n\t\t},\n\t\n\t\tgetLocationAt: function(offset, isParameter) {\n\t\t\tvar curves = this.getCurves(),\n\t\t\t\tlength = 0;\n\t\t\tif (isParameter) {\n\t\t\t\tvar index = ~~offset,\n\t\t\t\t\tcurve = curves[index];\n\t\t\t\treturn curve ? curve.getLocationAt(offset - index, true) : null;\n\t\t\t}\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar start = length,\n\t\t\t\t\tcurve = curves[i];\n\t\t\t\tlength += curve.getLength();\n\t\t\t\tif (length > offset) {\n\t\t\t\t\treturn curve.getLocationAt(offset - start);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (curves.length > 0 && offset <= this.getLength())\n\t\t\t\treturn new CurveLocation(curves[curves.length - 1], 1);\n\t\t\treturn null;\n\t\t},\n\t\n\t\tgetNearestLocation: function() {\n\t\t\tvar point = Point.read(arguments),\n\t\t\t\tcurves = this.getCurves(),\n\t\t\t\tminDist = Infinity,\n\t\t\t\tminLoc = null;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar loc = curves[i].getNearestLocation(point);\n\t\t\t\tif (loc._distance < minDist) {\n\t\t\t\t\tminDist = loc._distance;\n\t\t\t\t\tminLoc = loc;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn minLoc;\n\t\t},\n\t\n\t\tgetNearestPoint: function() {\n\t\t\treturn this.getNearestLocation.apply(this, arguments).getPoint();\n\t\t}\n\t}),\n\tnew function() {\n\t\n\t\tfunction drawHandles(ctx, segments, matrix, size) {\n\t\t\tvar half = size / 2;\n\t\n\t\t\tfunction drawHandle(index) {\n\t\t\t\tvar hX = coords[index],\n\t\t\t\t\thY = coords[index + 1];\n\t\t\t\tif (pX != hX || pY != hY) {\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.moveTo(pX, pY);\n\t\t\t\t\tctx.lineTo(hX, hY);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.arc(hX, hY, half, 0, Math.PI * 2, true);\n\t\t\t\t\tctx.fill();\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tvar coords = new Array(6);\n\t\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\t\tvar segment = segments[i];\n\t\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\t\tvar state = segment._selectionState,\n\t\t\t\t\tpX = coords[0],\n\t\t\t\t\tpY = coords[1];\n\t\t\t\tif (state & 1)\n\t\t\t\t\tdrawHandle(2);\n\t\t\t\tif (state & 2)\n\t\t\t\t\tdrawHandle(4);\n\t\t\t\tctx.fillRect(pX - half, pY - half, size, size);\n\t\t\t\tif (!(state & 4)) {\n\t\t\t\t\tvar fillStyle = ctx.fillStyle;\n\t\t\t\t\tctx.fillStyle = '#ffffff';\n\t\t\t\t\tctx.fillRect(pX - half + 1, pY - half + 1, size - 2, size - 2);\n\t\t\t\t\tctx.fillStyle = fillStyle;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\tfunction drawSegments(ctx, path, matrix) {\n\t\t\tvar segments = path._segments,\n\t\t\t\tlength = segments.length,\n\t\t\t\tcoords = new Array(6),\n\t\t\t\tfirst = true,\n\t\t\t\tcurX, curY,\n\t\t\t\tprevX, prevY,\n\t\t\t\tinX, inY,\n\t\t\t\toutX, outY;\n\t\n\t\t\tfunction drawSegment(segment) {\n\t\t\t\tif (matrix) {\n\t\t\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\t\t\tcurX = coords[0];\n\t\t\t\t\tcurY = coords[1];\n\t\t\t\t} else {\n\t\t\t\t\tvar point = segment._point;\n\t\t\t\t\tcurX = point._x;\n\t\t\t\t\tcurY = point._y;\n\t\t\t\t}\n\t\t\t\tif (first) {\n\t\t\t\t\tctx.moveTo(curX, curY);\n\t\t\t\t\tfirst = false;\n\t\t\t\t} else {\n\t\t\t\t\tif (matrix) {\n\t\t\t\t\t\tinX = coords[2];\n\t\t\t\t\t\tinY = coords[3];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar handle = segment._handleIn;\n\t\t\t\t\t\tinX = curX + handle._x;\n\t\t\t\t\t\tinY = curY + handle._y;\n\t\t\t\t\t}\n\t\t\t\t\tif (inX === curX && inY === curY\n\t\t\t\t\t\t\t&& outX === prevX && outY === prevY) {\n\t\t\t\t\t\tctx.lineTo(curX, curY);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tctx.bezierCurveTo(outX, outY, inX, inY, curX, curY);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tprevX = curX;\n\t\t\t\tprevY = curY;\n\t\t\t\tif (matrix) {\n\t\t\t\t\toutX = coords[4];\n\t\t\t\t\toutY = coords[5];\n\t\t\t\t} else {\n\t\t\t\t\tvar handle = segment._handleOut;\n\t\t\t\t\toutX = prevX + handle._x;\n\t\t\t\t\toutY = prevY + handle._y;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tfor (var i = 0; i < length; i++)\n\t\t\t\tdrawSegment(segments[i]);\n\t\t\tif (path._closed && length > 0)\n\t\t\t\tdrawSegment(segments[0]);\n\t\t}\n\t\n\t\treturn {\n\t\t\t_draw: function(ctx, param, strokeMatrix) {\n\t\t\t\tvar dontStart = param.dontStart,\n\t\t\t\t\tdontPaint = param.dontFinish || param.clip,\n\t\t\t\t\tstyle = this.getStyle(),\n\t\t\t\t\thasFill = style.hasFill(),\n\t\t\t\t\thasStroke = style.hasStroke(),\n\t\t\t\t\tdashArray = style.getDashArray(),\n\t\t\t\t\tdashLength = !paper.support.nativeDash && hasStroke\n\t\t\t\t\t\t\t&& dashArray && dashArray.length;\n\t\n\t\t\t\tif (!dontStart)\n\t\t\t\t\tctx.beginPath();\n\t\n\t\t\t\tif (!dontStart && this._currentPath) {\n\t\t\t\t\tctx.currentPath = this._currentPath;\n\t\t\t\t} else if (hasFill || hasStroke && !dashLength || dontPaint) {\n\t\t\t\t\tdrawSegments(ctx, this, strokeMatrix);\n\t\t\t\t\tif (this._closed)\n\t\t\t\t\t\tctx.closePath();\n\t\t\t\t\tif (!dontStart)\n\t\t\t\t\t\tthis._currentPath = ctx.currentPath;\n\t\t\t\t}\n\t\n\t\t\t\tfunction getOffset(i) {\n\t\t\t\t\treturn dashArray[((i % dashLength) + dashLength) % dashLength];\n\t\t\t\t}\n\t\n\t\t\t\tif (!dontPaint && (hasFill || hasStroke)) {\n\t\t\t\t\tthis._setStyles(ctx);\n\t\t\t\t\tif (hasFill) {\n\t\t\t\t\t\tctx.fill(style.getWindingRule());\n\t\t\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t\t\t}\n\t\t\t\t\tif (hasStroke) {\n\t\t\t\t\t\tif (dashLength) {\n\t\t\t\t\t\t\tif (!dontStart)\n\t\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\t\tvar iterator = new PathIterator(this, 32, 0.25,\n\t\t\t\t\t\t\t\t\tstrokeMatrix),\n\t\t\t\t\t\t\t\tlength = iterator.length,\n\t\t\t\t\t\t\t\tfrom = -style.getDashOffset(), to,\n\t\t\t\t\t\t\t\ti = 0;\n\t\t\t\t\t\t\tfrom = from % length;\n\t\t\t\t\t\t\twhile (from > 0) {\n\t\t\t\t\t\t\t\tfrom -= getOffset(i--) + getOffset(i--);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\twhile (from < length) {\n\t\t\t\t\t\t\t\tto = from + getOffset(i++);\n\t\t\t\t\t\t\t\tif (from > 0 || to > 0)\n\t\t\t\t\t\t\t\t\titerator.drawPart(ctx,\n\t\t\t\t\t\t\t\t\t\t\tMath.max(from, 0), Math.max(to, 0));\n\t\t\t\t\t\t\t\tfrom = to + getOffset(i++);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\t_drawSelected: function(ctx, matrix) {\n\t\t\t\tctx.beginPath();\n\t\t\t\tdrawSegments(ctx, this, matrix);\n\t\t\t\tctx.stroke();\n\t\t\t\tdrawHandles(ctx, this._segments, matrix, paper.settings.handleSize);\n\t\t\t}\n\t\t};\n\t},\n\tnew function() {\n\t\tfunction getFirstControlPoints(rhs) {\n\t\t\tvar n = rhs.length,\n\t\t\t\tx = [],\n\t\t\t\ttmp = [],\n\t\t\t\tb = 2;\n\t\t\tx[0] = rhs[0] / b;\n\t\t\tfor (var i = 1; i < n; i++) {\n\t\t\t\ttmp[i] = 1 / b;\n\t\t\t\tb = (i < n - 1 ? 4 : 2) - tmp[i];\n\t\t\t\tx[i] = (rhs[i] - x[i - 1]) / b;\n\t\t\t}\n\t\t\tfor (var i = 1; i < n; i++) {\n\t\t\t\tx[n - i - 1] -= tmp[n - i] * x[n - i];\n\t\t\t}\n\t\t\treturn x;\n\t\t}\n\t\n\t\treturn {\n\t\t\tsmooth: function() {\n\t\t\t\tvar segments = this._segments,\n\t\t\t\t\tsize = segments.length,\n\t\t\t\t\tclosed = this._closed,\n\t\t\t\t\tn = size,\n\t\t\t\t\toverlap = 0;\n\t\t\t\tif (size <= 2)\n\t\t\t\t\treturn;\n\t\t\t\tif (closed) {\n\t\t\t\t\toverlap = Math.min(size, 4);\n\t\t\t\t\tn += Math.min(size, overlap) * 2;\n\t\t\t\t}\n\t\t\t\tvar knots = [];\n\t\t\t\tfor (var i = 0; i < size; i++)\n\t\t\t\t\tknots[i + overlap] = segments[i]._point;\n\t\t\t\tif (closed) {\n\t\t\t\t\tfor (var i = 0; i < overlap; i++) {\n\t\t\t\t\t\tknots[i] = segments[i + size - overlap]._point;\n\t\t\t\t\t\tknots[i + size + overlap] = segments[i]._point;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tn--;\n\t\t\t\t}\n\t\t\t\tvar rhs = [];\n\t\n\t\t\t\tfor (var i = 1; i < n - 1; i++)\n\t\t\t\t\trhs[i] = 4 * knots[i]._x + 2 * knots[i + 1]._x;\n\t\t\t\trhs[0] = knots[0]._x + 2 * knots[1]._x;\n\t\t\t\trhs[n - 1] = 3 * knots[n - 1]._x;\n\t\t\t\tvar x = getFirstControlPoints(rhs);\n\t\n\t\t\t\tfor (var i = 1; i < n - 1; i++)\n\t\t\t\t\trhs[i] = 4 * knots[i]._y + 2 * knots[i + 1]._y;\n\t\t\t\trhs[0] = knots[0]._y + 2 * knots[1]._y;\n\t\t\t\trhs[n - 1] = 3 * knots[n - 1]._y;\n\t\t\t\tvar y = getFirstControlPoints(rhs);\n\t\n\t\t\t\tif (closed) {\n\t\t\t\t\tfor (var i = 0, j = size; i < overlap; i++, j++) {\n\t\t\t\t\t\tvar f1 = i / overlap,\n\t\t\t\t\t\t\tf2 = 1 - f1,\n\t\t\t\t\t\t\tie = i + overlap,\n\t\t\t\t\t\t\tje = j + overlap;\n\t\t\t\t\t\tx[j] = x[i] * f1 + x[j] * f2;\n\t\t\t\t\t\ty[j] = y[i] * f1 + y[j] * f2;\n\t\t\t\t\t\tx[je] = x[ie] * f2 + x[je] * f1;\n\t\t\t\t\t\ty[je] = y[ie] * f2 + y[je] * f1;\n\t\t\t\t\t}\n\t\t\t\t\tn--;\n\t\t\t\t}\n\t\t\t\tvar handleIn = null;\n\t\t\t\tfor (var i = overlap; i <= n - overlap; i++) {\n\t\t\t\t\tvar segment = segments[i - overlap];\n\t\t\t\t\tif (handleIn)\n\t\t\t\t\t\tsegment.setHandleIn(handleIn.subtract(segment._point));\n\t\t\t\t\tif (i < n) {\n\t\t\t\t\t\tsegment.setHandleOut(\n\t\t\t\t\t\t\t\tnew Point(x[i], y[i]).subtract(segment._point));\n\t\t\t\t\t\thandleIn = i < n - 1\n\t\t\t\t\t\t\t\t? new Point(\n\t\t\t\t\t\t\t\t\t2 * knots[i + 1]._x - x[i + 1],\n\t\t\t\t\t\t\t\t\t2 * knots[i + 1]._y - y[i + 1])\n\t\t\t\t\t\t\t\t: new Point(\n\t\t\t\t\t\t\t\t\t(knots[n]._x + x[n - 1]) / 2,\n\t\t\t\t\t\t\t\t\t(knots[n]._y + y[n - 1]) / 2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (closed && handleIn) {\n\t\t\t\t\tvar segment = this._segments[0];\n\t\t\t\t\tsegment.setHandleIn(handleIn.subtract(segment._point));\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t},\n\tnew function() {\n\t\tfunction getCurrentSegment(that) {\n\t\t\tvar segments = that._segments;\n\t\t\tif (segments.length === 0)\n\t\t\t\tthrow new Error('Use a moveTo() command first');\n\t\t\treturn segments[segments.length - 1];\n\t\t}\n\t\n\t\treturn {\n\t\t\tmoveTo: function() {\n\t\t\t\tvar segments = this._segments;\n\t\t\t\tif (segments.length === 1)\n\t\t\t\t\tthis.removeSegment(0);\n\t\t\t\tif (!segments.length)\n\t\t\t\t\tthis._add([ new Segment(Point.read(arguments)) ]);\n\t\t\t},\n\t\n\t\t\tmoveBy: function() {\n\t\t\t\tthrow new Error('moveBy() is unsupported on Path items.');\n\t\t\t},\n\t\n\t\t\tlineTo: function() {\n\t\t\t\tthis._add([ new Segment(Point.read(arguments)) ]);\n\t\t\t},\n\t\n\t\t\tcubicCurveTo: function() {\n\t\t\t\tvar handle1 = Point.read(arguments),\n\t\t\t\t\thandle2 = Point.read(arguments),\n\t\t\t\t\tto = Point.read(arguments),\n\t\t\t\t\tcurrent = getCurrentSegment(this);\n\t\t\t\tcurrent.setHandleOut(handle1.subtract(current._point));\n\t\t\t\tthis._add([ new Segment(to, handle2.subtract(to)) ]);\n\t\t\t},\n\t\n\t\t\tquadraticCurveTo: function() {\n\t\t\t\tvar handle = Point.read(arguments),\n\t\t\t\t\tto = Point.read(arguments),\n\t\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\t\tthis.cubicCurveTo(\n\t\t\t\t\thandle.add(current.subtract(handle).multiply(1 / 3)),\n\t\t\t\t\thandle.add(to.subtract(handle).multiply(1 / 3)),\n\t\t\t\t\tto\n\t\t\t\t);\n\t\t\t},\n\t\n\t\t\tcurveTo: function() {\n\t\t\t\tvar through = Point.read(arguments),\n\t\t\t\t\tto = Point.read(arguments),\n\t\t\t\t\tt = Base.pick(Base.read(arguments), 0.5),\n\t\t\t\t\tt1 = 1 - t,\n\t\t\t\t\tcurrent = getCurrentSegment(this)._point,\n\t\t\t\t\thandle = through.subtract(current.multiply(t1 * t1))\n\t\t\t\t\t\t.subtract(to.multiply(t * t)).divide(2 * t * t1);\n\t\t\t\tif (handle.isNaN())\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t'Cannot put a curve through points with parameter = ' + t);\n\t\t\t\tthis.quadraticCurveTo(handle, to);\n\t\t\t},\n\t\n\t\t\tarcTo: function() {\n\t\t\t\tvar current = getCurrentSegment(this),\n\t\t\t\t\tfrom = current._point,\n\t\t\t\t\tto = Point.read(arguments),\n\t\t\t\t\tthrough,\n\t\t\t\t\tpeek = Base.peek(arguments),\n\t\t\t\t\tclockwise = Base.pick(peek, true),\n\t\t\t\t\tcenter, extent, vector, matrix;\n\t\t\t\tif (typeof clockwise === 'boolean') {\n\t\t\t\t\tvar middle = from.add(to).divide(2),\n\t\t\t\t\tthrough = middle.add(middle.subtract(from).rotate(\n\t\t\t\t\t\t\tclockwise ? -90 : 90));\n\t\t\t\t} else if (Base.remain(arguments) <= 2) {\n\t\t\t\t\tthrough = to;\n\t\t\t\t\tto = Point.read(arguments);\n\t\t\t\t} else {\n\t\t\t\t\tvar radius = Size.read(arguments);\n\t\t\t\t\tif (radius.isZero())\n\t\t\t\t\t\treturn this.lineTo(to);\n\t\t\t\t\tvar rotation = Base.read(arguments),\n\t\t\t\t\t\tclockwise = !!Base.read(arguments),\n\t\t\t\t\t\tlarge = !!Base.read(arguments),\n\t\t\t\t\t\tmiddle = from.add(to).divide(2),\n\t\t\t\t\t\tpt = from.subtract(middle).rotate(-rotation),\n\t\t\t\t\t\tx = pt.x,\n\t\t\t\t\t\ty = pt.y,\n\t\t\t\t\t\tabs = Math.abs,\n\t\t\t\t\t\trx = abs(radius.width),\n\t\t\t\t\t\try = abs(radius.height),\n\t\t\t\t\t\trxSq = rx * rx,\n\t\t\t\t\t\trySq = ry * ry,\n\t\t\t\t\t\txSq =  x * x,\n\t\t\t\t\t\tySq =  y * y;\n\t\t\t\t\tvar factor = Math.sqrt(xSq / rxSq + ySq / rySq);\n\t\t\t\t\tif (factor > 1) {\n\t\t\t\t\t\trx *= factor;\n\t\t\t\t\t\try *= factor;\n\t\t\t\t\t\trxSq = rx * rx;\n\t\t\t\t\t\trySq = ry * ry;\n\t\t\t\t\t}\n\t\t\t\t\tfactor = (rxSq * rySq - rxSq * ySq - rySq * xSq) /\n\t\t\t\t\t\t\t(rxSq * ySq + rySq * xSq);\n\t\t\t\t\tif (abs(factor) < 1e-12)\n\t\t\t\t\t\tfactor = 0;\n\t\t\t\t\tif (factor < 0)\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t'Cannot create an arc with the given arguments');\n\t\t\t\t\tcenter = new Point(rx * y / ry, -ry * x / rx)\n\t\t\t\t\t\t\t.multiply((large === clockwise ? -1 : 1)\n\t\t\t\t\t\t\t\t* Math.sqrt(factor))\n\t\t\t\t\t\t\t.rotate(rotation).add(middle);\n\t\t\t\t\tmatrix = new Matrix().translate(center).rotate(rotation)\n\t\t\t\t\t\t\t.scale(rx, ry);\n\t\t\t\t\tvector = matrix._inverseTransform(from);\n\t\t\t\t\textent = vector.getDirectedAngle(matrix._inverseTransform(to));\n\t\t\t\t\tif (!clockwise && extent > 0)\n\t\t\t\t\t\textent -= 360;\n\t\t\t\t\telse if (clockwise && extent < 0)\n\t\t\t\t\t\textent += 360;\n\t\t\t\t}\n\t\t\t\tif (through) {\n\t\t\t\t\tvar l1 = new Line(from.add(through).divide(2),\n\t\t\t\t\t\t\t\tthrough.subtract(from).rotate(90), true),\n\t\t\t\t\t\tl2 = new Line(through.add(to).divide(2),\n\t\t\t\t\t\t\t\tto.subtract(through).rotate(90), true),\n\t\t\t\t\t\tline = new Line(from, to),\n\t\t\t\t\t\tthroughSide = line.getSide(through);\n\t\t\t\t\tcenter = l1.intersect(l2, true);\n\t\t\t\t\tif (!center) {\n\t\t\t\t\t\tif (!throughSide)\n\t\t\t\t\t\t\treturn this.lineTo(to);\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t'Cannot create an arc with the given arguments');\n\t\t\t\t\t}\n\t\t\t\t\tvector = from.subtract(center);\n\t\t\t\t\textent = vector.getDirectedAngle(to.subtract(center));\n\t\t\t\t\tvar centerSide = line.getSide(center);\n\t\t\t\t\tif (centerSide === 0) {\n\t\t\t\t\t\textent = throughSide * Math.abs(extent);\n\t\t\t\t\t} else if (throughSide === centerSide) {\n\t\t\t\t\t\textent += extent < 0 ? 360 : -360;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tvar ext = Math.abs(extent),\n\t\t\t\t\tcount = ext >= 360 ? 4 : Math.ceil(ext / 90),\n\t\t\t\t\tinc = extent / count,\n\t\t\t\t\thalf = inc * Math.PI / 360,\n\t\t\t\t\tz = 4 / 3 * Math.sin(half) / (1 + Math.cos(half)),\n\t\t\t\t\tsegments = [];\n\t\t\t\tfor (var i = 0; i <= count; i++) {\n\t\t\t\t\tvar pt = to,\n\t\t\t\t\t\tout = null;\n\t\t\t\t\tif (i < count) {\n\t\t\t\t\t\tout = vector.rotate(90).multiply(z);\n\t\t\t\t\t\tif (matrix) {\n\t\t\t\t\t\t\tpt = matrix._transformPoint(vector);\n\t\t\t\t\t\t\tout = matrix._transformPoint(vector.add(out))\n\t\t\t\t\t\t\t\t\t.subtract(pt);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpt = center.add(vector);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\tcurrent.setHandleOut(out);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar _in = vector.rotate(-90).multiply(z);\n\t\t\t\t\t\tif (matrix) {\n\t\t\t\t\t\t\t_in = matrix._transformPoint(vector.add(_in))\n\t\t\t\t\t\t\t\t\t.subtract(pt);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsegments.push(new Segment(pt, _in, out));\n\t\t\t\t\t}\n\t\t\t\t\tvector = vector.rotate(inc);\n\t\t\t\t}\n\t\t\t\tthis._add(segments);\n\t\t\t},\n\t\n\t\t\tlineBy: function() {\n\t\t\t\tvar to = Point.read(arguments),\n\t\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\t\tthis.lineTo(current.add(to));\n\t\t\t},\n\t\n\t\t\tcurveBy: function() {\n\t\t\t\tvar through = Point.read(arguments),\n\t\t\t\t\tto = Point.read(arguments),\n\t\t\t\t\tparameter = Base.read(arguments),\n\t\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\t\tthis.curveTo(current.add(through), current.add(to), parameter);\n\t\t\t},\n\t\n\t\t\tcubicCurveBy: function() {\n\t\t\t\tvar handle1 = Point.read(arguments),\n\t\t\t\t\thandle2 = Point.read(arguments),\n\t\t\t\t\tto = Point.read(arguments),\n\t\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\t\tthis.cubicCurveTo(current.add(handle1), current.add(handle2),\n\t\t\t\t\t\tcurrent.add(to));\n\t\t\t},\n\t\n\t\t\tquadraticCurveBy: function() {\n\t\t\t\tvar handle = Point.read(arguments),\n\t\t\t\t\tto = Point.read(arguments),\n\t\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\t\tthis.quadraticCurveTo(current.add(handle), current.add(to));\n\t\t\t},\n\t\n\t\t\tarcBy: function() {\n\t\t\t\tvar current = getCurrentSegment(this)._point,\n\t\t\t\t\tpoint = current.add(Point.read(arguments)),\n\t\t\t\t\tclockwise = Base.pick(Base.peek(arguments), true);\n\t\t\t\tif (typeof clockwise === 'boolean') {\n\t\t\t\t\tthis.arcTo(point, clockwise);\n\t\t\t\t} else {\n\t\t\t\t\tthis.arcTo(point, current.add(Point.read(arguments)));\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\tclosePath: function(join) {\n\t\t\t\tthis.setClosed(true);\n\t\t\t\tif (join)\n\t\t\t\t\tthis.join();\n\t\t\t}\n\t\t};\n\t}, {\n\t\n\t\t_getBounds: function(getter, matrix) {\n\t\t\treturn Path[getter](this._segments, this._closed, this.getStyle(),\n\t\t\t\t\tmatrix);\n\t\t},\n\t\n\tstatics: {\n\t\tgetBounds: function(segments, closed, style, matrix, strokePadding) {\n\t\t\tvar first = segments[0];\n\t\t\tif (!first)\n\t\t\t\treturn new Rectangle();\n\t\t\tvar coords = new Array(6),\n\t\t\t\tprevCoords = first._transformCoordinates(matrix, new Array(6), false),\n\t\t\t\tmin = prevCoords.slice(0, 2),\n\t\t\t\tmax = min.slice(),\n\t\t\t\troots = new Array(2);\n\t\n\t\t\tfunction processSegment(segment) {\n\t\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\t\tCurve._addBounds(\n\t\t\t\t\t\tprevCoords[i],\n\t\t\t\t\t\tprevCoords[i + 4],\n\t\t\t\t\t\tcoords[i + 2],\n\t\t\t\t\t\tcoords[i],\n\t\t\t\t\t\ti, strokePadding ? strokePadding[i] : 0, min, max, roots);\n\t\t\t\t}\n\t\t\t\tvar tmp = prevCoords;\n\t\t\t\tprevCoords = coords;\n\t\t\t\tcoords = tmp;\n\t\t\t}\n\t\n\t\t\tfor (var i = 1, l = segments.length; i < l; i++)\n\t\t\t\tprocessSegment(segments[i]);\n\t\t\tif (closed)\n\t\t\t\tprocessSegment(first);\n\t\t\treturn new Rectangle(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n\t\t},\n\t\n\t\tgetStrokeBounds: function(segments, closed, style, matrix) {\n\t\t\tif (!style.hasStroke())\n\t\t\t\treturn Path.getBounds(segments, closed, style, matrix);\n\t\t\tvar length = segments.length - (closed ? 0 : 1),\n\t\t\t\tradius = style.getStrokeWidth() / 2,\n\t\t\t\tpadding = Path._getPenPadding(radius, matrix),\n\t\t\t\tbounds = Path.getBounds(segments, closed, style, matrix, padding),\n\t\t\t\tjoin = style.getStrokeJoin(),\n\t\t\t\tcap = style.getStrokeCap(),\n\t\t\t\tmiterLimit = radius * style.getMiterLimit();\n\t\t\tvar joinBounds = new Rectangle(new Size(padding).multiply(2));\n\t\n\t\t\tfunction add(point) {\n\t\t\t\tbounds = bounds.include(matrix\n\t\t\t\t\t? matrix._transformPoint(point, point) : point);\n\t\t\t}\n\t\n\t\t\tfunction addRound(segment) {\n\t\t\t\tbounds = bounds.unite(joinBounds.setCenter(matrix\n\t\t\t\t\t? matrix._transformPoint(segment._point) : segment._point));\n\t\t\t}\n\t\n\t\t\tfunction addJoin(segment, join) {\n\t\t\t\tvar handleIn = segment._handleIn,\n\t\t\t\t\thandleOut = segment._handleOut;\n\t\t\t\tif (join === 'round' || !handleIn.isZero() && !handleOut.isZero()\n\t\t\t\t\t\t&& handleIn.isCollinear(handleOut)) {\n\t\t\t\t\taddRound(segment);\n\t\t\t\t} else {\n\t\t\t\t\tPath._addBevelJoin(segment, join, radius, miterLimit, add);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tfunction addCap(segment, cap) {\n\t\t\t\tif (cap === 'round') {\n\t\t\t\t\taddRound(segment);\n\t\t\t\t} else {\n\t\t\t\t\tPath._addSquareCap(segment, cap, radius, add);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tfor (var i = 1; i < length; i++)\n\t\t\t\taddJoin(segments[i], join);\n\t\t\tif (closed) {\n\t\t\t\taddJoin(segments[0], join);\n\t\t\t} else if (length > 0) {\n\t\t\t\taddCap(segments[0], cap);\n\t\t\t\taddCap(segments[segments.length - 1], cap);\n\t\t\t}\n\t\t\treturn bounds;\n\t\t},\n\t\n\t\t_getPenPadding: function(radius, matrix) {\n\t\t\tif (!matrix)\n\t\t\t\treturn [radius, radius];\n\t\t\tvar mx = matrix.shiftless(),\n\t\t\t\thor = mx.transform(new Point(radius, 0)),\n\t\t\t\tver = mx.transform(new Point(0, radius)),\n\t\t\t\tphi = hor.getAngleInRadians(),\n\t\t\t\ta = hor.getLength(),\n\t\t\t\tb = ver.getLength();\n\t\t\tvar sin = Math.sin(phi),\n\t\t\t\tcos = Math.cos(phi),\n\t\t\t\ttan = Math.tan(phi),\n\t\t\t\ttx = -Math.atan(b * tan / a),\n\t\t\t\tty = Math.atan(b / (tan * a));\n\t\t\treturn [Math.abs(a * Math.cos(tx) * cos - b * Math.sin(tx) * sin),\n\t\t\t\t\tMath.abs(b * Math.sin(ty) * cos + a * Math.cos(ty) * sin)];\n\t\t},\n\t\n\t\t_addBevelJoin: function(segment, join, radius, miterLimit, addPoint, area) {\n\t\t\tvar curve2 = segment.getCurve(),\n\t\t\t\tcurve1 = curve2.getPrevious(),\n\t\t\t\tpoint = curve2.getPointAt(0, true),\n\t\t\t\tnormal1 = curve1.getNormalAt(1, true),\n\t\t\t\tnormal2 = curve2.getNormalAt(0, true),\n\t\t\t\tstep = normal1.getDirectedAngle(normal2) < 0 ? -radius : radius;\n\t\t\tnormal1.setLength(step);\n\t\t\tnormal2.setLength(step);\n\t\t\tif (area) {\n\t\t\t\taddPoint(point);\n\t\t\t\taddPoint(point.add(normal1));\n\t\t\t}\n\t\t\tif (join === 'miter') {\n\t\t\t\tvar corner = new Line(\n\t\t\t\t\t\tpoint.add(normal1),\n\t\t\t\t\t\tnew Point(-normal1.y, normal1.x), true\n\t\t\t\t\t).intersect(new Line(\n\t\t\t\t\t\tpoint.add(normal2),\n\t\t\t\t\t\tnew Point(-normal2.y, normal2.x), true\n\t\t\t\t\t), true);\n\t\t\t\tif (corner && point.getDistance(corner) <= miterLimit) {\n\t\t\t\t\taddPoint(corner);\n\t\t\t\t\tif (!area)\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!area)\n\t\t\t\taddPoint(point.add(normal1));\n\t\t\taddPoint(point.add(normal2));\n\t\t},\n\t\n\t\t_addSquareCap: function(segment, cap, radius, addPoint, area) {\n\t\t\tvar point = segment._point,\n\t\t\t\tloc = segment.getLocation(),\n\t\t\t\tnormal = loc.getNormal().multiply(radius);\n\t\t\tif (area) {\n\t\t\t\taddPoint(point.subtract(normal));\n\t\t\t\taddPoint(point.add(normal));\n\t\t\t}\n\t\t\tif (cap === 'square')\n\t\t\t\tpoint = point.add(normal.rotate(loc.getParameter() === 0 ? -90 : 90));\n\t\t\taddPoint(point.add(normal));\n\t\t\taddPoint(point.subtract(normal));\n\t\t},\n\t\n\t\tgetHandleBounds: function(segments, closed, style, matrix, strokePadding,\n\t\t\t\tjoinPadding) {\n\t\t\tvar coords = new Array(6),\n\t\t\t\tx1 = Infinity,\n\t\t\t\tx2 = -x1,\n\t\t\t\ty1 = x1,\n\t\t\t\ty2 = x2;\n\t\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\t\tvar segment = segments[i];\n\t\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\t\tfor (var j = 0; j < 6; j += 2) {\n\t\t\t\t\tvar padding = j === 0 ? joinPadding : strokePadding,\n\t\t\t\t\t\tpaddingX = padding ? padding[0] : 0,\n\t\t\t\t\t\tpaddingY = padding ? padding[1] : 0,\n\t\t\t\t\t\tx = coords[j],\n\t\t\t\t\t\ty = coords[j + 1],\n\t\t\t\t\t\txn = x - paddingX,\n\t\t\t\t\t\txx = x + paddingX,\n\t\t\t\t\t\tyn = y - paddingY,\n\t\t\t\t\t\tyx = y + paddingY;\n\t\t\t\t\tif (xn < x1) x1 = xn;\n\t\t\t\t\tif (xx > x2) x2 = xx;\n\t\t\t\t\tif (yn < y1) y1 = yn;\n\t\t\t\t\tif (yx > y2) y2 = yx;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t\t},\n\t\n\t\tgetRoughBounds: function(segments, closed, style, matrix) {\n\t\t\tvar strokeRadius = style.hasStroke() ? style.getStrokeWidth() / 2 : 0,\n\t\t\t\tjoinRadius = strokeRadius;\n\t\t\tif (strokeRadius > 0) {\n\t\t\t\tif (style.getStrokeJoin() === 'miter')\n\t\t\t\t\tjoinRadius = strokeRadius * style.getMiterLimit();\n\t\t\t\tif (style.getStrokeCap() === 'square')\n\t\t\t\t\tjoinRadius = Math.max(joinRadius, strokeRadius * Math.sqrt(2));\n\t\t\t}\n\t\t\treturn Path.getHandleBounds(segments, closed, style, matrix,\n\t\t\t\t\tPath._getPenPadding(strokeRadius, matrix),\n\t\t\t\t\tPath._getPenPadding(joinRadius, matrix));\n\t\t}\n\t}});\n\t\n\tPath.inject({ statics: new function() {\n\t\n\t\tvar kappa = 0.5522847498307936,\n\t\t\tellipseSegments = [\n\t\t\t\tnew Segment([-1, 0], [0, kappa ], [0, -kappa]),\n\t\t\t\tnew Segment([0, -1], [-kappa, 0], [kappa, 0 ]),\n\t\t\t\tnew Segment([1, 0], [0, -kappa], [0, kappa ]),\n\t\t\t\tnew Segment([0, 1], [kappa, 0 ], [-kappa, 0])\n\t\t\t];\n\t\n\t\tfunction createPath(segments, closed, args) {\n\t\t\tvar props = Base.getNamed(args),\n\t\t\t\tpath = new Path(props && props.insert === false && Item.NO_INSERT);\n\t\t\tpath._add(segments);\n\t\t\tpath._closed = closed;\n\t\t\treturn path.set(props);\n\t\t}\n\t\n\t\tfunction createEllipse(center, radius, args) {\n\t\t\tvar segments = new Array(4);\n\t\t\tfor (var i = 0; i < 4; i++) {\n\t\t\t\tvar segment = ellipseSegments[i];\n\t\t\t\tsegments[i] = new Segment(\n\t\t\t\t\tsegment._point.multiply(radius).add(center),\n\t\t\t\t\tsegment._handleIn.multiply(radius),\n\t\t\t\t\tsegment._handleOut.multiply(radius)\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn createPath(segments, true, args);\n\t\t}\n\t\n\t\treturn {\n\t\t\tLine: function() {\n\t\t\t\treturn createPath([\n\t\t\t\t\tnew Segment(Point.readNamed(arguments, 'from')),\n\t\t\t\t\tnew Segment(Point.readNamed(arguments, 'to'))\n\t\t\t\t], false, arguments);\n\t\t\t},\n\t\n\t\t\tCircle: function() {\n\t\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\t\tradius = Base.readNamed(arguments, 'radius');\n\t\t\t\treturn createEllipse(center, new Size(radius), arguments);\n\t\t\t},\n\t\n\t\t\tRectangle: function() {\n\t\t\t\tvar rect = Rectangle.readNamed(arguments, 'rectangle'),\n\t\t\t\t\tradius = Size.readNamed(arguments, 'radius', 0,\n\t\t\t\t\t\t\t{ readNull: true }),\n\t\t\t\t\tbl = rect.getBottomLeft(true),\n\t\t\t\t\ttl = rect.getTopLeft(true),\n\t\t\t\t\ttr = rect.getTopRight(true),\n\t\t\t\t\tbr = rect.getBottomRight(true),\n\t\t\t\t\tsegments;\n\t\t\t\tif (!radius || radius.isZero()) {\n\t\t\t\t\tsegments = [\n\t\t\t\t\t\tnew Segment(bl),\n\t\t\t\t\t\tnew Segment(tl),\n\t\t\t\t\t\tnew Segment(tr),\n\t\t\t\t\t\tnew Segment(br)\n\t\t\t\t\t];\n\t\t\t\t} else {\n\t\t\t\t\tradius = Size.min(radius, rect.getSize(true).divide(2));\n\t\t\t\t\tvar rx = radius.width,\n\t\t\t\t\t\try = radius.height,\n\t\t\t\t\t\thx = rx * kappa,\n\t\t\t\t\t\thy = ry * kappa;\n\t\t\t\t\tsegments = [\n\t\t\t\t\t\tnew Segment(bl.add(rx, 0), null, [-hx, 0]),\n\t\t\t\t\t\tnew Segment(bl.subtract(0, ry), [0, hy]),\n\t\t\t\t\t\tnew Segment(tl.add(0, ry), null, [0, -hy]),\n\t\t\t\t\t\tnew Segment(tl.add(rx, 0), [-hx, 0], null),\n\t\t\t\t\t\tnew Segment(tr.subtract(rx, 0), null, [hx, 0]),\n\t\t\t\t\t\tnew Segment(tr.add(0, ry), [0, -hy], null),\n\t\t\t\t\t\tnew Segment(br.subtract(0, ry), null, [0, hy]),\n\t\t\t\t\t\tnew Segment(br.subtract(rx, 0), [hx, 0])\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t\treturn createPath(segments, true, arguments);\n\t\t\t},\n\t\n\t\t\tRoundRectangle: '#Rectangle',\n\t\n\t\t\tEllipse: function() {\n\t\t\t\tvar ellipse = Shape._readEllipse(arguments);\n\t\t\t\treturn createEllipse(ellipse.center, ellipse.radius, arguments);\n\t\t\t},\n\t\n\t\t\tOval: '#Ellipse',\n\t\n\t\t\tArc: function() {\n\t\t\t\tvar from = Point.readNamed(arguments, 'from'),\n\t\t\t\t\tthrough = Point.readNamed(arguments, 'through'),\n\t\t\t\t\tto = Point.readNamed(arguments, 'to'),\n\t\t\t\t\tprops = Base.getNamed(arguments),\n\t\t\t\t\tpath = new Path(props && props.insert === false\n\t\t\t\t\t\t\t&& Item.NO_INSERT);\n\t\t\t\tpath.moveTo(from);\n\t\t\t\tpath.arcTo(through, to);\n\t\t\t\treturn path.set(props);\n\t\t\t},\n\t\n\t\t\tRegularPolygon: function() {\n\t\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\t\tsides = Base.readNamed(arguments, 'sides'),\n\t\t\t\t\tradius = Base.readNamed(arguments, 'radius'),\n\t\t\t\t\tstep = 360 / sides,\n\t\t\t\t\tthree = !(sides % 3),\n\t\t\t\t\tvector = new Point(0, three ? -radius : radius),\n\t\t\t\t\toffset = three ? -1 : 0.5,\n\t\t\t\t\tsegments = new Array(sides);\n\t\t\t\tfor (var i = 0; i < sides; i++)\n\t\t\t\t\tsegments[i] = new Segment(center.add(\n\t\t\t\t\t\tvector.rotate((i + offset) * step)));\n\t\t\t\treturn createPath(segments, true, arguments);\n\t\t\t},\n\t\n\t\t\tStar: function() {\n\t\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\t\tpoints = Base.readNamed(arguments, 'points') * 2,\n\t\t\t\t\tradius1 = Base.readNamed(arguments, 'radius1'),\n\t\t\t\t\tradius2 = Base.readNamed(arguments, 'radius2'),\n\t\t\t\t\tstep = 360 / points,\n\t\t\t\t\tvector = new Point(0, -1),\n\t\t\t\t\tsegments = new Array(points);\n\t\t\t\tfor (var i = 0; i < points; i++)\n\t\t\t\t\tsegments[i] = new Segment(center.add(vector.rotate(step * i)\n\t\t\t\t\t\t\t.multiply(i % 2 ? radius2 : radius1)));\n\t\t\t\treturn createPath(segments, true, arguments);\n\t\t\t}\n\t\t};\n\t}});\n\t\n\tvar CompoundPath = PathItem.extend({\n\t\t_class: 'CompoundPath',\n\t\t_serializeFields: {\n\t\t\tchildren: []\n\t\t},\n\t\n\t\tinitialize: function CompoundPath(arg) {\n\t\t\tthis._children = [];\n\t\t\tthis._namedChildren = {};\n\t\t\tif (!this._initialize(arg)) {\n\t\t\t\tif (typeof arg === 'string') {\n\t\t\t\t\tthis.setPathData(arg);\n\t\t\t\t} else {\n\t\t\t\t\tthis.addChildren(Array.isArray(arg) ? arg : arguments);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\tinsertChildren: function insertChildren(index, items, _preserve) {\n\t\t\tfor (var i = items.length - 1; i >= 0; i--) {\n\t\t\t\tvar item = items[i];\n\t\t\t\tif (item instanceof CompoundPath) {\n\t\t\t\t\titems.splice.apply(items, [i, 1].concat(item.removeChildren()));\n\t\t\t\t\titem.remove();\n\t\t\t\t}\n\t\t\t}\n\t\t\titems = insertChildren.base.call(this, index, items, _preserve, Path);\n\t\t\tfor (var i = 0, l = !_preserve && items && items.length; i < l; i++) {\n\t\t\t\tvar item = items[i];\n\t\t\t\tif (item._clockwise === undefined)\n\t\t\t\t\titem.setClockwise(item._index === 0);\n\t\t\t}\n\t\t\treturn items;\n\t\t},\n\t\n\t\treverse: function() {\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].reverse();\n\t\t},\n\t\n\t\tsmooth: function() {\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++)\n\t\t\t\tthis._children[i].smooth();\n\t\t},\n\t\n\t\treduce: function reduce() {\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = children.length - 1; i >= 0; i--) {\n\t\t\t\tvar path = children[i].reduce();\n\t\t\t\tif (path.isEmpty())\n\t\t\t\t\tchildren.splice(i, 1);\n\t\t\t}\n\t\t\tif (children.length === 0) {\n\t\t\t\tvar path = new Path(Item.NO_INSERT);\n\t\t\t\tpath.insertAbove(this);\n\t\t\t\tpath.setStyle(this._style);\n\t\t\t\tthis.remove();\n\t\t\t\treturn path;\n\t\t\t}\n\t\t\treturn reduce.base.call(this);\n\t\t},\n\t\n\t\tisClockwise: function() {\n\t\t\tvar child = this.getFirstChild();\n\t\t\treturn child && child.isClockwise();\n\t\t},\n\t\n\t\tsetClockwise: function(clockwise) {\n\t\t\tif (this.isClockwise() !== !!clockwise)\n\t\t\t\tthis.reverse();\n\t\t},\n\t\n\t\tgetFirstSegment: function() {\n\t\t\tvar first = this.getFirstChild();\n\t\t\treturn first && first.getFirstSegment();\n\t\t},\n\t\n\t\tgetLastSegment: function() {\n\t\t\tvar last = this.getLastChild();\n\t\t\treturn last && last.getLastSegment();\n\t\t},\n\t\n\t\tgetCurves: function() {\n\t\t\tvar children = this._children,\n\t\t\t\tcurves = [];\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tcurves.push.apply(curves, children[i].getCurves());\n\t\t\treturn curves;\n\t\t},\n\t\n\t\tgetFirstCurve: function() {\n\t\t\tvar first = this.getFirstChild();\n\t\t\treturn first && first.getFirstCurve();\n\t\t},\n\t\n\t\tgetLastCurve: function() {\n\t\t\tvar last = this.getLastChild();\n\t\t\treturn last && last.getFirstCurve();\n\t\t},\n\t\n\t\tgetArea: function() {\n\t\t\tvar children = this._children,\n\t\t\t\tarea = 0;\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tarea += children[i].getArea();\n\t\t\treturn area;\n\t\t}\n\t}, {\n\t\tbeans: true,\n\t\n\t\tgetPathData: function(_matrix, _precision) {\n\t\t\tvar children = this._children,\n\t\t\t\tpaths = [];\n\t\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\t\tvar child = children[i],\n\t\t\t\t\tmx = child._matrix;\n\t\t\t\tpaths.push(child.getPathData(_matrix && !mx.isIdentity()\n\t\t\t\t\t\t? _matrix.chain(mx) : _matrix, _precision));\n\t\t\t}\n\t\t\treturn paths.join(' ');\n\t\t}\n\t}, {\n\t\t_getChildHitTestOptions: function(options) {\n\t\t\treturn options.class === Path || options.type === 'path'\n\t\t\t\t\t? options\n\t\t\t\t\t: new Base(options, { fill: false });\n\t\t},\n\t\n\t\t_draw: function(ctx, param, strokeMatrix) {\n\t\t\tvar children = this._children;\n\t\t\tif (children.length === 0)\n\t\t\t\treturn;\n\t\n\t\t\tif (this._currentPath) {\n\t\t\t\tctx.currentPath = this._currentPath;\n\t\t\t} else {\n\t\t\t\tparam = param.extend({ dontStart: true, dontFinish: true });\n\t\t\t\tctx.beginPath();\n\t\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\t\tchildren[i].draw(ctx, param, strokeMatrix);\n\t\t\t\tthis._currentPath = ctx.currentPath;\n\t\t\t}\n\t\n\t\t\tif (!param.clip) {\n\t\t\t\tthis._setStyles(ctx);\n\t\t\t\tvar style = this._style;\n\t\t\t\tif (style.hasFill()) {\n\t\t\t\t\tctx.fill(style.getWindingRule());\n\t\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\t\t\t\tif (style.hasStroke())\n\t\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t},\n\t\n\t\t_drawSelected: function(ctx, matrix, selectedItems) {\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\t\tvar child = children[i],\n\t\t\t\t\tmx = child._matrix;\n\t\t\t\tif (!selectedItems[child._id])\n\t\t\t\t\tchild._drawSelected(ctx, mx.isIdentity() ? matrix\n\t\t\t\t\t\t\t: matrix.chain(mx));\n\t\t\t}\n\t\t}\n\t},\n\tnew function() {\n\t\tfunction getCurrentPath(that, check) {\n\t\t\tvar children = that._children;\n\t\t\tif (check && children.length === 0)\n\t\t\t\tthrow new Error('Use a moveTo() command first');\n\t\t\treturn children[children.length - 1];\n\t\t}\n\t\n\t\tvar fields = {\n\t\t\tmoveTo: function() {\n\t\t\t\tvar current = getCurrentPath(this),\n\t\t\t\t\tpath = current && current.isEmpty() ? current\n\t\t\t\t\t\t\t: new Path(Item.NO_INSERT);\n\t\t\t\tif (path !== current)\n\t\t\t\t\tthis.addChild(path);\n\t\t\t\tpath.moveTo.apply(path, arguments);\n\t\t\t},\n\t\n\t\t\tmoveBy: function() {\n\t\t\t\tvar current = getCurrentPath(this, true),\n\t\t\t\t\tlast = current && current.getLastSegment(),\n\t\t\t\t\tpoint = Point.read(arguments);\n\t\t\t\tthis.moveTo(last ? point.add(last._point) : point);\n\t\t\t},\n\t\n\t\t\tclosePath: function(join) {\n\t\t\t\tgetCurrentPath(this, true).closePath(join);\n\t\t\t}\n\t\t};\n\t\n\t\tBase.each(['lineTo', 'cubicCurveTo', 'quadraticCurveTo', 'curveTo', 'arcTo',\n\t\t\t\t'lineBy', 'cubicCurveBy', 'quadraticCurveBy', 'curveBy', 'arcBy'],\n\t\t\t\tfunction(key) {\n\t\t\t\t\tfields[key] = function() {\n\t\t\t\t\t\tvar path = getCurrentPath(this, true);\n\t\t\t\t\t\tpath[key].apply(path, arguments);\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t);\n\t\n\t\treturn fields;\n\t});\n\t\n\tPathItem.inject(new function() {\n\t\tvar operators = {\n\t\t\tunite: function(w) {\n\t\t\t\treturn w === 1 || w === 0;\n\t\t\t},\n\t\n\t\t\tintersect: function(w) {\n\t\t\t\treturn w === 2;\n\t\t\t},\n\t\n\t\t\tsubtract: function(w) {\n\t\t\t\treturn w === 1;\n\t\t\t},\n\t\n\t\t\texclude: function(w) {\n\t\t\t\treturn w === 1;\n\t\t\t}\n\t\t};\n\t\n\t\tfunction preparePath(path, resolve) {\n\t\t\tvar res = path.clone(false).reduce().transform(null, true, true);\n\t\t\treturn resolve ? res.resolveCrossings().reorient() : res;\n\t\t}\n\t\n\t\tfunction finishBoolean(ctor, paths, path1, path2, reduce) {\n\t\t\tvar result = new ctor(Item.NO_INSERT);\n\t\t\tresult.addChildren(paths, true);\n\t\t\tif (reduce)\n\t\t\t\tresult = result.reduce();\n\t\t\tresult.insertAbove(path2 && path1.isSibling(path2)\n\t\t\t\t\t&& path1.getIndex() < path2.getIndex()\n\t\t\t\t\t\t? path2 : path1);\n\t\t\tresult.setStyle(path1._style);\n\t\t\treturn result;\n\t\t}\n\t\n\t\tfunction computeBoolean(path1, path2, operation) {\n\t\t\tif (!path1._children && !path1._closed)\n\t\t\t\treturn computeOpenBoolean(path1, path2, operation);\n\t\t\tvar _path1 = preparePath(path1, true),\n\t\t\t\t_path2 = path2 && path1 !== path2 && preparePath(path2, true);\n\t\t\tif (_path2 && /^(subtract|exclude)$/.test(operation)\n\t\t\t\t\t^ (_path2.isClockwise() !== _path1.isClockwise()))\n\t\t\t\t_path2.reverse();\n\t\t\tvar intersections = CurveLocation.expand(\n\t\t\t\t_path1.getIntersections(_path2, function(inter) {\n\t\t\t\t\treturn _path2 && inter.isOverlap() || inter.isCrossing();\n\t\t\t\t})\n\t\t\t);\n\t\t\tdivideLocations(intersections);\n\t\n\t\t\tvar segments = [],\n\t\t\t\tmonoCurves = [];\n\t\n\t\t\tfunction collect(paths) {\n\t\t\t\tfor (var i = 0, l = paths.length; i < l; i++) {\n\t\t\t\t\tvar path = paths[i];\n\t\t\t\t\tsegments.push.apply(segments, path._segments);\n\t\t\t\t\tmonoCurves.push.apply(monoCurves, path._getMonoCurves());\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tcollect(_path1._children || [_path1]);\n\t\t\tif (_path2)\n\t\t\t\tcollect(_path2._children || [_path2]);\n\t\t\tfor (var i = 0, l = intersections.length; i < l; i++) {\n\t\t\t\tpropagateWinding(intersections[i]._segment, _path1, _path2,\n\t\t\t\t\t\tmonoCurves, operation);\n\t\t\t}\n\t\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\t\tvar segment = segments[i];\n\t\t\t\tif (segment._winding == null) {\n\t\t\t\t\tpropagateWinding(segment, _path1, _path2, monoCurves,\n\t\t\t\t\t\t\toperation);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn finishBoolean(CompoundPath, tracePaths(segments, operation),\n\t\t\t\t\tpath1, path2, true);\n\t\t}\n\t\n\t\tfunction computeOpenBoolean(path1, path2, operation) {\n\t\t\tif (!path2 || !path2._children && !path2._closed\n\t\t\t\t\t|| !/^(subtract|intersect)$/.test(operation))\n\t\t\t\treturn null;\n\t\t\tvar _path1 = preparePath(path1, false),\n\t\t\t\t_path2 = preparePath(path2, false),\n\t\t\t\tintersections = _path1.getIntersections(_path2, function(inter) {\n\t\t\t\t\treturn inter.isOverlap() || inter.isCrossing();\n\t\t\t\t}),\n\t\t\t\tsub = operation === 'subtract',\n\t\t\t\tpaths = [];\n\t\n\t\t\tfunction addPath(path) {\n\t\t\t\tif (_path2.contains(path.getPointAt(path.getLength() / 2)) ^ sub) {\n\t\t\t\t\tpaths.unshift(path);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tfor (var i = intersections.length - 1; i >= 0; i--) {\n\t\t\t\tvar path = intersections[i].split();\n\t\t\t\tif (path) {\n\t\t\t\t\tif (addPath(path))\n\t\t\t\t\t\tpath.getFirstSegment().setHandleIn(0, 0);\n\t\t\t\t\t_path1.getLastSegment().setHandleOut(0, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t\taddPath(_path1);\n\t\t\treturn finishBoolean(Group, paths, path1, path2);\n\t\t}\n\t\n\t\tfunction linkIntersections(from, to) {\n\t\t\tvar prev = from;\n\t\t\twhile (prev) {\n\t\t\t\tif (prev === to)\n\t\t\t\t\treturn;\n\t\t\t\tprev = prev._prev;\n\t\t\t}\n\t\t\twhile (from._next && from._next !== to)\n\t\t\t\tfrom = from._next;\n\t\t\tif (!from._next) {\n\t\t\t\twhile (to._prev)\n\t\t\t\t\tto = to._prev;\n\t\t\t\tfrom._next = to;\n\t\t\t\tto._prev = from;\n\t\t\t}\n\t\t}\n\t\n\t\tfunction divideLocations(locations) {\n\t\t\tvar tMin = 4e-7,\n\t\t\t\ttMax = 1 - tMin,\n\t\t\t\tnoHandles = false,\n\t\t\t\tclearSegments = [],\n\t\t\t\tprevCurve,\n\t\t\t\tprevT;\n\t\n\t\t\tfor (var i = locations.length - 1; i >= 0; i--) {\n\t\t\t\tvar loc = locations[i],\n\t\t\t\t\tcurve = loc._curve,\n\t\t\t\t\tt = loc._parameter,\n\t\t\t\t\torigT = t;\n\t\t\t\tif (curve !== prevCurve) {\n\t\t\t\t\tnoHandles = !curve.hasHandles();\n\t\t\t\t} else if (prevT > 0) {\n\t\t\t\t\tt /= prevT;\n\t\t\t\t}\n\t\t\t\tvar segment;\n\t\t\t\tif (t < tMin) {\n\t\t\t\t\tsegment = curve._segment1;\n\t\t\t\t} else if (t > tMax) {\n\t\t\t\t\tsegment = curve._segment2;\n\t\t\t\t} else {\n\t\t\t\t\tsegment = curve.divide(t, true, true)._segment1;\n\t\t\t\t\tif (noHandles)\n\t\t\t\t\t\tclearSegments.push(segment);\n\t\t\t\t}\n\t\t\t\tloc._setSegment(segment);\n\t\t\t\tvar inter = segment._intersection,\n\t\t\t\t\tdest = loc._intersection;\n\t\t\t\tif (inter) {\n\t\t\t\t\tlinkIntersections(inter, dest);\n\t\t\t\t\tvar other = inter;\n\t\t\t\t\twhile (other) {\n\t\t\t\t\t\tlinkIntersections(other._intersection, inter);\n\t\t\t\t\t\tother = other._next;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tsegment._intersection = dest;\n\t\t\t\t}\n\t\t\t\tprevCurve = curve;\n\t\t\t\tprevT = origT;\n\t\t\t}\n\t\t\tfor (var i = 0, l = clearSegments.length; i < l; i++) {\n\t\t\t\tclearSegments[i].clearHandles();\n\t\t\t}\n\t\t}\n\t\n\t\tfunction getWinding(point, curves, horizontal, testContains) {\n\t\t\tvar epsilon = 2e-7,\n\t\t\t\ttMin = 4e-7,\n\t\t\t\ttMax = 1 - tMin,\n\t\t\t\tpx = point.x,\n\t\t\t\tpy = point.y,\n\t\t\t\twindLeft = 0,\n\t\t\t\twindRight = 0,\n\t\t\t\troots = [],\n\t\t\t\tabs = Math.abs;\n\t\t\tif (horizontal) {\n\t\t\t\tvar yTop = -Infinity,\n\t\t\t\t\tyBottom = Infinity,\n\t\t\t\t\tyBefore = py - epsilon,\n\t\t\t\t\tyAfter = py + epsilon;\n\t\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\t\tvar values = curves[i].values;\n\t\t\t\t\tif (Curve.solveCubic(values, 0, px, roots, 0, 1) > 0) {\n\t\t\t\t\t\tfor (var j = roots.length - 1; j >= 0; j--) {\n\t\t\t\t\t\t\tvar y = Curve.getPoint(values, roots[j]).y;\n\t\t\t\t\t\t\tif (y < yBefore && y > yTop) {\n\t\t\t\t\t\t\t\tyTop = y;\n\t\t\t\t\t\t\t} else if (y > yAfter && y < yBottom) {\n\t\t\t\t\t\t\t\tyBottom = y;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tyTop = (yTop + py) / 2;\n\t\t\t\tyBottom = (yBottom + py) / 2;\n\t\t\t\tif (yTop > -Infinity)\n\t\t\t\t\twindLeft = getWinding(new Point(px, yTop), curves, false,\n\t\t\t\t\t\t\ttestContains);\n\t\t\t\tif (yBottom < Infinity)\n\t\t\t\t\twindRight = getWinding(new Point(px, yBottom), curves, false,\n\t\t\t\t\t\t\ttestContains);\n\t\t\t} else {\n\t\t\t\tvar xBefore = px - epsilon,\n\t\t\t\t\txAfter = px + epsilon;\n\t\t\t\tvar startCounted = false,\n\t\t\t\t\tprevCurve,\n\t\t\t\t\tprevT;\n\t\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\t\tvar curve = curves[i],\n\t\t\t\t\t\tvalues = curve.values,\n\t\t\t\t\t\twinding = curve.winding;\n\t\t\t\t\tif (winding && (winding === 1\n\t\t\t\t\t\t\t&& py >= values[1] && py <= values[7]\n\t\t\t\t\t\t\t|| py >= values[7] && py <= values[1])\n\t\t\t\t\t\t&& Curve.solveCubic(values, 1, py, roots, 0, 1) === 1) {\n\t\t\t\t\t\tvar t = roots[0];\n\t\t\t\t\t\tif (!(\n\t\t\t\t\t\t\tt > tMax && startCounted && curve.next !== curves[i + 1]\n\t\t\t\t\t\t\t|| t < tMin && prevT > tMax\n\t\t\t\t\t\t\t\t&& curve.previous === prevCurve)) {\n\t\t\t\t\t\t\tvar x = Curve.getPoint(values, t).x,\n\t\t\t\t\t\t\t\tslope = Curve.getTangent(values, t).y,\n\t\t\t\t\t\t\t\tcounted = false;\n\t\t\t\t\t\t\tif (Numerical.isZero(slope) && !Curve.isStraight(values)\n\t\t\t\t\t\t\t\t\t|| t < tMin && slope * Curve.getTangent(\n\t\t\t\t\t\t\t\t\t\tcurve.previous.values, 1).y < 0\n\t\t\t\t\t\t\t\t\t|| t > tMax && slope * Curve.getTangent(\n\t\t\t\t\t\t\t\t\t\tcurve.next.values, 0).y < 0) {\n\t\t\t\t\t\t\t\tif (testContains && x >= xBefore && x <= xAfter) {\n\t\t\t\t\t\t\t\t\t++windLeft;\n\t\t\t\t\t\t\t\t\t++windRight;\n\t\t\t\t\t\t\t\t\tcounted = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (x <= xBefore) {\n\t\t\t\t\t\t\t\twindLeft += winding;\n\t\t\t\t\t\t\t\tcounted = true;\n\t\t\t\t\t\t\t} else if (x >= xAfter) {\n\t\t\t\t\t\t\t\twindRight += winding;\n\t\t\t\t\t\t\t\tcounted = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (curve.previous !== curves[i - 1])\n\t\t\t\t\t\t\t\tstartCounted = t < tMin && counted;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprevCurve = curve;\n\t\t\t\t\t\tprevT = t;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn Math.max(abs(windLeft), abs(windRight));\n\t\t}\n\t\n\t\tfunction propagateWinding(segment, path1, path2, monoCurves, operation) {\n\t\t\tvar epsilon = 2e-7,\n\t\t\t\tchain = [],\n\t\t\t\tstart = segment,\n\t\t\t\ttotalLength = 0,\n\t\t\t\twindingSum = 0;\n\t\t\tdo {\n\t\t\t\tvar curve = segment.getCurve(),\n\t\t\t\t\tlength = curve.getLength();\n\t\t\t\tchain.push({ segment: segment, curve: curve, length: length });\n\t\t\t\ttotalLength += length;\n\t\t\t\tsegment = segment.getNext();\n\t\t\t} while (segment && !segment._intersection && segment !== start);\n\t\t\tfor (var i = 0; i < 3; i++) {\n\t\t\t\tvar length = totalLength * (i + 1) / 4;\n\t\t\t\tfor (var k = 0, m = chain.length; k < m; k++) {\n\t\t\t\t\tvar node = chain[k],\n\t\t\t\t\t\tcurveLength = node.length;\n\t\t\t\t\tif (length <= curveLength) {\n\t\t\t\t\t\tif (length < epsilon || curveLength - length < epsilon)\n\t\t\t\t\t\t\tlength = curveLength / 2;\n\t\t\t\t\t\tvar curve = node.curve,\n\t\t\t\t\t\t\tpath = curve._path,\n\t\t\t\t\t\t\tparent = path._parent,\n\t\t\t\t\t\t\tpt = curve.getPointAt(length),\n\t\t\t\t\t\t\thor = curve.isHorizontal();\n\t\t\t\t\t\tif (parent instanceof CompoundPath)\n\t\t\t\t\t\t\tpath = parent;\n\t\t\t\t\t\twindingSum += operation === 'subtract' && path2\n\t\t\t\t\t\t\t&& (path === path1 && path2._getWinding(pt, hor)\n\t\t\t\t\t\t\t|| path === path2 && !path1._getWinding(pt, hor))\n\t\t\t\t\t\t\t? 0\n\t\t\t\t\t\t\t: getWinding(pt, monoCurves, hor);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tlength -= curveLength;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar winding = Math.round(windingSum / 3);\n\t\t\tfor (var j = chain.length - 1; j >= 0; j--)\n\t\t\t\tchain[j].segment._winding = winding;\n\t\t}\n\t\n\t\tfunction tracePaths(segments, operation) {\n\t\t\tvar paths = [],\n\t\t\t\tstart,\n\t\t\t\totherStart,\n\t\t\t\toperator = operators[operation],\n\t\t\t\toverlapWinding = {\n\t\t\t\t\tunite: { 1: 2 },\n\t\t\t\t\tintersect: { 2: 1 }\n\t\t\t\t}[operation];\n\t\n\t\t\tfunction isValid(seg, adjusted) {\n\t\t\t\tif (seg._visited)\n\t\t\t\t\treturn false;\n\t\t\t\tif (!operator)\n\t\t\t\t\treturn true;\n\t\t\t\tvar winding = seg._winding,\n\t\t\t\t\tinter = seg._intersection;\n\t\t\t\tif (inter && adjusted && overlapWinding && inter.isOverlap())\n\t\t\t\t\twinding = overlapWinding[winding] || winding;\n\t\t\t\treturn operator(winding);\n\t\t\t}\n\t\n\t\t\tfunction isStart(seg) {\n\t\t\t\treturn seg === start || seg === otherStart;\n\t\t\t}\n\t\n\t\t\tfunction findBestIntersection(inter, strict) {\n\t\t\t\tif (!inter._next)\n\t\t\t\t\treturn inter;\n\t\t\t\twhile (inter) {\n\t\t\t\t\tvar seg = inter._segment,\n\t\t\t\t\t\tnextSeg = seg.getNext(),\n\t\t\t\t\t\tnextInter = nextSeg._intersection;\n\t\t\t\t\tif (isStart(nextSeg)\n\t\t\t\t\t\t|| !seg._visited && !nextSeg._visited\n\t\t\t\t\t\t&& (!operator\n\t\t\t\t\t\t\t|| (!strict || isValid(seg))\n\t\t\t\t\t\t\t&& (!(strict && nextInter && nextInter.isOverlap())\n\t\t\t\t\t\t\t\t&& isValid(nextSeg)\n\t\t\t\t\t\t\t\t|| !strict && nextInter\n\t\t\t\t\t\t\t\t&& isValid(nextInter._segment))\n\t\t\t\t\t\t))\n\t\t\t\t\t\treturn inter;\n\t\t\t\t\tinter = inter._next;\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\n\t\t\tfunction findStartSegment(inter, next) {\n\t\t\t\twhile (inter) {\n\t\t\t\t\tvar seg = inter._segment;\n\t\t\t\t\tif (isStart(seg))\n\t\t\t\t\t\treturn seg;\n\t\t\t\t\tinter = inter[next ? '_next' : '_prev'];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\t\tvar seg = segments[i],\n\t\t\t\t\tpath = null,\n\t\t\t\t\tfinished = false;\n\t\t\t\tif (!isValid(seg, true))\n\t\t\t\t\tcontinue;\n\t\t\t\tstart = otherStart = null;\n\t\t\t\twhile (!finished) {\n\t\t\t\t\tvar inter = seg._intersection,\n\t\t\t\t\t\thandleIn = path && seg._handleIn;\n\t\t\t\t\tinter = inter && (findBestIntersection(inter, true)\n\t\t\t\t\t\t\t|| findBestIntersection(inter, false)) || inter;\n\t\t\t\t\tvar other = inter && inter._segment;\n\t\t\t\t\tif (other && isValid(other))\n\t\t\t\t\t\tseg = other;\n\t\t\t\t\tif (seg._visited) {\n\t\t\t\t\t\tfinished = isStart(seg);\n\t\t\t\t\t\tif (!finished && inter) {\n\t\t\t\t\t\t\tvar found = findStartSegment(inter, true)\n\t\t\t\t\t\t\t\t|| findStartSegment(inter, false);\n\t\t\t\t\t\t\tif (found) {\n\t\t\t\t\t\t\t\tseg = found;\n\t\t\t\t\t\t\t\tfinished = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (!path) {\n\t\t\t\t\t\tpath = new Path(Item.NO_INSERT);\n\t\t\t\t\t\tstart = seg;\n\t\t\t\t\t\totherStart = other;\n\t\t\t\t\t}\n\t\t\t\t\tpath.add(new Segment(seg._point, handleIn, seg._handleOut));\n\t\t\t\t\tseg._visited = true;\n\t\t\t\t\tseg = seg.getNext();\n\t\t\t\t\tfinished = isStart(seg);\n\t\t\t\t}\n\t\t\t\tif (finished) {\n\t\t\t\t\tpath.firstSegment.setHandleIn(seg._handleIn);\n\t\t\t\t\tpath.setClosed(true);\n\t\t\t\t} else if (path) {\n\t\t\t\t\tconsole.error('Boolean operation resulted in open path',\n\t\t\t\t\t\t\t'segments =', path._segments.length,\n\t\t\t\t\t\t\t'length =', path.getLength());\n\t\t\t\t\tpath = null;\n\t\t\t\t}\n\t\t\t\tif (path && (path._segments.length > 8\n\t\t\t\t\t\t|| !Numerical.isZero(path.getArea()))) {\n\t\t\t\t\tpaths.push(path);\n\t\t\t\t\tpath = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn paths;\n\t\t}\n\t\n\t\treturn {\n\t\t\t_getWinding: function(point, horizontal, testContains) {\n\t\t\t\treturn getWinding(point, this._getMonoCurves(),\n\t\t\t\t\t\thorizontal, testContains);\n\t\t\t},\n\t\n\t\t\tunite: function(path) {\n\t\t\t\treturn computeBoolean(this, path, 'unite');\n\t\t\t},\n\t\n\t\t\tintersect: function(path) {\n\t\t\t\treturn computeBoolean(this, path, 'intersect');\n\t\t\t},\n\t\n\t\t\tsubtract: function(path) {\n\t\t\t\treturn computeBoolean(this, path, 'subtract');\n\t\t\t},\n\t\n\t\t\texclude: function(path) {\n\t\t\t\treturn computeBoolean(this, path, 'exclude');\n\t\t\t},\n\t\n\t\t\tdivide: function(path) {\n\t\t\t\treturn finishBoolean(Group,\n\t\t\t\t\t\t[this.subtract(path), this.intersect(path)],\n\t\t\t\t\t\tthis, path, true);\n\t\t\t},\n\t\n\t\t\tresolveCrossings: function() {\n\t\t\t\tvar crossings = this.getCrossings();\n\t\t\t\tif (!crossings.length)\n\t\t\t\t\treturn this;\n\t\t\t\tdivideLocations(CurveLocation.expand(crossings));\n\t\t\t\tvar paths = this._children || [this],\n\t\t\t\t\tsegments = [];\n\t\t\t\tfor (var i = 0, l = paths.length; i < l; i++) {\n\t\t\t\t\tsegments.push.apply(segments, paths[i]._segments);\n\t\t\t\t}\n\t\t\t\treturn finishBoolean(CompoundPath, tracePaths(segments),\n\t\t\t\t\t\tthis, null, false);\n\t\t\t}\n\t\t};\n\t});\n\t\n\tPath.inject({\n\t\t_getMonoCurves: function() {\n\t\t\tvar monoCurves = this._monoCurves,\n\t\t\t\tprevCurve;\n\t\n\t\t\tfunction insertCurve(v) {\n\t\t\t\tvar y0 = v[1],\n\t\t\t\t\ty1 = v[7],\n\t\t\t\t\tcurve = {\n\t\t\t\t\t\tvalues: v,\n\t\t\t\t\t\twinding: y0 === y1\n\t\t\t\t\t\t\t? 0\n\t\t\t\t\t\t\t: y0 > y1\n\t\t\t\t\t\t\t\t? -1\n\t\t\t\t\t\t\t\t: 1,\n\t\t\t\t\t\tprevious: prevCurve,\n\t\t\t\t\t\tnext: null\n\t\t\t\t\t};\n\t\t\t\tif (prevCurve)\n\t\t\t\t\tprevCurve.next = curve;\n\t\t\t\tmonoCurves.push(curve);\n\t\t\t\tprevCurve = curve;\n\t\t\t}\n\t\n\t\t\tfunction handleCurve(v) {\n\t\t\t\tif (Curve.getLength(v) === 0)\n\t\t\t\t\treturn;\n\t\t\t\tvar y0 = v[1],\n\t\t\t\t\ty1 = v[3],\n\t\t\t\t\ty2 = v[5],\n\t\t\t\t\ty3 = v[7];\n\t\t\t\tif (Curve.isStraight(v)) {\n\t\t\t\t\tinsertCurve(v);\n\t\t\t\t} else {\n\t\t\t\t\tvar a = 3 * (y1 - y2) - y0 + y3,\n\t\t\t\t\t\tb = 2 * (y0 + y2) - 4 * y1,\n\t\t\t\t\t\tc = y1 - y0,\n\t\t\t\t\t\ttMin = 4e-7,\n\t\t\t\t\t\ttMax = 1 - tMin,\n\t\t\t\t\t\troots = [],\n\t\t\t\t\t\tn = Numerical.solveQuadratic(a, b, c, roots, tMin, tMax);\n\t\t\t\t\tif (n === 0) {\n\t\t\t\t\t\tinsertCurve(v);\n\t\t\t\t\t} else {\n\t\t\t\t\t\troots.sort();\n\t\t\t\t\t\tvar t = roots[0],\n\t\t\t\t\t\t\tparts = Curve.subdivide(v, t);\n\t\t\t\t\t\tinsertCurve(parts[0]);\n\t\t\t\t\t\tif (n > 1) {\n\t\t\t\t\t\t\tt = (roots[1] - t) / (1 - t);\n\t\t\t\t\t\t\tparts = Curve.subdivide(parts[1], t);\n\t\t\t\t\t\t\tinsertCurve(parts[0]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tinsertCurve(parts[1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif (!monoCurves) {\n\t\t\t\tmonoCurves = this._monoCurves = [];\n\t\t\t\tvar curves = this.getCurves(),\n\t\t\t\t\tsegments = this._segments;\n\t\t\t\tfor (var i = 0, l = curves.length; i < l; i++)\n\t\t\t\t\thandleCurve(curves[i].getValues());\n\t\t\t\tif (!this._closed && segments.length > 1) {\n\t\t\t\t\tvar p1 = segments[segments.length - 1]._point,\n\t\t\t\t\t\tp2 = segments[0]._point,\n\t\t\t\t\t\tp1x = p1._x, p1y = p1._y,\n\t\t\t\t\t\tp2x = p2._x, p2y = p2._y;\n\t\t\t\t\thandleCurve([p1x, p1y, p1x, p1y, p2x, p2y, p2x, p2y]);\n\t\t\t\t}\n\t\t\t\tif (monoCurves.length > 0) {\n\t\t\t\t\tvar first = monoCurves[0],\n\t\t\t\t\t\tlast = monoCurves[monoCurves.length - 1];\n\t\t\t\t\tfirst.previous = last;\n\t\t\t\t\tlast.next = first;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn monoCurves;\n\t\t},\n\t\n\t\tgetInteriorPoint: function() {\n\t\t\tvar bounds = this.getBounds(),\n\t\t\t\tpoint = bounds.getCenter(true);\n\t\t\tif (!this.contains(point)) {\n\t\t\t\tvar curves = this._getMonoCurves(),\n\t\t\t\t\troots = [],\n\t\t\t\t\ty = point.y,\n\t\t\t\t\txIntercepts = [];\n\t\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\t\tvar values = curves[i].values;\n\t\t\t\t\tif ((curves[i].winding === 1\n\t\t\t\t\t\t\t&& y >= values[1] && y <= values[7]\n\t\t\t\t\t\t\t|| y >= values[7] && y <= values[1])\n\t\t\t\t\t\t\t&& Curve.solveCubic(values, 1, y, roots, 0, 1) > 0) {\n\t\t\t\t\t\tfor (var j = roots.length - 1; j >= 0; j--)\n\t\t\t\t\t\t\txIntercepts.push(Curve.getPoint(values, roots[j]).x);\n\t\t\t\t\t}\n\t\t\t\t\tif (xIntercepts.length > 1)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tpoint.x = (xIntercepts[0] + xIntercepts[1]) / 2;\n\t\t\t}\n\t\t\treturn point;\n\t\t},\n\t\n\t\treorient: function() {\n\t\t\tthis.setClockwise(true);\n\t\t\treturn this;\n\t\t}\n\t});\n\t\n\tCompoundPath.inject({\n\t\t_getMonoCurves: function() {\n\t\t\tvar children = this._children,\n\t\t\t\tmonoCurves = [];\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tmonoCurves.push.apply(monoCurves, children[i]._getMonoCurves());\n\t\t\treturn monoCurves;\n\t\t},\n\t\n\t\treorient: function() {\n\t\t\tvar children = this.removeChildren().sort(function(a, b) {\n\t\t\t\treturn b.getBounds().getArea() - a.getBounds().getArea();\n\t\t\t});\n\t\t\tif (children.length > 0) {\n\t\t\t\tthis.addChildren(children);\n\t\t\t\tvar clockwise = children[0].isClockwise();\n\t\t\t\tfor (var i = 1, l = children.length; i < l; i++) {\n\t\t\t\t\tvar point = children[i].getInteriorPoint(),\n\t\t\t\t\t\tcounters = 0;\n\t\t\t\t\tfor (var j = i - 1; j >= 0; j--) {\n\t\t\t\t\t\tif (children[j].contains(point))\n\t\t\t\t\t\t\tcounters++;\n\t\t\t\t\t}\n\t\t\t\t\tchildren[i].setClockwise(counters % 2 === 0 && clockwise);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t});\n\t\n\tvar PathIterator = Base.extend({\n\t\t_class: 'PathIterator',\n\t\n\t\tinitialize: function(path, maxRecursion, tolerance, matrix) {\n\t\t\tvar curves = [],\n\t\t\t\tparts = [],\n\t\t\t\tlength = 0,\n\t\t\t\tminDifference = 1 / (maxRecursion || 32),\n\t\t\t\tsegments = path._segments,\n\t\t\t\tsegment1 = segments[0],\n\t\t\t\tsegment2;\n\t\n\t\t\tfunction addCurve(segment1, segment2) {\n\t\t\t\tvar curve = Curve.getValues(segment1, segment2, matrix);\n\t\t\t\tcurves.push(curve);\n\t\t\t\tcomputeParts(curve, segment1._index, 0, 1);\n\t\t\t}\n\t\n\t\t\tfunction computeParts(curve, index, minT, maxT) {\n\t\t\t\tif ((maxT - minT) > minDifference\n\t\t\t\t\t\t&& !Curve.isFlatEnough(curve, tolerance || 0.25)) {\n\t\t\t\t\tvar split = Curve.subdivide(curve, 0.5),\n\t\t\t\t\t\thalfT = (minT + maxT) / 2;\n\t\t\t\t\tcomputeParts(split[0], index, minT, halfT);\n\t\t\t\t\tcomputeParts(split[1], index, halfT, maxT);\n\t\t\t\t} else {\n\t\t\t\t\tvar x = curve[6] - curve[0],\n\t\t\t\t\t\ty = curve[7] - curve[1],\n\t\t\t\t\t\tdist = Math.sqrt(x * x + y * y);\n\t\t\t\t\tif (dist > 1e-6) {\n\t\t\t\t\t\tlength += dist;\n\t\t\t\t\t\tparts.push({\n\t\t\t\t\t\t\toffset: length,\n\t\t\t\t\t\t\tvalue: maxT,\n\t\t\t\t\t\t\tindex: index\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tfor (var i = 1, l = segments.length; i < l; i++) {\n\t\t\t\tsegment2 = segments[i];\n\t\t\t\taddCurve(segment1, segment2);\n\t\t\t\tsegment1 = segment2;\n\t\t\t}\n\t\t\tif (path._closed)\n\t\t\t\taddCurve(segment2, segments[0]);\n\t\n\t\t\tthis.curves = curves;\n\t\t\tthis.parts = parts;\n\t\t\tthis.length = length;\n\t\t\tthis.index = 0;\n\t\t},\n\t\n\t\tgetParameterAt: function(offset) {\n\t\t\tvar i, j = this.index;\n\t\t\tfor (;;) {\n\t\t\t\ti = j;\n\t\t\t\tif (j == 0 || this.parts[--j].offset < offset)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tfor (var l = this.parts.length; i < l; i++) {\n\t\t\t\tvar part = this.parts[i];\n\t\t\t\tif (part.offset >= offset) {\n\t\t\t\t\tthis.index = i;\n\t\t\t\t\tvar prev = this.parts[i - 1];\n\t\t\t\t\tvar prevVal = prev && prev.index == part.index ? prev.value : 0,\n\t\t\t\t\t\tprevLen = prev ? prev.offset : 0;\n\t\t\t\t\treturn {\n\t\t\t\t\t\tvalue: prevVal + (part.value - prevVal)\n\t\t\t\t\t\t\t* (offset - prevLen) / (part.offset - prevLen),\n\t\t\t\t\t\tindex: part.index\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar part = this.parts[this.parts.length - 1];\n\t\t\treturn {\n\t\t\t\tvalue: 1,\n\t\t\t\tindex: part.index\n\t\t\t};\n\t\t},\n\t\n\t\tdrawPart: function(ctx, from, to) {\n\t\t\tfrom = this.getParameterAt(from);\n\t\t\tto = this.getParameterAt(to);\n\t\t\tfor (var i = from.index; i <= to.index; i++) {\n\t\t\t\tvar curve = Curve.getPart(this.curves[i],\n\t\t\t\t\t\ti == from.index ? from.value : 0,\n\t\t\t\t\t\ti == to.index ? to.value : 1);\n\t\t\t\tif (i == from.index)\n\t\t\t\t\tctx.moveTo(curve[0], curve[1]);\n\t\t\t\tctx.bezierCurveTo.apply(ctx, curve.slice(2));\n\t\t\t}\n\t\t}\n\t}, Base.each(Curve.evaluateMethods,\n\t\tfunction(name) {\n\t\t\tthis[name + 'At'] = function(offset, weighted) {\n\t\t\t\tvar param = this.getParameterAt(offset);\n\t\t\t\treturn Curve[name](this.curves[param.index], param.value, weighted);\n\t\t\t};\n\t\t}, {})\n\t);\n\t\n\tvar PathFitter = Base.extend({\n\t\tinitialize: function(path, error) {\n\t\t\tvar points = this.points = [],\n\t\t\t\tsegments = path._segments,\n\t\t\t\tprev;\n\t\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\t\tvar point = segments[i].point.clone();\n\t\t\t\tif (!prev || !prev.equals(point)) {\n\t\t\t\t\tpoints.push(point);\n\t\t\t\t\tprev = point;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif (path._closed) {\n\t\t\t\tthis.closed = true;\n\t\t\t\tpoints.unshift(points[points.length - 1]);\n\t\t\t\tpoints.push(points[1]);\n\t\t\t}\n\t\n\t\t\tthis.error = error;\n\t\t},\n\t\n\t\tfit: function() {\n\t\t\tvar points = this.points,\n\t\t\t\tlength = points.length,\n\t\t\t\tsegments = this.segments = length > 0\n\t\t\t\t\t\t? [new Segment(points[0])] : [];\n\t\t\tif (length > 1)\n\t\t\t\tthis.fitCubic(0, length - 1,\n\t\t\t\t\tpoints[1].subtract(points[0]).normalize(),\n\t\t\t\t\tpoints[length - 2].subtract(points[length - 1]).normalize());\n\t\n\t\t\tif (this.closed) {\n\t\t\t\tsegments.shift();\n\t\t\t\tsegments.pop();\n\t\t\t}\n\t\n\t\t\treturn segments;\n\t\t},\n\t\n\t\tfitCubic: function(first, last, tan1, tan2) {\n\t\t\tif (last - first == 1) {\n\t\t\t\tvar pt1 = this.points[first],\n\t\t\t\t\tpt2 = this.points[last],\n\t\t\t\t\tdist = pt1.getDistance(pt2) / 3;\n\t\t\t\tthis.addCurve([pt1, pt1.add(tan1.normalize(dist)),\n\t\t\t\t\t\tpt2.add(tan2.normalize(dist)), pt2]);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar uPrime = this.chordLengthParameterize(first, last),\n\t\t\t\tmaxError = Math.max(this.error, this.error * this.error),\n\t\t\t\tsplit,\n\t\t\t\tparametersInOrder = true;\n\t\t\tfor (var i = 0; i <= 4; i++) {\n\t\t\t\tvar curve = this.generateBezier(first, last, uPrime, tan1, tan2);\n\t\t\t\tvar max = this.findMaxError(first, last, curve, uPrime);\n\t\t\t\tif (max.error < this.error && parametersInOrder) {\n\t\t\t\t\tthis.addCurve(curve);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tsplit = max.index;\n\t\t\t\tif (max.error >= maxError)\n\t\t\t\t\tbreak;\n\t\t\t\tparametersInOrder = this.reparameterize(first, last, uPrime, curve);\n\t\t\t\tmaxError = max.error;\n\t\t\t}\n\t\t\tvar V1 = this.points[split - 1].subtract(this.points[split]),\n\t\t\t\tV2 = this.points[split].subtract(this.points[split + 1]),\n\t\t\t\ttanCenter = V1.add(V2).divide(2).normalize();\n\t\t\tthis.fitCubic(first, split, tan1, tanCenter);\n\t\t\tthis.fitCubic(split, last, tanCenter.negate(), tan2);\n\t\t},\n\t\n\t\taddCurve: function(curve) {\n\t\t\tvar prev = this.segments[this.segments.length - 1];\n\t\t\tprev.setHandleOut(curve[1].subtract(curve[0]));\n\t\t\tthis.segments.push(\n\t\t\t\t\tnew Segment(curve[3], curve[2].subtract(curve[3])));\n\t\t},\n\t\n\t\tgenerateBezier: function(first, last, uPrime, tan1, tan2) {\n\t\t\tvar epsilon = 1e-12,\n\t\t\t\tpt1 = this.points[first],\n\t\t\t\tpt2 = this.points[last],\n\t\t\t\tC = [[0, 0], [0, 0]],\n\t\t\t\tX = [0, 0];\n\t\n\t\t\tfor (var i = 0, l = last - first + 1; i < l; i++) {\n\t\t\t\tvar u = uPrime[i],\n\t\t\t\t\tt = 1 - u,\n\t\t\t\t\tb = 3 * u * t,\n\t\t\t\t\tb0 = t * t * t,\n\t\t\t\t\tb1 = b * t,\n\t\t\t\t\tb2 = b * u,\n\t\t\t\t\tb3 = u * u * u,\n\t\t\t\t\ta1 = tan1.normalize(b1),\n\t\t\t\t\ta2 = tan2.normalize(b2),\n\t\t\t\t\ttmp = this.points[first + i]\n\t\t\t\t\t\t.subtract(pt1.multiply(b0 + b1))\n\t\t\t\t\t\t.subtract(pt2.multiply(b2 + b3));\n\t\t\t\tC[0][0] += a1.dot(a1);\n\t\t\t\tC[0][1] += a1.dot(a2);\n\t\t\t\tC[1][0] = C[0][1];\n\t\t\t\tC[1][1] += a2.dot(a2);\n\t\t\t\tX[0] += a1.dot(tmp);\n\t\t\t\tX[1] += a2.dot(tmp);\n\t\t\t}\n\t\n\t\t\tvar detC0C1 = C[0][0] * C[1][1] - C[1][0] * C[0][1],\n\t\t\t\talpha1, alpha2;\n\t\t\tif (Math.abs(detC0C1) > epsilon) {\n\t\t\t\tvar detC0X\t= C[0][0] * X[1]\t- C[1][0] * X[0],\n\t\t\t\t\tdetXC1\t= X[0]\t  * C[1][1] - X[1]\t  * C[0][1];\n\t\t\t\talpha1 = detXC1 / detC0C1;\n\t\t\t\talpha2 = detC0X / detC0C1;\n\t\t\t} else {\n\t\t\t\tvar c0 = C[0][0] + C[0][1],\n\t\t\t\t\tc1 = C[1][0] + C[1][1];\n\t\t\t\tif (Math.abs(c0) > epsilon) {\n\t\t\t\t\talpha1 = alpha2 = X[0] / c0;\n\t\t\t\t} else if (Math.abs(c1) > epsilon) {\n\t\t\t\t\talpha1 = alpha2 = X[1] / c1;\n\t\t\t\t} else {\n\t\t\t\t\talpha1 = alpha2 = 0;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tvar segLength = pt2.getDistance(pt1),\n\t\t\t\teps = epsilon * segLength,\n\t\t\t\thandle1,\n\t\t\t\thandle2;\n\t\t\tif (alpha1 < eps || alpha2 < eps) {\n\t\t\t\talpha1 = alpha2 = segLength / 3;\n\t\t\t} else {\n\t\t\t\tvar line = pt2.subtract(pt1);\n\t\t\t\thandle1 = tan1.normalize(alpha1);\n\t\t\t\thandle2 = tan2.normalize(alpha2);\n\t\t\t\tif (handle1.dot(line) - handle2.dot(line) > segLength * segLength) {\n\t\t\t\t\talpha1 = alpha2 = segLength / 3;\n\t\t\t\t\thandle1 = handle2 = null;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn [pt1, pt1.add(handle1 || tan1.normalize(alpha1)),\n\t\t\t\t\tpt2.add(handle2 || tan2.normalize(alpha2)), pt2];\n\t\t},\n\t\n\t\treparameterize: function(first, last, u, curve) {\n\t\t\tfor (var i = first; i <= last; i++) {\n\t\t\t\tu[i - first] = this.findRoot(curve, this.points[i], u[i - first]);\n\t\t\t}\n\t\t\tfor (var i = 1, l = u.length; i < l; i++) {\n\t\t\t\tif (u[i] <= u[i - 1])\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\t\n\t\tfindRoot: function(curve, point, u) {\n\t\t\tvar curve1 = [],\n\t\t\t\tcurve2 = [];\n\t\t\tfor (var i = 0; i <= 2; i++) {\n\t\t\t\tcurve1[i] = curve[i + 1].subtract(curve[i]).multiply(3);\n\t\t\t}\n\t\t\tfor (var i = 0; i <= 1; i++) {\n\t\t\t\tcurve2[i] = curve1[i + 1].subtract(curve1[i]).multiply(2);\n\t\t\t}\n\t\t\tvar pt = this.evaluate(3, curve, u),\n\t\t\t\tpt1 = this.evaluate(2, curve1, u),\n\t\t\t\tpt2 = this.evaluate(1, curve2, u),\n\t\t\t\tdiff = pt.subtract(point),\n\t\t\t\tdf = pt1.dot(pt1) + diff.dot(pt2);\n\t\t\tif (Math.abs(df) < 1e-6)\n\t\t\t\treturn u;\n\t\t\treturn u - diff.dot(pt1) / df;\n\t\t},\n\t\n\t\tevaluate: function(degree, curve, t) {\n\t\t\tvar tmp = curve.slice();\n\t\t\tfor (var i = 1; i <= degree; i++) {\n\t\t\t\tfor (var j = 0; j <= degree - i; j++) {\n\t\t\t\t\ttmp[j] = tmp[j].multiply(1 - t).add(tmp[j + 1].multiply(t));\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn tmp[0];\n\t\t},\n\t\n\t\tchordLengthParameterize: function(first, last) {\n\t\t\tvar u = [0];\n\t\t\tfor (var i = first + 1; i <= last; i++) {\n\t\t\t\tu[i - first] = u[i - first - 1]\n\t\t\t\t\t\t+ this.points[i].getDistance(this.points[i - 1]);\n\t\t\t}\n\t\t\tfor (var i = 1, m = last - first; i <= m; i++) {\n\t\t\t\tu[i] /= u[m];\n\t\t\t}\n\t\t\treturn u;\n\t\t},\n\t\n\t\tfindMaxError: function(first, last, curve, u) {\n\t\t\tvar index = Math.floor((last - first + 1) / 2),\n\t\t\t\tmaxDist = 0;\n\t\t\tfor (var i = first + 1; i < last; i++) {\n\t\t\t\tvar P = this.evaluate(3, curve, u[i - first]);\n\t\t\t\tvar v = P.subtract(this.points[i]);\n\t\t\t\tvar dist = v.x * v.x + v.y * v.y;\n\t\t\t\tif (dist >= maxDist) {\n\t\t\t\t\tmaxDist = dist;\n\t\t\t\t\tindex = i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {\n\t\t\t\terror: maxDist,\n\t\t\t\tindex: index\n\t\t\t};\n\t\t}\n\t});\n\t\n\tvar TextItem = Item.extend({\n\t\t_class: 'TextItem',\n\t\t_boundsSelected: true,\n\t\t_applyMatrix: false,\n\t\t_canApplyMatrix: false,\n\t\t_serializeFields: {\n\t\t\tcontent: null\n\t\t},\n\t\t_boundsGetter: 'getBounds',\n\t\n\t\tinitialize: function TextItem(arg) {\n\t\t\tthis._content = '';\n\t\t\tthis._lines = [];\n\t\t\tvar hasProps = arg && Base.isPlainObject(arg)\n\t\t\t\t\t&& arg.x === undefined && arg.y === undefined;\n\t\t\tthis._initialize(hasProps && arg, !hasProps && Point.read(arguments));\n\t\t},\n\t\n\t\t_equals: function(item) {\n\t\t\treturn this._content === item._content;\n\t\t},\n\t\n\t\t_clone: function _clone(copy, insert, includeMatrix) {\n\t\t\tcopy.setContent(this._content);\n\t\t\treturn _clone.base.call(this, copy, insert, includeMatrix);\n\t\t},\n\t\n\t\tgetContent: function() {\n\t\t\treturn this._content;\n\t\t},\n\t\n\t\tsetContent: function(content) {\n\t\t\tthis._content = '' + content;\n\t\t\tthis._lines = this._content.split(/\\r\\n|\\n|\\r/mg);\n\t\t\tthis._changed(265);\n\t\t},\n\t\n\t\tisEmpty: function() {\n\t\t\treturn !this._content;\n\t\t},\n\t\n\t\tgetCharacterStyle: '#getStyle',\n\t\tsetCharacterStyle: '#setStyle',\n\t\n\t\tgetParagraphStyle: '#getStyle',\n\t\tsetParagraphStyle: '#setStyle'\n\t});\n\t\n\tvar PointText = TextItem.extend({\n\t\t_class: 'PointText',\n\t\n\t\tinitialize: function PointText() {\n\t\t\tTextItem.apply(this, arguments);\n\t\t},\n\t\n\t\tclone: function(insert) {\n\t\t\treturn this._clone(new PointText(Item.NO_INSERT), insert);\n\t\t},\n\t\n\t\tgetPoint: function() {\n\t\t\tvar point = this._matrix.getTranslation();\n\t\t\treturn new LinkedPoint(point.x, point.y, this, 'setPoint');\n\t\t},\n\t\n\t\tsetPoint: function() {\n\t\t\tvar point = Point.read(arguments);\n\t\t\tthis.translate(point.subtract(this._matrix.getTranslation()));\n\t\t},\n\t\n\t\t_draw: function(ctx) {\n\t\t\tif (!this._content)\n\t\t\t\treturn;\n\t\t\tthis._setStyles(ctx);\n\t\t\tvar style = this._style,\n\t\t\t\tlines = this._lines,\n\t\t\t\tleading = style.getLeading(),\n\t\t\t\tshadowColor = ctx.shadowColor;\n\t\t\tctx.font = style.getFontStyle();\n\t\t\tctx.textAlign = style.getJustification();\n\t\t\tfor (var i = 0, l = lines.length; i < l; i++) {\n\t\t\t\tctx.shadowColor = shadowColor;\n\t\t\t\tvar line = lines[i];\n\t\t\t\tif (style.hasFill()) {\n\t\t\t\t\tctx.fillText(line, 0, 0);\n\t\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\t\t\t\tif (style.hasStroke())\n\t\t\t\t\tctx.strokeText(line, 0, 0);\n\t\t\t\tctx.translate(0, leading);\n\t\t\t}\n\t\t},\n\t\n\t\t_getBounds: function(getter, matrix) {\n\t\t\tvar style = this._style,\n\t\t\t\tlines = this._lines,\n\t\t\t\tnumLines = lines.length,\n\t\t\t\tjustification = style.getJustification(),\n\t\t\t\tleading = style.getLeading(),\n\t\t\t\twidth = this.getView().getTextWidth(style.getFontStyle(), lines),\n\t\t\t\tx = 0;\n\t\t\tif (justification !== 'left')\n\t\t\t\tx -= width / (justification === 'center' ? 2: 1);\n\t\t\tvar bounds = new Rectangle(x,\n\t\t\t\t\t\tnumLines ? - 0.75 * leading : 0,\n\t\t\t\t\t\twidth, numLines * leading);\n\t\t\treturn matrix ? matrix._transformBounds(bounds, bounds) : bounds;\n\t\t}\n\t});\n\t\n\tvar Color = Base.extend(new function() {\n\t\tvar types = {\n\t\t\tgray: ['gray'],\n\t\t\trgb: ['red', 'green', 'blue'],\n\t\t\thsb: ['hue', 'saturation', 'brightness'],\n\t\t\thsl: ['hue', 'saturation', 'lightness'],\n\t\t\tgradient: ['gradient', 'origin', 'destination', 'highlight']\n\t\t};\n\t\n\t\tvar componentParsers = {},\n\t\t\tcolorCache = {},\n\t\t\tcolorCtx;\n\t\n\t\tfunction fromCSS(string) {\n\t\t\tvar match = string.match(/^#(\\w{1,2})(\\w{1,2})(\\w{1,2})$/),\n\t\t\t\tcomponents;\n\t\t\tif (match) {\n\t\t\t\tcomponents = [0, 0, 0];\n\t\t\t\tfor (var i = 0; i < 3; i++) {\n\t\t\t\t\tvar value = match[i + 1];\n\t\t\t\t\tcomponents[i] = parseInt(value.length == 1\n\t\t\t\t\t\t\t? value + value : value, 16) / 255;\n\t\t\t\t}\n\t\t\t} else if (match = string.match(/^rgba?\\((.*)\\)$/)) {\n\t\t\t\tcomponents = match[1].split(',');\n\t\t\t\tfor (var i = 0, l = components.length; i < l; i++) {\n\t\t\t\t\tvar value = +components[i];\n\t\t\t\t\tcomponents[i] = i < 3 ? value / 255 : value;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar cached = colorCache[string];\n\t\t\t\tif (!cached) {\n\t\t\t\t\tif (!colorCtx) {\n\t\t\t\t\t\tcolorCtx = CanvasProvider.getContext(1, 1);\n\t\t\t\t\t\tcolorCtx.globalCompositeOperation = 'copy';\n\t\t\t\t\t}\n\t\t\t\t\tcolorCtx.fillStyle = 'rgba(0,0,0,0)';\n\t\t\t\t\tcolorCtx.fillStyle = string;\n\t\t\t\t\tcolorCtx.fillRect(0, 0, 1, 1);\n\t\t\t\t\tvar data = colorCtx.getImageData(0, 0, 1, 1).data;\n\t\t\t\t\tcached = colorCache[string] = [\n\t\t\t\t\t\tdata[0] / 255,\n\t\t\t\t\t\tdata[1] / 255,\n\t\t\t\t\t\tdata[2] / 255\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t\tcomponents = cached.slice();\n\t\t\t}\n\t\t\treturn components;\n\t\t}\n\t\n\t\tvar hsbIndices = [\n\t\t\t[0, 3, 1],\n\t\t\t[2, 0, 1],\n\t\t\t[1, 0, 3],\n\t\t\t[1, 2, 0],\n\t\t\t[3, 1, 0],\n\t\t\t[0, 1, 2]\n\t\t];\n\t\n\t\tvar converters = {\n\t\t\t'rgb-hsb': function(r, g, b) {\n\t\t\t\tvar max = Math.max(r, g, b),\n\t\t\t\t\tmin = Math.min(r, g, b),\n\t\t\t\t\tdelta = max - min,\n\t\t\t\t\th = delta === 0 ? 0\n\t\t\t\t\t\t:\t( max == r ? (g - b) / delta + (g < b ? 6 : 0)\n\t\t\t\t\t\t\t: max == g ? (b - r) / delta + 2\n\t\t\t\t\t\t\t:\t\t\t (r - g) / delta + 4) * 60;\n\t\t\t\treturn [h, max === 0 ? 0 : delta / max, max];\n\t\t\t},\n\t\n\t\t\t'hsb-rgb': function(h, s, b) {\n\t\t\t\th = (((h / 60) % 6) + 6) % 6;\n\t\t\t\tvar i = Math.floor(h),\n\t\t\t\t\tf = h - i,\n\t\t\t\t\ti = hsbIndices[i],\n\t\t\t\t\tv = [\n\t\t\t\t\t\tb,\n\t\t\t\t\t\tb * (1 - s),\n\t\t\t\t\t\tb * (1 - s * f),\n\t\t\t\t\t\tb * (1 - s * (1 - f))\n\t\t\t\t\t];\n\t\t\t\treturn [v[i[0]], v[i[1]], v[i[2]]];\n\t\t\t},\n\t\n\t\t\t'rgb-hsl': function(r, g, b) {\n\t\t\t\tvar max = Math.max(r, g, b),\n\t\t\t\t\tmin = Math.min(r, g, b),\n\t\t\t\t\tdelta = max - min,\n\t\t\t\t\tachromatic = delta === 0,\n\t\t\t\t\th = achromatic ? 0\n\t\t\t\t\t\t:\t( max == r ? (g - b) / delta + (g < b ? 6 : 0)\n\t\t\t\t\t\t\t: max == g ? (b - r) / delta + 2\n\t\t\t\t\t\t\t:\t\t\t (r - g) / delta + 4) * 60,\n\t\t\t\t\tl = (max + min) / 2,\n\t\t\t\t\ts = achromatic ? 0 : l < 0.5\n\t\t\t\t\t\t\t? delta / (max + min)\n\t\t\t\t\t\t\t: delta / (2 - max - min);\n\t\t\t\treturn [h, s, l];\n\t\t\t},\n\t\n\t\t\t'hsl-rgb': function(h, s, l) {\n\t\t\t\th = (((h / 360) % 1) + 1) % 1;\n\t\t\t\tif (s === 0)\n\t\t\t\t\treturn [l, l, l];\n\t\t\t\tvar t3s = [ h + 1 / 3, h, h - 1 / 3 ],\n\t\t\t\t\tt2 = l < 0.5 ? l * (1 + s) : l + s - l * s,\n\t\t\t\t\tt1 = 2 * l - t2,\n\t\t\t\t\tc = [];\n\t\t\t\tfor (var i = 0; i < 3; i++) {\n\t\t\t\t\tvar t3 = t3s[i];\n\t\t\t\t\tif (t3 < 0) t3 += 1;\n\t\t\t\t\tif (t3 > 1) t3 -= 1;\n\t\t\t\t\tc[i] = 6 * t3 < 1\n\t\t\t\t\t\t? t1 + (t2 - t1) * 6 * t3\n\t\t\t\t\t\t: 2 * t3 < 1\n\t\t\t\t\t\t\t? t2\n\t\t\t\t\t\t\t: 3 * t3 < 2\n\t\t\t\t\t\t\t\t? t1 + (t2 - t1) * ((2 / 3) - t3) * 6\n\t\t\t\t\t\t\t\t: t1;\n\t\t\t\t}\n\t\t\t\treturn c;\n\t\t\t},\n\t\n\t\t\t'rgb-gray': function(r, g, b) {\n\t\t\t\treturn [r * 0.2989 + g * 0.587 + b * 0.114];\n\t\t\t},\n\t\n\t\t\t'gray-rgb': function(g) {\n\t\t\t\treturn [g, g, g];\n\t\t\t},\n\t\n\t\t\t'gray-hsb': function(g) {\n\t\t\t\treturn [0, 0, g];\n\t\t\t},\n\t\n\t\t\t'gray-hsl': function(g) {\n\t\t\t\treturn [0, 0, g];\n\t\t\t},\n\t\n\t\t\t'gradient-rgb': function() {\n\t\t\t\treturn [];\n\t\t\t},\n\t\n\t\t\t'rgb-gradient': function() {\n\t\t\t\treturn [];\n\t\t\t}\n\t\n\t\t};\n\t\n\t\treturn Base.each(types, function(properties, type) {\n\t\t\tcomponentParsers[type] = [];\n\t\t\tBase.each(properties, function(name, index) {\n\t\t\t\tvar part = Base.capitalize(name),\n\t\t\t\t\thasOverlap = /^(hue|saturation)$/.test(name),\n\t\t\t\t\tparser = componentParsers[type][index] = name === 'gradient'\n\t\t\t\t\t\t? function(value) {\n\t\t\t\t\t\t\tvar current = this._components[0];\n\t\t\t\t\t\t\tvalue = Gradient.read(Array.isArray(value) ? value\n\t\t\t\t\t\t\t\t\t: arguments, 0, { readNull: true });\n\t\t\t\t\t\t\tif (current !== value) {\n\t\t\t\t\t\t\t\tif (current)\n\t\t\t\t\t\t\t\t\tcurrent._removeOwner(this);\n\t\t\t\t\t\t\t\tif (value)\n\t\t\t\t\t\t\t\t\tvalue._addOwner(this);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t: type === 'gradient'\n\t\t\t\t\t\t\t? function() {\n\t\t\t\t\t\t\t\treturn Point.read(arguments, 0, {\n\t\t\t\t\t\t\t\t\t\treadNull: name === 'highlight',\n\t\t\t\t\t\t\t\t\t\tclone: true\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t: function(value) {\n\t\t\t\t\t\t\t\treturn value == null || isNaN(value) ? 0 : value;\n\t\t\t\t\t\t\t};\n\t\n\t\t\t\tthis['get' + part] = function() {\n\t\t\t\t\treturn this._type === type\n\t\t\t\t\t\t|| hasOverlap && /^hs[bl]$/.test(this._type)\n\t\t\t\t\t\t\t? this._components[index]\n\t\t\t\t\t\t\t: this._convert(type)[index];\n\t\t\t\t};\n\t\n\t\t\t\tthis['set' + part] = function(value) {\n\t\t\t\t\tif (this._type !== type\n\t\t\t\t\t\t\t&& !(hasOverlap && /^hs[bl]$/.test(this._type))) {\n\t\t\t\t\t\tthis._components = this._convert(type);\n\t\t\t\t\t\tthis._properties = types[type];\n\t\t\t\t\t\tthis._type = type;\n\t\t\t\t\t}\n\t\t\t\t\tthis._components[index] = parser.call(this, value);\n\t\t\t\t\tthis._changed();\n\t\t\t\t};\n\t\t\t}, this);\n\t\t}, {\n\t\t\t_class: 'Color',\n\t\t\t_readIndex: true,\n\t\n\t\t\tinitialize: function Color(arg) {\n\t\t\t\tvar slice = Array.prototype.slice,\n\t\t\t\t\targs = arguments,\n\t\t\t\t\tread = 0,\n\t\t\t\t\ttype,\n\t\t\t\t\tcomponents,\n\t\t\t\t\talpha,\n\t\t\t\t\tvalues;\n\t\t\t\tif (Array.isArray(arg)) {\n\t\t\t\t\targs = arg;\n\t\t\t\t\targ = args[0];\n\t\t\t\t}\n\t\t\t\tvar argType = arg != null && typeof arg;\n\t\t\t\tif (argType === 'string' && arg in types) {\n\t\t\t\t\ttype = arg;\n\t\t\t\t\targ = args[1];\n\t\t\t\t\tif (Array.isArray(arg)) {\n\t\t\t\t\t\tcomponents = arg;\n\t\t\t\t\t\talpha = args[2];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (this.__read)\n\t\t\t\t\t\t\tread = 1;\n\t\t\t\t\t\targs = slice.call(args, 1);\n\t\t\t\t\t\targType = typeof arg;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!components) {\n\t\t\t\t\tvalues = argType === 'number'\n\t\t\t\t\t\t\t? args\n\t\t\t\t\t\t\t: argType === 'object' && arg.length != null\n\t\t\t\t\t\t\t\t? arg\n\t\t\t\t\t\t\t\t: null;\n\t\t\t\t\tif (values) {\n\t\t\t\t\t\tif (!type)\n\t\t\t\t\t\t\ttype = values.length >= 3\n\t\t\t\t\t\t\t\t\t? 'rgb'\n\t\t\t\t\t\t\t\t\t: 'gray';\n\t\t\t\t\t\tvar length = types[type].length;\n\t\t\t\t\t\talpha = values[length];\n\t\t\t\t\t\tif (this.__read)\n\t\t\t\t\t\t\tread += values === arguments\n\t\t\t\t\t\t\t\t? length + (alpha != null ? 1 : 0)\n\t\t\t\t\t\t\t\t: 1;\n\t\t\t\t\t\tif (values.length > length)\n\t\t\t\t\t\t\tvalues = slice.call(values, 0, length);\n\t\t\t\t\t} else if (argType === 'string') {\n\t\t\t\t\t\ttype = 'rgb';\n\t\t\t\t\t\tcomponents = fromCSS(arg);\n\t\t\t\t\t\tif (components.length === 4) {\n\t\t\t\t\t\t\talpha = components[3];\n\t\t\t\t\t\t\tcomponents.length--;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (argType === 'object') {\n\t\t\t\t\t\tif (arg.constructor === Color) {\n\t\t\t\t\t\t\ttype = arg._type;\n\t\t\t\t\t\t\tcomponents = arg._components.slice();\n\t\t\t\t\t\t\talpha = arg._alpha;\n\t\t\t\t\t\t\tif (type === 'gradient') {\n\t\t\t\t\t\t\t\tfor (var i = 1, l = components.length; i < l; i++) {\n\t\t\t\t\t\t\t\t\tvar point = components[i];\n\t\t\t\t\t\t\t\t\tif (point)\n\t\t\t\t\t\t\t\t\t\tcomponents[i] = point.clone();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (arg.constructor === Gradient) {\n\t\t\t\t\t\t\ttype = 'gradient';\n\t\t\t\t\t\t\tvalues = args;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttype = 'hue' in arg\n\t\t\t\t\t\t\t\t? 'lightness' in arg\n\t\t\t\t\t\t\t\t\t? 'hsl'\n\t\t\t\t\t\t\t\t\t: 'hsb'\n\t\t\t\t\t\t\t\t: 'gradient' in arg || 'stops' in arg\n\t\t\t\t\t\t\t\t\t\t|| 'radial' in arg\n\t\t\t\t\t\t\t\t\t? 'gradient'\n\t\t\t\t\t\t\t\t\t: 'gray' in arg\n\t\t\t\t\t\t\t\t\t\t? 'gray'\n\t\t\t\t\t\t\t\t\t\t: 'rgb';\n\t\t\t\t\t\t\tvar properties = types[type],\n\t\t\t\t\t\t\t\tparsers = componentParsers[type];\n\t\t\t\t\t\t\tthis._components = components = [];\n\t\t\t\t\t\t\tfor (var i = 0, l = properties.length; i < l; i++) {\n\t\t\t\t\t\t\t\tvar value = arg[properties[i]];\n\t\t\t\t\t\t\t\tif (value == null && i === 0 && type === 'gradient'\n\t\t\t\t\t\t\t\t\t\t&& 'stops' in arg) {\n\t\t\t\t\t\t\t\t\tvalue = {\n\t\t\t\t\t\t\t\t\t\tstops: arg.stops,\n\t\t\t\t\t\t\t\t\t\tradial: arg.radial\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tvalue = parsers[i].call(this, value);\n\t\t\t\t\t\t\t\tif (value != null)\n\t\t\t\t\t\t\t\t\tcomponents[i] = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\talpha = arg.alpha;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (this.__read && type)\n\t\t\t\t\t\tread = 1;\n\t\t\t\t}\n\t\t\t\tthis._type = type || 'rgb';\n\t\t\t\tthis._id = UID.get(Color);\n\t\t\t\tif (!components) {\n\t\t\t\t\tthis._components = components = [];\n\t\t\t\t\tvar parsers = componentParsers[this._type];\n\t\t\t\t\tfor (var i = 0, l = parsers.length; i < l; i++) {\n\t\t\t\t\t\tvar value = parsers[i].call(this, values && values[i]);\n\t\t\t\t\t\tif (value != null)\n\t\t\t\t\t\t\tcomponents[i] = value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._components = components;\n\t\t\t\tthis._properties = types[this._type];\n\t\t\t\tthis._alpha = alpha;\n\t\t\t\tif (this.__read)\n\t\t\t\t\tthis.__read = read;\n\t\t\t},\n\t\n\t\t\t_serialize: function(options, dictionary) {\n\t\t\t\tvar components = this.getComponents();\n\t\t\t\treturn Base.serialize(\n\t\t\t\t\t\t/^(gray|rgb)$/.test(this._type)\n\t\t\t\t\t\t\t? components\n\t\t\t\t\t\t\t: [this._type].concat(components),\n\t\t\t\t\t\toptions, true, dictionary);\n\t\t\t},\n\t\n\t\t\t_changed: function() {\n\t\t\t\tthis._canvasStyle = null;\n\t\t\t\tif (this._owner)\n\t\t\t\t\tthis._owner._changed(65);\n\t\t\t},\n\t\n\t\t\t_convert: function(type) {\n\t\t\t\tvar converter;\n\t\t\t\treturn this._type === type\n\t\t\t\t\t\t? this._components.slice()\n\t\t\t\t\t\t: (converter = converters[this._type + '-' + type])\n\t\t\t\t\t\t\t? converter.apply(this, this._components)\n\t\t\t\t\t\t\t: converters['rgb-' + type].apply(this,\n\t\t\t\t\t\t\t\tconverters[this._type + '-rgb'].apply(this,\n\t\t\t\t\t\t\t\t\tthis._components));\n\t\t\t},\n\t\n\t\t\tconvert: function(type) {\n\t\t\t\treturn new Color(type, this._convert(type), this._alpha);\n\t\t\t},\n\t\n\t\t\tgetType: function() {\n\t\t\t\treturn this._type;\n\t\t\t},\n\t\n\t\t\tsetType: function(type) {\n\t\t\t\tthis._components = this._convert(type);\n\t\t\t\tthis._properties = types[type];\n\t\t\t\tthis._type = type;\n\t\t\t},\n\t\n\t\t\tgetComponents: function() {\n\t\t\t\tvar components = this._components.slice();\n\t\t\t\tif (this._alpha != null)\n\t\t\t\t\tcomponents.push(this._alpha);\n\t\t\t\treturn components;\n\t\t\t},\n\t\n\t\t\tgetAlpha: function() {\n\t\t\t\treturn this._alpha != null ? this._alpha : 1;\n\t\t\t},\n\t\n\t\t\tsetAlpha: function(alpha) {\n\t\t\t\tthis._alpha = alpha == null ? null : Math.min(Math.max(alpha, 0), 1);\n\t\t\t\tthis._changed();\n\t\t\t},\n\t\n\t\t\thasAlpha: function() {\n\t\t\t\treturn this._alpha != null;\n\t\t\t},\n\t\n\t\t\tequals: function(color) {\n\t\t\t\tvar col = Base.isPlainValue(color, true)\n\t\t\t\t\t\t? Color.read(arguments)\n\t\t\t\t\t\t: color;\n\t\t\t\treturn col === this || col && this._class === col._class\n\t\t\t\t\t\t&& this._type === col._type\n\t\t\t\t\t\t&& this._alpha === col._alpha\n\t\t\t\t\t\t&& Base.equals(this._components, col._components)\n\t\t\t\t\t\t|| false;\n\t\t\t},\n\t\n\t\t\ttoString: function() {\n\t\t\t\tvar properties = this._properties,\n\t\t\t\t\tparts = [],\n\t\t\t\t\tisGradient = this._type === 'gradient',\n\t\t\t\t\tf = Formatter.instance;\n\t\t\t\tfor (var i = 0, l = properties.length; i < l; i++) {\n\t\t\t\t\tvar value = this._components[i];\n\t\t\t\t\tif (value != null)\n\t\t\t\t\t\tparts.push(properties[i] + ': '\n\t\t\t\t\t\t\t\t+ (isGradient ? value : f.number(value)));\n\t\t\t\t}\n\t\t\t\tif (this._alpha != null)\n\t\t\t\t\tparts.push('alpha: ' + f.number(this._alpha));\n\t\t\t\treturn '{ ' + parts.join(', ') + ' }';\n\t\t\t},\n\t\n\t\t\ttoCSS: function(hex) {\n\t\t\t\tvar components = this._convert('rgb'),\n\t\t\t\t\talpha = hex || this._alpha == null ? 1 : this._alpha;\n\t\t\t\tfunction convert(val) {\n\t\t\t\t\treturn Math.round((val < 0 ? 0 : val > 1 ? 1 : val) * 255);\n\t\t\t\t}\n\t\t\t\tcomponents = [\n\t\t\t\t\tconvert(components[0]),\n\t\t\t\t\tconvert(components[1]),\n\t\t\t\t\tconvert(components[2])\n\t\t\t\t];\n\t\t\t\tif (alpha < 1)\n\t\t\t\t\tcomponents.push(alpha < 0 ? 0 : alpha);\n\t\t\t\treturn hex\n\t\t\t\t\t\t? '#' + ((1 << 24) + (components[0] << 16)\n\t\t\t\t\t\t\t+ (components[1] << 8)\n\t\t\t\t\t\t\t+ components[2]).toString(16).slice(1)\n\t\t\t\t\t\t: (components.length == 4 ? 'rgba(' : 'rgb(')\n\t\t\t\t\t\t\t+ components.join(',') + ')';\n\t\t\t},\n\t\n\t\t\ttoCanvasStyle: function(ctx) {\n\t\t\t\tif (this._canvasStyle)\n\t\t\t\t\treturn this._canvasStyle;\n\t\t\t\tif (this._type !== 'gradient')\n\t\t\t\t\treturn this._canvasStyle = this.toCSS();\n\t\t\t\tvar components = this._components,\n\t\t\t\t\tgradient = components[0],\n\t\t\t\t\tstops = gradient._stops,\n\t\t\t\t\torigin = components[1],\n\t\t\t\t\tdestination = components[2],\n\t\t\t\t\tcanvasGradient;\n\t\t\t\tif (gradient._radial) {\n\t\t\t\t\tvar radius = destination.getDistance(origin),\n\t\t\t\t\t\thighlight = components[3];\n\t\t\t\t\tif (highlight) {\n\t\t\t\t\t\tvar vector = highlight.subtract(origin);\n\t\t\t\t\t\tif (vector.getLength() > radius)\n\t\t\t\t\t\t\thighlight = origin.add(vector.normalize(radius - 0.1));\n\t\t\t\t\t}\n\t\t\t\t\tvar start = highlight || origin;\n\t\t\t\t\tcanvasGradient = ctx.createRadialGradient(start.x, start.y,\n\t\t\t\t\t\t\t0, origin.x, origin.y, radius);\n\t\t\t\t} else {\n\t\t\t\t\tcanvasGradient = ctx.createLinearGradient(origin.x, origin.y,\n\t\t\t\t\t\t\tdestination.x, destination.y);\n\t\t\t\t}\n\t\t\t\tfor (var i = 0, l = stops.length; i < l; i++) {\n\t\t\t\t\tvar stop = stops[i];\n\t\t\t\t\tcanvasGradient.addColorStop(stop._rampPoint,\n\t\t\t\t\t\t\tstop._color.toCanvasStyle());\n\t\t\t\t}\n\t\t\t\treturn this._canvasStyle = canvasGradient;\n\t\t\t},\n\t\n\t\t\ttransform: function(matrix) {\n\t\t\t\tif (this._type === 'gradient') {\n\t\t\t\t\tvar components = this._components;\n\t\t\t\t\tfor (var i = 1, l = components.length; i < l; i++) {\n\t\t\t\t\t\tvar point = components[i];\n\t\t\t\t\t\tmatrix._transformPoint(point, point, true);\n\t\t\t\t\t}\n\t\t\t\t\tthis._changed();\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\tstatics: {\n\t\t\t\t_types: types,\n\t\n\t\t\t\trandom: function() {\n\t\t\t\t\tvar random = Math.random;\n\t\t\t\t\treturn new Color(random(), random(), random());\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t},\n\tnew function() {\n\t\tvar operators = {\n\t\t\tadd: function(a, b) {\n\t\t\t\treturn a + b;\n\t\t\t},\n\t\n\t\t\tsubtract: function(a, b) {\n\t\t\t\treturn a - b;\n\t\t\t},\n\t\n\t\t\tmultiply: function(a, b) {\n\t\t\t\treturn a * b;\n\t\t\t},\n\t\n\t\t\tdivide: function(a, b) {\n\t\t\t\treturn a / b;\n\t\t\t}\n\t\t};\n\t\n\t\treturn Base.each(operators, function(operator, name) {\n\t\t\tthis[name] = function(color) {\n\t\t\t\tcolor = Color.read(arguments);\n\t\t\t\tvar type = this._type,\n\t\t\t\t\tcomponents1 = this._components,\n\t\t\t\t\tcomponents2 = color._convert(type);\n\t\t\t\tfor (var i = 0, l = components1.length; i < l; i++)\n\t\t\t\t\tcomponents2[i] = operator(components1[i], components2[i]);\n\t\t\t\treturn new Color(type, components2,\n\t\t\t\t\t\tthis._alpha != null\n\t\t\t\t\t\t\t\t? operator(this._alpha, color.getAlpha())\n\t\t\t\t\t\t\t\t: null);\n\t\t\t};\n\t\t}, {\n\t\t});\n\t});\n\t\n\tvar Gradient = Base.extend({\n\t\t_class: 'Gradient',\n\t\n\t\tinitialize: function Gradient(stops, radial) {\n\t\t\tthis._id = UID.get();\n\t\t\tif (stops && this._set(stops))\n\t\t\t\tstops = radial = null;\n\t\t\tif (!this._stops)\n\t\t\t\tthis.setStops(stops || ['white', 'black']);\n\t\t\tif (this._radial == null)\n\t\t\t\tthis.setRadial(typeof radial === 'string' && radial === 'radial'\n\t\t\t\t\t\t|| radial || false);\n\t\t},\n\t\n\t\t_serialize: function(options, dictionary) {\n\t\t\treturn dictionary.add(this, function() {\n\t\t\t\treturn Base.serialize([this._stops, this._radial],\n\t\t\t\t\t\toptions, true, dictionary);\n\t\t\t});\n\t\t},\n\t\n\t\t_changed: function() {\n\t\t\tfor (var i = 0, l = this._owners && this._owners.length; i < l; i++)\n\t\t\t\tthis._owners[i]._changed();\n\t\t},\n\t\n\t\t_addOwner: function(color) {\n\t\t\tif (!this._owners)\n\t\t\t\tthis._owners = [];\n\t\t\tthis._owners.push(color);\n\t\t},\n\t\n\t\t_removeOwner: function(color) {\n\t\t\tvar index = this._owners ? this._owners.indexOf(color) : -1;\n\t\t\tif (index != -1) {\n\t\t\t\tthis._owners.splice(index, 1);\n\t\t\t\tif (this._owners.length === 0)\n\t\t\t\t\tthis._owners = undefined;\n\t\t\t}\n\t\t},\n\t\n\t\tclone: function() {\n\t\t\tvar stops = [];\n\t\t\tfor (var i = 0, l = this._stops.length; i < l; i++)\n\t\t\t\tstops[i] = this._stops[i].clone();\n\t\t\treturn new Gradient(stops, this._radial);\n\t\t},\n\t\n\t\tgetStops: function() {\n\t\t\treturn this._stops;\n\t\t},\n\t\n\t\tsetStops: function(stops) {\n\t\t\tif (this.stops) {\n\t\t\t\tfor (var i = 0, l = this._stops.length; i < l; i++)\n\t\t\t\t\tthis._stops[i]._owner = undefined;\n\t\t\t}\n\t\t\tif (stops.length < 2)\n\t\t\t\tthrow new Error(\n\t\t\t\t\t\t'Gradient stop list needs to contain at least two stops.');\n\t\t\tthis._stops = GradientStop.readAll(stops, 0, { clone: true });\n\t\t\tfor (var i = 0, l = this._stops.length; i < l; i++) {\n\t\t\t\tvar stop = this._stops[i];\n\t\t\t\tstop._owner = this;\n\t\t\t\tif (stop._defaultRamp)\n\t\t\t\t\tstop.setRampPoint(i / (l - 1));\n\t\t\t}\n\t\t\tthis._changed();\n\t\t},\n\t\n\t\tgetRadial: function() {\n\t\t\treturn this._radial;\n\t\t},\n\t\n\t\tsetRadial: function(radial) {\n\t\t\tthis._radial = radial;\n\t\t\tthis._changed();\n\t\t},\n\t\n\t\tequals: function(gradient) {\n\t\t\tif (gradient === this)\n\t\t\t\treturn true;\n\t\t\tif (gradient && this._class === gradient._class\n\t\t\t\t\t&& this._stops.length === gradient._stops.length) {\n\t\t\t\tfor (var i = 0, l = this._stops.length; i < l; i++) {\n\t\t\t\t\tif (!this._stops[i].equals(gradient._stops[i]))\n\t\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t});\n\t\n\tvar GradientStop = Base.extend({\n\t\t_class: 'GradientStop',\n\t\n\t\tinitialize: function GradientStop(arg0, arg1) {\n\t\t\tif (arg0) {\n\t\t\t\tvar color, rampPoint;\n\t\t\t\tif (arg1 === undefined && Array.isArray(arg0)) {\n\t\t\t\t\tcolor = arg0[0];\n\t\t\t\t\trampPoint = arg0[1];\n\t\t\t\t} else if (arg0.color) {\n\t\t\t\t\tcolor = arg0.color;\n\t\t\t\t\trampPoint = arg0.rampPoint;\n\t\t\t\t} else {\n\t\t\t\t\tcolor = arg0;\n\t\t\t\t\trampPoint = arg1;\n\t\t\t\t}\n\t\t\t\tthis.setColor(color);\n\t\t\t\tthis.setRampPoint(rampPoint);\n\t\t\t}\n\t\t},\n\t\n\t\tclone: function() {\n\t\t\treturn new GradientStop(this._color.clone(), this._rampPoint);\n\t\t},\n\t\n\t\t_serialize: function(options, dictionary) {\n\t\t\treturn Base.serialize([this._color, this._rampPoint], options, true,\n\t\t\t\t\tdictionary);\n\t\t},\n\t\n\t\t_changed: function() {\n\t\t\tif (this._owner)\n\t\t\t\tthis._owner._changed(65);\n\t\t},\n\t\n\t\tgetRampPoint: function() {\n\t\t\treturn this._rampPoint;\n\t\t},\n\t\n\t\tsetRampPoint: function(rampPoint) {\n\t\t\tthis._defaultRamp = rampPoint == null;\n\t\t\tthis._rampPoint = rampPoint || 0;\n\t\t\tthis._changed();\n\t\t},\n\t\n\t\tgetColor: function() {\n\t\t\treturn this._color;\n\t\t},\n\t\n\t\tsetColor: function(color) {\n\t\t\tthis._color = Color.read(arguments);\n\t\t\tif (this._color === color)\n\t\t\t\tthis._color = color.clone();\n\t\t\tthis._color._owner = this;\n\t\t\tthis._changed();\n\t\t},\n\t\n\t\tequals: function(stop) {\n\t\t\treturn stop === this || stop && this._class === stop._class\n\t\t\t\t\t&& this._color.equals(stop._color)\n\t\t\t\t\t&& this._rampPoint == stop._rampPoint\n\t\t\t\t\t|| false;\n\t\t}\n\t});\n\t\n\tvar Style = Base.extend(new function() {\n\t\tvar defaults = {\n\t\t\tfillColor: undefined,\n\t\t\tstrokeColor: undefined,\n\t\t\tstrokeWidth: 1,\n\t\t\tstrokeCap: 'butt',\n\t\t\tstrokeJoin: 'miter',\n\t\t\tstrokeScaling: true,\n\t\t\tmiterLimit: 10,\n\t\t\tdashOffset: 0,\n\t\t\tdashArray: [],\n\t\t\twindingRule: 'nonzero',\n\t\t\tshadowColor: undefined,\n\t\t\tshadowBlur: 0,\n\t\t\tshadowOffset: new Point(),\n\t\t\tselectedColor: undefined,\n\t\t\tfontFamily: 'sans-serif',\n\t\t\tfontWeight: 'normal',\n\t\t\tfontSize: 12,\n\t\t\tfont: 'sans-serif',\n\t\t\tleading: null,\n\t\t\tjustification: 'left'\n\t\t};\n\t\n\t\tvar flags = {\n\t\t\tstrokeWidth: 97,\n\t\t\tstrokeCap: 97,\n\t\t\tstrokeJoin: 97,\n\t\t\tstrokeScaling: 105,\n\t\t\tmiterLimit: 97,\n\t\t\tfontFamily: 9,\n\t\t\tfontWeight: 9,\n\t\t\tfontSize: 9,\n\t\t\tfont: 9,\n\t\t\tleading: 9,\n\t\t\tjustification: 9\n\t\t};\n\t\n\t\tvar item = { beans: true },\n\t\t\tfields = {\n\t\t\t\t_defaults: defaults,\n\t\t\t\t_textDefaults: new Base(defaults, {\n\t\t\t\t\tfillColor: new Color()\n\t\t\t\t}),\n\t\t\t\tbeans: true\n\t\t\t};\n\t\n\t\tBase.each(defaults, function(value, key) {\n\t\t\tvar isColor = /Color$/.test(key),\n\t\t\t\tisPoint = key === 'shadowOffset',\n\t\t\t\tpart = Base.capitalize(key),\n\t\t\t\tflag = flags[key],\n\t\t\t\tset = 'set' + part,\n\t\t\t\tget = 'get' + part;\n\t\n\t\t\tfields[set] = function(value) {\n\t\t\t\tvar owner = this._owner,\n\t\t\t\t\tchildren = owner && owner._children;\n\t\t\t\tif (children && children.length > 0\n\t\t\t\t\t\t&& !(owner instanceof CompoundPath)) {\n\t\t\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\t\t\tchildren[i]._style[set](value);\n\t\t\t\t} else {\n\t\t\t\t\tvar old = this._values[key];\n\t\t\t\t\tif (old !== value) {\n\t\t\t\t\t\tif (isColor) {\n\t\t\t\t\t\t\tif (old)\n\t\t\t\t\t\t\t\told._owner = undefined;\n\t\t\t\t\t\t\tif (value && value.constructor === Color) {\n\t\t\t\t\t\t\t\tif (value._owner)\n\t\t\t\t\t\t\t\t\tvalue = value.clone();\n\t\t\t\t\t\t\t\tvalue._owner = owner;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._values[key] = value;\n\t\t\t\t\t\tif (owner)\n\t\t\t\t\t\t\towner._changed(flag || 65);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\tfields[get] = function(_dontMerge) {\n\t\t\t\tvar owner = this._owner,\n\t\t\t\t\tchildren = owner && owner._children,\n\t\t\t\t\tvalue;\n\t\t\t\tif (!children || children.length === 0 || _dontMerge\n\t\t\t\t\t\t|| owner instanceof CompoundPath) {\n\t\t\t\t\tvar value = this._values[key];\n\t\t\t\t\tif (value === undefined) {\n\t\t\t\t\t\tvalue = this._defaults[key];\n\t\t\t\t\t\tif (value && value.clone)\n\t\t\t\t\t\t\tvalue = value.clone();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar ctor = isColor ? Color : isPoint ? Point : null;\n\t\t\t\t\t\tif (ctor && !(value && value.constructor === ctor)) {\n\t\t\t\t\t\t\tthis._values[key] = value = ctor.read([value], 0,\n\t\t\t\t\t\t\t\t\t{ readNull: true, clone: true });\n\t\t\t\t\t\t\tif (value && isColor)\n\t\t\t\t\t\t\t\tvalue._owner = owner;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\t\t\tvar childValue = children[i]._style[get]();\n\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\tvalue = childValue;\n\t\t\t\t\t} else if (!Base.equals(value, childValue)) {\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t};\n\t\n\t\t\titem[get] = function(_dontMerge) {\n\t\t\t\treturn this._style[get](_dontMerge);\n\t\t\t};\n\t\n\t\t\titem[set] = function(value) {\n\t\t\t\tthis._style[set](value);\n\t\t\t};\n\t\t});\n\t\n\t\tItem.inject(item);\n\t\treturn fields;\n\t}, {\n\t\t_class: 'Style',\n\t\n\t\tinitialize: function Style(style, _owner, _project) {\n\t\t\tthis._values = {};\n\t\t\tthis._owner = _owner;\n\t\t\tthis._project = _owner && _owner._project || _project || paper.project;\n\t\t\tif (_owner instanceof TextItem)\n\t\t\t\tthis._defaults = this._textDefaults;\n\t\t\tif (style)\n\t\t\t\tthis.set(style);\n\t\t},\n\t\n\t\tset: function(style) {\n\t\t\tvar isStyle = style instanceof Style,\n\t\t\t\tvalues = isStyle ? style._values : style;\n\t\t\tif (values) {\n\t\t\t\tfor (var key in values) {\n\t\t\t\t\tif (key in this._defaults) {\n\t\t\t\t\t\tvar value = values[key];\n\t\t\t\t\t\tthis[key] = value && isStyle && value.clone\n\t\t\t\t\t\t\t\t? value.clone() : value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\tequals: function(style) {\n\t\t\treturn style === this || style && this._class === style._class\n\t\t\t\t\t&& Base.equals(this._values, style._values)\n\t\t\t\t\t|| false;\n\t\t},\n\t\n\t\thasFill: function() {\n\t\t\treturn !!this.getFillColor();\n\t\t},\n\t\n\t\thasStroke: function() {\n\t\t\treturn !!this.getStrokeColor() && this.getStrokeWidth() > 0;\n\t\t},\n\t\n\t\thasShadow: function() {\n\t\t\treturn !!this.getShadowColor() && this.getShadowBlur() > 0;\n\t\t},\n\t\n\t\tgetView: function() {\n\t\t\treturn this._project.getView();\n\t\t},\n\t\n\t\tgetFontStyle: function() {\n\t\t\tvar fontSize = this.getFontSize();\n\t\t\treturn this.getFontWeight()\n\t\t\t\t\t+ ' ' + fontSize + (/[a-z]/i.test(fontSize + '') ? ' ' : 'px ')\n\t\t\t\t\t+ this.getFontFamily();\n\t\t},\n\t\n\t\tgetFont: '#getFontFamily',\n\t\tsetFont: '#setFontFamily',\n\t\n\t\tgetLeading: function getLeading() {\n\t\t\tvar leading = getLeading.base.call(this),\n\t\t\t\tfontSize = this.getFontSize();\n\t\t\tif (/pt|em|%|px/.test(fontSize))\n\t\t\t\tfontSize = this.getView().getPixelSize(fontSize);\n\t\t\treturn leading != null ? leading : fontSize * 1.2;\n\t\t}\n\t\n\t});\n\t\n\tvar DomElement = new function() {\n\t\tfunction handlePrefix(el, name, set, value) {\n\t\t\tvar prefixes = ['', 'webkit', 'moz', 'Moz', 'ms', 'o'],\n\t\t\t\tsuffix = name[0].toUpperCase() + name.substring(1);\n\t\t\tfor (var i = 0; i < 6; i++) {\n\t\t\t\tvar prefix = prefixes[i],\n\t\t\t\t\tkey = prefix ? prefix + suffix : name;\n\t\t\t\tif (key in el) {\n\t\t\t\t\tif (set) {\n\t\t\t\t\t\tel[key] = value;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn el[key];\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn {\n\t\t\tgetStyles: function(el) {\n\t\t\t\tvar doc = el && el.nodeType !== 9 ? el.ownerDocument : el,\n\t\t\t\t\tview = doc && doc.defaultView;\n\t\t\t\treturn view && view.getComputedStyle(el, '');\n\t\t\t},\n\t\n\t\t\tgetBounds: function(el, viewport) {\n\t\t\t\tvar doc = el.ownerDocument,\n\t\t\t\t\tbody = doc.body,\n\t\t\t\t\thtml = doc.documentElement,\n\t\t\t\t\trect;\n\t\t\t\ttry {\n\t\t\t\t\trect = el.getBoundingClientRect();\n\t\t\t\t} catch (e) {\n\t\t\t\t\trect = { left: 0, top: 0, width: 0, height: 0 };\n\t\t\t\t}\n\t\t\t\tvar x = rect.left - (html.clientLeft || body.clientLeft || 0),\n\t\t\t\t\ty = rect.top - (html.clientTop || body.clientTop || 0);\n\t\t\t\tif (!viewport) {\n\t\t\t\t\tvar view = doc.defaultView;\n\t\t\t\t\tx += view.pageXOffset || html.scrollLeft || body.scrollLeft;\n\t\t\t\t\ty += view.pageYOffset || html.scrollTop || body.scrollTop;\n\t\t\t\t}\n\t\t\t\treturn new Rectangle(x, y, rect.width, rect.height);\n\t\t\t},\n\t\n\t\t\tgetViewportBounds: function(el) {\n\t\t\t\tvar doc = el.ownerDocument,\n\t\t\t\t\tview = doc.defaultView,\n\t\t\t\t\thtml = doc.documentElement;\n\t\t\t\treturn new Rectangle(0, 0,\n\t\t\t\t\tview.innerWidth || html.clientWidth,\n\t\t\t\t\tview.innerHeight || html.clientHeight\n\t\t\t\t);\n\t\t\t},\n\t\n\t\t\tgetOffset: function(el, viewport) {\n\t\t\t\treturn DomElement.getBounds(el, viewport).getPoint();\n\t\t\t},\n\t\n\t\t\tgetSize: function(el) {\n\t\t\t\treturn DomElement.getBounds(el, true).getSize();\n\t\t\t},\n\t\n\t\t\tisInvisible: function(el) {\n\t\t\t\treturn DomElement.getSize(el).equals(new Size(0, 0));\n\t\t\t},\n\t\n\t\t\tisInView: function(el) {\n\t\t\t\treturn !DomElement.isInvisible(el)\n\t\t\t\t\t\t&& DomElement.getViewportBounds(el).intersects(\n\t\t\t\t\t\t\tDomElement.getBounds(el, true));\n\t\t\t},\n\t\n\t\t\tgetPrefixed: function(el, name) {\n\t\t\t\treturn handlePrefix(el, name);\n\t\t\t},\n\t\n\t\t\tsetPrefixed: function(el, name, value) {\n\t\t\t\tif (typeof name === 'object') {\n\t\t\t\t\tfor (var key in name)\n\t\t\t\t\t\thandlePrefix(el, key, true, name[key]);\n\t\t\t\t} else {\n\t\t\t\t\thandlePrefix(el, name, true, value);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t};\n\t\n\tvar DomEvent = {\n\t\tadd: function(el, events) {\n\t\t\tfor (var type in events) {\n\t\t\t\tvar func = events[type],\n\t\t\t\t\tparts = type.split(/[\\s,]+/g);\n\t\t\t\tfor (var i = 0, l = parts.length; i < l; i++)\n\t\t\t\t\tel.addEventListener(parts[i], func, false);\n\t\t\t}\n\t\t},\n\t\n\t\tremove: function(el, events) {\n\t\t\tfor (var type in events) {\n\t\t\t\tvar func = events[type],\n\t\t\t\t\tparts = type.split(/[\\s,]+/g);\n\t\t\t\tfor (var i = 0, l = parts.length; i < l; i++)\n\t\t\t\t\tel.removeEventListener(parts[i], func, false);\n\t\t\t}\n\t\t},\n\t\n\t\tgetPoint: function(event) {\n\t\t\tvar pos = event.targetTouches\n\t\t\t\t\t? event.targetTouches.length\n\t\t\t\t\t\t? event.targetTouches[0]\n\t\t\t\t\t\t: event.changedTouches[0]\n\t\t\t\t\t: event;\n\t\t\treturn new Point(\n\t\t\t\tpos.pageX || pos.clientX + document.documentElement.scrollLeft,\n\t\t\t\tpos.pageY || pos.clientY + document.documentElement.scrollTop\n\t\t\t);\n\t\t},\n\t\n\t\tgetTarget: function(event) {\n\t\t\treturn event.target || event.srcElement;\n\t\t},\n\t\n\t\tgetRelatedTarget: function(event) {\n\t\t\treturn event.relatedTarget || event.toElement;\n\t\t},\n\t\n\t\tgetOffset: function(event, target) {\n\t\t\treturn DomEvent.getPoint(event).subtract(DomElement.getOffset(\n\t\t\t\t\ttarget || DomEvent.getTarget(event)));\n\t\t},\n\t\n\t\tstop: function(event) {\n\t\t\tevent.stopPropagation();\n\t\t\tevent.preventDefault();\n\t\t}\n\t};\n\t\n\tDomEvent.requestAnimationFrame = new function() {\n\t\tvar nativeRequest = DomElement.getPrefixed(window, 'requestAnimationFrame'),\n\t\t\trequested = false,\n\t\t\tcallbacks = [],\n\t\t\tfocused = true,\n\t\t\ttimer;\n\t\n\t\tDomEvent.add(window, {\n\t\t\tfocus: function() {\n\t\t\t\tfocused = true;\n\t\t\t},\n\t\t\tblur: function() {\n\t\t\t\tfocused = false;\n\t\t\t}\n\t\t});\n\t\n\t\tfunction handleCallbacks() {\n\t\t\tfor (var i = callbacks.length - 1; i >= 0; i--) {\n\t\t\t\tvar entry = callbacks[i],\n\t\t\t\t\tfunc = entry[0],\n\t\t\t\t\tel = entry[1];\n\t\t\t\tif (!el || (PaperScope.getAttribute(el, 'keepalive') == 'true'\n\t\t\t\t\t\t|| focused) && DomElement.isInView(el)) {\n\t\t\t\t\tcallbacks.splice(i, 1);\n\t\t\t\t\tfunc();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (nativeRequest) {\n\t\t\t\tif (callbacks.length) {\n\t\t\t\t\tnativeRequest(handleCallbacks);\n\t\t\t\t} else {\n\t\t\t\t\trequested = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn function(callback, element) {\n\t\t\tcallbacks.push([callback, element]);\n\t\t\tif (nativeRequest) {\n\t\t\t\tif (!requested) {\n\t\t\t\t\tnativeRequest(handleCallbacks);\n\t\t\t\t\trequested = true;\n\t\t\t\t}\n\t\t\t} else if (!timer) {\n\t\t\t\ttimer = setInterval(handleCallbacks, 1000 / 60);\n\t\t\t}\n\t\t};\n\t};\n\t\n\tvar View = Base.extend(Emitter, {\n\t\t_class: 'View',\n\t\n\t\tinitialize: function View(project, element) {\n\t\t\tthis._project = project;\n\t\t\tthis._scope = project._scope;\n\t\t\tthis._element = element;\n\t\t\tvar size;\n\t\t\tif (!this._pixelRatio)\n\t\t\t\tthis._pixelRatio = window.devicePixelRatio || 1;\n\t\t\tthis._id = element.getAttribute('id');\n\t\t\tif (this._id == null)\n\t\t\t\telement.setAttribute('id', this._id = 'view-' + View._id++);\n\t\t\tDomEvent.add(element, this._viewEvents);\n\t\t\tvar none = 'none';\n\t\t\tDomElement.setPrefixed(element.style, {\n\t\t\t\tuserSelect: none,\n\t\t\t\ttouchAction: none,\n\t\t\t\ttouchCallout: none,\n\t\t\t\tcontentZooming: none,\n\t\t\t\tuserDrag: none,\n\t\t\t\ttapHighlightColor: 'rgba(0,0,0,0)'\n\t\t\t});\n\t\n\t\t\tfunction getSize(name) {\n\t\t\t\treturn element[name] || parseInt(element.getAttribute(name), 10);\n\t\t\t};\n\t\n\t\t\tfunction getCanvasSize() {\n\t\t\t\tvar size = DomElement.getSize(element);\n\t\t\t\treturn size.isNaN() || size.isZero()\n\t\t\t\t\t\t? new Size(getSize('width'), getSize('height'))\n\t\t\t\t\t\t: size;\n\t\t\t};\n\t\n\t\t\tif (PaperScope.hasAttribute(element, 'resize')) {\n\t\t\t\tvar that = this;\n\t\t\t\tDomEvent.add(window, this._windowEvents = {\n\t\t\t\t\tresize: function() {\n\t\t\t\t\t\tthat.setViewSize(getCanvasSize());\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis._setViewSize(size = getCanvasSize());\n\t\t\tif (PaperScope.hasAttribute(element, 'stats')\n\t\t\t\t\t&& typeof Stats !== 'undefined') {\n\t\t\t\tthis._stats = new Stats();\n\t\t\t\tvar stats = this._stats.domElement,\n\t\t\t\t\tstyle = stats.style,\n\t\t\t\t\toffset = DomElement.getOffset(element);\n\t\t\t\tstyle.position = 'absolute';\n\t\t\t\tstyle.left = offset.x + 'px';\n\t\t\t\tstyle.top = offset.y + 'px';\n\t\t\t\tdocument.body.appendChild(stats);\n\t\t\t}\n\t\t\tView._views.push(this);\n\t\t\tView._viewsById[this._id] = this;\n\t\t\tthis._viewSize = size;\n\t\t\t(this._matrix = new Matrix())._owner = this;\n\t\t\tthis._zoom = 1;\n\t\t\tif (!View._focused)\n\t\t\t\tView._focused = this;\n\t\t\tthis._frameItems = {};\n\t\t\tthis._frameItemCount = 0;\n\t\t},\n\t\n\t\tremove: function() {\n\t\t\tif (!this._project)\n\t\t\t\treturn false;\n\t\t\tif (View._focused === this)\n\t\t\t\tView._focused = null;\n\t\t\tView._views.splice(View._views.indexOf(this), 1);\n\t\t\tdelete View._viewsById[this._id];\n\t\t\tif (this._project._view === this)\n\t\t\t\tthis._project._view = null;\n\t\t\tDomEvent.remove(this._element, this._viewEvents);\n\t\t\tDomEvent.remove(window, this._windowEvents);\n\t\t\tthis._element = this._project = null;\n\t\t\tthis.off('frame');\n\t\t\tthis._animate = false;\n\t\t\tthis._frameItems = {};\n\t\t\treturn true;\n\t\t},\n\t\n\t\t_events: Base.each(['onResize', 'onMouseDown', 'onMouseUp', 'onMouseMove'],\n\t\t\tfunction(name) {\n\t\t\t\tthis[name] = {\n\t\t\t\t\tinstall: function(type) {\n\t\t\t\t\t\tthis._installEvent(type);\n\t\t\t\t\t},\n\t\n\t\t\t\t\tuninstall: function(type) {\n\t\t\t\t\t\tthis._uninstallEvent(type);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}, {\n\t\t\t\tonFrame: {\n\t\t\t\t\tinstall: function() {\n\t\t\t\t\t\tthis.play();\n\t\t\t\t\t},\n\t\n\t\t\t\t\tuninstall: function() {\n\t\t\t\t\t\tthis.pause();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t),\n\t\n\t\t_animate: false,\n\t\t_time: 0,\n\t\t_count: 0,\n\t\n\t\t_requestFrame: function() {\n\t\t\tvar that = this;\n\t\t\tDomEvent.requestAnimationFrame(function() {\n\t\t\t\tthat._requested = false;\n\t\t\t\tif (!that._animate)\n\t\t\t\t\treturn;\n\t\t\t\tthat._requestFrame();\n\t\t\t\tthat._handleFrame();\n\t\t\t}, this._element);\n\t\t\tthis._requested = true;\n\t\t},\n\t\n\t\t_handleFrame: function() {\n\t\t\tpaper = this._scope;\n\t\t\tvar now = Date.now() / 1000,\n\t\t\t\tdelta = this._before ? now - this._before : 0;\n\t\t\tthis._before = now;\n\t\t\tthis._handlingFrame = true;\n\t\t\tthis.emit('frame', new Base({\n\t\t\t\tdelta: delta,\n\t\t\t\ttime: this._time += delta,\n\t\t\t\tcount: this._count++\n\t\t\t}));\n\t\t\tif (this._stats)\n\t\t\t\tthis._stats.update();\n\t\t\tthis._handlingFrame = false;\n\t\t\tthis.update();\n\t\t},\n\t\n\t\t_animateItem: function(item, animate) {\n\t\t\tvar items = this._frameItems;\n\t\t\tif (animate) {\n\t\t\t\titems[item._id] = {\n\t\t\t\t\titem: item,\n\t\t\t\t\ttime: 0,\n\t\t\t\t\tcount: 0\n\t\t\t\t};\n\t\t\t\tif (++this._frameItemCount === 1)\n\t\t\t\t\tthis.on('frame', this._handleFrameItems);\n\t\t\t} else {\n\t\t\t\tdelete items[item._id];\n\t\t\t\tif (--this._frameItemCount === 0) {\n\t\t\t\t\tthis.off('frame', this._handleFrameItems);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\t_handleFrameItems: function(event) {\n\t\t\tfor (var i in this._frameItems) {\n\t\t\t\tvar entry = this._frameItems[i];\n\t\t\t\tentry.item.emit('frame', new Base(event, {\n\t\t\t\t\ttime: entry.time += event.delta,\n\t\t\t\t\tcount: entry.count++\n\t\t\t\t}));\n\t\t\t}\n\t\t},\n\t\n\t\t_update: function() {\n\t\t\tthis._project._needsUpdate = true;\n\t\t\tif (this._handlingFrame)\n\t\t\t\treturn;\n\t\t\tif (this._animate) {\n\t\t\t\tthis._handleFrame();\n\t\t\t} else {\n\t\t\t\tthis.update();\n\t\t\t}\n\t\t},\n\t\n\t\t_changed: function(flags) {\n\t\t\tif (flags & 1)\n\t\t\t\tthis._project._needsUpdate = true;\n\t\t},\n\t\n\t\t_transform: function(matrix) {\n\t\t\tthis._matrix.concatenate(matrix);\n\t\t\tthis._bounds = null;\n\t\t\tthis._update();\n\t\t},\n\t\n\t\tgetElement: function() {\n\t\t\treturn this._element;\n\t\t},\n\t\n\t\tgetPixelRatio: function() {\n\t\t\treturn this._pixelRatio;\n\t\t},\n\t\n\t\tgetResolution: function() {\n\t\t\treturn this._pixelRatio * 72;\n\t\t},\n\t\n\t\tgetViewSize: function() {\n\t\t\tvar size = this._viewSize;\n\t\t\treturn new LinkedSize(size.width, size.height, this, 'setViewSize');\n\t\t},\n\t\n\t\tsetViewSize: function() {\n\t\t\tvar size = Size.read(arguments),\n\t\t\t\tdelta = size.subtract(this._viewSize);\n\t\t\tif (delta.isZero())\n\t\t\t\treturn;\n\t\t\tthis._viewSize.set(size.width, size.height);\n\t\t\tthis._setViewSize(size);\n\t\t\tthis._bounds = null;\n\t\t\tthis.emit('resize', {\n\t\t\t\tsize: size,\n\t\t\t\tdelta: delta\n\t\t\t});\n\t\t\tthis._update();\n\t\t},\n\t\n\t\t_setViewSize: function(size) {\n\t\t\tvar element = this._element;\n\t\t\telement.width = size.width;\n\t\t\telement.height = size.height;\n\t\t},\n\t\n\t\tgetBounds: function() {\n\t\t\tif (!this._bounds)\n\t\t\t\tthis._bounds = this._matrix.inverted()._transformBounds(\n\t\t\t\t\t\tnew Rectangle(new Point(), this._viewSize));\n\t\t\treturn this._bounds;\n\t\t},\n\t\n\t\tgetSize: function() {\n\t\t\treturn this.getBounds().getSize();\n\t\t},\n\t\n\t\tgetCenter: function() {\n\t\t\treturn this.getBounds().getCenter();\n\t\t},\n\t\n\t\tsetCenter: function() {\n\t\t\tvar center = Point.read(arguments);\n\t\t\tthis.scrollBy(center.subtract(this.getCenter()));\n\t\t},\n\t\n\t\tgetZoom: function() {\n\t\t\treturn this._zoom;\n\t\t},\n\t\n\t\tsetZoom: function(zoom) {\n\t\t\tthis._transform(new Matrix().scale(zoom / this._zoom,\n\t\t\t\tthis.getCenter()));\n\t\t\tthis._zoom = zoom;\n\t\t},\n\t\n\t\tisVisible: function() {\n\t\t\treturn DomElement.isInView(this._element);\n\t\t},\n\t\n\t\tscrollBy: function() {\n\t\t\tthis._transform(new Matrix().translate(Point.read(arguments).negate()));\n\t\t},\n\t\n\t\tplay: function() {\n\t\t\tthis._animate = true;\n\t\t\tif (!this._requested)\n\t\t\t\tthis._requestFrame();\n\t\t},\n\t\n\t\tpause: function() {\n\t\t\tthis._animate = false;\n\t\t},\n\t\n\t\tdraw: function() {\n\t\t\tthis.update();\n\t\t},\n\t\n\t\tprojectToView: function() {\n\t\t\treturn this._matrix._transformPoint(Point.read(arguments));\n\t\t},\n\t\n\t\tviewToProject: function() {\n\t\t\treturn this._matrix._inverseTransform(Point.read(arguments));\n\t\t}\n\t\n\t}, {\n\t\tstatics: {\n\t\t\t_views: [],\n\t\t\t_viewsById: {},\n\t\t\t_id: 0,\n\t\n\t\t\tcreate: function(project, element) {\n\t\t\t\tif (typeof element === 'string')\n\t\t\t\t\telement = document.getElementById(element);\n\t\t\t\treturn new CanvasView(project, element);\n\t\t\t}\n\t\t}\n\t},\n\tnew function() {\n\t\tvar tool,\n\t\t\tprevFocus,\n\t\t\ttempFocus,\n\t\t\tdragging = false;\n\t\n\t\tfunction getView(event) {\n\t\t\tvar target = DomEvent.getTarget(event);\n\t\t\treturn target.getAttribute && View._viewsById[target.getAttribute('id')];\n\t\t}\n\t\n\t\tfunction viewToProject(view, event) {\n\t\t\treturn view.viewToProject(DomEvent.getOffset(event, view._element));\n\t\t}\n\t\n\t\tfunction updateFocus() {\n\t\t\tif (!View._focused || !View._focused.isVisible()) {\n\t\t\t\tfor (var i = 0, l = View._views.length; i < l; i++) {\n\t\t\t\t\tvar view = View._views[i];\n\t\t\t\t\tif (view && view.isVisible()) {\n\t\t\t\t\t\tView._focused = tempFocus = view;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\tfunction handleMouseMove(view, point, event) {\n\t\t\tview._handleEvent('mousemove', point, event);\n\t\t\tvar tool = view._scope.tool;\n\t\t\tif (tool) {\n\t\t\t\ttool._handleEvent(dragging && tool.responds('mousedrag')\n\t\t\t\t\t\t? 'mousedrag' : 'mousemove', point, event);\n\t\t\t}\n\t\t\tview.update();\n\t\t\treturn tool;\n\t\t}\n\t\n\t\tvar navigator = window.navigator,\n\t\t\tmousedown, mousemove, mouseup;\n\t\tif (navigator.pointerEnabled || navigator.msPointerEnabled) {\n\t\t\tmousedown = 'pointerdown MSPointerDown';\n\t\t\tmousemove = 'pointermove MSPointerMove';\n\t\t\tmouseup = 'pointerup pointercancel MSPointerUp MSPointerCancel';\n\t\t} else {\n\t\t\tmousedown = 'touchstart';\n\t\t\tmousemove = 'touchmove';\n\t\t\tmouseup = 'touchend touchcancel';\n\t\t\tif (!('ontouchstart' in window && navigator.userAgent.match(\n\t\t\t\t\t/mobile|tablet|ip(ad|hone|od)|android|silk/i))) {\n\t\t\t\tmousedown += ' mousedown';\n\t\t\t\tmousemove += ' mousemove';\n\t\t\t\tmouseup += ' mouseup';\n\t\t\t}\n\t\t}\n\t\n\t\tvar viewEvents = {\n\t\t\t'selectstart dragstart': function(event) {\n\t\t\t\tif (dragging)\n\t\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t};\n\t\n\t\tvar docEvents = {\n\t\t\tmouseout: function(event) {\n\t\t\t\tvar view = View._focused,\n\t\t\t\t\ttarget = DomEvent.getRelatedTarget(event);\n\t\t\t\tif (view && (!target || target.nodeName === 'HTML'))\n\t\t\t\t\thandleMouseMove(view, viewToProject(view, event), event);\n\t\t\t},\n\t\n\t\t\tscroll: updateFocus\n\t\t};\n\t\n\t\tviewEvents[mousedown] = function(event) {\n\t\t\tvar view = View._focused = getView(event),\n\t\t\t\tpoint = viewToProject(view, event);\n\t\t\tdragging = true;\n\t\t\tview._handleEvent('mousedown', point, event);\n\t\t\tif (tool = view._scope.tool)\n\t\t\t\ttool._handleEvent('mousedown', point, event);\n\t\t\tview.update();\n\t\t};\n\t\n\t\tdocEvents[mousemove] = function(event) {\n\t\t\tvar view = View._focused;\n\t\t\tif (!dragging) {\n\t\t\t\tvar target = getView(event);\n\t\t\t\tif (target) {\n\t\t\t\t\tif (view !== target)\n\t\t\t\t\t\thandleMouseMove(view, viewToProject(view, event), event);\n\t\t\t\t\tprevFocus = view;\n\t\t\t\t\tview = View._focused = tempFocus = target;\n\t\t\t\t} else if (tempFocus && tempFocus === view) {\n\t\t\t\t\tview = View._focused = prevFocus;\n\t\t\t\t\tupdateFocus();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (view) {\n\t\t\t\tvar point = viewToProject(view, event);\n\t\t\t\tif (dragging || view.getBounds().contains(point))\n\t\t\t\t\ttool = handleMouseMove(view, point, event);\n\t\t\t}\n\t\t};\n\t\n\t\tdocEvents[mouseup] = function(event) {\n\t\t\tvar view = View._focused;\n\t\t\tif (!view || !dragging)\n\t\t\t\treturn;\n\t\t\tvar point = viewToProject(view, event);\n\t\t\tdragging = false;\n\t\t\tview._handleEvent('mouseup', point, event);\n\t\t\tif (tool)\n\t\t\t\ttool._handleEvent('mouseup', point, event);\n\t\t\tview.update();\n\t\t};\n\t\n\t\tDomEvent.add(document, docEvents);\n\t\n\t\tDomEvent.add(window, {\n\t\t\tload: updateFocus\n\t\t});\n\t\n\t\tvar mouseFlags = {\n\t\t\tmousedown: {\n\t\t\t\tmousedown: 1,\n\t\t\t\tmousedrag: 1,\n\t\t\t\tclick: 1,\n\t\t\t\tdoubleclick: 1\n\t\t\t},\n\t\t\tmouseup: {\n\t\t\t\tmouseup: 1,\n\t\t\t\tmousedrag: 1,\n\t\t\t\tclick: 1,\n\t\t\t\tdoubleclick: 1\n\t\t\t},\n\t\t\tmousemove: {\n\t\t\t\tmousedrag: 1,\n\t\t\t\tmousemove: 1,\n\t\t\t\tmouseenter: 1,\n\t\t\t\tmouseleave: 1\n\t\t\t}\n\t\t};\n\t\n\t\treturn {\n\t\t\t_viewEvents: viewEvents,\n\t\n\t\t\t_handleEvent: function() {},\n\t\n\t\t\t_installEvent: function(type) {\n\t\t\t\tvar counters = this._eventCounters;\n\t\t\t\tif (counters) {\n\t\t\t\t\tfor (var key in mouseFlags) {\n\t\t\t\t\t\tcounters[key] = (counters[key] || 0)\n\t\t\t\t\t\t\t\t+ (mouseFlags[key][type] || 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\t_uninstallEvent: function(type) {\n\t\t\t\tvar counters = this._eventCounters;\n\t\t\t\tif (counters) {\n\t\t\t\t\tfor (var key in mouseFlags)\n\t\t\t\t\t\tcounters[key] -= mouseFlags[key][type] || 0;\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\tstatics: {\n\t\t\t\tupdateFocus: updateFocus\n\t\t\t}\n\t\t};\n\t});\n\t\n\tvar CanvasView = View.extend({\n\t\t_class: 'CanvasView',\n\t\n\t\tinitialize: function CanvasView(project, canvas) {\n\t\t\tif (!(canvas instanceof HTMLCanvasElement)) {\n\t\t\t\tvar size = Size.read(arguments, 1);\n\t\t\t\tif (size.isZero())\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Cannot create CanvasView with the provided argument: '\n\t\t\t\t\t\t\t+ [].slice.call(arguments, 1));\n\t\t\t\tcanvas = CanvasProvider.getCanvas(size);\n\t\t\t}\n\t\t\tthis._context = canvas.getContext('2d');\n\t\t\tthis._eventCounters = {};\n\t\t\tthis._pixelRatio = 1;\n\t\t\tif (!/^off|false$/.test(PaperScope.getAttribute(canvas, 'hidpi'))) {\n\t\t\t\tvar deviceRatio = window.devicePixelRatio || 1,\n\t\t\t\t\tbackingStoreRatio = DomElement.getPrefixed(this._context,\n\t\t\t\t\t\t\t'backingStorePixelRatio') || 1;\n\t\t\t\tthis._pixelRatio = deviceRatio / backingStoreRatio;\n\t\t\t}\n\t\t\tView.call(this, project, canvas);\n\t\t},\n\t\n\t\t_setViewSize: function(size) {\n\t\t\tvar element = this._element,\n\t\t\t\tpixelRatio = this._pixelRatio,\n\t\t\t\twidth = size.width,\n\t\t\t\theight = size.height;\n\t\t\telement.width = width * pixelRatio;\n\t\t\telement.height = height * pixelRatio;\n\t\t\tif (pixelRatio !== 1) {\n\t\t\t\tif (!PaperScope.hasAttribute(element, 'resize')) {\n\t\t\t\t\tvar style = element.style;\n\t\t\t\t\tstyle.width = width + 'px';\n\t\t\t\t\tstyle.height = height + 'px';\n\t\t\t\t}\n\t\t\t\tthis._context.scale(pixelRatio, pixelRatio);\n\t\t\t}\n\t\t},\n\t\n\t\tgetPixelSize: function(size) {\n\t\t\tvar browser = paper.browser,\n\t\t\t\tpixels;\n\t\t\tif (browser && browser.firefox) {\n\t\t\t\tvar parent = this._element.parentNode,\n\t\t\t\t\ttemp = document.createElement('div');\n\t\t\t\ttemp.style.fontSize = size;\n\t\t\t\tparent.appendChild(temp);\n\t\t\t\tpixels = parseFloat(DomElement.getStyles(temp).fontSize);\n\t\t\t\tparent.removeChild(temp);\n\t\t\t} else {\n\t\t\t\tvar ctx = this._context,\n\t\t\t\t\tprevFont = ctx.font;\n\t\t\t\tctx.font = size + ' serif';\n\t\t\t\tpixels = parseFloat(ctx.font);\n\t\t\t\tctx.font = prevFont;\n\t\t\t}\n\t\t\treturn pixels;\n\t\t},\n\t\n\t\tgetTextWidth: function(font, lines) {\n\t\t\tvar ctx = this._context,\n\t\t\t\tprevFont = ctx.font,\n\t\t\t\twidth = 0;\n\t\t\tctx.font = font;\n\t\t\tfor (var i = 0, l = lines.length; i < l; i++)\n\t\t\t\twidth = Math.max(width, ctx.measureText(lines[i]).width);\n\t\t\tctx.font = prevFont;\n\t\t\treturn width;\n\t\t},\n\t\n\t\tupdate: function(force) {\n\t\t\tvar project = this._project;\n\t\t\tif (!project || !force && !project._needsUpdate)\n\t\t\t\treturn false;\n\t\t\tvar ctx = this._context,\n\t\t\t\tsize = this._viewSize;\n\t\t\tctx.clearRect(0, 0, size.width + 1, size.height + 1);\n\t\t\tproject.draw(ctx, this._matrix, this._pixelRatio);\n\t\t\tproject._needsUpdate = false;\n\t\t\treturn true;\n\t\t}\n\t},\n\tnew function() {\n\t\tvar downPoint,\n\t\t\tlastPoint,\n\t\t\toverPoint,\n\t\t\tdownItem,\n\t\t\tlastItem,\n\t\t\toverItem,\n\t\t\tdragItem,\n\t\t\tdblClick,\n\t\t\tclickTime;\n\t\n\t\tfunction callEvent(view, type, event, point, target, lastPoint) {\n\t\t\tvar item = target,\n\t\t\t\tmouseEvent;\n\t\n\t\t\tfunction call(obj) {\n\t\t\t\tif (obj.responds(type)) {\n\t\t\t\t\tif (!mouseEvent) {\n\t\t\t\t\t\tmouseEvent = new MouseEvent(type, event, point, target,\n\t\t\t\t\t\t\t\tlastPoint ? point.subtract(lastPoint) : null);\n\t\t\t\t\t}\n\t\t\t\t\tif (obj.emit(type, mouseEvent) && mouseEvent.isStopped) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\twhile (item) {\n\t\t\t\tif (call(item))\n\t\t\t\t\treturn true;\n\t\t\t\titem = item.getParent();\n\t\t\t}\n\t\t\tif (call(view))\n\t\t\t\treturn true;\n\t\t\treturn false;\n\t\t}\n\t\n\t\treturn {\n\t\t\t_handleEvent: function(type, point, event) {\n\t\t\t\tif (!this._eventCounters[type])\n\t\t\t\t\treturn;\n\t\t\t\tvar project = this._project,\n\t\t\t\t\thit = project.hitTest(point, {\n\t\t\t\t\t\ttolerance: 0,\n\t\t\t\t\t\tfill: true,\n\t\t\t\t\t\tstroke: true\n\t\t\t\t\t}),\n\t\t\t\t\titem = hit && hit.item,\n\t\t\t\t\tstopped = false;\n\t\t\t\tswitch (type) {\n\t\t\t\tcase 'mousedown':\n\t\t\t\t\tstopped = callEvent(this, type, event, point, item);\n\t\t\t\t\tdblClick = lastItem == item && (Date.now() - clickTime < 300);\n\t\t\t\t\tdownItem = lastItem = item;\n\t\t\t\t\tdownPoint = lastPoint = overPoint = point;\n\t\t\t\t\tdragItem = !stopped && item;\n\t\t\t\t\twhile (dragItem && !dragItem.responds('mousedrag'))\n\t\t\t\t\t\tdragItem = dragItem._parent;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'mouseup':\n\t\t\t\t\tstopped = callEvent(this, type, event, point, item, downPoint);\n\t\t\t\t\tif (dragItem) {\n\t\t\t\t\t\tif (lastPoint && !lastPoint.equals(point))\n\t\t\t\t\t\t\tcallEvent(this, 'mousedrag', event, point, dragItem,\n\t\t\t\t\t\t\t\t\tlastPoint);\n\t\t\t\t\t\tif (item !== dragItem) {\n\t\t\t\t\t\t\toverPoint = point;\n\t\t\t\t\t\t\tcallEvent(this, 'mousemove', event, point, item,\n\t\t\t\t\t\t\t\t\toverPoint);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (!stopped && item && item === downItem) {\n\t\t\t\t\t\tclickTime = Date.now();\n\t\t\t\t\t\tcallEvent(this, dblClick && downItem.responds('doubleclick')\n\t\t\t\t\t\t\t\t? 'doubleclick' : 'click', event, downPoint, item);\n\t\t\t\t\t\tdblClick = false;\n\t\t\t\t\t}\n\t\t\t\t\tdownItem = dragItem = null;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'mousemove':\n\t\t\t\t\tif (dragItem)\n\t\t\t\t\t\tstopped = callEvent(this, 'mousedrag', event, point,\n\t\t\t\t\t\t\t\tdragItem, lastPoint);\n\t\t\t\t\tif (!stopped) {\n\t\t\t\t\t\tif (item !== overItem)\n\t\t\t\t\t\t\toverPoint = point;\n\t\t\t\t\t\tstopped = callEvent(this, type, event, point, item,\n\t\t\t\t\t\t\t\toverPoint);\n\t\t\t\t\t}\n\t\t\t\t\tlastPoint = overPoint = point;\n\t\t\t\t\tif (item !== overItem) {\n\t\t\t\t\t\tcallEvent(this, 'mouseleave', event, point, overItem);\n\t\t\t\t\t\toverItem = item;\n\t\t\t\t\t\tcallEvent(this, 'mouseenter', event, point, item);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\treturn stopped;\n\t\t\t}\n\t\t};\n\t});\n\t\n\tvar Event = Base.extend({\n\t\t_class: 'Event',\n\t\n\t\tinitialize: function Event(event) {\n\t\t\tthis.event = event;\n\t\t},\n\t\n\t\tisPrevented: false,\n\t\tisStopped: false,\n\t\n\t\tpreventDefault: function() {\n\t\t\tthis.isPrevented = true;\n\t\t\tthis.event.preventDefault();\n\t\t},\n\t\n\t\tstopPropagation: function() {\n\t\t\tthis.isStopped = true;\n\t\t\tthis.event.stopPropagation();\n\t\t},\n\t\n\t\tstop: function() {\n\t\t\tthis.stopPropagation();\n\t\t\tthis.preventDefault();\n\t\t},\n\t\n\t\tgetModifiers: function() {\n\t\t\treturn Key.modifiers;\n\t\t}\n\t});\n\t\n\tvar KeyEvent = Event.extend({\n\t\t_class: 'KeyEvent',\n\t\n\t\tinitialize: function KeyEvent(down, key, character, event) {\n\t\t\tEvent.call(this, event);\n\t\t\tthis.type = down ? 'keydown' : 'keyup';\n\t\t\tthis.key = key;\n\t\t\tthis.character = character;\n\t\t},\n\t\n\t\ttoString: function() {\n\t\t\treturn \"{ type: '\" + this.type\n\t\t\t\t\t+ \"', key: '\" + this.key\n\t\t\t\t\t+ \"', character: '\" + this.character\n\t\t\t\t\t+ \"', modifiers: \" + this.getModifiers()\n\t\t\t\t\t+ \" }\";\n\t\t}\n\t});\n\t\n\tvar Key = new function() {\n\t\n\t\tvar specialKeys = {\n\t\t\t8: 'backspace',\n\t\t\t9: 'tab',\n\t\t\t13: 'enter',\n\t\t\t16: 'shift',\n\t\t\t17: 'control',\n\t\t\t18: 'option',\n\t\t\t19: 'pause',\n\t\t\t20: 'caps-lock',\n\t\t\t27: 'escape',\n\t\t\t32: 'space',\n\t\t\t35: 'end',\n\t\t\t36: 'home',\n\t\t\t37: 'left',\n\t\t\t38: 'up',\n\t\t\t39: 'right',\n\t\t\t40: 'down',\n\t\t\t46: 'delete',\n\t\t\t91: 'command',\n\t\t\t93: 'command',\n\t\t\t224: 'command'\n\t\t},\n\t\n\t\tspecialChars = {\n\t\t\t9: true,\n\t\t\t13: true,\n\t\t\t32: true\n\t\t},\n\t\n\t\tmodifiers = new Base({\n\t\t\tshift: false,\n\t\t\tcontrol: false,\n\t\t\toption: false,\n\t\t\tcommand: false,\n\t\t\tcapsLock: false,\n\t\t\tspace: false\n\t\t}),\n\t\n\t\tcharCodeMap = {},\n\t\tkeyMap = {},\n\t\tcommandFixMap,\n\t\tdownCode;\n\t\n\t\tfunction handleKey(down, keyCode, charCode, event) {\n\t\t\tvar character = charCode ? String.fromCharCode(charCode) : '',\n\t\t\t\tspecialKey = specialKeys[keyCode],\n\t\t\t\tkey = specialKey || character.toLowerCase(),\n\t\t\t\ttype = down ? 'keydown' : 'keyup',\n\t\t\t\tview = View._focused,\n\t\t\t\tscope = view && view.isVisible() && view._scope,\n\t\t\t\ttool = scope && scope.tool,\n\t\t\t\tname;\n\t\t\tkeyMap[key] = down;\n\t\t\tif (down) {\n\t\t\t\tcharCodeMap[keyCode] = charCode;\n\t\t\t} else {\n\t\t\t\tdelete charCodeMap[keyCode];\n\t\t\t}\n\t\t\tif (specialKey && (name = Base.camelize(specialKey)) in modifiers) {\n\t\t\t\tmodifiers[name] = down;\n\t\t\t\tvar browser = paper.browser;\n\t\t\t\tif (name === 'command' && browser && browser.mac) {\n\t\t\t\t\tif (down) {\n\t\t\t\t\t\tcommandFixMap = {};\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor (var code in commandFixMap) {\n\t\t\t\t\t\t\tif (code in charCodeMap)\n\t\t\t\t\t\t\t\thandleKey(false, code, commandFixMap[code], event);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcommandFixMap = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (down && commandFixMap) {\n\t\t\t\tcommandFixMap[keyCode] = charCode;\n\t\t\t}\n\t\t\tif (tool && tool.responds(type)) {\n\t\t\t\tpaper = scope;\n\t\t\t\ttool.emit(type, new KeyEvent(down, key, character, event));\n\t\t\t\tif (view)\n\t\t\t\t\tview.update();\n\t\t\t}\n\t\t}\n\t\n\t\tDomEvent.add(document, {\n\t\t\tkeydown: function(event) {\n\t\t\t\tvar code = event.which || event.keyCode;\n\t\t\t\tif (code in specialKeys || modifiers.command) {\n\t\t\t\t\thandleKey(true, code,\n\t\t\t\t\t\t\tcode in specialChars || modifiers.command ? code : 0,\n\t\t\t\t\t\t\tevent);\n\t\t\t\t} else {\n\t\t\t\t\tdownCode = code;\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\tkeypress: function(event) {\n\t\t\t\tif (downCode != null) {\n\t\t\t\t\thandleKey(true, downCode, event.which || event.keyCode, event);\n\t\t\t\t\tdownCode = null;\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\tkeyup: function(event) {\n\t\t\t\tvar code = event.which || event.keyCode;\n\t\t\t\tif (code in charCodeMap)\n\t\t\t\t\thandleKey(false, code, charCodeMap[code], event);\n\t\t\t}\n\t\t});\n\t\n\t\tDomEvent.add(window, {\n\t\t\tblur: function(event) {\n\t\t\t\tfor (var code in charCodeMap)\n\t\t\t\t\thandleKey(false, code, charCodeMap[code], event);\n\t\t\t}\n\t\t});\n\t\n\t\treturn {\n\t\t\tmodifiers: modifiers,\n\t\n\t\t\tisDown: function(key) {\n\t\t\t\treturn !!keyMap[key];\n\t\t\t}\n\t\t};\n\t};\n\t\n\tvar MouseEvent = Event.extend({\n\t\t_class: 'MouseEvent',\n\t\n\t\tinitialize: function MouseEvent(type, event, point, target, delta) {\n\t\t\tEvent.call(this, event);\n\t\t\tthis.type = type;\n\t\t\tthis.point = point;\n\t\t\tthis.target = target;\n\t\t\tthis.delta = delta;\n\t\t},\n\t\n\t\ttoString: function() {\n\t\t\treturn \"{ type: '\" + this.type\n\t\t\t\t\t+ \"', point: \" + this.point\n\t\t\t\t\t+ ', target: ' + this.target\n\t\t\t\t\t+ (this.delta ? ', delta: ' + this.delta : '')\n\t\t\t\t\t+ ', modifiers: ' + this.getModifiers()\n\t\t\t\t\t+ ' }';\n\t\t}\n\t});\n\t\n\tvar ToolEvent = Event.extend({\n\t\t_class: 'ToolEvent',\n\t\t_item: null,\n\t\n\t\tinitialize: function ToolEvent(tool, type, event) {\n\t\t\tthis.tool = tool;\n\t\t\tthis.type = type;\n\t\t\tthis.event = event;\n\t\t},\n\t\n\t\t_choosePoint: function(point, toolPoint) {\n\t\t\treturn point ? point : toolPoint ? toolPoint.clone() : null;\n\t\t},\n\t\n\t\tgetPoint: function() {\n\t\t\treturn this._choosePoint(this._point, this.tool._point);\n\t\t},\n\t\n\t\tsetPoint: function(point) {\n\t\t\tthis._point = point;\n\t\t},\n\t\n\t\tgetLastPoint: function() {\n\t\t\treturn this._choosePoint(this._lastPoint, this.tool._lastPoint);\n\t\t},\n\t\n\t\tsetLastPoint: function(lastPoint) {\n\t\t\tthis._lastPoint = lastPoint;\n\t\t},\n\t\n\t\tgetDownPoint: function() {\n\t\t\treturn this._choosePoint(this._downPoint, this.tool._downPoint);\n\t\t},\n\t\n\t\tsetDownPoint: function(downPoint) {\n\t\t\tthis._downPoint = downPoint;\n\t\t},\n\t\n\t\tgetMiddlePoint: function() {\n\t\t\tif (!this._middlePoint && this.tool._lastPoint) {\n\t\t\t\treturn this.tool._point.add(this.tool._lastPoint).divide(2);\n\t\t\t}\n\t\t\treturn this._middlePoint;\n\t\t},\n\t\n\t\tsetMiddlePoint: function(middlePoint) {\n\t\t\tthis._middlePoint = middlePoint;\n\t\t},\n\t\n\t\tgetDelta: function() {\n\t\t\treturn !this._delta && this.tool._lastPoint\n\t\t\t\t\t? this.tool._point.subtract(this.tool._lastPoint)\n\t\t\t\t\t: this._delta;\n\t\t},\n\t\n\t\tsetDelta: function(delta) {\n\t\t\tthis._delta = delta;\n\t\t},\n\t\n\t\tgetCount: function() {\n\t\t\treturn /^mouse(down|up)$/.test(this.type)\n\t\t\t\t\t? this.tool._downCount\n\t\t\t\t\t: this.tool._count;\n\t\t},\n\t\n\t\tsetCount: function(count) {\n\t\t\tthis.tool[/^mouse(down|up)$/.test(this.type) ? 'downCount' : 'count']\n\t\t\t\t= count;\n\t\t},\n\t\n\t\tgetItem: function() {\n\t\t\tif (!this._item) {\n\t\t\t\tvar result = this.tool._scope.project.hitTest(this.getPoint());\n\t\t\t\tif (result) {\n\t\t\t\t\tvar item = result.item,\n\t\t\t\t\t\tparent = item._parent;\n\t\t\t\t\twhile (/^(Group|CompoundPath)$/.test(parent._class)) {\n\t\t\t\t\t\titem = parent;\n\t\t\t\t\t\tparent = parent._parent;\n\t\t\t\t\t}\n\t\t\t\t\tthis._item = item;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this._item;\n\t\t},\n\t\n\t\tsetItem: function(item) {\n\t\t\tthis._item = item;\n\t\t},\n\t\n\t\ttoString: function() {\n\t\t\treturn '{ type: ' + this.type\n\t\t\t\t\t+ ', point: ' + this.getPoint()\n\t\t\t\t\t+ ', count: ' + this.getCount()\n\t\t\t\t\t+ ', modifiers: ' + this.getModifiers()\n\t\t\t\t\t+ ' }';\n\t\t}\n\t});\n\t\n\tvar Tool = PaperScopeItem.extend({\n\t\t_class: 'Tool',\n\t\t_list: 'tools',\n\t\t_reference: 'tool',\n\t\t_events: [ 'onActivate', 'onDeactivate', 'onEditOptions',\n\t\t\t\t'onMouseDown', 'onMouseUp', 'onMouseDrag', 'onMouseMove',\n\t\t\t\t'onKeyDown', 'onKeyUp' ],\n\t\n\t\tinitialize: function Tool(props) {\n\t\t\tPaperScopeItem.call(this);\n\t\t\tthis._firstMove = true;\n\t\t\tthis._count = 0;\n\t\t\tthis._downCount = 0;\n\t\t\tthis._set(props);\n\t\t},\n\t\n\t\tgetMinDistance: function() {\n\t\t\treturn this._minDistance;\n\t\t},\n\t\n\t\tsetMinDistance: function(minDistance) {\n\t\t\tthis._minDistance = minDistance;\n\t\t\tif (minDistance != null && this._maxDistance != null\n\t\t\t\t\t&& minDistance > this._maxDistance) {\n\t\t\t\tthis._maxDistance = minDistance;\n\t\t\t}\n\t\t},\n\t\n\t\tgetMaxDistance: function() {\n\t\t\treturn this._maxDistance;\n\t\t},\n\t\n\t\tsetMaxDistance: function(maxDistance) {\n\t\t\tthis._maxDistance = maxDistance;\n\t\t\tif (this._minDistance != null && maxDistance != null\n\t\t\t\t\t&& maxDistance < this._minDistance) {\n\t\t\t\tthis._minDistance = maxDistance;\n\t\t\t}\n\t\t},\n\t\n\t\tgetFixedDistance: function() {\n\t\t\treturn this._minDistance == this._maxDistance\n\t\t\t\t? this._minDistance : null;\n\t\t},\n\t\n\t\tsetFixedDistance: function(distance) {\n\t\t\tthis._minDistance = this._maxDistance = distance;\n\t\t},\n\t\n\t\t_updateEvent: function(type, point, minDistance, maxDistance, start,\n\t\t\t\tneedsChange, matchMaxDistance) {\n\t\t\tif (!start) {\n\t\t\t\tif (minDistance != null || maxDistance != null) {\n\t\t\t\t\tvar minDist = minDistance != null ? minDistance : 0,\n\t\t\t\t\t\tvector = point.subtract(this._point),\n\t\t\t\t\t\tdistance = vector.getLength();\n\t\t\t\t\tif (distance < minDist)\n\t\t\t\t\t\treturn false;\n\t\t\t\t\tif (maxDistance != null && maxDistance != 0) {\n\t\t\t\t\t\tif (distance > maxDistance) {\n\t\t\t\t\t\t\tpoint = this._point.add(vector.normalize(maxDistance));\n\t\t\t\t\t\t} else if (matchMaxDistance) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (needsChange && point.equals(this._point))\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis._lastPoint = start && type == 'mousemove' ? point : this._point;\n\t\t\tthis._point = point;\n\t\t\tswitch (type) {\n\t\t\tcase 'mousedown':\n\t\t\t\tthis._lastPoint = this._downPoint;\n\t\t\t\tthis._downPoint = this._point;\n\t\t\t\tthis._downCount++;\n\t\t\t\tbreak;\n\t\t\tcase 'mouseup':\n\t\t\t\tthis._lastPoint = this._downPoint;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis._count = start ? 0 : this._count + 1;\n\t\t\treturn true;\n\t\t},\n\t\n\t\t_fireEvent: function(type, event) {\n\t\t\tvar sets = paper.project._removeSets;\n\t\t\tif (sets) {\n\t\t\t\tif (type === 'mouseup')\n\t\t\t\t\tsets.mousedrag = null;\n\t\t\t\tvar set = sets[type];\n\t\t\t\tif (set) {\n\t\t\t\t\tfor (var id in set) {\n\t\t\t\t\t\tvar item = set[id];\n\t\t\t\t\t\tfor (var key in sets) {\n\t\t\t\t\t\t\tvar other = sets[key];\n\t\t\t\t\t\t\tif (other && other != set)\n\t\t\t\t\t\t\t\tdelete other[item._id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\titem.remove();\n\t\t\t\t\t}\n\t\t\t\t\tsets[type] = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this.responds(type)\n\t\t\t\t\t&& this.emit(type, new ToolEvent(this, type, event));\n\t\t},\n\t\n\t\t_handleEvent: function(type, point, event) {\n\t\t\tpaper = this._scope;\n\t\t\tvar called = false;\n\t\t\tswitch (type) {\n\t\t\tcase 'mousedown':\n\t\t\t\tthis._updateEvent(type, point, null, null, true, false, false);\n\t\t\t\tcalled = this._fireEvent(type, event);\n\t\t\t\tbreak;\n\t\t\tcase 'mousedrag':\n\t\t\t\tvar needsChange = false,\n\t\t\t\t\tmatchMaxDistance = false;\n\t\t\t\twhile (this._updateEvent(type, point, this.minDistance,\n\t\t\t\t\t\tthis.maxDistance, false, needsChange, matchMaxDistance)) {\n\t\t\t\t\tcalled = this._fireEvent(type, event) || called;\n\t\t\t\t\tneedsChange = true;\n\t\t\t\t\tmatchMaxDistance = true;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'mouseup':\n\t\t\t\tif (!point.equals(this._point)\n\t\t\t\t\t\t&& this._updateEvent('mousedrag', point, this.minDistance,\n\t\t\t\t\t\t\t\tthis.maxDistance, false, false, false)) {\n\t\t\t\t\tcalled = this._fireEvent('mousedrag', event);\n\t\t\t\t}\n\t\t\t\tthis._updateEvent(type, point, null, this.maxDistance, false,\n\t\t\t\t\t\tfalse, false);\n\t\t\t\tcalled = this._fireEvent(type, event) || called;\n\t\t\t\tthis._updateEvent(type, point, null, null, true, false, false);\n\t\t\t\tthis._firstMove = true;\n\t\t\t\tbreak;\n\t\t\tcase 'mousemove':\n\t\t\t\twhile (this._updateEvent(type, point, this.minDistance,\n\t\t\t\t\t\tthis.maxDistance, this._firstMove, true, false)) {\n\t\t\t\t\tcalled = this._fireEvent(type, event) || called;\n\t\t\t\t\tthis._firstMove = false;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (called)\n\t\t\t\tevent.preventDefault();\n\t\t\treturn called;\n\t\t}\n\t\n\t});\n\t\n\tvar Http = {\n\t\trequest: function(method, url, callback, async) {\n\t\t\tasync = (async === undefined) ? true : async;\n\t\t\tvar xhr = new (window.ActiveXObject || XMLHttpRequest)(\n\t\t\t\t\t\t'Microsoft.XMLHTTP');\n\t\t\txhr.open(method.toUpperCase(), url, async);\n\t\t\tif ('overrideMimeType' in xhr)\n\t\t\t\txhr.overrideMimeType('text/plain');\n\t\t\txhr.onreadystatechange = function() {\n\t\t\t\tif (xhr.readyState === 4) {\n\t\t\t\t\tvar status = xhr.status;\n\t\t\t\t\tif (status === 0 || status === 200) {\n\t\t\t\t\t\tcallback.call(xhr, xhr.responseText);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error('Could not load ' + url + ' (Error '\n\t\t\t\t\t\t\t\t+ status + ')');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn xhr.send(null);\n\t\t}\n\t};\n\t\n\tvar CanvasProvider = {\n\t\tcanvases: [],\n\t\n\t\tgetCanvas: function(width, height) {\n\t\t\tvar canvas,\n\t\t\t\tclear = true;\n\t\t\tif (typeof width === 'object') {\n\t\t\t\theight = width.height;\n\t\t\t\twidth = width.width;\n\t\t\t}\n\t\t\tif (this.canvases.length) {\n\t\t\t\tcanvas = this.canvases.pop();\n\t\t\t} else {\n\t\t\t\tcanvas = document.createElement('canvas');\n\t\t\t}\n\t\t\tvar ctx = canvas.getContext('2d');\n\t\t\tif (canvas.width === width && canvas.height === height) {\n\t\t\t\tif (clear)\n\t\t\t\t\tctx.clearRect(0, 0, width + 1, height + 1);\n\t\t\t} else {\n\t\t\t\tcanvas.width = width;\n\t\t\t\tcanvas.height = height;\n\t\t\t}\n\t\t\tctx.save();\n\t\t\treturn canvas;\n\t\t},\n\t\n\t\tgetContext: function(width, height) {\n\t\t\treturn this.getCanvas(width, height).getContext('2d');\n\t\t},\n\t\n\t\trelease: function(obj) {\n\t\t\tvar canvas = obj.canvas ? obj.canvas : obj;\n\t\t\tcanvas.getContext('2d').restore();\n\t\t\tthis.canvases.push(canvas);\n\t\t}\n\t};\n\t\n\tvar BlendMode = new function() {\n\t\tvar min = Math.min,\n\t\t\tmax = Math.max,\n\t\t\tabs = Math.abs,\n\t\t\tsr, sg, sb, sa,\n\t\t\tbr, bg, bb, ba,\n\t\t\tdr, dg, db;\n\t\n\t\tfunction getLum(r, g, b) {\n\t\t\treturn 0.2989 * r + 0.587 * g + 0.114 * b;\n\t\t}\n\t\n\t\tfunction setLum(r, g, b, l) {\n\t\t\tvar d = l - getLum(r, g, b);\n\t\t\tdr = r + d;\n\t\t\tdg = g + d;\n\t\t\tdb = b + d;\n\t\t\tvar l = getLum(dr, dg, db),\n\t\t\t\tmn = min(dr, dg, db),\n\t\t\t\tmx = max(dr, dg, db);\n\t\t\tif (mn < 0) {\n\t\t\t\tvar lmn = l - mn;\n\t\t\t\tdr = l + (dr - l) * l / lmn;\n\t\t\t\tdg = l + (dg - l) * l / lmn;\n\t\t\t\tdb = l + (db - l) * l / lmn;\n\t\t\t}\n\t\t\tif (mx > 255) {\n\t\t\t\tvar ln = 255 - l,\n\t\t\t\t\tmxl = mx - l;\n\t\t\t\tdr = l + (dr - l) * ln / mxl;\n\t\t\t\tdg = l + (dg - l) * ln / mxl;\n\t\t\t\tdb = l + (db - l) * ln / mxl;\n\t\t\t}\n\t\t}\n\t\n\t\tfunction getSat(r, g, b) {\n\t\t\treturn max(r, g, b) - min(r, g, b);\n\t\t}\n\t\n\t\tfunction setSat(r, g, b, s) {\n\t\t\tvar col = [r, g, b],\n\t\t\t\tmx = max(r, g, b),\n\t\t\t\tmn = min(r, g, b),\n\t\t\t\tmd;\n\t\t\tmn = mn === r ? 0 : mn === g ? 1 : 2;\n\t\t\tmx = mx === r ? 0 : mx === g ? 1 : 2;\n\t\t\tmd = min(mn, mx) === 0 ? max(mn, mx) === 1 ? 2 : 1 : 0;\n\t\t\tif (col[mx] > col[mn]) {\n\t\t\t\tcol[md] = (col[md] - col[mn]) * s / (col[mx] - col[mn]);\n\t\t\t\tcol[mx] = s;\n\t\t\t} else {\n\t\t\t\tcol[md] = col[mx] = 0;\n\t\t\t}\n\t\t\tcol[mn] = 0;\n\t\t\tdr = col[0];\n\t\t\tdg = col[1];\n\t\t\tdb = col[2];\n\t\t}\n\t\n\t\tvar modes = {\n\t\t\tmultiply: function() {\n\t\t\t\tdr = br * sr / 255;\n\t\t\t\tdg = bg * sg / 255;\n\t\t\t\tdb = bb * sb / 255;\n\t\t\t},\n\t\n\t\t\tscreen: function() {\n\t\t\t\tdr = br + sr - (br * sr / 255);\n\t\t\t\tdg = bg + sg - (bg * sg / 255);\n\t\t\t\tdb = bb + sb - (bb * sb / 255);\n\t\t\t},\n\t\n\t\t\toverlay: function() {\n\t\t\t\tdr = br < 128 ? 2 * br * sr / 255 : 255 - 2 * (255 - br) * (255 - sr) / 255;\n\t\t\t\tdg = bg < 128 ? 2 * bg * sg / 255 : 255 - 2 * (255 - bg) * (255 - sg) / 255;\n\t\t\t\tdb = bb < 128 ? 2 * bb * sb / 255 : 255 - 2 * (255 - bb) * (255 - sb) / 255;\n\t\t\t},\n\t\n\t\t\t'soft-light': function() {\n\t\t\t\tvar t = sr * br / 255;\n\t\t\t\tdr = t + br * (255 - (255 - br) * (255 - sr) / 255 - t) / 255;\n\t\t\t\tt = sg * bg / 255;\n\t\t\t\tdg = t + bg * (255 - (255 - bg) * (255 - sg) / 255 - t) / 255;\n\t\t\t\tt = sb * bb / 255;\n\t\t\t\tdb = t + bb * (255 - (255 - bb) * (255 - sb) / 255 - t) / 255;\n\t\t\t},\n\t\n\t\t\t'hard-light': function() {\n\t\t\t\tdr = sr < 128 ? 2 * sr * br / 255 : 255 - 2 * (255 - sr) * (255 - br) / 255;\n\t\t\t\tdg = sg < 128 ? 2 * sg * bg / 255 : 255 - 2 * (255 - sg) * (255 - bg) / 255;\n\t\t\t\tdb = sb < 128 ? 2 * sb * bb / 255 : 255 - 2 * (255 - sb) * (255 - bb) / 255;\n\t\t\t},\n\t\n\t\t\t'color-dodge': function() {\n\t\t\t\tdr = br === 0 ? 0 : sr === 255 ? 255 : min(255, 255 * br / (255 - sr));\n\t\t\t\tdg = bg === 0 ? 0 : sg === 255 ? 255 : min(255, 255 * bg / (255 - sg));\n\t\t\t\tdb = bb === 0 ? 0 : sb === 255 ? 255 : min(255, 255 * bb / (255 - sb));\n\t\t\t},\n\t\n\t\t\t'color-burn': function() {\n\t\t\t\tdr = br === 255 ? 255 : sr === 0 ? 0 : max(0, 255 - (255 - br) * 255 / sr);\n\t\t\t\tdg = bg === 255 ? 255 : sg === 0 ? 0 : max(0, 255 - (255 - bg) * 255 / sg);\n\t\t\t\tdb = bb === 255 ? 255 : sb === 0 ? 0 : max(0, 255 - (255 - bb) * 255 / sb);\n\t\t\t},\n\t\n\t\t\tdarken: function() {\n\t\t\t\tdr = br < sr ? br : sr;\n\t\t\t\tdg = bg < sg ? bg : sg;\n\t\t\t\tdb = bb < sb ? bb : sb;\n\t\t\t},\n\t\n\t\t\tlighten: function() {\n\t\t\t\tdr = br > sr ? br : sr;\n\t\t\t\tdg = bg > sg ? bg : sg;\n\t\t\t\tdb = bb > sb ? bb : sb;\n\t\t\t},\n\t\n\t\t\tdifference: function() {\n\t\t\t\tdr = br - sr;\n\t\t\t\tif (dr < 0)\n\t\t\t\t\tdr = -dr;\n\t\t\t\tdg = bg - sg;\n\t\t\t\tif (dg < 0)\n\t\t\t\t\tdg = -dg;\n\t\t\t\tdb = bb - sb;\n\t\t\t\tif (db < 0)\n\t\t\t\t\tdb = -db;\n\t\t\t},\n\t\n\t\t\texclusion: function() {\n\t\t\t\tdr = br + sr * (255 - br - br) / 255;\n\t\t\t\tdg = bg + sg * (255 - bg - bg) / 255;\n\t\t\t\tdb = bb + sb * (255 - bb - bb) / 255;\n\t\t\t},\n\t\n\t\t\thue: function() {\n\t\t\t\tsetSat(sr, sg, sb, getSat(br, bg, bb));\n\t\t\t\tsetLum(dr, dg, db, getLum(br, bg, bb));\n\t\t\t},\n\t\n\t\t\tsaturation: function() {\n\t\t\t\tsetSat(br, bg, bb, getSat(sr, sg, sb));\n\t\t\t\tsetLum(dr, dg, db, getLum(br, bg, bb));\n\t\t\t},\n\t\n\t\t\tluminosity: function() {\n\t\t\t\tsetLum(br, bg, bb, getLum(sr, sg, sb));\n\t\t\t},\n\t\n\t\t\tcolor: function() {\n\t\t\t\tsetLum(sr, sg, sb, getLum(br, bg, bb));\n\t\t\t},\n\t\n\t\t\tadd: function() {\n\t\t\t\tdr = min(br + sr, 255);\n\t\t\t\tdg = min(bg + sg, 255);\n\t\t\t\tdb = min(bb + sb, 255);\n\t\t\t},\n\t\n\t\t\tsubtract: function() {\n\t\t\t\tdr = max(br - sr, 0);\n\t\t\t\tdg = max(bg - sg, 0);\n\t\t\t\tdb = max(bb - sb, 0);\n\t\t\t},\n\t\n\t\t\taverage: function() {\n\t\t\t\tdr = (br + sr) / 2;\n\t\t\t\tdg = (bg + sg) / 2;\n\t\t\t\tdb = (bb + sb) / 2;\n\t\t\t},\n\t\n\t\t\tnegation: function() {\n\t\t\t\tdr = 255 - abs(255 - sr - br);\n\t\t\t\tdg = 255 - abs(255 - sg - bg);\n\t\t\t\tdb = 255 - abs(255 - sb - bb);\n\t\t\t}\n\t\t};\n\t\n\t\tvar nativeModes = this.nativeModes = Base.each([\n\t\t\t'source-over', 'source-in', 'source-out', 'source-atop',\n\t\t\t'destination-over', 'destination-in', 'destination-out',\n\t\t\t'destination-atop', 'lighter', 'darker', 'copy', 'xor'\n\t\t], function(mode) {\n\t\t\tthis[mode] = true;\n\t\t}, {});\n\t\n\t\tvar ctx = CanvasProvider.getContext(1, 1);\n\t\tBase.each(modes, function(func, mode) {\n\t\t\tvar darken = mode === 'darken',\n\t\t\t\tok = false;\n\t\t\tctx.save();\n\t\t\ttry {\n\t\t\t\tctx.fillStyle = darken ? '#300' : '#a00';\n\t\t\t\tctx.fillRect(0, 0, 1, 1);\n\t\t\t\tctx.globalCompositeOperation = mode;\n\t\t\t\tif (ctx.globalCompositeOperation === mode) {\n\t\t\t\t\tctx.fillStyle = darken ? '#a00' : '#300';\n\t\t\t\t\tctx.fillRect(0, 0, 1, 1);\n\t\t\t\t\tok = ctx.getImageData(0, 0, 1, 1).data[0] !== darken ? 170 : 51;\n\t\t\t\t}\n\t\t\t} catch (e) {}\n\t\t\tctx.restore();\n\t\t\tnativeModes[mode] = ok;\n\t\t});\n\t\tCanvasProvider.release(ctx);\n\t\n\t\tthis.process = function(mode, srcContext, dstContext, alpha, offset) {\n\t\t\tvar srcCanvas = srcContext.canvas,\n\t\t\t\tnormal = mode === 'normal';\n\t\t\tif (normal || nativeModes[mode]) {\n\t\t\t\tdstContext.save();\n\t\t\t\tdstContext.setTransform(1, 0, 0, 1, 0, 0);\n\t\t\t\tdstContext.globalAlpha = alpha;\n\t\t\t\tif (!normal)\n\t\t\t\t\tdstContext.globalCompositeOperation = mode;\n\t\t\t\tdstContext.drawImage(srcCanvas, offset.x, offset.y);\n\t\t\t\tdstContext.restore();\n\t\t\t} else {\n\t\t\t\tvar process = modes[mode];\n\t\t\t\tif (!process)\n\t\t\t\t\treturn;\n\t\t\t\tvar dstData = dstContext.getImageData(offset.x, offset.y,\n\t\t\t\t\t\tsrcCanvas.width, srcCanvas.height),\n\t\t\t\t\tdst = dstData.data,\n\t\t\t\t\tsrc = srcContext.getImageData(0, 0,\n\t\t\t\t\t\tsrcCanvas.width, srcCanvas.height).data;\n\t\t\t\tfor (var i = 0, l = dst.length; i < l; i += 4) {\n\t\t\t\t\tsr = src[i];\n\t\t\t\t\tbr = dst[i];\n\t\t\t\t\tsg = src[i + 1];\n\t\t\t\t\tbg = dst[i + 1];\n\t\t\t\t\tsb = src[i + 2];\n\t\t\t\t\tbb = dst[i + 2];\n\t\t\t\t\tsa = src[i + 3];\n\t\t\t\t\tba = dst[i + 3];\n\t\t\t\t\tprocess();\n\t\t\t\t\tvar a1 = sa * alpha / 255,\n\t\t\t\t\t\ta2 = 1 - a1;\n\t\t\t\t\tdst[i] = a1 * dr + a2 * br;\n\t\t\t\t\tdst[i + 1] = a1 * dg + a2 * bg;\n\t\t\t\t\tdst[i + 2] = a1 * db + a2 * bb;\n\t\t\t\t\tdst[i + 3] = sa * alpha + a2 * ba;\n\t\t\t\t}\n\t\t\t\tdstContext.putImageData(dstData, offset.x, offset.y);\n\t\t\t}\n\t\t};\n\t};\n\t\n\tvar SVGStyles = Base.each({\n\t\tfillColor: ['fill', 'color'],\n\t\tstrokeColor: ['stroke', 'color'],\n\t\tstrokeWidth: ['stroke-width', 'number'],\n\t\tstrokeCap: ['stroke-linecap', 'string'],\n\t\tstrokeJoin: ['stroke-linejoin', 'string'],\n\t\tstrokeScaling: ['vector-effect', 'lookup', {\n\t\t\ttrue: 'none',\n\t\t\tfalse: 'non-scaling-stroke'\n\t\t}, function(item, value) {\n\t\t\treturn !value\n\t\t\t\t\t&& (item instanceof PathItem\n\t\t\t\t\t\t|| item instanceof Shape\n\t\t\t\t\t\t|| item instanceof TextItem);\n\t\t}],\n\t\tmiterLimit: ['stroke-miterlimit', 'number'],\n\t\tdashArray: ['stroke-dasharray', 'array'],\n\t\tdashOffset: ['stroke-dashoffset', 'number'],\n\t\tfontFamily: ['font-family', 'string'],\n\t\tfontWeight: ['font-weight', 'string'],\n\t\tfontSize: ['font-size', 'number'],\n\t\tjustification: ['text-anchor', 'lookup', {\n\t\t\tleft: 'start',\n\t\t\tcenter: 'middle',\n\t\t\tright: 'end'\n\t\t}],\n\t\topacity: ['opacity', 'number'],\n\t\tblendMode: ['mix-blend-mode', 'string']\n\t}, function(entry, key) {\n\t\tvar part = Base.capitalize(key),\n\t\t\tlookup = entry[2];\n\t\tthis[key] = {\n\t\t\ttype: entry[1],\n\t\t\tproperty: key,\n\t\t\tattribute: entry[0],\n\t\t\ttoSVG: lookup,\n\t\t\tfromSVG: lookup && Base.each(lookup, function(value, name) {\n\t\t\t\tthis[value] = name;\n\t\t\t}, {}),\n\t\t\texportFilter: entry[3],\n\t\t\tget: 'get' + part,\n\t\t\tset: 'set' + part\n\t\t};\n\t}, {});\n\t\n\tvar SVGNamespaces = {\n\t\thref: 'http://www.w3.org/1999/xlink',\n\t\txlink: 'http://www.w3.org/2000/xmlns'\n\t};\n\t\n\tnew function() {\n\t\tvar formatter;\n\t\n\t\tfunction setAttributes(node, attrs) {\n\t\t\tfor (var key in attrs) {\n\t\t\t\tvar val = attrs[key],\n\t\t\t\t\tnamespace = SVGNamespaces[key];\n\t\t\t\tif (typeof val === 'number')\n\t\t\t\t\tval = formatter.number(val);\n\t\t\t\tif (namespace) {\n\t\t\t\t\tnode.setAttributeNS(namespace, key, val);\n\t\t\t\t} else {\n\t\t\t\t\tnode.setAttribute(key, val);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn node;\n\t\t}\n\t\n\t\tfunction createElement(tag, attrs) {\n\t\t\treturn setAttributes(\n\t\t\t\tdocument.createElementNS('http://www.w3.org/2000/svg', tag), attrs);\n\t\t}\n\t\n\t\tfunction getTransform(matrix, coordinates, center) {\n\t\t\tvar attrs = new Base(),\n\t\t\t\ttrans = matrix.getTranslation();\n\t\t\tif (coordinates) {\n\t\t\t\tmatrix = matrix.shiftless();\n\t\t\t\tvar point = matrix._inverseTransform(trans);\n\t\t\t\tattrs[center ? 'cx' : 'x'] = point.x;\n\t\t\t\tattrs[center ? 'cy' : 'y'] = point.y;\n\t\t\t\ttrans = null;\n\t\t\t}\n\t\t\tif (!matrix.isIdentity()) {\n\t\t\t\tvar decomposed = matrix.decompose();\n\t\t\t\tif (decomposed && !decomposed.shearing) {\n\t\t\t\t\tvar parts = [],\n\t\t\t\t\t\tangle = decomposed.rotation,\n\t\t\t\t\t\tscale = decomposed.scaling;\n\t\t\t\t\tif (trans && !trans.isZero())\n\t\t\t\t\t\tparts.push('translate(' + formatter.point(trans) + ')');\n\t\t\t\t\tif (!Numerical.isZero(scale.x - 1)\n\t\t\t\t\t\t\t|| !Numerical.isZero(scale.y - 1))\n\t\t\t\t\t\tparts.push('scale(' + formatter.point(scale) +')');\n\t\t\t\t\tif (angle)\n\t\t\t\t\t\tparts.push('rotate(' + formatter.number(angle) + ')');\n\t\t\t\t\tattrs.transform = parts.join(' ');\n\t\t\t\t} else {\n\t\t\t\t\tattrs.transform = 'matrix(' + matrix.getValues().join(',') + ')';\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn attrs;\n\t\t}\n\t\n\t\tfunction exportGroup(item, options) {\n\t\t\tvar attrs = getTransform(item._matrix),\n\t\t\t\tchildren = item._children;\n\t\t\tvar node = createElement('g', attrs);\n\t\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\t\tvar child = children[i];\n\t\t\t\tvar childNode = exportSVG(child, options);\n\t\t\t\tif (childNode) {\n\t\t\t\t\tif (child.isClipMask()) {\n\t\t\t\t\t\tvar clip = createElement('clipPath');\n\t\t\t\t\t\tclip.appendChild(childNode);\n\t\t\t\t\t\tsetDefinition(child, clip, 'clip');\n\t\t\t\t\t\tsetAttributes(node, {\n\t\t\t\t\t\t\t'clip-path': 'url(#' + clip.id + ')'\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnode.appendChild(childNode);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn node;\n\t\t}\n\t\n\t\tfunction exportRaster(item, options) {\n\t\t\tvar attrs = getTransform(item._matrix, true),\n\t\t\t\tsize = item.getSize(),\n\t\t\t\timage = item.getImage();\n\t\t\tattrs.x -= size.width / 2;\n\t\t\tattrs.y -= size.height / 2;\n\t\t\tattrs.width = size.width;\n\t\t\tattrs.height = size.height;\n\t\t\tattrs.href = options.embedImages === false && image && image.src\n\t\t\t\t\t|| item.toDataURL();\n\t\t\treturn createElement('image', attrs);\n\t\t}\n\t\n\t\tfunction exportPath(item, options) {\n\t\t\tvar matchShapes = options.matchShapes;\n\t\t\tif (matchShapes) {\n\t\t\t\tvar shape = item.toShape(false);\n\t\t\t\tif (shape)\n\t\t\t\t\treturn exportShape(shape, options);\n\t\t\t}\n\t\t\tvar segments = item._segments,\n\t\t\t\ttype,\n\t\t\t\tattrs = getTransform(item._matrix);\n\t\t\tif (segments.length === 0)\n\t\t\t\treturn null;\n\t\t\tif (matchShapes && !item.hasHandles()) {\n\t\t\t\tif (segments.length >= 3) {\n\t\t\t\t\ttype = item._closed ? 'polygon' : 'polyline';\n\t\t\t\t\tvar parts = [];\n\t\t\t\t\tfor(var i = 0, l = segments.length; i < l; i++)\n\t\t\t\t\t\tparts.push(formatter.point(segments[i]._point));\n\t\t\t\t\tattrs.points = parts.join(' ');\n\t\t\t\t} else {\n\t\t\t\t\ttype = 'line';\n\t\t\t\t\tvar first = segments[0]._point,\n\t\t\t\t\t\tlast = segments[segments.length - 1]._point;\n\t\t\t\t\tattrs.set({\n\t\t\t\t\t\tx1: first.x,\n\t\t\t\t\t\ty1: first.y,\n\t\t\t\t\t\tx2: last.x,\n\t\t\t\t\t\ty2: last.y\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttype = 'path';\n\t\t\t\tattrs.d = item.getPathData(null, options.precision);\n\t\t\t}\n\t\t\treturn createElement(type, attrs);\n\t\t}\n\t\n\t\tfunction exportShape(item) {\n\t\t\tvar type = item._type,\n\t\t\t\tradius = item._radius,\n\t\t\t\tattrs = getTransform(item._matrix, true, type !== 'rectangle');\n\t\t\tif (type === 'rectangle') {\n\t\t\t\ttype = 'rect';\n\t\t\t\tvar size = item._size,\n\t\t\t\t\twidth = size.width,\n\t\t\t\t\theight = size.height;\n\t\t\t\tattrs.x -= width / 2;\n\t\t\t\tattrs.y -= height / 2;\n\t\t\t\tattrs.width = width;\n\t\t\t\tattrs.height = height;\n\t\t\t\tif (radius.isZero())\n\t\t\t\t\tradius = null;\n\t\t\t}\n\t\t\tif (radius) {\n\t\t\t\tif (type === 'circle') {\n\t\t\t\t\tattrs.r = radius;\n\t\t\t\t} else {\n\t\t\t\t\tattrs.rx = radius.width;\n\t\t\t\t\tattrs.ry = radius.height;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn createElement(type, attrs);\n\t\t}\n\t\n\t\tfunction exportCompoundPath(item, options) {\n\t\t\tvar attrs = getTransform(item._matrix);\n\t\t\tvar data = item.getPathData(null, options.precision);\n\t\t\tif (data)\n\t\t\t\tattrs.d = data;\n\t\t\treturn createElement('path', attrs);\n\t\t}\n\t\n\t\tfunction exportPlacedSymbol(item, options) {\n\t\t\tvar attrs = getTransform(item._matrix, true),\n\t\t\t\tsymbol = item.getSymbol(),\n\t\t\t\tsymbolNode = getDefinition(symbol, 'symbol'),\n\t\t\t\tdefinition = symbol.getDefinition(),\n\t\t\t\tbounds = definition.getBounds();\n\t\t\tif (!symbolNode) {\n\t\t\t\tsymbolNode = createElement('symbol', {\n\t\t\t\t\tviewBox: formatter.rectangle(bounds)\n\t\t\t\t});\n\t\t\t\tsymbolNode.appendChild(exportSVG(definition, options));\n\t\t\t\tsetDefinition(symbol, symbolNode, 'symbol');\n\t\t\t}\n\t\t\tattrs.href = '#' + symbolNode.id;\n\t\t\tattrs.x += bounds.x;\n\t\t\tattrs.y += bounds.y;\n\t\t\tattrs.width = formatter.number(bounds.width);\n\t\t\tattrs.height = formatter.number(bounds.height);\n\t\t\tattrs.overflow = 'visible';\n\t\t\treturn createElement('use', attrs);\n\t\t}\n\t\n\t\tfunction exportGradient(color) {\n\t\t\tvar gradientNode = getDefinition(color, 'color');\n\t\t\tif (!gradientNode) {\n\t\t\t\tvar gradient = color.getGradient(),\n\t\t\t\t\tradial = gradient._radial,\n\t\t\t\t\torigin = color.getOrigin().transform(),\n\t\t\t\t\tdestination = color.getDestination().transform(),\n\t\t\t\t\tattrs;\n\t\t\t\tif (radial) {\n\t\t\t\t\tattrs = {\n\t\t\t\t\t\tcx: origin.x,\n\t\t\t\t\t\tcy: origin.y,\n\t\t\t\t\t\tr: origin.getDistance(destination)\n\t\t\t\t\t};\n\t\t\t\t\tvar highlight = color.getHighlight();\n\t\t\t\t\tif (highlight) {\n\t\t\t\t\t\thighlight = highlight.transform();\n\t\t\t\t\t\tattrs.fx = highlight.x;\n\t\t\t\t\t\tattrs.fy = highlight.y;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tattrs = {\n\t\t\t\t\t\tx1: origin.x,\n\t\t\t\t\t\ty1: origin.y,\n\t\t\t\t\t\tx2: destination.x,\n\t\t\t\t\t\ty2: destination.y\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tattrs.gradientUnits = 'userSpaceOnUse';\n\t\t\t\tgradientNode = createElement(\n\t\t\t\t\t\t(radial ? 'radial' : 'linear') + 'Gradient', attrs);\n\t\t\t\tvar stops = gradient._stops;\n\t\t\t\tfor (var i = 0, l = stops.length; i < l; i++) {\n\t\t\t\t\tvar stop = stops[i],\n\t\t\t\t\t\tstopColor = stop._color,\n\t\t\t\t\t\talpha = stopColor.getAlpha();\n\t\t\t\t\tattrs = {\n\t\t\t\t\t\toffset: stop._rampPoint,\n\t\t\t\t\t\t'stop-color': stopColor.toCSS(true)\n\t\t\t\t\t};\n\t\t\t\t\tif (alpha < 1)\n\t\t\t\t\t\tattrs['stop-opacity'] = alpha;\n\t\t\t\t\tgradientNode.appendChild(createElement('stop', attrs));\n\t\t\t\t}\n\t\t\t\tsetDefinition(color, gradientNode, 'color');\n\t\t\t}\n\t\t\treturn 'url(#' + gradientNode.id + ')';\n\t\t}\n\t\n\t\tfunction exportText(item) {\n\t\t\tvar node = createElement('text', getTransform(item._matrix, true));\n\t\t\tnode.textContent = item._content;\n\t\t\treturn node;\n\t\t}\n\t\n\t\tvar exporters = {\n\t\t\tGroup: exportGroup,\n\t\t\tLayer: exportGroup,\n\t\t\tRaster: exportRaster,\n\t\t\tPath: exportPath,\n\t\t\tShape: exportShape,\n\t\t\tCompoundPath: exportCompoundPath,\n\t\t\tPlacedSymbol: exportPlacedSymbol,\n\t\t\tPointText: exportText\n\t\t};\n\t\n\t\tfunction applyStyle(item, node, isRoot) {\n\t\t\tvar attrs = {},\n\t\t\t\tparent = !isRoot && item.getParent();\n\t\n\t\t\tif (item._name != null)\n\t\t\t\tattrs.id = item._name;\n\t\n\t\t\tBase.each(SVGStyles, function(entry) {\n\t\t\t\tvar get = entry.get,\n\t\t\t\t\ttype = entry.type,\n\t\t\t\t\tvalue = item[get]();\n\t\t\t\tif (entry.exportFilter\n\t\t\t\t\t\t? entry.exportFilter(item, value)\n\t\t\t\t\t\t: !parent || !Base.equals(parent[get](), value)) {\n\t\t\t\t\tif (type === 'color' && value != null) {\n\t\t\t\t\t\tvar alpha = value.getAlpha();\n\t\t\t\t\t\tif (alpha < 1)\n\t\t\t\t\t\t\tattrs[entry.attribute + '-opacity'] = alpha;\n\t\t\t\t\t}\n\t\t\t\t\tattrs[entry.attribute] = value == null\n\t\t\t\t\t\t? 'none'\n\t\t\t\t\t\t: type === 'number'\n\t\t\t\t\t\t\t? formatter.number(value)\n\t\t\t\t\t\t\t: type === 'color'\n\t\t\t\t\t\t\t\t? value.gradient\n\t\t\t\t\t\t\t\t\t? exportGradient(value, item)\n\t\t\t\t\t\t\t\t\t: value.toCSS(true)\n\t\t\t\t\t\t\t\t: type === 'array'\n\t\t\t\t\t\t\t\t\t? value.join(',')\n\t\t\t\t\t\t\t\t\t: type === 'lookup'\n\t\t\t\t\t\t\t\t\t\t? entry.toSVG[value]\n\t\t\t\t\t\t\t\t\t\t: value;\n\t\t\t\t}\n\t\t\t});\n\t\n\t\t\tif (attrs.opacity === 1)\n\t\t\t\tdelete attrs.opacity;\n\t\n\t\t\tif (!item._visible)\n\t\t\t\tattrs.visibility = 'hidden';\n\t\n\t\t\treturn setAttributes(node, attrs);\n\t\t}\n\t\n\t\tvar definitions;\n\t\tfunction getDefinition(item, type) {\n\t\t\tif (!definitions)\n\t\t\t\tdefinitions = { ids: {}, svgs: {} };\n\t\t\treturn item && definitions.svgs[type + '-' + item._id];\n\t\t}\n\t\n\t\tfunction setDefinition(item, node, type) {\n\t\t\tif (!definitions)\n\t\t\t\tgetDefinition();\n\t\t\tvar id = definitions.ids[type] = (definitions.ids[type] || 0) + 1;\n\t\t\tnode.id = type + '-' + id;\n\t\t\tdefinitions.svgs[type + '-' + item._id] = node;\n\t\t}\n\t\n\t\tfunction exportDefinitions(node, options) {\n\t\t\tvar svg = node,\n\t\t\t\tdefs = null;\n\t\t\tif (definitions) {\n\t\t\t\tsvg = node.nodeName.toLowerCase() === 'svg' && node;\n\t\t\t\tfor (var i in definitions.svgs) {\n\t\t\t\t\tif (!defs) {\n\t\t\t\t\t\tif (!svg) {\n\t\t\t\t\t\t\tsvg = createElement('svg');\n\t\t\t\t\t\t\tsvg.appendChild(node);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdefs = svg.insertBefore(createElement('defs'),\n\t\t\t\t\t\t\t\tsvg.firstChild);\n\t\t\t\t\t}\n\t\t\t\t\tdefs.appendChild(definitions.svgs[i]);\n\t\t\t\t}\n\t\t\t\tdefinitions = null;\n\t\t\t}\n\t\t\treturn options.asString\n\t\t\t\t\t? new XMLSerializer().serializeToString(svg)\n\t\t\t\t\t: svg;\n\t\t}\n\t\n\t\tfunction exportSVG(item, options, isRoot) {\n\t\t\tvar exporter = exporters[item._class],\n\t\t\t\tnode = exporter && exporter(item, options);\n\t\t\tif (node) {\n\t\t\t\tvar onExport = options.onExport;\n\t\t\t\tif (onExport)\n\t\t\t\t\tnode = onExport(item, node, options) || node;\n\t\t\t\tvar data = JSON.stringify(item._data);\n\t\t\t\tif (data && data !== '{}' && data !== 'null')\n\t\t\t\t\tnode.setAttribute('data-paper-data', data);\n\t\t\t}\n\t\t\treturn node && applyStyle(item, node, isRoot);\n\t\t}\n\t\n\t\tfunction setOptions(options) {\n\t\t\tif (!options)\n\t\t\t\toptions = {};\n\t\t\tformatter = new Formatter(options.precision);\n\t\t\treturn options;\n\t\t}\n\t\n\t\tItem.inject({\n\t\t\texportSVG: function(options) {\n\t\t\t\toptions = setOptions(options);\n\t\t\t\treturn exportDefinitions(exportSVG(this, options, true), options);\n\t\t\t}\n\t\t});\n\t\n\t\tProject.inject({\n\t\t\texportSVG: function(options) {\n\t\t\t\toptions = setOptions(options);\n\t\t\t\tvar layers = this.layers,\n\t\t\t\t\tview = this.getView(),\n\t\t\t\t\tsize = view.getViewSize(),\n\t\t\t\t\tnode = createElement('svg', {\n\t\t\t\t\t\tx: 0,\n\t\t\t\t\t\ty: 0,\n\t\t\t\t\t\twidth: size.width,\n\t\t\t\t\t\theight: size.height,\n\t\t\t\t\t\tversion: '1.1',\n\t\t\t\t\t\txmlns: 'http://www.w3.org/2000/svg',\n\t\t\t\t\t\t'xmlns:xlink': 'http://www.w3.org/1999/xlink'\n\t\t\t\t\t}),\n\t\t\t\t\tparent = node,\n\t\t\t\t\tmatrix = view._matrix;\n\t\t\t\tif (!matrix.isIdentity())\n\t\t\t\t\tparent = node.appendChild(\n\t\t\t\t\t\t\tcreateElement('g', getTransform(matrix)));\n\t\t\t\tfor (var i = 0, l = layers.length; i < l; i++)\n\t\t\t\t\tparent.appendChild(exportSVG(layers[i], options, true));\n\t\t\t\treturn exportDefinitions(node, options);\n\t\t\t}\n\t\t});\n\t};\n\t\n\tnew function() {\n\t\n\t\tfunction getValue(node, name, isString, allowNull) {\n\t\t\tvar namespace = SVGNamespaces[name],\n\t\t\t\tvalue = namespace\n\t\t\t\t\t? node.getAttributeNS(namespace, name)\n\t\t\t\t\t: node.getAttribute(name);\n\t\t\tif (value === 'null')\n\t\t\t\tvalue = null;\n\t\t\treturn value == null\n\t\t\t\t\t? allowNull\n\t\t\t\t\t\t? null\n\t\t\t\t\t\t: isString\n\t\t\t\t\t\t\t? ''\n\t\t\t\t\t\t\t: 0\n\t\t\t\t\t: isString\n\t\t\t\t\t\t? value\n\t\t\t\t\t\t: parseFloat(value);\n\t\t}\n\t\n\t\tfunction getPoint(node, x, y, allowNull) {\n\t\t\tx = getValue(node, x, false, allowNull);\n\t\t\ty = getValue(node, y, false, allowNull);\n\t\t\treturn allowNull && (x == null || y == null) ? null\n\t\t\t\t\t: new Point(x, y);\n\t\t}\n\t\n\t\tfunction getSize(node, w, h, allowNull) {\n\t\t\tw = getValue(node, w, false, allowNull);\n\t\t\th = getValue(node, h, false, allowNull);\n\t\t\treturn allowNull && (w == null || h == null) ? null\n\t\t\t\t\t: new Size(w, h);\n\t\t}\n\t\n\t\tfunction convertValue(value, type, lookup) {\n\t\t\treturn value === 'none'\n\t\t\t\t\t? null\n\t\t\t\t\t: type === 'number'\n\t\t\t\t\t\t? parseFloat(value)\n\t\t\t\t\t\t: type === 'array'\n\t\t\t\t\t\t\t? value ? value.split(/[\\s,]+/g).map(parseFloat) : []\n\t\t\t\t\t\t\t: type === 'color'\n\t\t\t\t\t\t\t\t? getDefinition(value) || value\n\t\t\t\t\t\t\t\t: type === 'lookup'\n\t\t\t\t\t\t\t\t\t? lookup[value]\n\t\t\t\t\t\t\t\t\t: value;\n\t\t}\n\t\n\t\tfunction importGroup(node, type, options, isRoot) {\n\t\t\tvar nodes = node.childNodes,\n\t\t\t\tisClip = type === 'clippath',\n\t\t\t\titem = new Group(),\n\t\t\t\tproject = item._project,\n\t\t\t\tcurrentStyle = project._currentStyle,\n\t\t\t\tchildren = [];\n\t\t\tif (!isClip) {\n\t\t\t\titem = applyAttributes(item, node, isRoot);\n\t\t\t\tproject._currentStyle = item._style.clone();\n\t\t\t}\n\t\t\tif (isRoot) {\n\t\t\t\tvar defs = node.querySelectorAll('defs');\n\t\t\t\tfor (var i = 0, l = defs.length; i < l; i++) {\n\t\t\t\t\timportSVG(defs[i], options, false);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\t\tvar childNode = nodes[i],\n\t\t\t\t\tchild;\n\t\t\t\tif (childNode.nodeType === 1\n\t\t\t\t\t\t&& childNode.nodeName.toLowerCase() !== 'defs'\n\t\t\t\t\t\t&& (child = importSVG(childNode, options, false))\n\t\t\t\t\t\t&& !(child instanceof Symbol))\n\t\t\t\t\tchildren.push(child);\n\t\t\t}\n\t\t\titem.addChildren(children);\n\t\t\tif (isClip)\n\t\t\t\titem = applyAttributes(item.reduce(), node, isRoot);\n\t\t\tproject._currentStyle = currentStyle;\n\t\t\tif (isClip || type === 'defs') {\n\t\t\t\titem.remove();\n\t\t\t\titem = null;\n\t\t\t}\n\t\t\treturn item;\n\t\t}\n\t\n\t\tfunction importPoly(node, type) {\n\t\t\tvar coords = node.getAttribute('points').match(\n\t\t\t\t\t\t/[+-]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?/g),\n\t\t\t\tpoints = [];\n\t\t\tfor (var i = 0, l = coords.length; i < l; i += 2)\n\t\t\t\tpoints.push(new Point(\n\t\t\t\t\t\tparseFloat(coords[i]),\n\t\t\t\t\t\tparseFloat(coords[i + 1])));\n\t\t\tvar path = new Path(points);\n\t\t\tif (type === 'polygon')\n\t\t\t\tpath.closePath();\n\t\t\treturn path;\n\t\t}\n\t\n\t\tfunction importPath(node) {\n\t\t\tvar data = node.getAttribute('d'),\n\t\t\t\tparam = { pathData: data };\n\t\t\treturn (data.match(/m/gi) || []).length > 1 || /z\\S+/i.test(data)\n\t\t\t\t\t? new CompoundPath(param)\n\t\t\t\t\t: new Path(param);\n\t\t}\n\t\n\t\tfunction importGradient(node, type) {\n\t\t\tvar id = (getValue(node, 'href', true) || '').substring(1),\n\t\t\t\tisRadial = type === 'radialgradient',\n\t\t\t\tgradient;\n\t\t\tif (id) {\n\t\t\t\tgradient = definitions[id].getGradient();\n\t\t\t} else {\n\t\t\t\tvar nodes = node.childNodes,\n\t\t\t\t\tstops = [];\n\t\t\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\t\t\tvar child = nodes[i];\n\t\t\t\t\tif (child.nodeType === 1)\n\t\t\t\t\t\tstops.push(applyAttributes(new GradientStop(), child));\n\t\t\t\t}\n\t\t\t\tgradient = new Gradient(stops, isRadial);\n\t\t\t}\n\t\t\tvar origin, destination, highlight;\n\t\t\tif (isRadial) {\n\t\t\t\torigin = getPoint(node, 'cx', 'cy');\n\t\t\t\tdestination = origin.add(getValue(node, 'r'), 0);\n\t\t\t\thighlight = getPoint(node, 'fx', 'fy', true);\n\t\t\t} else {\n\t\t\t\torigin = getPoint(node, 'x1', 'y1');\n\t\t\t\tdestination = getPoint(node, 'x2', 'y2');\n\t\t\t}\n\t\t\tapplyAttributes(\n\t\t\t\tnew Color(gradient, origin, destination, highlight), node);\n\t\t\treturn null;\n\t\t}\n\t\n\t\tvar importers = {\n\t\t\t'#document': function (node, type, options, isRoot) {\n\t\t\t\tvar nodes = node.childNodes;\n\t\t\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\t\t\tvar child = nodes[i];\n\t\t\t\t\tif (child.nodeType === 1) {\n\t\t\t\t\t\tvar next = child.nextSibling;\n\t\t\t\t\t\tdocument.body.appendChild(child);\n\t\t\t\t\t\tvar item = importSVG(child, options, isRoot);\n\t\t\t\t\t\tif (next) {\n\t\t\t\t\t\t\tnode.insertBefore(child, next);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnode.appendChild(child);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn item;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tg: importGroup,\n\t\t\tsvg: importGroup,\n\t\t\tclippath: importGroup,\n\t\t\tpolygon: importPoly,\n\t\t\tpolyline: importPoly,\n\t\t\tpath: importPath,\n\t\t\tlineargradient: importGradient,\n\t\t\tradialgradient: importGradient,\n\t\n\t\t\timage: function (node) {\n\t\t\t\tvar raster = new Raster(getValue(node, 'href', true));\n\t\t\t\traster.on('load', function() {\n\t\t\t\t\tvar size = getSize(node, 'width', 'height');\n\t\t\t\t\tthis.setSize(size);\n\t\t\t\t\tvar center = this._matrix._transformPoint(\n\t\t\t\t\t\t\tgetPoint(node, 'x', 'y').add(size.divide(2)));\n\t\t\t\t\tthis.translate(center);\n\t\t\t\t});\n\t\t\t\treturn raster;\n\t\t\t},\n\t\n\t\t\tsymbol: function(node, type, options, isRoot) {\n\t\t\t\treturn new Symbol(importGroup(node, type, options, isRoot), true);\n\t\t\t},\n\t\n\t\t\tdefs: importGroup,\n\t\n\t\t\tuse: function(node) {\n\t\t\t\tvar id = (getValue(node, 'href', true) || '').substring(1),\n\t\t\t\t\tdefinition = definitions[id],\n\t\t\t\t\tpoint = getPoint(node, 'x', 'y');\n\t\t\t\treturn definition\n\t\t\t\t\t\t? definition instanceof Symbol\n\t\t\t\t\t\t\t? definition.place(point)\n\t\t\t\t\t\t\t: definition.clone().translate(point)\n\t\t\t\t\t\t: null;\n\t\t\t},\n\t\n\t\t\tcircle: function(node) {\n\t\t\t\treturn new Shape.Circle(getPoint(node, 'cx', 'cy'),\n\t\t\t\t\t\tgetValue(node, 'r'));\n\t\t\t},\n\t\n\t\t\tellipse: function(node) {\n\t\t\t\treturn new Shape.Ellipse({\n\t\t\t\t\tcenter: getPoint(node, 'cx', 'cy'),\n\t\t\t\t\tradius: getSize(node, 'rx', 'ry')\n\t\t\t\t});\n\t\t\t},\n\t\n\t\t\trect: function(node) {\n\t\t\t\tvar point = getPoint(node, 'x', 'y'),\n\t\t\t\t\tsize = getSize(node, 'width', 'height'),\n\t\t\t\t\tradius = getSize(node, 'rx', 'ry');\n\t\t\t\treturn new Shape.Rectangle(new Rectangle(point, size), radius);\n\t\t\t},\n\t\n\t\t\tline: function(node) {\n\t\t\t\treturn new Path.Line(getPoint(node, 'x1', 'y1'),\n\t\t\t\t\t\tgetPoint(node, 'x2', 'y2'));\n\t\t\t},\n\t\n\t\t\ttext: function(node) {\n\t\t\t\tvar text = new PointText(getPoint(node, 'x', 'y')\n\t\t\t\t\t\t.add(getPoint(node, 'dx', 'dy')));\n\t\t\t\ttext.setContent(node.textContent.trim() || '');\n\t\t\t\treturn text;\n\t\t\t}\n\t\t};\n\t\n\t\tfunction applyTransform(item, value, name, node) {\n\t\t\tvar transforms = (node.getAttribute(name) || '').split(/\\)\\s*/g),\n\t\t\t\tmatrix = new Matrix();\n\t\t\tfor (var i = 0, l = transforms.length; i < l; i++) {\n\t\t\t\tvar transform = transforms[i];\n\t\t\t\tif (!transform)\n\t\t\t\t\tbreak;\n\t\t\t\tvar parts = transform.split(/\\(\\s*/),\n\t\t\t\t\tcommand = parts[0],\n\t\t\t\t\tv = parts[1].split(/[\\s,]+/g);\n\t\t\t\tfor (var j = 0, m = v.length; j < m; j++)\n\t\t\t\t\tv[j] = parseFloat(v[j]);\n\t\t\t\tswitch (command) {\n\t\t\t\tcase 'matrix':\n\t\t\t\t\tmatrix.concatenate(\n\t\t\t\t\t\t\tnew Matrix(v[0], v[1], v[2], v[3], v[4], v[5]));\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'rotate':\n\t\t\t\t\tmatrix.rotate(v[0], v[1], v[2]);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'translate':\n\t\t\t\t\tmatrix.translate(v[0], v[1]);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'scale':\n\t\t\t\t\tmatrix.scale(v);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'skewX':\n\t\t\t\t\tmatrix.skew(v[0], 0);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'skewY':\n\t\t\t\t\tmatrix.skew(0, v[0]);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\titem.transform(matrix);\n\t\t}\n\t\n\t\tfunction applyOpacity(item, value, name) {\n\t\t\tvar color = item[name === 'fill-opacity' ? 'getFillColor'\n\t\t\t\t\t: 'getStrokeColor']();\n\t\t\tif (color)\n\t\t\t\tcolor.setAlpha(parseFloat(value));\n\t\t}\n\t\n\t\tvar attributes = Base.set(Base.each(SVGStyles, function(entry) {\n\t\t\tthis[entry.attribute] = function(item, value) {\n\t\t\t\titem[entry.set](convertValue(value, entry.type, entry.fromSVG));\n\t\t\t\tif (entry.type === 'color' && item instanceof Shape) {\n\t\t\t\t\tvar color = item[entry.get]();\n\t\t\t\t\tif (color)\n\t\t\t\t\t\tcolor.transform(new Matrix().translate(\n\t\t\t\t\t\t\t\titem.getPosition(true).negate()));\n\t\t\t\t}\n\t\t\t};\n\t\t}, {}), {\n\t\t\tid: function(item, value) {\n\t\t\t\tdefinitions[value] = item;\n\t\t\t\tif (item.setName)\n\t\t\t\t\titem.setName(value);\n\t\t\t},\n\t\n\t\t\t'clip-path': function(item, value) {\n\t\t\t\tvar clip = getDefinition(value);\n\t\t\t\tif (clip) {\n\t\t\t\t\tclip = clip.clone();\n\t\t\t\t\tclip.setClipMask(true);\n\t\t\t\t\tif (item instanceof Group) {\n\t\t\t\t\t\titem.insertChild(0, clip);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn new Group(clip, item);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\tgradientTransform: applyTransform,\n\t\t\ttransform: applyTransform,\n\t\n\t\t\t'fill-opacity': applyOpacity,\n\t\t\t'stroke-opacity': applyOpacity,\n\t\n\t\t\tvisibility: function(item, value) {\n\t\t\t\titem.setVisible(value === 'visible');\n\t\t\t},\n\t\n\t\t\tdisplay: function(item, value) {\n\t\t\t\titem.setVisible(value !== null);\n\t\t\t},\n\t\n\t\t\t'stop-color': function(item, value) {\n\t\t\t\tif (item.setColor)\n\t\t\t\t\titem.setColor(value);\n\t\t\t},\n\t\n\t\t\t'stop-opacity': function(item, value) {\n\t\t\t\tif (item._color)\n\t\t\t\t\titem._color.setAlpha(parseFloat(value));\n\t\t\t},\n\t\n\t\t\toffset: function(item, value) {\n\t\t\t\tvar percentage = value.match(/(.*)%$/);\n\t\t\t\titem.setRampPoint(percentage\n\t\t\t\t\t\t? percentage[1] / 100\n\t\t\t\t\t\t: parseFloat(value));\n\t\t\t},\n\t\n\t\t\tviewBox: function(item, value, name, node, styles) {\n\t\t\t\tvar rect = new Rectangle(convertValue(value, 'array')),\n\t\t\t\t\tsize = getSize(node, 'width', 'height', true);\n\t\t\t\tif (item instanceof Group) {\n\t\t\t\t\tvar scale = size ? rect.getSize().divide(size) : 1,\n\t\t\t\t\t\tmatrix = new Matrix().translate(rect.getPoint()).scale(scale);\n\t\t\t\t\titem.transform(matrix.inverted());\n\t\t\t\t} else if (item instanceof Symbol) {\n\t\t\t\t\tif (size)\n\t\t\t\t\t\trect.setSize(size);\n\t\t\t\t\tvar clip = getAttribute(node, 'overflow', styles) != 'visible',\n\t\t\t\t\t\tgroup = item._definition;\n\t\t\t\t\tif (clip && !rect.contains(group.getBounds())) {\n\t\t\t\t\t\tclip = new Shape.Rectangle(rect).transform(group._matrix);\n\t\t\t\t\t\tclip.setClipMask(true);\n\t\t\t\t\t\tgroup.addChild(clip);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\n\t\tfunction getAttribute(node, name, styles) {\n\t\t\tvar attr = node.attributes[name],\n\t\t\t\tvalue = attr && attr.value;\n\t\t\tif (!value) {\n\t\t\t\tvar style = Base.camelize(name);\n\t\t\t\tvalue = node.style[style];\n\t\t\t\tif (!value && styles.node[style] !== styles.parent[style])\n\t\t\t\t\tvalue = styles.node[style];\n\t\t\t}\n\t\t\treturn !value\n\t\t\t\t\t? undefined\n\t\t\t\t\t: value === 'none'\n\t\t\t\t\t\t? null\n\t\t\t\t\t\t: value;\n\t\t}\n\t\n\t\tfunction applyAttributes(item, node, isRoot) {\n\t\t\tvar styles = {\n\t\t\t\tnode: DomElement.getStyles(node) || {},\n\t\t\t\tparent: !isRoot && DomElement.getStyles(node.parentNode) || {}\n\t\t\t};\n\t\t\tBase.each(attributes, function(apply, name) {\n\t\t\t\tvar value = getAttribute(node, name, styles);\n\t\t\t\tif (value !== undefined)\n\t\t\t\t\titem = Base.pick(apply(item, value, name, node, styles), item);\n\t\t\t});\n\t\t\treturn item;\n\t\t}\n\t\n\t\tvar definitions = {};\n\t\tfunction getDefinition(value) {\n\t\t\tvar match = value && value.match(/\\((?:#|)([^)']+)/);\n\t\t\treturn match && definitions[match[1]];\n\t\t}\n\t\n\t\tfunction importSVG(source, options, isRoot) {\n\t\t\tif (!source)\n\t\t\t\treturn null;\n\t\t\tif (!options) {\n\t\t\t\toptions = {};\n\t\t\t} else if (typeof options === 'function') {\n\t\t\t\toptions = { onLoad: options };\n\t\t\t}\n\t\n\t\t\tvar node = source,\n\t\t\t\tscope = paper;\n\t\n\t\t\tfunction onLoadCallback(svg) {\n\t\t\t\tpaper = scope;\n\t\t\t\tvar item = importSVG(svg, options, isRoot),\n\t\t\t\t\tonLoad = options.onLoad,\n\t\t\t\t\tview = scope.project && scope.getView();\n\t\t\t\tif (onLoad)\n\t\t\t\t\tonLoad.call(this, item);\n\t\t\t\tview.update();\n\t\t\t}\n\t\n\t\t\tif (isRoot) {\n\t\t\t\tif (typeof source === 'string' && !/^.*</.test(source)) {\n\t\t\t\t\tnode = document.getElementById(source);\n\t\t\t\t\tif (node) {\n\t\t\t\t\t\tsource = null;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn Http.request('get', source, onLoadCallback);\n\t\t\t\t\t}\n\t\t\t\t} else if (typeof File !== 'undefined' && source instanceof File) {\n\t\t\t\t\tvar reader = new FileReader();\n\t\t\t\t\treader.onload = function() {\n\t\t\t\t\t\tonLoadCallback(reader.result);\n\t\t\t\t\t};\n\t\t\t\t\treturn reader.readAsText(source);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif (typeof source === 'string')\n\t\t\t\tnode = new DOMParser().parseFromString(source, 'image/svg+xml');\n\t\t\tif (!node.nodeName)\n\t\t\t\tthrow new Error('Unsupported SVG source: ' + source);\n\t\t\tvar type = node.nodeName.toLowerCase(),\n\t\t\t\timporter = importers[type],\n\t\t\t\titem,\n\t\t\t\tdata = node.getAttribute && node.getAttribute('data-paper-data'),\n\t\t\t\tsettings = scope.settings,\n\t\t\t\tapplyMatrix = settings.applyMatrix;\n\t\t\tsettings.applyMatrix = false;\n\t\t\titem = importer && importer(node, type, options, isRoot) || null;\n\t\t\tsettings.applyMatrix = applyMatrix;\n\t\t\tif (item) {\n\t\t\t\tif (type !== '#document' && !(item instanceof Group))\n\t\t\t\t\titem = applyAttributes(item, node, isRoot);\n\t\t\t\tvar onImport = options.onImport;\n\t\t\t\tif (onImport)\n\t\t\t\t\titem = onImport(node, item, options) || item;\n\t\t\t\tif (options.expandShapes && item instanceof Shape) {\n\t\t\t\t\titem.remove();\n\t\t\t\t\titem = item.toPath();\n\t\t\t\t}\n\t\t\t\tif (data)\n\t\t\t\t\titem._data = JSON.parse(data);\n\t\t\t}\n\t\t\tif (isRoot) {\n\t\t\t\tdefinitions = {};\n\t\t\t\tif (item && Base.pick(options.applyMatrix, applyMatrix))\n\t\t\t\t\titem.matrix.apply(true, true);\n\t\t\t}\n\t\t\treturn item;\n\t\t}\n\t\n\t\tItem.inject({\n\t\t\timportSVG: function(node, options) {\n\t\t\t\treturn this.addChild(importSVG(node, options, true));\n\t\t\t}\n\t\t});\n\t\n\t\tProject.inject({\n\t\t\timportSVG: function(node, options) {\n\t\t\t\tthis.activate();\n\t\t\t\treturn importSVG(node, options, true);\n\t\t\t}\n\t\t});\n\t};\n\t\n\tBase.exports.PaperScript = (function() {\n\t\tvar exports, define,\n\t\t\tscope = this;\n\t!function(e,r){return\"object\"==typeof exports&&\"object\"==typeof module?r(exports):\"function\"==typeof define&&define.amd?define([\"exports\"],r):(r(e.acorn||(e.acorn={})),void 0)}(this,function(e){\"use strict\";function r(e){fr=e||{};for(var r in mr)Object.prototype.hasOwnProperty.call(fr,r)||(fr[r]=mr[r]);hr=fr.sourceFile||null}function t(e,r){var t=vr(dr,e);r+=\" (\"+t.line+\":\"+t.column+\")\";var n=new SyntaxError(r);throw n.pos=e,n.loc=t,n.raisedAt=br,n}function n(e){function r(e){if(1==e.length)return t+=\"return str === \"+JSON.stringify(e[0])+\";\";t+=\"switch(str){\";for(var r=0;r<e.length;++r)t+=\"case \"+JSON.stringify(e[r])+\":\";t+=\"return true}return false;\"}e=e.split(\" \");var t=\"\",n=[];e:for(var a=0;a<e.length;++a){for(var o=0;o<n.length;++o)if(n[o][0].length==e[a].length){n[o].push(e[a]);continue e}n.push([e[a]])}if(n.length>3){n.sort(function(e,r){return r.length-e.length}),t+=\"switch(str.length){\";for(var a=0;a<n.length;++a){var i=n[a];t+=\"case \"+i[0].length+\":\",r(i)}t+=\"}\"}else r(e);return new Function(\"str\",t)}function a(){this.line=Ar,this.column=br-Sr}function o(){Ar=1,br=Sr=0,Er=!0,u()}function i(e,r){gr=br,fr.locations&&(kr=new a),wr=e,u(),Cr=r,Er=e.beforeExpr}function s(){var e=fr.onComment&&fr.locations&&new a,r=br,n=dr.indexOf(\"*/\",br+=2);if(-1===n&&t(br-2,\"Unterminated comment\"),br=n+2,fr.locations){Kt.lastIndex=r;for(var o;(o=Kt.exec(dr))&&o.index<br;)++Ar,Sr=o.index+o[0].length}fr.onComment&&fr.onComment(!0,dr.slice(r+2,n),r,br,e,fr.locations&&new a)}function c(){for(var e=br,r=fr.onComment&&fr.locations&&new a,t=dr.charCodeAt(br+=2);pr>br&&10!==t&&13!==t&&8232!==t&&8233!==t;)++br,t=dr.charCodeAt(br);fr.onComment&&fr.onComment(!1,dr.slice(e+2,br),e,br,r,fr.locations&&new a)}function u(){for(;pr>br;){var e=dr.charCodeAt(br);if(32===e)++br;else if(13===e){++br;var r=dr.charCodeAt(br);10===r&&++br,fr.locations&&(++Ar,Sr=br)}else if(10===e||8232===e||8233===e)++br,fr.locations&&(++Ar,Sr=br);else if(e>8&&14>e)++br;else if(47===e){var r=dr.charCodeAt(br+1);if(42===r)s();else{if(47!==r)break;c()}}else if(160===e)++br;else{if(!(e>=5760&&Jt.test(String.fromCharCode(e))))break;++br}}}function l(){var e=dr.charCodeAt(br+1);return e>=48&&57>=e?E(!0):(++br,i(xt))}function f(){var e=dr.charCodeAt(br+1);return Er?(++br,k()):61===e?x(Et,2):x(wt,1)}function d(){var e=dr.charCodeAt(br+1);return 61===e?x(Et,2):x(Dt,1)}function p(e){var r=dr.charCodeAt(br+1);return r===e?x(124===e?Lt:Ut,2):61===r?x(Et,2):x(124===e?Rt:Tt,1)}function h(){var e=dr.charCodeAt(br+1);return 61===e?x(Et,2):x(Vt,1)}function m(e){var r=dr.charCodeAt(br+1);return r===e?45==r&&62==dr.charCodeAt(br+2)&&Gt.test(dr.slice(Lr,br))?(br+=3,c(),u(),g()):x(St,2):61===r?x(Et,2):x(At,1)}function v(e){var r=dr.charCodeAt(br+1),t=1;return r===e?(t=62===e&&62===dr.charCodeAt(br+2)?3:2,61===dr.charCodeAt(br+t)?x(Et,t+1):x(jt,t)):33==r&&60==e&&45==dr.charCodeAt(br+2)&&45==dr.charCodeAt(br+3)?(br+=4,c(),u(),g()):(61===r&&(t=61===dr.charCodeAt(br+2)?3:2),x(Ot,t))}function b(e){var r=dr.charCodeAt(br+1);return 61===r?x(qt,61===dr.charCodeAt(br+2)?3:2):x(61===e?Ct:It,1)}function y(e){switch(e){case 46:return l();case 40:return++br,i(mt);case 41:return++br,i(vt);case 59:return++br,i(yt);case 44:return++br,i(bt);case 91:return++br,i(ft);case 93:return++br,i(dt);case 123:return++br,i(pt);case 125:return++br,i(ht);case 58:return++br,i(gt);case 63:return++br,i(kt);case 48:var r=dr.charCodeAt(br+1);if(120===r||88===r)return C();case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:return E(!1);case 34:case 39:return A(e);case 47:return f(e);case 37:case 42:return d();case 124:case 38:return p(e);case 94:return h();case 43:case 45:return m(e);case 60:case 62:return v(e);case 61:case 33:return b(e);case 126:return x(It,1)}return!1}function g(e){if(e?br=yr+1:yr=br,fr.locations&&(xr=new a),e)return k();if(br>=pr)return i(Br);var r=dr.charCodeAt(br);if(Qt(r)||92===r)return L();var n=y(r);if(n===!1){var o=String.fromCharCode(r);if(\"\\\\\"===o||$t.test(o))return L();t(br,\"Unexpected character '\"+o+\"'\")}return n}function x(e,r){var t=dr.slice(br,br+r);br+=r,i(e,t)}function k(){for(var e,r,n=\"\",a=br;;){br>=pr&&t(a,\"Unterminated regular expression\");var o=dr.charAt(br);if(Gt.test(o)&&t(a,\"Unterminated regular expression\"),e)e=!1;else{if(\"[\"===o)r=!0;else if(\"]\"===o&&r)r=!1;else if(\"/\"===o&&!r)break;e=\"\\\\\"===o}++br}var n=dr.slice(a,br);++br;var s=I();return s&&!/^[gmsiy]*$/.test(s)&&t(a,\"Invalid regexp flag\"),i(jr,new RegExp(n,s))}function w(e,r){for(var t=br,n=0,a=0,o=null==r?1/0:r;o>a;++a){var i,s=dr.charCodeAt(br);if(i=s>=97?s-97+10:s>=65?s-65+10:s>=48&&57>=s?s-48:1/0,i>=e)break;++br,n=n*e+i}return br===t||null!=r&&br-t!==r?null:n}function C(){br+=2;var e=w(16);return null==e&&t(yr+2,\"Expected hexadecimal number\"),Qt(dr.charCodeAt(br))&&t(br,\"Identifier directly after number\"),i(Or,e)}function E(e){var r=br,n=!1,a=48===dr.charCodeAt(br);e||null!==w(10)||t(r,\"Invalid number\"),46===dr.charCodeAt(br)&&(++br,w(10),n=!0);var o=dr.charCodeAt(br);(69===o||101===o)&&(o=dr.charCodeAt(++br),(43===o||45===o)&&++br,null===w(10)&&t(r,\"Invalid number\"),n=!0),Qt(dr.charCodeAt(br))&&t(br,\"Identifier directly after number\");var s,c=dr.slice(r,br);return n?s=parseFloat(c):a&&1!==c.length?/[89]/.test(c)||Tr?t(r,\"Invalid number\"):s=parseInt(c,8):s=parseInt(c,10),i(Or,s)}function A(e){br++;for(var r=\"\";;){br>=pr&&t(yr,\"Unterminated string constant\");var n=dr.charCodeAt(br);if(n===e)return++br,i(Dr,r);if(92===n){n=dr.charCodeAt(++br);var a=/^[0-7]+/.exec(dr.slice(br,br+3));for(a&&(a=a[0]);a&&parseInt(a,8)>255;)a=a.slice(0,a.length-1);if(\"0\"===a&&(a=null),++br,a)Tr&&t(br-2,\"Octal literal in strict mode\"),r+=String.fromCharCode(parseInt(a,8)),br+=a.length-1;else switch(n){case 110:r+=\"\\n\";break;case 114:r+=\"\\r\";break;case 120:r+=String.fromCharCode(S(2));break;case 117:r+=String.fromCharCode(S(4));break;case 85:r+=String.fromCharCode(S(8));break;case 116:r+=\"\t\";break;case 98:r+=\"\\b\";break;case 118:r+=\"\u000b\";break;case 102:r+=\"\\f\";break;case 48:r+=\"\\0\";break;case 13:10===dr.charCodeAt(br)&&++br;case 10:fr.locations&&(Sr=br,++Ar);break;default:r+=String.fromCharCode(n)}}else(13===n||10===n||8232===n||8233===n)&&t(yr,\"Unterminated string constant\"),r+=String.fromCharCode(n),++br}}function S(e){var r=w(16,e);return null===r&&t(yr,\"Bad character escape sequence\"),r}function I(){Bt=!1;for(var e,r=!0,n=br;;){var a=dr.charCodeAt(br);if(Yt(a))Bt&&(e+=dr.charAt(br)),++br;else{if(92!==a)break;Bt||(e=dr.slice(n,br)),Bt=!0,117!=dr.charCodeAt(++br)&&t(br,\"Expecting Unicode escape sequence \\\\uXXXX\"),++br;var o=S(4),i=String.fromCharCode(o);i||t(br-1,\"Invalid Unicode escape\"),(r?Qt(o):Yt(o))||t(br-4,\"Invalid Unicode escape\"),e+=i}r=!1}return Bt?e:dr.slice(n,br)}function L(){var e=I(),r=Fr;return Bt||(Wt(e)?r=lt[e]:(fr.forbidReserved&&(3===fr.ecmaVersion?Mt:zt)(e)||Tr&&Xt(e))&&t(yr,\"The keyword '\"+e+\"' is reserved\")),i(r,e)}function U(){Ir=yr,Lr=gr,Ur=kr,g()}function R(e){if(Tr=e,br=Lr,fr.locations)for(;Sr>br;)Sr=dr.lastIndexOf(\"\\n\",Sr-2)+1,--Ar;u(),g()}function V(){this.type=null,this.start=yr,this.end=null}function T(){this.start=xr,this.end=null,null!==hr&&(this.source=hr)}function q(){var e=new V;return fr.locations&&(e.loc=new T),fr.ranges&&(e.range=[yr,0]),e}function O(e){var r=new V;return r.start=e.start,fr.locations&&(r.loc=new T,r.loc.start=e.loc.start),fr.ranges&&(r.range=[e.range[0],0]),r}function j(e,r){return e.type=r,e.end=Lr,fr.locations&&(e.loc.end=Ur),fr.ranges&&(e.range[1]=Lr),e}function D(e){return fr.ecmaVersion>=5&&\"ExpressionStatement\"===e.type&&\"Literal\"===e.expression.type&&\"use strict\"===e.expression.value}function F(e){return wr===e?(U(),!0):void 0}function B(){return!fr.strictSemicolons&&(wr===Br||wr===ht||Gt.test(dr.slice(Lr,yr)))}function M(){F(yt)||B()||X()}function z(e){wr===e?U():X()}function X(){t(yr,\"Unexpected token\")}function N(e){\"Identifier\"!==e.type&&\"MemberExpression\"!==e.type&&t(e.start,\"Assigning to rvalue\"),Tr&&\"Identifier\"===e.type&&Nt(e.name)&&t(e.start,\"Assigning to \"+e.name+\" in strict mode\")}function W(e){Ir=Lr=br,fr.locations&&(Ur=new a),Rr=Tr=null,Vr=[],g();var r=e||q(),t=!0;for(e||(r.body=[]);wr!==Br;){var n=J();r.body.push(n),t&&D(n)&&R(!0),t=!1}return j(r,\"Program\")}function J(){(wr===wt||wr===Et&&\"/=\"==Cr)&&g(!0);var e=wr,r=q();switch(e){case Mr:case Nr:U();var n=e===Mr;F(yt)||B()?r.label=null:wr!==Fr?X():(r.label=lr(),M());for(var a=0;a<Vr.length;++a){var o=Vr[a];if(null==r.label||o.name===r.label.name){if(null!=o.kind&&(n||\"loop\"===o.kind))break;if(r.label&&n)break}}return a===Vr.length&&t(r.start,\"Unsyntactic \"+e.keyword),j(r,n?\"BreakStatement\":\"ContinueStatement\");case Wr:return U(),M(),j(r,\"DebuggerStatement\");case Pr:return U(),Vr.push(Zt),r.body=J(),Vr.pop(),z(tt),r.test=P(),M(),j(r,\"DoWhileStatement\");case _r:if(U(),Vr.push(Zt),z(mt),wr===yt)return $(r,null);if(wr===rt){var i=q();return U(),G(i,!0),j(i,\"VariableDeclaration\"),1===i.declarations.length&&F(ut)?_(r,i):$(r,i)}var i=K(!1,!0);return F(ut)?(N(i),_(r,i)):$(r,i);case Gr:return U(),cr(r,!0);case Kr:return U(),r.test=P(),r.consequent=J(),r.alternate=F(Hr)?J():null,j(r,\"IfStatement\");case Qr:return Rr||t(yr,\"'return' outside of function\"),U(),F(yt)||B()?r.argument=null:(r.argument=K(),M()),j(r,\"ReturnStatement\");case Yr:U(),r.discriminant=P(),r.cases=[],z(pt),Vr.push(en);for(var s,c;wr!=ht;)if(wr===zr||wr===Jr){var u=wr===zr;s&&j(s,\"SwitchCase\"),r.cases.push(s=q()),s.consequent=[],U(),u?s.test=K():(c&&t(Ir,\"Multiple default clauses\"),c=!0,s.test=null),z(gt)}else s||X(),s.consequent.push(J());return s&&j(s,\"SwitchCase\"),U(),Vr.pop(),j(r,\"SwitchStatement\");case Zr:return U(),Gt.test(dr.slice(Lr,yr))&&t(Lr,\"Illegal newline after throw\"),r.argument=K(),M(),j(r,\"ThrowStatement\");case et:if(U(),r.block=H(),r.handler=null,wr===Xr){var l=q();U(),z(mt),l.param=lr(),Tr&&Nt(l.param.name)&&t(l.param.start,\"Binding \"+l.param.name+\" in strict mode\"),z(vt),l.guard=null,l.body=H(),r.handler=j(l,\"CatchClause\")}return r.guardedHandlers=qr,r.finalizer=F($r)?H():null,r.handler||r.finalizer||t(r.start,\"Missing catch or finally clause\"),j(r,\"TryStatement\");case rt:return U(),G(r),M(),j(r,\"VariableDeclaration\");case tt:return U(),r.test=P(),Vr.push(Zt),r.body=J(),Vr.pop(),j(r,\"WhileStatement\");case nt:return Tr&&t(yr,\"'with' in strict mode\"),U(),r.object=P(),r.body=J(),j(r,\"WithStatement\");case pt:return H();case yt:return U(),j(r,\"EmptyStatement\");default:var f=Cr,d=K();if(e===Fr&&\"Identifier\"===d.type&&F(gt)){for(var a=0;a<Vr.length;++a)Vr[a].name===f&&t(d.start,\"Label '\"+f+\"' is already declared\");var p=wr.isLoop?\"loop\":wr===Yr?\"switch\":null;return Vr.push({name:f,kind:p}),r.body=J(),Vr.pop(),r.label=d,j(r,\"LabeledStatement\")}return r.expression=d,M(),j(r,\"ExpressionStatement\")}}function P(){z(mt);var e=K();return z(vt),e}function H(e){var r,t=q(),n=!0,a=!1;for(t.body=[],z(pt);!F(ht);){var o=J();t.body.push(o),n&&e&&D(o)&&(r=a,R(a=!0)),n=!1}return a&&!r&&R(!1),j(t,\"BlockStatement\")}function $(e,r){return e.init=r,z(yt),e.test=wr===yt?null:K(),z(yt),e.update=wr===vt?null:K(),z(vt),e.body=J(),Vr.pop(),j(e,\"ForStatement\")}function _(e,r){return e.left=r,e.right=K(),z(vt),e.body=J(),Vr.pop(),j(e,\"ForInStatement\")}function G(e,r){for(e.declarations=[],e.kind=\"var\";;){var n=q();if(n.id=lr(),Tr&&Nt(n.id.name)&&t(n.id.start,\"Binding \"+n.id.name+\" in strict mode\"),n.init=F(Ct)?K(!0,r):null,e.declarations.push(j(n,\"VariableDeclarator\")),!F(bt))break}return e}function K(e,r){var t=Q(r);if(!e&&wr===bt){var n=O(t);for(n.expressions=[t];F(bt);)n.expressions.push(Q(r));return j(n,\"SequenceExpression\")}return t}function Q(e){var r=Y(e);if(wr.isAssign){var t=O(r);return t.operator=Cr,t.left=r,U(),t.right=Q(e),N(r),j(t,\"AssignmentExpression\")}return r}function Y(e){var r=Z(e);if(F(kt)){var t=O(r);return t.test=r,t.consequent=K(!0),z(gt),t.alternate=K(!0,e),j(t,\"ConditionalExpression\")}return r}function Z(e){return er(rr(),-1,e)}function er(e,r,t){var n=wr.binop;if(null!=n&&(!t||wr!==ut)&&n>r){var a=O(e);a.left=e,a.operator=Cr,U(),a.right=er(rr(),n,t);var o=j(a,/&&|\\|\\|/.test(a.operator)?\"LogicalExpression\":\"BinaryExpression\");return er(o,r,t)}return e}function rr(){if(wr.prefix){var e=q(),r=wr.isUpdate;return e.operator=Cr,e.prefix=!0,Er=!0,U(),e.argument=rr(),r?N(e.argument):Tr&&\"delete\"===e.operator&&\"Identifier\"===e.argument.type&&t(e.start,\"Deleting local variable in strict mode\"),j(e,r?\"UpdateExpression\":\"UnaryExpression\")}for(var n=tr();wr.postfix&&!B();){var e=O(n);e.operator=Cr,e.prefix=!1,e.argument=n,N(n),U(),n=j(e,\"UpdateExpression\")}return n}function tr(){return nr(ar())}function nr(e,r){if(F(xt)){var t=O(e);return t.object=e,t.property=lr(!0),t.computed=!1,nr(j(t,\"MemberExpression\"),r)}if(F(ft)){var t=O(e);return t.object=e,t.property=K(),t.computed=!0,z(dt),nr(j(t,\"MemberExpression\"),r)}if(!r&&F(mt)){var t=O(e);return t.callee=e,t.arguments=ur(vt,!1),nr(j(t,\"CallExpression\"),r)}return e}function ar(){switch(wr){case ot:var e=q();return U(),j(e,\"ThisExpression\");case Fr:return lr();case Or:case Dr:case jr:var e=q();return e.value=Cr,e.raw=dr.slice(yr,gr),U(),j(e,\"Literal\");case it:case st:case ct:var e=q();return e.value=wr.atomValue,e.raw=wr.keyword,U(),j(e,\"Literal\");case mt:var r=xr,t=yr;U();var n=K();return n.start=t,n.end=gr,fr.locations&&(n.loc.start=r,n.loc.end=kr),fr.ranges&&(n.range=[t,gr]),z(vt),n;case ft:var e=q();return U(),e.elements=ur(dt,!0,!0),j(e,\"ArrayExpression\");case pt:return ir();case Gr:var e=q();return U(),cr(e,!1);case at:return or();default:X()}}function or(){var e=q();return U(),e.callee=nr(ar(),!0),e.arguments=F(mt)?ur(vt,!1):qr,j(e,\"NewExpression\")}function ir(){var e=q(),r=!0,n=!1;for(e.properties=[],U();!F(ht);){if(r)r=!1;else if(z(bt),fr.allowTrailingCommas&&F(ht))break;var a,o={key:sr()},i=!1;if(F(gt)?(o.value=K(!0),a=o.kind=\"init\"):fr.ecmaVersion>=5&&\"Identifier\"===o.key.type&&(\"get\"===o.key.name||\"set\"===o.key.name)?(i=n=!0,a=o.kind=o.key.name,o.key=sr(),wr!==mt&&X(),o.value=cr(q(),!1)):X(),\"Identifier\"===o.key.type&&(Tr||n))for(var s=0;s<e.properties.length;++s){var c=e.properties[s];if(c.key.name===o.key.name){var u=a==c.kind||i&&\"init\"===c.kind||\"init\"===a&&(\"get\"===c.kind||\"set\"===c.kind);u&&!Tr&&\"init\"===a&&\"init\"===c.kind&&(u=!1),u&&t(o.key.start,\"Redefinition of property\")}}e.properties.push(o)}return j(e,\"ObjectExpression\")}function sr(){return wr===Or||wr===Dr?ar():lr(!0)}function cr(e,r){wr===Fr?e.id=lr():r?X():e.id=null,e.params=[];var n=!0;for(z(mt);!F(vt);)n?n=!1:z(bt),e.params.push(lr());var a=Rr,o=Vr;if(Rr=!0,Vr=[],e.body=H(!0),Rr=a,Vr=o,Tr||e.body.body.length&&D(e.body.body[0]))for(var i=e.id?-1:0;i<e.params.length;++i){var s=0>i?e.id:e.params[i];if((Xt(s.name)||Nt(s.name))&&t(s.start,\"Defining '\"+s.name+\"' in strict mode\"),i>=0)for(var c=0;i>c;++c)s.name===e.params[c].name&&t(s.start,\"Argument name clash in strict mode\")}return j(e,r?\"FunctionDeclaration\":\"FunctionExpression\")}function ur(e,r,t){for(var n=[],a=!0;!F(e);){if(a)a=!1;else if(z(bt),r&&fr.allowTrailingCommas&&F(e))break;t&&wr===bt?n.push(null):n.push(K(!0))}return n}function lr(e){var r=q();return r.name=wr===Fr?Cr:e&&!fr.forbidReserved&&wr.keyword||X(),Er=!1,U(),j(r,\"Identifier\")}e.version=\"0.4.0\";var fr,dr,pr,hr;e.parse=function(e,t){return dr=String(e),pr=dr.length,r(t),o(),W(fr.program)};var mr=e.defaultOptions={ecmaVersion:5,strictSemicolons:!1,allowTrailingCommas:!0,forbidReserved:!1,locations:!1,onComment:null,ranges:!1,program:null,sourceFile:null},vr=e.getLineInfo=function(e,r){for(var t=1,n=0;;){Kt.lastIndex=n;var a=Kt.exec(e);if(!(a&&a.index<r))break;++t,n=a.index+a[0].length}return{line:t,column:r-n}};e.tokenize=function(e,t){function n(e){return g(e),a.start=yr,a.end=gr,a.startLoc=xr,a.endLoc=kr,a.type=wr,a.value=Cr,a}dr=String(e),pr=dr.length,r(t),o();var a={};return n.jumpTo=function(e,r){if(br=e,fr.locations){Ar=1,Sr=Kt.lastIndex=0;for(var t;(t=Kt.exec(dr))&&t.index<e;)++Ar,Sr=t.index+t[0].length}Er=r,u()},n};var br,yr,gr,xr,kr,wr,Cr,Er,Ar,Sr,Ir,Lr,Ur,Rr,Vr,Tr,qr=[],Or={type:\"num\"},jr={type:\"regexp\"},Dr={type:\"string\"},Fr={type:\"name\"},Br={type:\"eof\"},Mr={keyword:\"break\"},zr={keyword:\"case\",beforeExpr:!0},Xr={keyword:\"catch\"},Nr={keyword:\"continue\"},Wr={keyword:\"debugger\"},Jr={keyword:\"default\"},Pr={keyword:\"do\",isLoop:!0},Hr={keyword:\"else\",beforeExpr:!0},$r={keyword:\"finally\"},_r={keyword:\"for\",isLoop:!0},Gr={keyword:\"function\"},Kr={keyword:\"if\"},Qr={keyword:\"return\",beforeExpr:!0},Yr={keyword:\"switch\"},Zr={keyword:\"throw\",beforeExpr:!0},et={keyword:\"try\"},rt={keyword:\"var\"},tt={keyword:\"while\",isLoop:!0},nt={keyword:\"with\"},at={keyword:\"new\",beforeExpr:!0},ot={keyword:\"this\"},it={keyword:\"null\",atomValue:null},st={keyword:\"true\",atomValue:!0},ct={keyword:\"false\",atomValue:!1},ut={keyword:\"in\",binop:7,beforeExpr:!0},lt={\"break\":Mr,\"case\":zr,\"catch\":Xr,\"continue\":Nr,\"debugger\":Wr,\"default\":Jr,\"do\":Pr,\"else\":Hr,\"finally\":$r,\"for\":_r,\"function\":Gr,\"if\":Kr,\"return\":Qr,\"switch\":Yr,\"throw\":Zr,\"try\":et,\"var\":rt,\"while\":tt,\"with\":nt,\"null\":it,\"true\":st,\"false\":ct,\"new\":at,\"in\":ut,\"instanceof\":{keyword:\"instanceof\",binop:7,beforeExpr:!0},\"this\":ot,\"typeof\":{keyword:\"typeof\",prefix:!0,beforeExpr:!0},\"void\":{keyword:\"void\",prefix:!0,beforeExpr:!0},\"delete\":{keyword:\"delete\",prefix:!0,beforeExpr:!0}},ft={type:\"[\",beforeExpr:!0},dt={type:\"]\"},pt={type:\"{\",beforeExpr:!0},ht={type:\"}\"},mt={type:\"(\",beforeExpr:!0},vt={type:\")\"},bt={type:\",\",beforeExpr:!0},yt={type:\";\",beforeExpr:!0},gt={type:\":\",beforeExpr:!0},xt={type:\".\"},kt={type:\"?\",beforeExpr:!0},wt={binop:10,beforeExpr:!0},Ct={isAssign:!0,beforeExpr:!0},Et={isAssign:!0,beforeExpr:!0},At={binop:9,prefix:!0,beforeExpr:!0},St={postfix:!0,prefix:!0,isUpdate:!0},It={prefix:!0,beforeExpr:!0},Lt={binop:1,beforeExpr:!0},Ut={binop:2,beforeExpr:!0},Rt={binop:3,beforeExpr:!0},Vt={binop:4,beforeExpr:!0},Tt={binop:5,beforeExpr:!0},qt={binop:6,beforeExpr:!0},Ot={binop:7,beforeExpr:!0},jt={binop:8,beforeExpr:!0},Dt={binop:10,beforeExpr:!0};e.tokTypes={bracketL:ft,bracketR:dt,braceL:pt,braceR:ht,parenL:mt,parenR:vt,comma:bt,semi:yt,colon:gt,dot:xt,question:kt,slash:wt,eq:Ct,name:Fr,eof:Br,num:Or,regexp:jr,string:Dr};for(var Ft in lt)e.tokTypes[\"_\"+Ft]=lt[Ft];var Bt,Mt=n(\"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\"),zt=n(\"class enum extends super const export import\"),Xt=n(\"implements interface let package private protected public static yield\"),Nt=n(\"eval arguments\"),Wt=n(\"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\"),Jt=/[\\u1680\\u180e\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/,Pt=\"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\",Ht=\"\\u0300-\\u036f\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u0620-\\u0649\\u0672-\\u06d3\\u06e7-\\u06e8\\u06fb-\\u06fc\\u0730-\\u074a\\u0800-\\u0814\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0840-\\u0857\\u08e4-\\u08fe\\u0900-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962-\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09d7\\u09df-\\u09e0\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2-\\u0ae3\\u0ae6-\\u0aef\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b5f-\\u0b60\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c01-\\u0c03\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62-\\u0c63\\u0c66-\\u0c6f\\u0c82\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2-\\u0ce3\\u0ce6-\\u0cef\\u0d02\\u0d03\\u0d46-\\u0d48\\u0d57\\u0d62-\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0df2\\u0df3\\u0e34-\\u0e3a\\u0e40-\\u0e45\\u0e50-\\u0e59\\u0eb4-\\u0eb9\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f41-\\u0f47\\u0f71-\\u0f84\\u0f86-\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u1000-\\u1029\\u1040-\\u1049\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u170e-\\u1710\\u1720-\\u1730\\u1740-\\u1750\\u1772\\u1773\\u1780-\\u17b2\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u1920-\\u192b\\u1930-\\u193b\\u1951-\\u196d\\u19b0-\\u19c0\\u19c8-\\u19c9\\u19d0-\\u19d9\\u1a00-\\u1a15\\u1a20-\\u1a53\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1b46-\\u1b4b\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c00-\\u1c22\\u1c40-\\u1c49\\u1c5b-\\u1c7d\\u1cd0-\\u1cd2\\u1d00-\\u1dbe\\u1e01-\\u1f15\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2d81-\\u2d96\\u2de0-\\u2dff\\u3021-\\u3028\\u3099\\u309a\\ua640-\\ua66d\\ua674-\\ua67d\\ua69f\\ua6f0-\\ua6f1\\ua7f8-\\ua800\\ua806\\ua80b\\ua823-\\ua827\\ua880-\\ua881\\ua8b4-\\ua8c4\\ua8d0-\\ua8d9\\ua8f3-\\ua8f7\\ua900-\\ua909\\ua926-\\ua92d\\ua930-\\ua945\\ua980-\\ua983\\ua9b3-\\ua9c0\\uaa00-\\uaa27\\uaa40-\\uaa41\\uaa4c-\\uaa4d\\uaa50-\\uaa59\\uaa7b\\uaae0-\\uaae9\\uaaf2-\\uaaf3\\uabc0-\\uabe1\\uabec\\uabed\\uabf0-\\uabf9\\ufb20-\\ufb28\\ufe00-\\ufe0f\\ufe20-\\ufe26\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\",$t=new RegExp(\"[\"+Pt+\"]\"),_t=new RegExp(\"[\"+Pt+Ht+\"]\"),Gt=/[\\n\\r\\u2028\\u2029]/,Kt=/\\r\\n|[\\n\\r\\u2028\\u2029]/g,Qt=e.isIdentifierStart=function(e){return 65>e?36===e:91>e?!0:97>e?95===e:123>e?!0:e>=170&&$t.test(String.fromCharCode(e))},Yt=e.isIdentifierChar=function(e){return 48>e?36===e:58>e?!0:65>e?!1:91>e?!0:97>e?95===e:123>e?!0:e>=170&&_t.test(String.fromCharCode(e))},Zt={kind:\"loop\"},en={kind:\"switch\"}});\n\t\n\t\tvar binaryOperators = {\n\t\t\t'+': '__add',\n\t\t\t'-': '__subtract',\n\t\t\t'*': '__multiply',\n\t\t\t'/': '__divide',\n\t\t\t'%': '__modulo',\n\t\t\t'==': 'equals',\n\t\t\t'!=': 'equals'\n\t\t};\n\t\n\t\tvar unaryOperators = {\n\t\t\t'-': '__negate',\n\t\t\t'+': null\n\t\t};\n\t\n\t\tvar fields = Base.each(\n\t\t\t['add', 'subtract', 'multiply', 'divide', 'modulo', 'negate'],\n\t\t\tfunction(name) {\n\t\t\t\tthis['__' + name] = '#' + name;\n\t\t\t},\n\t\t\t{}\n\t\t);\n\t\tPoint.inject(fields);\n\t\tSize.inject(fields);\n\t\tColor.inject(fields);\n\t\n\t\tfunction __$__(left, operator, right) {\n\t\t\tvar handler = binaryOperators[operator];\n\t\t\tif (left && left[handler]) {\n\t\t\t\tvar res = left[handler](right);\n\t\t\t\treturn operator === '!=' ? !res : res;\n\t\t\t}\n\t\t\tswitch (operator) {\n\t\t\tcase '+': return left + right;\n\t\t\tcase '-': return left - right;\n\t\t\tcase '*': return left * right;\n\t\t\tcase '/': return left / right;\n\t\t\tcase '%': return left % right;\n\t\t\tcase '==': return left == right;\n\t\t\tcase '!=': return left != right;\n\t\t\t}\n\t\t}\n\t\n\t\tfunction $__(operator, value) {\n\t\t\tvar handler = unaryOperators[operator];\n\t\t\tif (handler && value && value[handler])\n\t\t\t\treturn value[handler]();\n\t\t\tswitch (operator) {\n\t\t\tcase '+': return +value;\n\t\t\tcase '-': return -value;\n\t\t\t}\n\t\t}\n\t\n\t\tfunction parse(code, options) {\n\t\t\treturn scope.acorn.parse(code, options);\n\t\t}\n\t\n\t\tfunction compile(code, url, options) {\n\t\t\tif (!code)\n\t\t\t\treturn '';\n\t\t\toptions = options || {};\n\t\t\turl = url || '';\n\t\n\t\t\tvar insertions = [];\n\t\n\t\t\tfunction getOffset(offset) {\n\t\t\t\tfor (var i = 0, l = insertions.length; i < l; i++) {\n\t\t\t\t\tvar insertion = insertions[i];\n\t\t\t\t\tif (insertion[0] >= offset)\n\t\t\t\t\t\tbreak;\n\t\t\t\t\toffset += insertion[1];\n\t\t\t\t}\n\t\t\t\treturn offset;\n\t\t\t}\n\t\n\t\t\tfunction getCode(node) {\n\t\t\t\treturn code.substring(getOffset(node.range[0]),\n\t\t\t\t\t\tgetOffset(node.range[1]));\n\t\t\t}\n\t\n\t\t\tfunction getBetween(left, right) {\n\t\t\t\treturn code.substring(getOffset(left.range[1]),\n\t\t\t\t\t\tgetOffset(right.range[0]));\n\t\t\t}\n\t\n\t\t\tfunction replaceCode(node, str) {\n\t\t\t\tvar start = getOffset(node.range[0]),\n\t\t\t\t\tend = getOffset(node.range[1]),\n\t\t\t\t\tinsert = 0;\n\t\t\t\tfor (var i = insertions.length - 1; i >= 0; i--) {\n\t\t\t\t\tif (start > insertions[i][0]) {\n\t\t\t\t\t\tinsert = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tinsertions.splice(insert, 0, [start, str.length - end + start]);\n\t\t\t\tcode = code.substring(0, start) + str + code.substring(end);\n\t\t\t}\n\t\n\t\t\tfunction walkAST(node, parent) {\n\t\t\t\tif (!node)\n\t\t\t\t\treturn;\n\t\t\t\tfor (var key in node) {\n\t\t\t\t\tif (key === 'range' || key === 'loc')\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tvar value = node[key];\n\t\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\t\tfor (var i = 0, l = value.length; i < l; i++)\n\t\t\t\t\t\t\twalkAST(value[i], node);\n\t\t\t\t\t} else if (value && typeof value === 'object') {\n\t\t\t\t\t\twalkAST(value, node);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tswitch (node.type) {\n\t\t\t\tcase 'UnaryExpression':\n\t\t\t\t\tif (node.operator in unaryOperators\n\t\t\t\t\t\t\t&& node.argument.type !== 'Literal') {\n\t\t\t\t\t\tvar arg = getCode(node.argument);\n\t\t\t\t\t\treplaceCode(node, '$__(\"' + node.operator + '\", '\n\t\t\t\t\t\t\t\t+ arg + ')');\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'BinaryExpression':\n\t\t\t\t\tif (node.operator in binaryOperators\n\t\t\t\t\t\t\t&& node.left.type !== 'Literal') {\n\t\t\t\t\t\tvar left = getCode(node.left),\n\t\t\t\t\t\t\tright = getCode(node.right),\n\t\t\t\t\t\t\tbetween = getBetween(node.left, node.right),\n\t\t\t\t\t\t\toperator = node.operator;\n\t\t\t\t\t\treplaceCode(node, '__$__(' + left + ','\n\t\t\t\t\t\t\t\t+ between.replace(new RegExp('\\\\' + operator),\n\t\t\t\t\t\t\t\t\t'\"' + operator + '\"')\n\t\t\t\t\t\t\t\t+ ', ' + right + ')');\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'UpdateExpression':\n\t\t\t\tcase 'AssignmentExpression':\n\t\t\t\t\tvar parentType = parent && parent.type;\n\t\t\t\t\tif (!(\n\t\t\t\t\t\t\tparentType === 'ForStatement'\n\t\t\t\t\t\t\t|| parentType === 'BinaryExpression'\n\t\t\t\t\t\t\t\t&& /^[=!<>]/.test(parent.operator)\n\t\t\t\t\t\t\t|| parentType === 'MemberExpression' && parent.computed\n\t\t\t\t\t)) {\n\t\t\t\t\t\tif (node.type === 'UpdateExpression') {\n\t\t\t\t\t\t\tvar arg = getCode(node.argument),\n\t\t\t\t\t\t\t\texp = '__$__(' + arg + ', \"' + node.operator[0]\n\t\t\t\t\t\t\t\t\t\t+ '\", 1)',\n\t\t\t\t\t\t\t\tstr = arg + ' = ' + exp;\n\t\t\t\t\t\t\tif (!node.prefix\n\t\t\t\t\t\t\t\t\t&& (parentType === 'AssignmentExpression'\n\t\t\t\t\t\t\t\t\t\t|| parentType === 'VariableDeclarator')) {\n\t\t\t\t\t\t\t\tif (getCode(parent.left || parent.id) === arg)\n\t\t\t\t\t\t\t\t\tstr = exp;\n\t\t\t\t\t\t\t\tstr = arg + '; ' + str;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treplaceCode(node, str);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (/^.=$/.test(node.operator)\n\t\t\t\t\t\t\t\t\t&& node.left.type !== 'Literal') {\n\t\t\t\t\t\t\t\tvar left = getCode(node.left),\n\t\t\t\t\t\t\t\t\tright = getCode(node.right);\n\t\t\t\t\t\t\t\treplaceCode(node, left + ' = __$__(' + left + ', \"'\n\t\t\t\t\t\t\t\t\t\t+ node.operator[0] + '\", ' + right + ')');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar sourceMap = null,\n\t\t\t\tbrowser = paper.browser,\n\t\t\t\tversion = browser.versionNumber,\n\t\t\t\tlineBreaks = /\\r\\n|\\n|\\r/mg;\n\t\t\tif (browser.chrome && version >= 30\n\t\t\t\t\t|| browser.webkit && version >= 537.76\n\t\t\t\t\t|| browser.firefox && version >= 23) {\n\t\t\t\tvar offset = 0;\n\t\t\t\tif (window.location.href.indexOf(url) === 0) {\n\t\t\t\t\tvar html = document.getElementsByTagName('html')[0].innerHTML;\n\t\t\t\t\toffset = html.substr(0, html.indexOf(code) + 1).match(\n\t\t\t\t\t\t\tlineBreaks).length + 1;\n\t\t\t\t}\n\t\t\t\tvar mappings = ['AAAA'];\n\t\t\t\tmappings.length = (code.match(lineBreaks) || []).length + 1 + offset;\n\t\t\t\tsourceMap = {\n\t\t\t\t\tversion: 3,\n\t\t\t\t\tfile: url,\n\t\t\t\t\tnames:[],\n\t\t\t\t\tmappings: mappings.join(';AACA'),\n\t\t\t\t\tsourceRoot: '',\n\t\t\t\t\tsources: [url]\n\t\t\t\t};\n\t\t\t\tvar source = options.source || !url && code;\n\t\t\t\tif (source)\n\t\t\t\t\tsourceMap.sourcesContent = [source];\n\t\t\t}\n\t\t\twalkAST(parse(code, { ranges: true }));\n\t\t\tif (sourceMap) {\n\t\t\t\tcode = new Array(offset + 1).join('\\n') + code\n\t\t\t\t\t\t+ \"\\n//# sourceMappingURL=data:application/json;base64,\"\n\t\t\t\t\t\t+ (btoa(unescape(encodeURIComponent(\n\t\t\t\t\t\t\tJSON.stringify(sourceMap)))))\n\t\t\t\t\t\t+ \"\\n//# sourceURL=\" + (url || 'paperscript');\n\t\t\t}\n\t\t\treturn code;\n\t\t}\n\t\n\t\tfunction execute(code, scope, url, options) {\n\t\t\tpaper = scope;\n\t\t\tvar view = scope.getView(),\n\t\t\t\ttool = /\\s+on(?:Key|Mouse)(?:Up|Down|Move|Drag)\\b/.test(code)\n\t\t\t\t\t\t? new Tool()\n\t\t\t\t\t\t: null,\n\t\t\t\ttoolHandlers = tool ? tool._events : [],\n\t\t\t\thandlers = ['onFrame', 'onResize'].concat(toolHandlers),\n\t\t\t\tparams = [],\n\t\t\t\targs = [],\n\t\t\t\tfunc;\n\t\t\tcode = compile(code, url, options);\n\t\t\tfunction expose(scope, hidden) {\n\t\t\t\tfor (var key in scope) {\n\t\t\t\t\tif ((hidden || !/^_/.test(key)) && new RegExp('([\\\\b\\\\s\\\\W]|^)'\n\t\t\t\t\t\t\t+ key.replace(/\\$/g, '\\\\$') + '\\\\b').test(code)) {\n\t\t\t\t\t\tparams.push(key);\n\t\t\t\t\t\targs.push(scope[key]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\texpose({ __$__: __$__, $__: $__, paper: scope, view: view, tool: tool },\n\t\t\t\t\ttrue);\n\t\t\texpose(scope);\n\t\t\thandlers = Base.each(handlers, function(key) {\n\t\t\t\tif (new RegExp('\\\\s+' + key + '\\\\b').test(code)) {\n\t\t\t\t\tparams.push(key);\n\t\t\t\t\tthis.push(key + ': ' + key);\n\t\t\t\t}\n\t\t\t}, []).join(', ');\n\t\t\tif (handlers)\n\t\t\t\tcode += '\\nreturn { ' + handlers + ' };';\n\t\t\tvar browser = paper.browser;\n\t\t\tif (browser.chrome || browser.firefox) {\n\t\t\t\tvar script = document.createElement('script'),\n\t\t\t\t\thead = document.head || document.getElementsByTagName('head')[0];\n\t\t\t\tif (browser.firefox)\n\t\t\t\t\tcode = '\\n' + code;\n\t\t\t\tscript.appendChild(document.createTextNode(\n\t\t\t\t\t'paper._execute = function(' + params + ') {' + code + '\\n}'\n\t\t\t\t));\n\t\t\t\thead.appendChild(script);\n\t\t\t\tfunc = paper._execute;\n\t\t\t\tdelete paper._execute;\n\t\t\t\thead.removeChild(script);\n\t\t\t} else {\n\t\t\t\tfunc = Function(params, code);\n\t\t\t}\n\t\t\tvar res = func.apply(scope, args) || {};\n\t\t\tBase.each(toolHandlers, function(key) {\n\t\t\t\tvar value = res[key];\n\t\t\t\tif (value)\n\t\t\t\t\ttool[key] = value;\n\t\t\t});\n\t\t\tif (view) {\n\t\t\t\tif (res.onResize)\n\t\t\t\t\tview.setOnResize(res.onResize);\n\t\t\t\tview.emit('resize', {\n\t\t\t\t\tsize: view.size,\n\t\t\t\t\tdelta: new Point()\n\t\t\t\t});\n\t\t\t\tif (res.onFrame)\n\t\t\t\t\tview.setOnFrame(res.onFrame);\n\t\t\t\tview.update();\n\t\t\t}\n\t\t}\n\t\n\t\tfunction loadScript(script) {\n\t\t\tif (/^text\\/(?:x-|)paperscript$/.test(script.type)\n\t\t\t\t\t&& PaperScope.getAttribute(script, 'ignore') !== 'true') {\n\t\t\t\tvar canvasId = PaperScope.getAttribute(script, 'canvas'),\n\t\t\t\t\tcanvas = document.getElementById(canvasId),\n\t\t\t\t\tsrc = script.src || script.getAttribute('data-src'),\n\t\t\t\t\tasync = PaperScope.hasAttribute(script, 'async'),\n\t\t\t\t\tscopeAttribute = 'data-paper-scope';\n\t\t\t\tif (!canvas)\n\t\t\t\t\tthrow new Error('Unable to find canvas with id \"'\n\t\t\t\t\t\t\t+ canvasId + '\"');\n\t\t\t\tvar scope = PaperScope.get(canvas.getAttribute(scopeAttribute))\n\t\t\t\t\t\t\t|| new PaperScope().setup(canvas);\n\t\t\t\tcanvas.setAttribute(scopeAttribute, scope._id);\n\t\t\t\tif (src) {\n\t\t\t\t\tHttp.request('get', src, function(code) {\n\t\t\t\t\t\texecute(code, scope, src);\n\t\t\t\t\t}, async);\n\t\t\t\t} else {\n\t\t\t\t\texecute(script.innerHTML, scope, script.baseURI);\n\t\t\t\t}\n\t\t\t\tscript.setAttribute('data-paper-ignore', 'true');\n\t\t\t\treturn scope;\n\t\t\t}\n\t\t}\n\t\n\t\tfunction loadAll() {\n\t\t\tBase.each(document.getElementsByTagName('script'), loadScript);\n\t\t}\n\t\n\t\tfunction load(script) {\n\t\t\treturn script ? loadScript(script) : loadAll();\n\t\t}\n\t\n\t\tif (document.readyState === 'complete') {\n\t\t\tsetTimeout(loadAll);\n\t\t} else {\n\t\t\tDomEvent.add(window, { load: loadAll });\n\t\t}\n\t\n\t\treturn {\n\t\t\tcompile: compile,\n\t\t\texecute: execute,\n\t\t\tload: load,\n\t\t\tparse: parse\n\t\t};\n\t\n\t}).call(this);\n\t\n\tpaper = new (PaperScope.inject(Base.exports, {\n\t\tenumerable: true,\n\t\tBase: Base,\n\t\tNumerical: Numerical,\n\t\tKey: Key\n\t}))();\n\t\n\tif (true) {\n\t\t!(__WEBPACK_AMD_DEFINE_FACTORY__ = (paper), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else if (typeof module === 'object' && module) {\n\t\tmodule.exports = paper;\n\t}\n\t\n\treturn paper;\n\t};\n\n\n/***/ },\n/* 2 */\n/*!*********************!*\\\n  !*** ./_js/Game.js ***!\n  \\*********************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tvar _objectsTargetJs = __webpack_require__(/*! ./objects/Target.js */ 3);\n\t\n\tvar _objectsTargetJs2 = _interopRequireDefault(_objectsTargetJs);\n\t\n\tvar paper = __webpack_require__(/*! paper */ 1);\n\t\n\tvar Game = (function () {\n\t  function Game(socket) {\n\t    var _this = this;\n\t\n\t    _classCallCheck(this, Game);\n\t\n\t    this.socket = socket;\n\t    this.holdProgress = 0;\n\t    this.nextBall = 0;\n\t    this.started = false;\n\t\n\t    socket.on('leftHandDown', function () {\n\t      createjs.Tween.get(_this.leftArm, { loop: false }).to({ rotation: 40 }, 250, createjs.Ease.elasticOut).to({ rotation: 0 }, 400, createjs.Ease.elasticOut);\n\t    });\n\t\n\t    socket.on('rightHandDown', function () {\n\t      createjs.Tween.get(_this.rightArm, { loop: false }).to({ rotation: -40 }, 250, createjs.Ease.elasticOut).to({ rotation: 0 }, 400, createjs.Ease.elasticOut);\n\t    });\n\t\n\t    socket.on('leftFootDown', function () {\n\t      createjs.Tween.get(_this.leftLeg, { loop: false }).to({ rotation: 20 }, 250, createjs.Ease.elasticOut).to({ rotation: 0 }, 400, createjs.Ease.elasticOut);\n\t    });\n\t\n\t    socket.on('rightFootDown', function () {\n\t      createjs.Tween.get(_this.rightLeg, { loop: false }).to({ rotation: -20 }, 250, createjs.Ease.elasticOut).to({ rotation: 0 }, 400, createjs.Ease.elasticOut);\n\t    });\n\t\n\t    socket.on('startHold', function () {\n\t      if (_this.holdProgress === 4) {\n\t        _this.started = true;\n\t      } else if (_this.holdProgress < 4) {\n\t        _this.holdProgress++;\n\t        _this.progressUpdate();\n\t      }\n\t    });\n\t\n\t    socket.on('startUp', function () {\n\t      _this.holdProgress = 0;\n\t      _this.progressUpdate();\n\t    });\n\t\n\t    // ****************************** Intro Setup *******************************\n\t    this.gameSetup();\n\t    this.button = new Path.Circle(new Point(800, 200), 70);\n\t    this.button.fillColor = '#26b29a';\n\t    this.progress = new Path.Circle(new Point(800, 200), 80);\n\t    this.progress.strokeWidth = 0;\n\t    this.progress.strokeColor = '#1a8570';\n\t  }\n\t\n\t  _createClass(Game, [{\n\t    key: 'introSetup',\n\t    value: function introSetup() {\n\t      var _this2 = this;\n\t\n\t      this.introLayer = project.activeLayer;\n\t\n\t      var bg = new Path();\n\t      bg.importSVG(document.getElementById('intro'));\n\t\n\t      var startButton = new Path.Circle({\n\t        center: [860, 250],\n\t        radius: 50\n\t      });\n\t      startButton.fillColor = '#26b29a';\n\t      startButton.strokeColor = '#1a8570';\n\t      startButton.strokeWidth = 6;\n\t\n\t      this.socket.on('startDown', function () {\n\t        startButton.fillColor = '#2ec6a8';\n\t        paper.view.draw();\n\t      });\n\t\n\t      this.socket.on('startUp', function () {\n\t        startButton.fillColor = '#26b29a';\n\t        _this2.introLayer.visible = false;\n\t        _this2.gameSetup();\n\t        paper.view.draw();\n\t      });\n\t    }\n\t  }, {\n\t    key: 'progressUpdate',\n\t    value: function progressUpdate() {\n\t      createjs.Tween.get(this.progress, { loop: false, override: true }).to({ strokeWidth: this.holdProgress * 5 }, 250, createjs.Ease.easeOut);\n\t    }\n\t  }, {\n\t    key: 'gameSetup',\n\t    value: function gameSetup() {\n\t      var _this3 = this;\n\t\n\t      this.gameLayer = new Layer();\n\t      this.bg = project.importSVG(document.getElementById('bg'));\n\t\n\t      this.head = project.importSVG(document.getElementById('head'));\n\t      this.rightArm = project.importSVG(document.getElementById('arm'));\n\t      this.leftArm = this.rightArm.clone();\n\t      this.leftArm.scale(-1, 1);\n\t      this.torso = project.importSVG(document.getElementById('torso'));\n\t\n\t      this.rightLeg = project.importSVG(document.getElementById('leg'));\n\t      this.leftLeg = this.rightLeg.clone();\n\t      this.leftLeg.scale(-1, 1);\n\t\n\t      this.leftHandLane = project.importSVG(document.getElementById('target-lane'));\n\t      this.rightHandLane = this.leftHandLane.clone();\n\t\n\t      var metrumY = 500;\n\t      this.head.position = new Point(paper.view.center.x, metrumY - 260);\n\t      this.torso.position = new Point(paper.view.center.x, metrumY);\n\t\n\t      this.leftLeg.position = new Point(paper.view.center.x - 40, metrumY + 150);\n\t      this.leftLeg.pivot = new Point(paper.view.center.x - 40, metrumY + 75);\n\t\n\t      this.rightLeg.position = new Point(paper.view.center.x + 40, metrumY + 150);\n\t      this.rightLeg.pivot = new Point(paper.view.center.x + 40, metrumY + 75);\n\t\n\t      this.leftArm.position = new Point(paper.view.center.x - 105, metrumY + 30);\n\t      this.leftArm.pivot = new Point(paper.view.center.x - 80, metrumY - 50);\n\t\n\t      this.rightArm.position = new Point(paper.view.center.x + 105, metrumY + 30);\n\t      this.rightArm.pivot = new Point(paper.view.center.x + 80, metrumY - 50);\n\t\n\t      this.leftHandLane.position = new Point(paper.view.center.x + 214, metrumY + 34);\n\t      this.leftHandLane.pivot = new Point(paper.view.center.x - 177, metrumY + 34);\n\t      this.leftHandLane.rotation = 200;\n\t      this.leftHandLane.opacity = 0.7;\n\t      this.leftHandLane.insertAbove(this.bg);\n\t\n\t      this.rightHandLane.position = new Point(paper.view.center.x + 570, metrumY + 34);\n\t      this.rightHandLane.pivot = new Point(paper.view.center.x + 177, metrumY + 34);\n\t      this.rightHandLane.rotation = -20;\n\t      this.rightHandLane.opacity = 0.7;\n\t      this.rightHandLane.insertAbove(this.bg);\n\t\n\t      createjs.Ticker.setFPS(60);\n\t      createjs.Ticker.addEventListener('tick', this.update);\n\t\n\t      paper.view.onFrame = function (event) {\n\t        _this3.onFrame(event);\n\t      };\n\t    }\n\t  }, {\n\t    key: 'onFrame',\n\t    value: function onFrame(e) {\n\t      if (e.time > this.nextBall && this.started === true) {\n\t        this.nextBall = e.time + Math.random() + 1.5;\n\t        this.launchBall();\n\t      }\n\t    }\n\t  }, {\n\t    key: 'launchBall',\n\t    value: function launchBall() {\n\t      var ball = new _objectsTargetJs2['default'](-40, 400);\n\t      createjs.Tween.get(ball.position, { loop: false }).to({ x: paper.view.center.x - 177, y: 500 + 34 }, 2500, createjs.Ease.cubicIn);\n\t    }\n\t  }, {\n\t    key: 'update',\n\t    value: function update() {\n\t      paper.view.draw();\n\t    }\n\t  }]);\n\t\n\t  return Game;\n\t})();\n\t\n\texports['default'] = Game;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 3 */\n/*!*******************************!*\\\n  !*** ./_js/objects/Target.js ***!\n  \\*******************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\tvar paper = __webpack_require__(/*! paper */ 1);\n\t\n\t// class Target extends paper.Path {\n\t\n\t//   constructor(x, y) {\n\t//     super();\n\t\n\t//     Path.Circle(new Point(x, y), 50);\n\t//     this.fillColor = 'black';\n\t\n\t//     //this.up();\n\t//   }\n\t\n\t//   // down() {\n\t//   //   this.clear();\n\t//   //   this.beginFill(0xffffff, 1);\n\t//   //   this.lineStyle(5, 0xc17b27, 0.8);\n\t//   //   this.drawCircle(0, 0, this.radius);\n\t//   // }\n\t\n\t//   // up() {\n\t//   //   this.clear();\n\t//   //   this.beginFill(0xffffff, 0.1);\n\t//   //   this.lineStyle(5, 0xc17b27, 0.8);\n\t//   //   this.drawCircle(0, 0, this.radius);\n\t//   // }\n\t\n\t//   // over() {\n\t//   //   this.clear();\n\t//   //   this.beginFill(0xff0000, 1);\n\t//   //   this.lineStyle(5, 0xc17b27, 0.8);\n\t//   //   this.drawCircle(0, 0, this.radius);\n\t//   // }\n\t\n\t//   // poof() {\n\t//   //   return new Promise((resolve) => {\n\t//   //     this.game.time.events.add(750, () => {\n\t//   //       this.kill();\n\t//   //       resolve();\n\t//   //     }, this);\n\t//   //   });\n\t//   // }\n\t\n\t//   // hit () {\n\t//   //   this.clear();\n\t//   //   this.beginFill(0x00FF00, 1);\n\t//   //   this.lineStyle(5, 0xc17b27, 0.8);\n\t//   //   this.drawCircle(0, 0, this.radius);\n\t//   // }\n\t\n\t// }\n\t\n\tvar TargetFactory = function TargetFactory(x, y) {\n\t  var target = new paper.Path.Circle(new Point(x, y), 20);\n\t  target.fillColor = 'white';\n\t\n\t  return target;\n\t};\n\t\n\texports['default'] = TargetFactory;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 4 */\n/*!***********************!*\\\n  !*** ./_js/script.js ***!\n  \\***********************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _GameJs = __webpack_require__(/*! ./Game.js */ 2);\n\t\n\tvar _GameJs2 = _interopRequireDefault(_GameJs);\n\t\n\tvar paper = __webpack_require__(/*! paper */ 1);\n\t\n\tpaper.install(window);\n\t\n\tvar socket = undefined;\n\tsocket = io('http://localhost:3000');\n\t\n\tvar init = function init() {\n\t  paper.setup('gameContainer');\n\t  new _GameJs2['default'](socket);\n\t  document.getElementById('gameContainer').addEventListener('click', fullScreen);\n\t};\n\t\n\tvar fullScreen = function fullScreen() {\n\t  var el = document.getElementById('gameContainer');\n\t\n\t  if (el.webkitRequestFullScreen) {\n\t    el.webkitRequestFullScreen();\n\t  } else {\n\t    el.mozRequestFullScreen();\n\t  }\n\t};\n\t\n\twindow.onload = function () {\n\t  init();\n\t};\n\n/***/ },\n/* 5 */\n/*!**************************!*\\\n  !*** ./_scss/style.scss ***!\n  \\**************************/\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** script.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap d7664601fad4bdfb6e68\n **/","/*!\n * Paper.js v0.9.25 - The Swiss Army Knife of Vector Graphics Scripting.\n * http://paperjs.org/\n *\n * Copyright (c) 2011 - 2014, Juerg Lehni & Jonathan Puckey\n * http://scratchdisk.com/ & http://jonathanpuckey.com/\n *\n * Distributed under the MIT license. See LICENSE file for details.\n *\n * All rights reserved.\n *\n * Date: Sun Oct 25 11:23:38 2015 +0100\n *\n ***\n *\n * Straps.js - Class inheritance library with support for bean-style accessors\n *\n * Copyright (c) 2006 - 2013 Juerg Lehni\n * http://scratchdisk.com/\n *\n * Distributed under the MIT license.\n *\n ***\n *\n * Acorn.js\n * http://marijnhaverbeke.nl/acorn/\n *\n * Acorn is a tiny, fast JavaScript parser written in JavaScript,\n * created by Marijn Haverbeke and released under an MIT license.\n *\n */\n\nvar paper = new function(undefined) {\n\nvar Base = new function() {\n\tvar hidden = /^(statics|enumerable|beans|preserve)$/,\n\n\t\tforEach = [].forEach || function(iter, bind) {\n\t\t\tfor (var i = 0, l = this.length; i < l; i++)\n\t\t\t\titer.call(bind, this[i], i, this);\n\t\t},\n\n\t\tforIn = function(iter, bind) {\n\t\t\tfor (var i in this)\n\t\t\t\tif (this.hasOwnProperty(i))\n\t\t\t\t\titer.call(bind, this[i], i, this);\n\t\t},\n\n\t\tcreate = Object.create || function(proto) {\n\t\t\treturn { __proto__: proto };\n\t\t},\n\n\t\tdescribe = Object.getOwnPropertyDescriptor || function(obj, name) {\n\t\t\tvar get = obj.__lookupGetter__ && obj.__lookupGetter__(name);\n\t\t\treturn get\n\t\t\t\t\t? { get: get, set: obj.__lookupSetter__(name),\n\t\t\t\t\t\tenumerable: true, configurable: true }\n\t\t\t\t\t: obj.hasOwnProperty(name)\n\t\t\t\t\t\t? { value: obj[name], enumerable: true,\n\t\t\t\t\t\t\tconfigurable: true, writable: true }\n\t\t\t\t\t\t: null;\n\t\t},\n\n\t\t_define = Object.defineProperty || function(obj, name, desc) {\n\t\t\tif ((desc.get || desc.set) && obj.__defineGetter__) {\n\t\t\t\tif (desc.get)\n\t\t\t\t\tobj.__defineGetter__(name, desc.get);\n\t\t\t\tif (desc.set)\n\t\t\t\t\tobj.__defineSetter__(name, desc.set);\n\t\t\t} else {\n\t\t\t\tobj[name] = desc.value;\n\t\t\t}\n\t\t\treturn obj;\n\t\t},\n\n\t\tdefine = function(obj, name, desc) {\n\t\t\tdelete obj[name];\n\t\t\treturn _define(obj, name, desc);\n\t\t};\n\n\tfunction inject(dest, src, enumerable, beans, preserve) {\n\t\tvar beansNames = {};\n\n\t\tfunction field(name, val) {\n\t\t\tval = val || (val = describe(src, name))\n\t\t\t\t\t&& (val.get ? val : val.value);\n\t\t\tif (typeof val === 'string' && val[0] === '#')\n\t\t\t\tval = dest[val.substring(1)] || val;\n\t\t\tvar isFunc = typeof val === 'function',\n\t\t\t\tres = val,\n\t\t\t\tprev = preserve || isFunc && !val.base\n\t\t\t\t\t\t? (val && val.get ? name in dest : dest[name])\n\t\t\t\t\t\t: null,\n\t\t\t\tbean;\n\t\t\tif (!preserve || !prev) {\n\t\t\t\tif (isFunc && prev)\n\t\t\t\t\tval.base = prev;\n\t\t\t\tif (isFunc && beans !== false\n\t\t\t\t\t\t&& (bean = name.match(/^([gs]et|is)(([A-Z])(.*))$/)))\n\t\t\t\t\tbeansNames[bean[3].toLowerCase() + bean[4]] = bean[2];\n\t\t\t\tif (!res || isFunc || !res.get || typeof res.get !== 'function'\n\t\t\t\t\t\t|| !Base.isPlainObject(res))\n\t\t\t\t\tres = { value: res, writable: true };\n\t\t\t\tif ((describe(dest, name)\n\t\t\t\t\t\t|| { configurable: true }).configurable) {\n\t\t\t\t\tres.configurable = true;\n\t\t\t\t\tres.enumerable = enumerable;\n\t\t\t\t}\n\t\t\t\tdefine(dest, name, res);\n\t\t\t}\n\t\t}\n\t\tif (src) {\n\t\t\tfor (var name in src) {\n\t\t\t\tif (src.hasOwnProperty(name) && !hidden.test(name))\n\t\t\t\t\tfield(name);\n\t\t\t}\n\t\t\tfor (var name in beansNames) {\n\t\t\t\tvar part = beansNames[name],\n\t\t\t\t\tset = dest['set' + part],\n\t\t\t\t\tget = dest['get' + part] || set && dest['is' + part];\n\t\t\t\tif (get && (beans === true || get.length === 0))\n\t\t\t\t\tfield(name, { get: get, set: set });\n\t\t\t}\n\t\t}\n\t\treturn dest;\n\t}\n\n\tfunction each(obj, iter, bind) {\n\t\tif (obj)\n\t\t\t('length' in obj && !obj.getLength\n\t\t\t\t\t&& typeof obj.length === 'number'\n\t\t\t\t? forEach\n\t\t\t\t: forIn).call(obj, iter, bind = bind || obj);\n\t\treturn bind;\n\t}\n\n\tfunction set(obj, props, exclude) {\n\t\tfor (var key in props)\n\t\t\tif (props.hasOwnProperty(key) && !(exclude && exclude[key]))\n\t\t\t\tobj[key] = props[key];\n\t\treturn obj;\n\t}\n\n\treturn inject(function Base() {\n\t\tfor (var i = 0, l = arguments.length; i < l; i++)\n\t\t\tset(this, arguments[i]);\n\t}, {\n\t\tinject: function(src) {\n\t\t\tif (src) {\n\t\t\t\tvar statics = src.statics === true ? src : src.statics,\n\t\t\t\t\tbeans = src.beans,\n\t\t\t\t\tpreserve = src.preserve;\n\t\t\t\tif (statics !== src)\n\t\t\t\t\tinject(this.prototype, src, src.enumerable, beans, preserve);\n\t\t\t\tinject(this, statics, true, beans, preserve);\n\t\t\t}\n\t\t\tfor (var i = 1, l = arguments.length; i < l; i++)\n\t\t\t\tthis.inject(arguments[i]);\n\t\t\treturn this;\n\t\t},\n\n\t\textend: function() {\n\t\t\tvar base = this,\n\t\t\t\tctor,\n\t\t\t\tproto;\n\t\t\tfor (var i = 0, l = arguments.length; i < l; i++)\n\t\t\t\tif (ctor = arguments[i].initialize)\n\t\t\t\t\tbreak;\n\t\t\tctor = ctor || function() {\n\t\t\t\tbase.apply(this, arguments);\n\t\t\t};\n\t\t\tproto = ctor.prototype = create(this.prototype);\n\t\t\tdefine(proto, 'constructor',\n\t\t\t\t\t{ value: ctor, writable: true, configurable: true });\n\t\t\tinject(ctor, this, true);\n\t\t\tif (arguments.length)\n\t\t\t\tthis.inject.apply(ctor, arguments);\n\t\t\tctor.base = base;\n\t\t\treturn ctor;\n\t\t}\n\t}, true).inject({\n\t\tinject: function() {\n\t\t\tfor (var i = 0, l = arguments.length; i < l; i++) {\n\t\t\t\tvar src = arguments[i];\n\t\t\t\tif (src)\n\t\t\t\t\tinject(this, src, src.enumerable, src.beans, src.preserve);\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\n\t\textend: function() {\n\t\t\tvar res = create(this);\n\t\t\treturn res.inject.apply(res, arguments);\n\t\t},\n\n\t\teach: function(iter, bind) {\n\t\t\treturn each(this, iter, bind);\n\t\t},\n\n\t\tset: function(props) {\n\t\t\treturn set(this, props);\n\t\t},\n\n\t\tclone: function() {\n\t\t\treturn new this.constructor(this);\n\t\t},\n\n\t\tstatics: {\n\t\t\teach: each,\n\t\t\tcreate: create,\n\t\t\tdefine: define,\n\t\t\tdescribe: describe,\n\t\t\tset: set,\n\n\t\t\tclone: function(obj) {\n\t\t\t\treturn set(new obj.constructor(), obj);\n\t\t\t},\n\n\t\t\tisPlainObject: function(obj) {\n\t\t\t\tvar ctor = obj != null && obj.constructor;\n\t\t\t\treturn ctor && (ctor === Object || ctor === Base\n\t\t\t\t\t\t|| ctor.name === 'Object');\n\t\t\t},\n\n\t\t\tpick: function(a, b) {\n\t\t\t\treturn a !== undefined ? a : b;\n\t\t\t}\n\t\t}\n\t});\n};\n\nif (typeof module !== 'undefined')\n\tmodule.exports = Base;\n\nBase.inject({\n\ttoString: function() {\n\t\treturn this._id != null\n\t\t\t?  (this._class || 'Object') + (this._name\n\t\t\t\t? \" '\" + this._name + \"'\"\n\t\t\t\t: ' @' + this._id)\n\t\t\t: '{ ' + Base.each(this, function(value, key) {\n\t\t\t\tif (!/^_/.test(key)) {\n\t\t\t\t\tvar type = typeof value;\n\t\t\t\t\tthis.push(key + ': ' + (type === 'number'\n\t\t\t\t\t\t\t? Formatter.instance.number(value)\n\t\t\t\t\t\t\t: type === 'string' ? \"'\" + value + \"'\" : value));\n\t\t\t\t}\n\t\t\t}, []).join(', ') + ' }';\n\t},\n\n\tgetClassName: function() {\n\t\treturn this._class || '';\n\t},\n\n\texportJSON: function(options) {\n\t\treturn Base.exportJSON(this, options);\n\t},\n\n\ttoJSON: function() {\n\t\treturn Base.serialize(this);\n\t},\n\n\t_set: function(props, exclude, dontCheck) {\n\t\tif (props && (dontCheck || Base.isPlainObject(props))) {\n\t\t\tvar keys = Object.keys(props._filtering || props);\n\t\t\tfor (var i = 0, l = keys.length; i < l; i++) {\n\t\t\t\tvar key = keys[i];\n\t\t\t\tif (!(exclude && exclude[key])) {\n\t\t\t\t\tvar value = props[key];\n\t\t\t\t\tif (value !== undefined)\n\t\t\t\t\t\tthis[key] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t},\n\n\tstatics: {\n\n\t\texports: {\n\t\t\tenumerable: true\n\t\t},\n\n\t\textend: function extend() {\n\t\t\tvar res = extend.base.apply(this, arguments),\n\t\t\t\tname = res.prototype._class;\n\t\t\tif (name && !Base.exports[name])\n\t\t\t\tBase.exports[name] = res;\n\t\t\treturn res;\n\t\t},\n\n\t\tequals: function(obj1, obj2) {\n\t\t\tif (obj1 === obj2)\n\t\t\t\treturn true;\n\t\t\tif (obj1 && obj1.equals)\n\t\t\t\treturn obj1.equals(obj2);\n\t\t\tif (obj2 && obj2.equals)\n\t\t\t\treturn obj2.equals(obj1);\n\t\t\tif (obj1 && obj2\n\t\t\t\t\t&& typeof obj1 === 'object' && typeof obj2 === 'object') {\n\t\t\t\tif (Array.isArray(obj1) && Array.isArray(obj2)) {\n\t\t\t\t\tvar length = obj1.length;\n\t\t\t\t\tif (length !== obj2.length)\n\t\t\t\t\t\treturn false;\n\t\t\t\t\twhile (length--) {\n\t\t\t\t\t\tif (!Base.equals(obj1[length], obj2[length]))\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvar keys = Object.keys(obj1),\n\t\t\t\t\t\tlength = keys.length;\n\t\t\t\t\tif (length !== Object.keys(obj2).length)\n\t\t\t\t\t\treturn false;\n\t\t\t\t\twhile (length--) {\n\t\t\t\t\t\tvar key = keys[length];\n\t\t\t\t\t\tif (!(obj2.hasOwnProperty(key)\n\t\t\t\t\t\t\t\t&& Base.equals(obj1[key], obj2[key])))\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\n\t\tread: function(list, start, options, length) {\n\t\t\tif (this === Base) {\n\t\t\t\tvar value = this.peek(list, start);\n\t\t\t\tlist.__index++;\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tvar proto = this.prototype,\n\t\t\t\treadIndex = proto._readIndex,\n\t\t\t\tindex = start || readIndex && list.__index || 0;\n\t\t\tif (!length)\n\t\t\t\tlength = list.length - index;\n\t\t\tvar obj = list[index];\n\t\t\tif (obj instanceof this\n\t\t\t\t|| options && options.readNull && obj == null && length <= 1) {\n\t\t\t\tif (readIndex)\n\t\t\t\t\tlist.__index = index + 1;\n\t\t\t\treturn obj && options && options.clone ? obj.clone() : obj;\n\t\t\t}\n\t\t\tobj = Base.create(this.prototype);\n\t\t\tif (readIndex)\n\t\t\t\tobj.__read = true;\n\t\t\tobj = obj.initialize.apply(obj, index > 0 || length < list.length\n\t\t\t\t? Array.prototype.slice.call(list, index, index + length)\n\t\t\t\t: list) || obj;\n\t\t\tif (readIndex) {\n\t\t\t\tlist.__index = index + obj.__read;\n\t\t\t\tobj.__read = undefined;\n\t\t\t}\n\t\t\treturn obj;\n\t\t},\n\n\t\tpeek: function(list, start) {\n\t\t\treturn list[list.__index = start || list.__index || 0];\n\t\t},\n\n\t\tremain: function(list) {\n\t\t\treturn list.length - (list.__index || 0);\n\t\t},\n\n\t\treadAll: function(list, start, options) {\n\t\t\tvar res = [],\n\t\t\t\tentry;\n\t\t\tfor (var i = start || 0, l = list.length; i < l; i++) {\n\t\t\t\tres.push(Array.isArray(entry = list[i])\n\t\t\t\t\t\t? this.read(entry, 0, options)\n\t\t\t\t\t\t: this.read(list, i, options, 1));\n\t\t\t}\n\t\t\treturn res;\n\t\t},\n\n\t\treadNamed: function(list, name, start, options, length) {\n\t\t\tvar value = this.getNamed(list, name),\n\t\t\t\thasObject = value !== undefined;\n\t\t\tif (hasObject) {\n\t\t\t\tvar filtered = list._filtered;\n\t\t\t\tif (!filtered) {\n\t\t\t\t\tfiltered = list._filtered = Base.create(list[0]);\n\t\t\t\t\tfiltered._filtering = list[0];\n\t\t\t\t}\n\t\t\t\tfiltered[name] = undefined;\n\t\t\t}\n\t\t\treturn this.read(hasObject ? [value] : list, start, options, length);\n\t\t},\n\n\t\tgetNamed: function(list, name) {\n\t\t\tvar arg = list[0];\n\t\t\tif (list._hasObject === undefined)\n\t\t\t\tlist._hasObject = list.length === 1 && Base.isPlainObject(arg);\n\t\t\tif (list._hasObject)\n\t\t\t\treturn name ? arg[name] : list._filtered || arg;\n\t\t},\n\n\t\thasNamed: function(list, name) {\n\t\t\treturn !!this.getNamed(list, name);\n\t\t},\n\n\t\tisPlainValue: function(obj, asString) {\n\t\t\treturn this.isPlainObject(obj) || Array.isArray(obj)\n\t\t\t\t\t|| asString && typeof obj === 'string';\n\t\t},\n\n\t\tserialize: function(obj, options, compact, dictionary) {\n\t\t\toptions = options || {};\n\n\t\t\tvar root = !dictionary,\n\t\t\t\tres;\n\t\t\tif (root) {\n\t\t\t\toptions.formatter = new Formatter(options.precision);\n\t\t\t\tdictionary = {\n\t\t\t\t\tlength: 0,\n\t\t\t\t\tdefinitions: {},\n\t\t\t\t\treferences: {},\n\t\t\t\t\tadd: function(item, create) {\n\t\t\t\t\t\tvar id = '#' + item._id,\n\t\t\t\t\t\t\tref = this.references[id];\n\t\t\t\t\t\tif (!ref) {\n\t\t\t\t\t\t\tthis.length++;\n\t\t\t\t\t\t\tvar res = create.call(item),\n\t\t\t\t\t\t\t\tname = item._class;\n\t\t\t\t\t\t\tif (name && res[0] !== name)\n\t\t\t\t\t\t\t\tres.unshift(name);\n\t\t\t\t\t\t\tthis.definitions[id] = res;\n\t\t\t\t\t\t\tref = this.references[id] = [id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn ref;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (obj && obj._serialize) {\n\t\t\t\tres = obj._serialize(options, dictionary);\n\t\t\t\tvar name = obj._class;\n\t\t\t\tif (name && !compact && !res._compact && res[0] !== name)\n\t\t\t\t\tres.unshift(name);\n\t\t\t} else if (Array.isArray(obj)) {\n\t\t\t\tres = [];\n\t\t\t\tfor (var i = 0, l = obj.length; i < l; i++)\n\t\t\t\t\tres[i] = Base.serialize(obj[i], options, compact,\n\t\t\t\t\t\t\tdictionary);\n\t\t\t\tif (compact)\n\t\t\t\t\tres._compact = true;\n\t\t\t} else if (Base.isPlainObject(obj)) {\n\t\t\t\tres = {};\n\t\t\t\tvar keys = Object.keys(obj);\n\t\t\t\tfor (var i = 0, l = keys.length; i < l; i++) {\n\t\t\t\t\tvar key = keys[i];\n\t\t\t\t\tres[key] = Base.serialize(obj[key], options, compact,\n\t\t\t\t\t\t\tdictionary);\n\t\t\t\t}\n\t\t\t} else if (typeof obj === 'number') {\n\t\t\t\tres = options.formatter.number(obj, options.precision);\n\t\t\t} else {\n\t\t\t\tres = obj;\n\t\t\t}\n\t\t\treturn root && dictionary.length > 0\n\t\t\t\t\t? [['dictionary', dictionary.definitions], res]\n\t\t\t\t\t: res;\n\t\t},\n\n\t\tdeserialize: function(json, create, _data, _isDictionary) {\n\t\t\tvar res = json,\n\t\t\t\tisRoot = !_data;\n\t\t\t_data = _data || {};\n\t\t\tif (Array.isArray(json)) {\n\t\t\t\tvar type = json[0],\n\t\t\t\t\tisDictionary = type === 'dictionary';\n\t\t\t\tif (json.length == 1 && /^#/.test(type))\n\t\t\t\t\treturn _data.dictionary[type];\n\t\t\t\ttype = Base.exports[type];\n\t\t\t\tres = [];\n\t\t\t\tif (_isDictionary)\n\t\t\t\t\t_data.dictionary = res;\n\t\t\t\tfor (var i = type ? 1 : 0, l = json.length; i < l; i++)\n\t\t\t\t\tres.push(Base.deserialize(json[i], create, _data,\n\t\t\t\t\t\t\tisDictionary));\n\t\t\t\tif (type) {\n\t\t\t\t\tvar args = res;\n\t\t\t\t\tif (create) {\n\t\t\t\t\t\tres = create(type, args);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tres = Base.create(type.prototype);\n\t\t\t\t\t\ttype.apply(res, args);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (Base.isPlainObject(json)) {\n\t\t\t\tres = {};\n\t\t\t\tif (_isDictionary)\n\t\t\t\t\t_data.dictionary = res;\n\t\t\t\tfor (var key in json)\n\t\t\t\t\tres[key] = Base.deserialize(json[key], create, _data);\n\t\t\t}\n\t\t\treturn isRoot && json && json.length && json[0][0] === 'dictionary'\n\t\t\t\t\t? res[1]\n\t\t\t\t\t: res;\n\t\t},\n\n\t\texportJSON: function(obj, options) {\n\t\t\tvar json = Base.serialize(obj, options);\n\t\t\treturn options && options.asString === false\n\t\t\t\t\t? json\n\t\t\t\t\t: JSON.stringify(json);\n\t\t},\n\n\t\timportJSON: function(json, target) {\n\t\t\treturn Base.deserialize(\n\t\t\t\t\ttypeof json === 'string' ? JSON.parse(json) : json,\n\t\t\t\t\tfunction(type, args) {\n\t\t\t\t\t\tvar obj = target && target.constructor === type\n\t\t\t\t\t\t\t\t? target\n\t\t\t\t\t\t\t\t: Base.create(type.prototype),\n\t\t\t\t\t\t\tisTarget = obj === target;\n\t\t\t\t\t\tif (args.length === 1 && obj instanceof Item\n\t\t\t\t\t\t\t\t&& (isTarget || !(obj instanceof Layer))) {\n\t\t\t\t\t\t\tvar arg = args[0];\n\t\t\t\t\t\t\tif (Base.isPlainObject(arg))\n\t\t\t\t\t\t\t\targ.insert = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttype.apply(obj, args);\n\t\t\t\t\t\tif (isTarget)\n\t\t\t\t\t\t\ttarget = null;\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t});\n\t\t},\n\n\t\tsplice: function(list, items, index, remove) {\n\t\t\tvar amount = items && items.length,\n\t\t\t\tappend = index === undefined;\n\t\t\tindex = append ? list.length : index;\n\t\t\tif (index > list.length)\n\t\t\t\tindex = list.length;\n\t\t\tfor (var i = 0; i < amount; i++)\n\t\t\t\titems[i]._index = index + i;\n\t\t\tif (append) {\n\t\t\t\tlist.push.apply(list, items);\n\t\t\t\treturn [];\n\t\t\t} else {\n\t\t\t\tvar args = [index, remove];\n\t\t\t\tif (items)\n\t\t\t\t\targs.push.apply(args, items);\n\t\t\t\tvar removed = list.splice.apply(list, args);\n\t\t\t\tfor (var i = 0, l = removed.length; i < l; i++)\n\t\t\t\t\tremoved[i]._index = undefined;\n\t\t\t\tfor (var i = index + amount, l = list.length; i < l; i++)\n\t\t\t\t\tlist[i]._index = i;\n\t\t\t\treturn removed;\n\t\t\t}\n\t\t},\n\n\t\tcapitalize: function(str) {\n\t\t\treturn str.replace(/\\b[a-z]/g, function(match) {\n\t\t\t\treturn match.toUpperCase();\n\t\t\t});\n\t\t},\n\n\t\tcamelize: function(str) {\n\t\t\treturn str.replace(/-(.)/g, function(all, chr) {\n\t\t\t\treturn chr.toUpperCase();\n\t\t\t});\n\t\t},\n\n\t\thyphenate: function(str) {\n\t\t\treturn str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n\t\t}\n\t}\n});\n\nvar Emitter = {\n\ton: function(type, func) {\n\t\tif (typeof type !== 'string') {\n\t\t\tBase.each(type, function(value, key) {\n\t\t\t\tthis.on(key, value);\n\t\t\t}, this);\n\t\t} else {\n\t\t\tvar types = this._eventTypes,\n\t\t\t\tentry = types && types[type],\n\t\t\t\thandlers = this._callbacks = this._callbacks || {};\n\t\t\thandlers = handlers[type] = handlers[type] || [];\n\t\t\tif (handlers.indexOf(func) === -1) {\n\t\t\t\thandlers.push(func);\n\t\t\t\tif (entry && entry.install && handlers.length === 1)\n\t\t\t\t\tentry.install.call(this, type);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t},\n\n\toff: function(type, func) {\n\t\tif (typeof type !== 'string') {\n\t\t\tBase.each(type, function(value, key) {\n\t\t\t\tthis.off(key, value);\n\t\t\t}, this);\n\t\t\treturn;\n\t\t}\n\t\tvar types = this._eventTypes,\n\t\t\tentry = types && types[type],\n\t\t\thandlers = this._callbacks && this._callbacks[type],\n\t\t\tindex;\n\t\tif (handlers) {\n\t\t\tif (!func || (index = handlers.indexOf(func)) !== -1\n\t\t\t\t\t&& handlers.length === 1) {\n\t\t\t\tif (entry && entry.uninstall)\n\t\t\t\t\tentry.uninstall.call(this, type);\n\t\t\t\tdelete this._callbacks[type];\n\t\t\t} else if (index !== -1) {\n\t\t\t\thandlers.splice(index, 1);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t},\n\n\tonce: function(type, func) {\n\t\treturn this.on(type, function() {\n\t\t\tfunc.apply(this, arguments);\n\t\t\tthis.off(type, func);\n\t\t});\n\t},\n\n\temit: function(type, event) {\n\t\tvar handlers = this._callbacks && this._callbacks[type];\n\t\tif (!handlers)\n\t\t\treturn false;\n\t\tvar args = [].slice.call(arguments, 1);\n\t\thandlers = handlers.slice();\n\t\tfor (var i = 0, l = handlers.length; i < l; i++) {\n\t\t\tif (handlers[i].apply(this, args) === false) {\n\t\t\t\tif (event && event.stop)\n\t\t\t\t\tevent.stop();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\n\tresponds: function(type) {\n\t\treturn !!(this._callbacks && this._callbacks[type]);\n\t},\n\n\tattach: '#on',\n\tdetach: '#off',\n\tfire: '#emit',\n\n\t_installEvents: function(install) {\n\t\tvar handlers = this._callbacks,\n\t\t\tkey = install ? 'install' : 'uninstall';\n\t\tfor (var type in handlers) {\n\t\t\tif (handlers[type].length > 0) {\n\t\t\t\tvar types = this._eventTypes,\n\t\t\t\t\tentry = types && types[type],\n\t\t\t\t\tfunc = entry && entry[key];\n\t\t\t\tif (func)\n\t\t\t\t\tfunc.call(this, type);\n\t\t\t}\n\t\t}\n\t},\n\n\tstatics: {\n\t\tinject: function inject(src) {\n\t\t\tvar events = src._events;\n\t\t\tif (events) {\n\t\t\t\tvar types = {};\n\t\t\t\tBase.each(events, function(entry, key) {\n\t\t\t\t\tvar isString = typeof entry === 'string',\n\t\t\t\t\t\tname = isString ? entry : key,\n\t\t\t\t\t\tpart = Base.capitalize(name),\n\t\t\t\t\t\ttype = name.substring(2).toLowerCase();\n\t\t\t\t\ttypes[type] = isString ? {} : entry;\n\t\t\t\t\tname = '_' + name;\n\t\t\t\t\tsrc['get' + part] = function() {\n\t\t\t\t\t\treturn this[name];\n\t\t\t\t\t};\n\t\t\t\t\tsrc['set' + part] = function(func) {\n\t\t\t\t\t\tvar prev = this[name];\n\t\t\t\t\t\tif (prev)\n\t\t\t\t\t\t\tthis.off(type, prev);\n\t\t\t\t\t\tif (func)\n\t\t\t\t\t\t\tthis.on(type, func);\n\t\t\t\t\t\tthis[name] = func;\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tsrc._eventTypes = types;\n\t\t\t}\n\t\t\treturn inject.base.apply(this, arguments);\n\t\t}\n\t}\n};\n\nvar PaperScope = Base.extend({\n\t_class: 'PaperScope',\n\n\tinitialize: function PaperScope() {\n\t\tpaper = this;\n\t\tthis.settings = new Base({\n\t\t\tapplyMatrix: true,\n\t\t\thandleSize: 4,\n\t\t\thitTolerance: 0\n\t\t});\n\t\tthis.project = null;\n\t\tthis.projects = [];\n\t\tthis.tools = [];\n\t\tthis.palettes = [];\n\t\tthis._id = PaperScope._id++;\n\t\tPaperScope._scopes[this._id] = this;\n\t\tvar proto = PaperScope.prototype;\n\t\tif (!this.support) {\n\t\t\tvar ctx = CanvasProvider.getContext(1, 1);\n\t\t\tproto.support = {\n\t\t\t\tnativeDash: 'setLineDash' in ctx || 'mozDash' in ctx,\n\t\t\t\tnativeBlendModes: BlendMode.nativeModes\n\t\t\t};\n\t\t\tCanvasProvider.release(ctx);\n\t\t}\n\n\t\tif (!this.browser) {\n\t\t\tvar agent = navigator.userAgent.toLowerCase(),\n\t\t\t\tplatform = (/(win)/.exec(agent)\n\t\t\t\t\t\t|| /(mac)/.exec(agent)\n\t\t\t\t\t\t|| /(linux)/.exec(agent)\n\t\t\t\t\t\t|| [])[0],\n\t\t\t\tbrowser = proto.browser = { platform: platform };\n\t\t\tif (platform)\n\t\t\t\tbrowser[platform] = true;\n\t\t\tagent.replace(\n\t\t\t\t/(opera|chrome|safari|webkit|firefox|msie|trident|atom)\\/?\\s*([.\\d]+)(?:.*version\\/([.\\d]+))?(?:.*rv\\:([.\\d]+))?/g,\n\t\t\t\tfunction(all, n, v1, v2, rv) {\n\t\t\t\t\tif (!browser.chrome) {\n\t\t\t\t\t\tvar v = n === 'opera' ? v2 : v1;\n\t\t\t\t\t\tif (n === 'trident') {\n\t\t\t\t\t\t\tv = rv;\n\t\t\t\t\t\t\tn = 'msie';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbrowser.version = v;\n\t\t\t\t\t\tbrowser.versionNumber = parseFloat(v);\n\t\t\t\t\t\tbrowser.name = n;\n\t\t\t\t\t\tbrowser[n] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t\tif (browser.chrome)\n\t\t\t\tdelete browser.webkit;\n\t\t\tif (browser.atom)\n\t\t\t\tdelete browser.chrome;\n\t\t}\n\t},\n\n\tversion: \"0.9.25\",\n\n\tgetView: function() {\n\t\treturn this.project && this.project.getView();\n\t},\n\n\tgetPaper: function() {\n\t\treturn this;\n\t},\n\n\texecute: function(code, url, options) {\n\t\tpaper.PaperScript.execute(code, this, url, options);\n\t\tView.updateFocus();\n\t},\n\n\tinstall: function(scope) {\n\t\tvar that = this;\n\t\tBase.each(['project', 'view', 'tool'], function(key) {\n\t\t\tBase.define(scope, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\tget: function() {\n\t\t\t\t\treturn that[key];\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\tfor (var key in this)\n\t\t\tif (!/^_/.test(key) && this[key])\n\t\t\t\tscope[key] = this[key];\n\t},\n\n\tsetup: function(element) {\n\t\tpaper = this;\n\t\tthis.project = new Project(element);\n\t\treturn this;\n\t},\n\n\tactivate: function() {\n\t\tpaper = this;\n\t},\n\n\tclear: function() {\n\t\tfor (var i = this.projects.length - 1; i >= 0; i--)\n\t\t\tthis.projects[i].remove();\n\t\tfor (var i = this.tools.length - 1; i >= 0; i--)\n\t\t\tthis.tools[i].remove();\n\t\tfor (var i = this.palettes.length - 1; i >= 0; i--)\n\t\t\tthis.palettes[i].remove();\n\t},\n\n\tremove: function() {\n\t\tthis.clear();\n\t\tdelete PaperScope._scopes[this._id];\n\t},\n\n\tstatics: new function() {\n\t\tfunction handleAttribute(name) {\n\t\t\tname += 'Attribute';\n\t\t\treturn function(el, attr) {\n\t\t\t\treturn el[name](attr) || el[name]('data-paper-' + attr);\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\t_scopes: {},\n\t\t\t_id: 0,\n\n\t\t\tget: function(id) {\n\t\t\t\treturn this._scopes[id] || null;\n\t\t\t},\n\n\t\t\tgetAttribute: handleAttribute('get'),\n\t\t\thasAttribute: handleAttribute('has')\n\t\t};\n\t}\n});\n\nvar PaperScopeItem = Base.extend(Emitter, {\n\n\tinitialize: function(activate) {\n\t\tthis._scope = paper;\n\t\tthis._index = this._scope[this._list].push(this) - 1;\n\t\tif (activate || !this._scope[this._reference])\n\t\t\tthis.activate();\n\t},\n\n\tactivate: function() {\n\t\tif (!this._scope)\n\t\t\treturn false;\n\t\tvar prev = this._scope[this._reference];\n\t\tif (prev && prev !== this)\n\t\t\tprev.emit('deactivate');\n\t\tthis._scope[this._reference] = this;\n\t\tthis.emit('activate', prev);\n\t\treturn true;\n\t},\n\n\tisActive: function() {\n\t\treturn this._scope[this._reference] === this;\n\t},\n\n\tremove: function() {\n\t\tif (this._index == null)\n\t\t\treturn false;\n\t\tBase.splice(this._scope[this._list], null, this._index, 1);\n\t\tif (this._scope[this._reference] == this)\n\t\t\tthis._scope[this._reference] = null;\n\t\tthis._scope = null;\n\t\treturn true;\n\t}\n});\n\nvar Formatter = Base.extend({\n\tinitialize: function(precision) {\n\t\tthis.precision = precision || 5;\n\t\tthis.multiplier = Math.pow(10, this.precision);\n\t},\n\n\tnumber: function(val) {\n\t\treturn Math.round(val * this.multiplier) / this.multiplier;\n\t},\n\n\tpair: function(val1, val2, separator) {\n\t\treturn this.number(val1) + (separator || ',') + this.number(val2);\n\t},\n\n\tpoint: function(val, separator) {\n\t\treturn this.number(val.x) + (separator || ',') + this.number(val.y);\n\t},\n\n\tsize: function(val, separator) {\n\t\treturn this.number(val.width) + (separator || ',')\n\t\t\t\t+ this.number(val.height);\n\t},\n\n\trectangle: function(val, separator) {\n\t\treturn this.point(val, separator) + (separator || ',')\n\t\t\t\t+ this.size(val, separator);\n\t}\n});\n\nFormatter.instance = new Formatter();\n\nvar Numerical = new function() {\n\n\tvar abscissas = [\n\t\t[  0.5773502691896257645091488],\n\t\t[0,0.7745966692414833770358531],\n\t\t[  0.3399810435848562648026658,0.8611363115940525752239465],\n\t\t[0,0.5384693101056830910363144,0.9061798459386639927976269],\n\t\t[  0.2386191860831969086305017,0.6612093864662645136613996,0.9324695142031520278123016],\n\t\t[0,0.4058451513773971669066064,0.7415311855993944398638648,0.9491079123427585245261897],\n\t\t[  0.1834346424956498049394761,0.5255324099163289858177390,0.7966664774136267395915539,0.9602898564975362316835609],\n\t\t[0,0.3242534234038089290385380,0.6133714327005903973087020,0.8360311073266357942994298,0.9681602395076260898355762],\n\t\t[  0.1488743389816312108848260,0.4333953941292471907992659,0.6794095682990244062343274,0.8650633666889845107320967,0.9739065285171717200779640],\n\t\t[0,0.2695431559523449723315320,0.5190961292068118159257257,0.7301520055740493240934163,0.8870625997680952990751578,0.9782286581460569928039380],\n\t\t[  0.1252334085114689154724414,0.3678314989981801937526915,0.5873179542866174472967024,0.7699026741943046870368938,0.9041172563704748566784659,0.9815606342467192506905491],\n\t\t[0,0.2304583159551347940655281,0.4484927510364468528779129,0.6423493394403402206439846,0.8015780907333099127942065,0.9175983992229779652065478,0.9841830547185881494728294],\n\t\t[  0.1080549487073436620662447,0.3191123689278897604356718,0.5152486363581540919652907,0.6872929048116854701480198,0.8272013150697649931897947,0.9284348836635735173363911,0.9862838086968123388415973],\n\t\t[0,0.2011940939974345223006283,0.3941513470775633698972074,0.5709721726085388475372267,0.7244177313601700474161861,0.8482065834104272162006483,0.9372733924007059043077589,0.9879925180204854284895657],\n\t\t[  0.0950125098376374401853193,0.2816035507792589132304605,0.4580167776572273863424194,0.6178762444026437484466718,0.7554044083550030338951012,0.8656312023878317438804679,0.9445750230732325760779884,0.9894009349916499325961542]\n\t];\n\n\tvar weights = [\n\t\t[1],\n\t\t[0.8888888888888888888888889,0.5555555555555555555555556],\n\t\t[0.6521451548625461426269361,0.3478548451374538573730639],\n\t\t[0.5688888888888888888888889,0.4786286704993664680412915,0.2369268850561890875142640],\n\t\t[0.4679139345726910473898703,0.3607615730481386075698335,0.1713244923791703450402961],\n\t\t[0.4179591836734693877551020,0.3818300505051189449503698,0.2797053914892766679014678,0.1294849661688696932706114],\n\t\t[0.3626837833783619829651504,0.3137066458778872873379622,0.2223810344533744705443560,0.1012285362903762591525314],\n\t\t[0.3302393550012597631645251,0.3123470770400028400686304,0.2606106964029354623187429,0.1806481606948574040584720,0.0812743883615744119718922],\n\t\t[0.2955242247147528701738930,0.2692667193099963550912269,0.2190863625159820439955349,0.1494513491505805931457763,0.0666713443086881375935688],\n\t\t[0.2729250867779006307144835,0.2628045445102466621806889,0.2331937645919904799185237,0.1862902109277342514260976,0.1255803694649046246346943,0.0556685671161736664827537],\n\t\t[0.2491470458134027850005624,0.2334925365383548087608499,0.2031674267230659217490645,0.1600783285433462263346525,0.1069393259953184309602547,0.0471753363865118271946160],\n\t\t[0.2325515532308739101945895,0.2262831802628972384120902,0.2078160475368885023125232,0.1781459807619457382800467,0.1388735102197872384636018,0.0921214998377284479144218,0.0404840047653158795200216],\n\t\t[0.2152638534631577901958764,0.2051984637212956039659241,0.1855383974779378137417166,0.1572031671581935345696019,0.1215185706879031846894148,0.0801580871597602098056333,0.0351194603317518630318329],\n\t\t[0.2025782419255612728806202,0.1984314853271115764561183,0.1861610000155622110268006,0.1662692058169939335532009,0.1395706779261543144478048,0.1071592204671719350118695,0.0703660474881081247092674,0.0307532419961172683546284],\n\t\t[0.1894506104550684962853967,0.1826034150449235888667637,0.1691565193950025381893121,0.1495959888165767320815017,0.1246289712555338720524763,0.0951585116824927848099251,0.0622535239386478928628438,0.0271524594117540948517806]\n\t];\n\n\tvar abs = Math.abs,\n\t\tsqrt = Math.sqrt,\n\t\tpow = Math.pow,\n\t\tEPSILON = 1e-12,\n\t\tMACHINE_EPSILON = 1.12e-16;\n\n\tfunction clip(value, min, max) {\n\t\treturn value < min ? min : value > max ? max : value;\n\t}\n\n\treturn {\n\t\tTOLERANCE: 1e-6,\n\t\tEPSILON: EPSILON,\n\t\tMACHINE_EPSILON: MACHINE_EPSILON,\n\t\tCURVETIME_EPSILON: 4e-7,\n\t\tGEOMETRIC_EPSILON: 2e-7,\n\t\tWINDING_EPSILON: 2e-7,\n\t\tTRIGONOMETRIC_EPSILON: 1e-7,\n\t\tCLIPPING_EPSILON: 1e-7,\n\t\tKAPPA: 4 * (sqrt(2) - 1) / 3,\n\n\t\tisZero: function(val) {\n\t\t\treturn val >= -EPSILON && val <= EPSILON;\n\t\t},\n\n\t\tintegrate: function(f, a, b, n) {\n\t\t\tvar x = abscissas[n - 2],\n\t\t\t\tw = weights[n - 2],\n\t\t\t\tA = (b - a) * 0.5,\n\t\t\t\tB = A + a,\n\t\t\t\ti = 0,\n\t\t\t\tm = (n + 1) >> 1,\n\t\t\t\tsum = n & 1 ? w[i++] * f(B) : 0;\n\t\t\twhile (i < m) {\n\t\t\t\tvar Ax = A * x[i];\n\t\t\t\tsum += w[i++] * (f(B + Ax) + f(B - Ax));\n\t\t\t}\n\t\t\treturn A * sum;\n\t\t},\n\n\t\tfindRoot: function(f, df, x, a, b, n, tolerance) {\n\t\t\tfor (var i = 0; i < n; i++) {\n\t\t\t\tvar fx = f(x),\n\t\t\t\t\tdx = fx / df(x),\n\t\t\t\t\tnx = x - dx;\n\t\t\t\tif (abs(dx) < tolerance)\n\t\t\t\t\treturn nx;\n\t\t\t\tif (fx > 0) {\n\t\t\t\t\tb = x;\n\t\t\t\t\tx = nx <= a ? (a + b) * 0.5 : nx;\n\t\t\t\t} else {\n\t\t\t\t\ta = x;\n\t\t\t\t\tx = nx >= b ? (a + b) * 0.5 : nx;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn x;\n\t\t},\n\n\t\tsolveQuadratic: function(a, b, c, roots, min, max) {\n\t\t\tvar count = 0,\n\t\t\t\teMin = min - EPSILON,\n\t\t\t\teMax = max + EPSILON,\n\t\t\t\tx1, x2 = Infinity,\n\t\t\t\tB = b,\n\t\t\t\tD;\n\t\t\tb /= -2;\n\t\t\tD = b * b - a * c;\n\t\t\tif (D !== 0 && abs(D) < MACHINE_EPSILON) {\n\t\t\t\tvar gmC = pow(abs(a * b * c), 1 / 3);\n\t\t\t\tif (gmC < 1e-8) {\n\t\t\t\t\tvar mult = pow(10,\n\t\t\t\t\t\t\tabs(Math.floor(Math.log(gmC) * Math.LOG10E)));\n\t\t\t\t\tif (!isFinite(mult))\n\t\t\t\t\t\tmult = 0;\n\t\t\t\t\ta *= mult;\n\t\t\t\t\tb *= mult;\n\t\t\t\t\tc *= mult;\n\t\t\t\t\tD = b * b - a * c;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (abs(a) < EPSILON) {\n\t\t\t\tif (abs(B) < EPSILON)\n\t\t\t\t\treturn abs(c) < EPSILON ? -1 : 0;\n\t\t\t\tx1 = -c / B;\n\t\t\t} else if (D >= -MACHINE_EPSILON) {\n\t\t\t\tvar Q = D < 0 ? 0 : sqrt(D),\n\t\t\t\t\tR = b + (b < 0 ? -Q : Q);\n\t\t\t\tif (R === 0) {\n\t\t\t\t\tx1 = c / a;\n\t\t\t\t\tx2 = -x1;\n\t\t\t\t} else {\n\t\t\t\t\tx1 = R / a;\n\t\t\t\t\tx2 = c / R;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (isFinite(x1) && (min == null || x1 > eMin && x1 < eMax))\n\t\t\t\troots[count++] = min == null ? x1 : clip(x1, min, max);\n\t\t\tif (x2 !== x1\n\t\t\t\t\t&& isFinite(x2) && (min == null || x2 > eMin && x2 < eMax))\n\t\t\t\troots[count++] = min == null ? x2 : clip(x2, min, max);\n\t\t\treturn count;\n\t\t},\n\n\t\tsolveCubic: function(a, b, c, d, roots, min, max) {\n\t\t\tvar count = 0,\n\t\t\t\tx, b1, c2;\n\t\t\tif (abs(a) < EPSILON) {\n\t\t\t\ta = b;\n\t\t\t\tb1 = c;\n\t\t\t\tc2 = d;\n\t\t\t\tx = Infinity;\n\t\t\t} else if (abs(d) < EPSILON) {\n\t\t\t\tb1 = b;\n\t\t\t\tc2 = c;\n\t\t\t\tx = 0;\n\t\t\t} else {\n\t\t\t\tvar ec = 1 + MACHINE_EPSILON,\n\t\t\t\t\tx0, q, qd, t, r, s, tmp;\n\t\t\t\tx = -(b / a) / 3;\n\t\t\t\ttmp = a * x,\n\t\t\t\tb1 = tmp + b,\n\t\t\t\tc2 = b1 * x + c,\n\t\t\t\tqd = (tmp + b1) * x + c2,\n\t\t\t\tq = c2 * x + d;\n\t\t\t\tt = q /a;\n\t\t\t\tr = pow(abs(t), 1/3);\n\t\t\t\ts = t < 0 ? -1 : 1;\n\t\t\t\tt = -qd / a;\n\t\t\t\tr = t > 0 ? 1.3247179572 * Math.max(r, sqrt(t)) : r;\n\t\t\t\tx0 = x - s * r;\n\t\t\t\tif (x0 !== x) {\n\t\t\t\t\tdo {\n\t\t\t\t\t\tx = x0;\n\t\t\t\t\t\ttmp = a * x,\n\t\t\t\t\t\tb1 = tmp + b,\n\t\t\t\t\t\tc2 = b1 * x + c,\n\t\t\t\t\t\tqd = (tmp + b1) * x + c2,\n\t\t\t\t\t\tq = c2 * x + d;\n\t\t\t\t\t\tx0 = qd === 0 ? x : x - q / qd / ec;\n\t\t\t\t\t\tif (x0 === x) {\n\t\t\t\t\t\t\tx = x0;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t} while (s * x0 > s * x);\n\t\t\t\t\tif (abs(a) * x * x > abs(d / x)) {\n\t\t\t\t\t\tc2 = -d / x;\n\t\t\t\t\t\tb1 = (c2 - c) / x;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar count = Numerical.solveQuadratic(a, b1, c2, roots, min, max);\n\t\t\tif (isFinite(x) && (count === 0 || x !== roots[count - 1])\n\t\t\t\t\t&& (min == null || x > min - EPSILON && x < max + EPSILON))\n\t\t\t\troots[count++] = min == null ? x : clip(x, min, max);\n\t\t\treturn count;\n\t\t}\n\t};\n};\n\nvar UID = {\n\t_id: 1,\n\t_pools: {},\n\n\tget: function(ctor) {\n\t\tif (ctor) {\n\t\t\tvar name = ctor._class,\n\t\t\t\tpool = this._pools[name];\n\t\t\tif (!pool)\n\t\t\t\tpool = this._pools[name] = { _id: 1 };\n\t\t\treturn pool._id++;\n\t\t} else {\n\t\t\treturn this._id++;\n\t\t}\n\t}\n};\n\nvar Point = Base.extend({\n\t_class: 'Point',\n\t_readIndex: true,\n\n\tinitialize: function Point(arg0, arg1) {\n\t\tvar type = typeof arg0;\n\t\tif (type === 'number') {\n\t\t\tvar hasY = typeof arg1 === 'number';\n\t\t\tthis.x = arg0;\n\t\t\tthis.y = hasY ? arg1 : arg0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = hasY ? 2 : 1;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis.x = this.y = 0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = arg0 === null ? 1 : 0;\n\t\t} else {\n\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\tthis.x = arg0[0];\n\t\t\t\tthis.y = arg0.length > 1 ? arg0[1] : arg0[0];\n\t\t\t} else if (arg0.x != null) {\n\t\t\t\tthis.x = arg0.x;\n\t\t\t\tthis.y = arg0.y;\n\t\t\t} else if (arg0.width != null) {\n\t\t\t\tthis.x = arg0.width;\n\t\t\t\tthis.y = arg0.height;\n\t\t\t} else if (arg0.angle != null) {\n\t\t\t\tthis.x = arg0.length;\n\t\t\t\tthis.y = 0;\n\t\t\t\tthis.setAngle(arg0.angle);\n\t\t\t} else {\n\t\t\t\tthis.x = this.y = 0;\n\t\t\t\tif (this.__read)\n\t\t\t\t\tthis.__read = 0;\n\t\t\t}\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = 1;\n\t\t}\n\t},\n\n\tset: function(x, y) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\treturn this;\n\t},\n\n\tequals: function(point) {\n\t\treturn this === point || point\n\t\t\t\t&& (this.x === point.x && this.y === point.y\n\t\t\t\t\t|| Array.isArray(point)\n\t\t\t\t\t\t&& this.x === point[0] && this.y === point[1])\n\t\t\t\t|| false;\n\t},\n\n\tclone: function() {\n\t\treturn new Point(this.x, this.y);\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ x: ' + f.number(this.x) + ', y: ' + f.number(this.y) + ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.x), f.number(this.y)];\n\t},\n\n\tgetLength: function() {\n\t\treturn Math.sqrt(this.x * this.x + this.y * this.y);\n\t},\n\n\tsetLength: function(length) {\n\t\tif (this.isZero()) {\n\t\t\tvar angle = this._angle || 0;\n\t\t\tthis.set(\n\t\t\t\tMath.cos(angle) * length,\n\t\t\t\tMath.sin(angle) * length\n\t\t\t);\n\t\t} else {\n\t\t\tvar scale = length / this.getLength();\n\t\t\tif (Numerical.isZero(scale))\n\t\t\t\tthis.getAngle();\n\t\t\tthis.set(\n\t\t\t\tthis.x * scale,\n\t\t\t\tthis.y * scale\n\t\t\t);\n\t\t}\n\t},\n\tgetAngle: function() {\n\t\treturn this.getAngleInRadians.apply(this, arguments) * 180 / Math.PI;\n\t},\n\n\tsetAngle: function(angle) {\n\t\tthis.setAngleInRadians.call(this, angle * Math.PI / 180);\n\t},\n\n\tgetAngleInDegrees: '#getAngle',\n\tsetAngleInDegrees: '#setAngle',\n\n\tgetAngleInRadians: function() {\n\t\tif (!arguments.length) {\n\t\t\treturn this.isZero()\n\t\t\t\t\t? this._angle || 0\n\t\t\t\t\t: this._angle = Math.atan2(this.y, this.x);\n\t\t} else {\n\t\t\tvar point = Point.read(arguments),\n\t\t\t\tdiv = this.getLength() * point.getLength();\n\t\t\tif (Numerical.isZero(div)) {\n\t\t\t\treturn NaN;\n\t\t\t} else {\n\t\t\t\tvar a = this.dot(point) / div;\n\t\t\t\treturn Math.acos(a < -1 ? -1 : a > 1 ? 1 : a);\n\t\t\t}\n\t\t}\n\t},\n\n\tsetAngleInRadians: function(angle) {\n\t\tthis._angle = angle;\n\t\tif (!this.isZero()) {\n\t\t\tvar length = this.getLength();\n\t\t\tthis.set(\n\t\t\t\tMath.cos(angle) * length,\n\t\t\t\tMath.sin(angle) * length\n\t\t\t);\n\t\t}\n\t},\n\n\tgetQuadrant: function() {\n\t\treturn this.x >= 0 ? this.y >= 0 ? 1 : 4 : this.y >= 0 ? 2 : 3;\n\t}\n}, {\n\tbeans: false,\n\n\tgetDirectedAngle: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn Math.atan2(this.cross(point), this.dot(point)) * 180 / Math.PI;\n\t},\n\n\tgetDistance: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tx = point.x - this.x,\n\t\t\ty = point.y - this.y,\n\t\t\td = x * x + y * y,\n\t\t\tsquared = Base.read(arguments);\n\t\treturn squared ? d : Math.sqrt(d);\n\t},\n\n\tnormalize: function(length) {\n\t\tif (length === undefined)\n\t\t\tlength = 1;\n\t\tvar current = this.getLength(),\n\t\t\tscale = current !== 0 ? length / current : 0,\n\t\t\tpoint = new Point(this.x * scale, this.y * scale);\n\t\tif (scale >= 0)\n\t\t\tpoint._angle = this._angle;\n\t\treturn point;\n\t},\n\n\trotate: function(angle, center) {\n\t\tif (angle === 0)\n\t\t\treturn this.clone();\n\t\tangle = angle * Math.PI / 180;\n\t\tvar point = center ? this.subtract(center) : this,\n\t\t\tsin = Math.sin(angle),\n\t\t\tcos = Math.cos(angle);\n\t\tpoint = new Point(\n\t\t\tpoint.x * cos - point.y * sin,\n\t\t\tpoint.x * sin + point.y * cos\n\t\t);\n\t\treturn center ? point.add(center) : point;\n\t},\n\n\ttransform: function(matrix) {\n\t\treturn matrix ? matrix._transformPoint(this) : this;\n\t},\n\n\tadd: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x + point.x, this.y + point.y);\n\t},\n\n\tsubtract: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x - point.x, this.y - point.y);\n\t},\n\n\tmultiply: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x * point.x, this.y * point.y);\n\t},\n\n\tdivide: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x / point.x, this.y / point.y);\n\t},\n\n\tmodulo: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x % point.x, this.y % point.y);\n\t},\n\n\tnegate: function() {\n\t\treturn new Point(-this.x, -this.y);\n\t},\n\n\tisInside: function() {\n\t\treturn Rectangle.read(arguments).contains(this);\n\t},\n\n\tisClose: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\ttolerance = Base.read(arguments);\n\t\treturn this.getDistance(point) < tolerance;\n\t},\n\n\tisCollinear: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn Point.isCollinear(this.x, this.y, point.x, point.y);\n\t},\n\n\tisColinear: '#isCollinear',\n\n\tisOrthogonal: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn Point.isOrthogonal(this.x, this.y, point.x, point.y);\n\t},\n\n\tisZero: function() {\n\t\treturn Numerical.isZero(this.x) && Numerical.isZero(this.y);\n\t},\n\n\tisNaN: function() {\n\t\treturn isNaN(this.x) || isNaN(this.y);\n\t},\n\n\tdot: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn this.x * point.x + this.y * point.y;\n\t},\n\n\tcross: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn this.x * point.y - this.y * point.x;\n\t},\n\n\tproject: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tscale = point.isZero() ? 0 : this.dot(point) / point.dot(point);\n\t\treturn new Point(\n\t\t\tpoint.x * scale,\n\t\t\tpoint.y * scale\n\t\t);\n\t},\n\n\tstatics: {\n\t\tmin: function() {\n\t\t\tvar point1 = Point.read(arguments),\n\t\t\t\tpoint2 = Point.read(arguments);\n\t\t\treturn new Point(\n\t\t\t\tMath.min(point1.x, point2.x),\n\t\t\t\tMath.min(point1.y, point2.y)\n\t\t\t);\n\t\t},\n\n\t\tmax: function() {\n\t\t\tvar point1 = Point.read(arguments),\n\t\t\t\tpoint2 = Point.read(arguments);\n\t\t\treturn new Point(\n\t\t\t\tMath.max(point1.x, point2.x),\n\t\t\t\tMath.max(point1.y, point2.y)\n\t\t\t);\n\t\t},\n\n\t\trandom: function() {\n\t\t\treturn new Point(Math.random(), Math.random());\n\t\t},\n\n\t\tisCollinear: function(x1, y1, x2, y2) {\n\t\t\treturn Math.abs(x1 * y2 - y1 * x2)\n\t\t\t\t\t<= Math.sqrt((x1 * x1 + y1 * y1) * (x2 * x2 + y2 * y2))\n\t\t\t\t\t\t* 1e-7;\n\t\t},\n\n\t\tisOrthogonal: function(x1, y1, x2, y2) {\n\t\t\treturn Math.abs(x1 * x2 + y1 * y2)\n\t\t\t\t\t<= Math.sqrt((x1 * x1 + y1 * y1) * (x2 * x2 + y2 * y2))\n\t\t\t\t\t\t* 1e-7;\n\t\t}\n\t}\n}, Base.each(['round', 'ceil', 'floor', 'abs'], function(name) {\n\tvar op = Math[name];\n\tthis[name] = function() {\n\t\treturn new Point(op(this.x), op(this.y));\n\t};\n}, {}));\n\nvar LinkedPoint = Point.extend({\n\tinitialize: function Point(x, y, owner, setter) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\tset: function(x, y, _dontNotify) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t},\n\n\tgetX: function() {\n\t\treturn this._x;\n\t},\n\n\tsetX: function(x) {\n\t\tthis._x = x;\n\t\tthis._owner[this._setter](this);\n\t},\n\n\tgetY: function() {\n\t\treturn this._y;\n\t},\n\n\tsetY: function(y) {\n\t\tthis._y = y;\n\t\tthis._owner[this._setter](this);\n\t}\n});\n\nvar Size = Base.extend({\n\t_class: 'Size',\n\t_readIndex: true,\n\n\tinitialize: function Size(arg0, arg1) {\n\t\tvar type = typeof arg0;\n\t\tif (type === 'number') {\n\t\t\tvar hasHeight = typeof arg1 === 'number';\n\t\t\tthis.width = arg0;\n\t\t\tthis.height = hasHeight ? arg1 : arg0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = hasHeight ? 2 : 1;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis.width = this.height = 0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = arg0 === null ? 1 : 0;\n\t\t} else {\n\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\tthis.width = arg0[0];\n\t\t\t\tthis.height = arg0.length > 1 ? arg0[1] : arg0[0];\n\t\t\t} else if (arg0.width != null) {\n\t\t\t\tthis.width = arg0.width;\n\t\t\t\tthis.height = arg0.height;\n\t\t\t} else if (arg0.x != null) {\n\t\t\t\tthis.width = arg0.x;\n\t\t\t\tthis.height = arg0.y;\n\t\t\t} else {\n\t\t\t\tthis.width = this.height = 0;\n\t\t\t\tif (this.__read)\n\t\t\t\t\tthis.__read = 0;\n\t\t\t}\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = 1;\n\t\t}\n\t},\n\n\tset: function(width, height) {\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\treturn this;\n\t},\n\n\tequals: function(size) {\n\t\treturn size === this || size && (this.width === size.width\n\t\t\t\t&& this.height === size.height\n\t\t\t\t|| Array.isArray(size) && this.width === size[0]\n\t\t\t\t\t&& this.height === size[1]) || false;\n\t},\n\n\tclone: function() {\n\t\treturn new Size(this.width, this.height);\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ width: ' + f.number(this.width)\n\t\t\t\t+ ', height: ' + f.number(this.height) + ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.width),\n\t\t\t\tf.number(this.height)];\n\t},\n\n\tadd: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width + size.width, this.height + size.height);\n\t},\n\n\tsubtract: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width - size.width, this.height - size.height);\n\t},\n\n\tmultiply: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width * size.width, this.height * size.height);\n\t},\n\n\tdivide: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width / size.width, this.height / size.height);\n\t},\n\n\tmodulo: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width % size.width, this.height % size.height);\n\t},\n\n\tnegate: function() {\n\t\treturn new Size(-this.width, -this.height);\n\t},\n\n\tisZero: function() {\n\t\treturn Numerical.isZero(this.width) && Numerical.isZero(this.height);\n\t},\n\n\tisNaN: function() {\n\t\treturn isNaN(this.width) || isNaN(this.height);\n\t},\n\n\tstatics: {\n\t\tmin: function(size1, size2) {\n\t\t\treturn new Size(\n\t\t\t\tMath.min(size1.width, size2.width),\n\t\t\t\tMath.min(size1.height, size2.height));\n\t\t},\n\n\t\tmax: function(size1, size2) {\n\t\t\treturn new Size(\n\t\t\t\tMath.max(size1.width, size2.width),\n\t\t\t\tMath.max(size1.height, size2.height));\n\t\t},\n\n\t\trandom: function() {\n\t\t\treturn new Size(Math.random(), Math.random());\n\t\t}\n\t}\n}, Base.each(['round', 'ceil', 'floor', 'abs'], function(name) {\n\tvar op = Math[name];\n\tthis[name] = function() {\n\t\treturn new Size(op(this.width), op(this.height));\n\t};\n}, {}));\n\nvar LinkedSize = Size.extend({\n\tinitialize: function Size(width, height, owner, setter) {\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\tset: function(width, height, _dontNotify) {\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t},\n\n\tgetWidth: function() {\n\t\treturn this._width;\n\t},\n\n\tsetWidth: function(width) {\n\t\tthis._width = width;\n\t\tthis._owner[this._setter](this);\n\t},\n\n\tgetHeight: function() {\n\t\treturn this._height;\n\t},\n\n\tsetHeight: function(height) {\n\t\tthis._height = height;\n\t\tthis._owner[this._setter](this);\n\t}\n});\n\nvar Rectangle = Base.extend({\n\t_class: 'Rectangle',\n\t_readIndex: true,\n\tbeans: true,\n\n\tinitialize: function Rectangle(arg0, arg1, arg2, arg3) {\n\t\tvar type = typeof arg0,\n\t\t\tread = 0;\n\t\tif (type === 'number') {\n\t\t\tthis.x = arg0;\n\t\t\tthis.y = arg1;\n\t\t\tthis.width = arg2;\n\t\t\tthis.height = arg3;\n\t\t\tread = 4;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis.x = this.y = this.width = this.height = 0;\n\t\t\tread = arg0 === null ? 1 : 0;\n\t\t} else if (arguments.length === 1) {\n\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\tthis.x = arg0[0];\n\t\t\t\tthis.y = arg0[1];\n\t\t\t\tthis.width = arg0[2];\n\t\t\t\tthis.height = arg0[3];\n\t\t\t\tread = 1;\n\t\t\t} else if (arg0.x !== undefined || arg0.width !== undefined) {\n\t\t\t\tthis.x = arg0.x || 0;\n\t\t\t\tthis.y = arg0.y || 0;\n\t\t\t\tthis.width = arg0.width || 0;\n\t\t\t\tthis.height = arg0.height || 0;\n\t\t\t\tread = 1;\n\t\t\t} else if (arg0.from === undefined && arg0.to === undefined) {\n\t\t\t\tthis.x = this.y = this.width = this.height = 0;\n\t\t\t\tthis._set(arg0);\n\t\t\t\tread = 1;\n\t\t\t}\n\t\t}\n\t\tif (!read) {\n\t\t\tvar point = Point.readNamed(arguments, 'from'),\n\t\t\t\tnext = Base.peek(arguments);\n\t\t\tthis.x = point.x;\n\t\t\tthis.y = point.y;\n\t\t\tif (next && next.x !== undefined || Base.hasNamed(arguments, 'to')) {\n\t\t\t\tvar to = Point.readNamed(arguments, 'to');\n\t\t\t\tthis.width = to.x - point.x;\n\t\t\t\tthis.height = to.y - point.y;\n\t\t\t\tif (this.width < 0) {\n\t\t\t\t\tthis.x = to.x;\n\t\t\t\t\tthis.width = -this.width;\n\t\t\t\t}\n\t\t\t\tif (this.height < 0) {\n\t\t\t\t\tthis.y = to.y;\n\t\t\t\t\tthis.height = -this.height;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar size = Size.read(arguments);\n\t\t\t\tthis.width = size.width;\n\t\t\t\tthis.height = size.height;\n\t\t\t}\n\t\t\tread = arguments.__index;\n\t\t}\n\t\tif (this.__read)\n\t\t\tthis.__read = read;\n\t},\n\n\tset: function(x, y, width, height) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\treturn this;\n\t},\n\n\tclone: function() {\n\t\treturn new Rectangle(this.x, this.y, this.width, this.height);\n\t},\n\n\tequals: function(rect) {\n\t\tvar rt = Base.isPlainValue(rect)\n\t\t\t\t? Rectangle.read(arguments)\n\t\t\t\t: rect;\n\t\treturn rt === this\n\t\t\t\t|| rt && this.x === rt.x && this.y === rt.y\n\t\t\t\t\t&& this.width === rt.width && this.height === rt.height\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ x: ' + f.number(this.x)\n\t\t\t\t+ ', y: ' + f.number(this.y)\n\t\t\t\t+ ', width: ' + f.number(this.width)\n\t\t\t\t+ ', height: ' + f.number(this.height)\n\t\t\t\t+ ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.x),\n\t\t\t\tf.number(this.y),\n\t\t\t\tf.number(this.width),\n\t\t\t\tf.number(this.height)];\n\t},\n\n\tgetPoint: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\treturn new ctor(this.x, this.y, this, 'setPoint');\n\t},\n\n\tsetPoint: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.x = point.x;\n\t\tthis.y = point.y;\n\t},\n\n\tgetSize: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Size : LinkedSize;\n\t\treturn new ctor(this.width, this.height, this, 'setSize');\n\t},\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments);\n\t\tif (this._fixX)\n\t\t\tthis.x += (this.width - size.width) * this._fixX;\n\t\tif (this._fixY)\n\t\t\tthis.y += (this.height - size.height) * this._fixY;\n\t\tthis.width = size.width;\n\t\tthis.height = size.height;\n\t\tthis._fixW = 1;\n\t\tthis._fixH = 1;\n\t},\n\n\tgetLeft: function() {\n\t\treturn this.x;\n\t},\n\n\tsetLeft: function(left) {\n\t\tif (!this._fixW)\n\t\t\tthis.width -= left - this.x;\n\t\tthis.x = left;\n\t\tthis._fixX = 0;\n\t},\n\n\tgetTop: function() {\n\t\treturn this.y;\n\t},\n\n\tsetTop: function(top) {\n\t\tif (!this._fixH)\n\t\t\tthis.height -= top - this.y;\n\t\tthis.y = top;\n\t\tthis._fixY = 0;\n\t},\n\n\tgetRight: function() {\n\t\treturn this.x + this.width;\n\t},\n\n\tsetRight: function(right) {\n\t\tif (this._fixX !== undefined && this._fixX !== 1)\n\t\t\tthis._fixW = 0;\n\t\tif (this._fixW)\n\t\t\tthis.x = right - this.width;\n\t\telse\n\t\t\tthis.width = right - this.x;\n\t\tthis._fixX = 1;\n\t},\n\n\tgetBottom: function() {\n\t\treturn this.y + this.height;\n\t},\n\n\tsetBottom: function(bottom) {\n\t\tif (this._fixY !== undefined && this._fixY !== 1)\n\t\t\tthis._fixH = 0;\n\t\tif (this._fixH)\n\t\t\tthis.y = bottom - this.height;\n\t\telse\n\t\t\tthis.height = bottom - this.y;\n\t\tthis._fixY = 1;\n\t},\n\n\tgetCenterX: function() {\n\t\treturn this.x + this.width * 0.5;\n\t},\n\n\tsetCenterX: function(x) {\n\t\tthis.x = x - this.width * 0.5;\n\t\tthis._fixX = 0.5;\n\t},\n\n\tgetCenterY: function() {\n\t\treturn this.y + this.height * 0.5;\n\t},\n\n\tsetCenterY: function(y) {\n\t\tthis.y = y - this.height * 0.5;\n\t\tthis._fixY = 0.5;\n\t},\n\n\tgetCenter: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\treturn new ctor(this.getCenterX(), this.getCenterY(), this, 'setCenter');\n\t},\n\n\tsetCenter: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.setCenterX(point.x);\n\t\tthis.setCenterY(point.y);\n\t\treturn this;\n\t},\n\n\tgetArea: function() {\n\t\treturn this.width * this.height;\n\t},\n\n\tisEmpty: function() {\n\t\treturn this.width === 0 || this.height === 0;\n\t},\n\n\tcontains: function(arg) {\n\t\treturn arg && arg.width !== undefined\n\t\t\t\t|| (Array.isArray(arg) ? arg : arguments).length == 4\n\t\t\t\t? this._containsRectangle(Rectangle.read(arguments))\n\t\t\t\t: this._containsPoint(Point.read(arguments));\n\t},\n\n\t_containsPoint: function(point) {\n\t\tvar x = point.x,\n\t\t\ty = point.y;\n\t\treturn x >= this.x && y >= this.y\n\t\t\t\t&& x <= this.x + this.width\n\t\t\t\t&& y <= this.y + this.height;\n\t},\n\n\t_containsRectangle: function(rect) {\n\t\tvar x = rect.x,\n\t\t\ty = rect.y;\n\t\treturn x >= this.x && y >= this.y\n\t\t\t\t&& x + rect.width <= this.x + this.width\n\t\t\t\t&& y + rect.height <= this.y + this.height;\n\t},\n\n\tintersects: function() {\n\t\tvar rect = Rectangle.read(arguments);\n\t\treturn rect.x + rect.width > this.x\n\t\t\t\t&& rect.y + rect.height > this.y\n\t\t\t\t&& rect.x < this.x + this.width\n\t\t\t\t&& rect.y < this.y + this.height;\n\t},\n\n\ttouches: function() {\n\t\tvar rect = Rectangle.read(arguments);\n\t\treturn rect.x + rect.width >= this.x\n\t\t\t\t&& rect.y + rect.height >= this.y\n\t\t\t\t&& rect.x <= this.x + this.width\n\t\t\t\t&& rect.y <= this.y + this.height;\n\t},\n\n\tintersect: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tx1 = Math.max(this.x, rect.x),\n\t\t\ty1 = Math.max(this.y, rect.y),\n\t\t\tx2 = Math.min(this.x + this.width, rect.x + rect.width),\n\t\t\ty2 = Math.min(this.y + this.height, rect.y + rect.height);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\tunite: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tx1 = Math.min(this.x, rect.x),\n\t\t\ty1 = Math.min(this.y, rect.y),\n\t\t\tx2 = Math.max(this.x + this.width, rect.x + rect.width),\n\t\t\ty2 = Math.max(this.y + this.height, rect.y + rect.height);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\tinclude: function() {\n\t\tvar point = Point.read(arguments);\n\t\tvar x1 = Math.min(this.x, point.x),\n\t\t\ty1 = Math.min(this.y, point.y),\n\t\t\tx2 = Math.max(this.x + this.width, point.x),\n\t\t\ty2 = Math.max(this.y + this.height, point.y);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\texpand: function() {\n\t\tvar amount = Size.read(arguments),\n\t\t\thor = amount.width,\n\t\t\tver = amount.height;\n\t\treturn new Rectangle(this.x - hor / 2, this.y - ver / 2,\n\t\t\t\tthis.width + hor, this.height + ver);\n\t},\n\n\tscale: function(hor, ver) {\n\t\treturn this.expand(this.width * hor - this.width,\n\t\t\t\tthis.height * (ver === undefined ? hor : ver) - this.height);\n\t}\n}, Base.each([\n\t\t['Top', 'Left'], ['Top', 'Right'],\n\t\t['Bottom', 'Left'], ['Bottom', 'Right'],\n\t\t['Left', 'Center'], ['Top', 'Center'],\n\t\t['Right', 'Center'], ['Bottom', 'Center']\n\t],\n\tfunction(parts, index) {\n\t\tvar part = parts.join('');\n\t\tvar xFirst = /^[RL]/.test(part);\n\t\tif (index >= 4)\n\t\t\tparts[1] += xFirst ? 'Y' : 'X';\n\t\tvar x = parts[xFirst ? 0 : 1],\n\t\t\ty = parts[xFirst ? 1 : 0],\n\t\t\tgetX = 'get' + x,\n\t\t\tgetY = 'get' + y,\n\t\t\tsetX = 'set' + x,\n\t\t\tsetY = 'set' + y,\n\t\t\tget = 'get' + part,\n\t\t\tset = 'set' + part;\n\t\tthis[get] = function(_dontLink) {\n\t\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\t\treturn new ctor(this[getX](), this[getY](), this, set);\n\t\t};\n\t\tthis[set] = function() {\n\t\t\tvar point = Point.read(arguments);\n\t\t\tthis[setX](point.x);\n\t\t\tthis[setY](point.y);\n\t\t};\n\t}, {\n\t\tbeans: true\n\t}\n));\n\nvar LinkedRectangle = Rectangle.extend({\n\tinitialize: function Rectangle(x, y, width, height, owner, setter) {\n\t\tthis.set(x, y, width, height, true);\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\tset: function(x, y, width, height, _dontNotify) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t}\n},\nnew function() {\n\tvar proto = Rectangle.prototype;\n\n\treturn Base.each(['x', 'y', 'width', 'height'], function(key) {\n\t\tvar part = Base.capitalize(key);\n\t\tvar internal = '_' + key;\n\t\tthis['get' + part] = function() {\n\t\t\treturn this[internal];\n\t\t};\n\n\t\tthis['set' + part] = function(value) {\n\t\t\tthis[internal] = value;\n\t\t\tif (!this._dontNotify)\n\t\t\t\tthis._owner[this._setter](this);\n\t\t};\n\t}, Base.each(['Point', 'Size', 'Center',\n\t\t\t'Left', 'Top', 'Right', 'Bottom', 'CenterX', 'CenterY',\n\t\t\t'TopLeft', 'TopRight', 'BottomLeft', 'BottomRight',\n\t\t\t'LeftCenter', 'TopCenter', 'RightCenter', 'BottomCenter'],\n\t\tfunction(key) {\n\t\t\tvar name = 'set' + key;\n\t\t\tthis[name] = function() {\n\t\t\t\tthis._dontNotify = true;\n\t\t\t\tproto[name].apply(this, arguments);\n\t\t\t\tthis._dontNotify = false;\n\t\t\t\tthis._owner[this._setter](this);\n\t\t\t};\n\t\t}, {\n\t\t\tisSelected: function() {\n\t\t\t\treturn this._owner._boundsSelected;\n\t\t\t},\n\n\t\t\tsetSelected: function(selected) {\n\t\t\t\tvar owner = this._owner;\n\t\t\t\tif (owner.setSelected) {\n\t\t\t\t\towner._boundsSelected = selected;\n\t\t\t\t\towner.setSelected(selected || owner._selectedSegmentState > 0);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t);\n});\n\nvar Matrix = Base.extend({\n\t_class: 'Matrix',\n\n\tinitialize: function Matrix(arg) {\n\t\tvar count = arguments.length,\n\t\t\tok = true;\n\t\tif (count === 6) {\n\t\t\tthis.set.apply(this, arguments);\n\t\t} else if (count === 1) {\n\t\t\tif (arg instanceof Matrix) {\n\t\t\t\tthis.set(arg._a, arg._c, arg._b, arg._d, arg._tx, arg._ty);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tthis.set.apply(this, arg);\n\t\t\t} else {\n\t\t\t\tok = false;\n\t\t\t}\n\t\t} else if (count === 0) {\n\t\t\tthis.reset();\n\t\t} else {\n\t\t\tok = false;\n\t\t}\n\t\tif (!ok)\n\t\t\tthrow new Error('Unsupported matrix parameters');\n\t},\n\n\tset: function(a, c, b, d, tx, ty, _dontNotify) {\n\t\tthis._a = a;\n\t\tthis._c = c;\n\t\tthis._b = b;\n\t\tthis._d = d;\n\t\tthis._tx = tx;\n\t\tthis._ty = ty;\n\t\tif (!_dontNotify)\n\t\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\t_serialize: function(options) {\n\t\treturn Base.serialize(this.getValues(), options);\n\t},\n\n\t_changed: function() {\n\t\tvar owner = this._owner;\n\t\tif (owner) {\n\t\t\tif (owner._applyMatrix) {\n\t\t\t\towner.transform(null, true);\n\t\t\t} else {\n\t\t\t\towner._changed(9);\n\t\t\t}\n\t\t}\n\t},\n\n\tclone: function() {\n\t\treturn new Matrix(this._a, this._c, this._b, this._d,\n\t\t\t\tthis._tx, this._ty);\n\t},\n\n\tequals: function(mx) {\n\t\treturn mx === this || mx && this._a === mx._a && this._b === mx._b\n\t\t\t\t&& this._c === mx._c && this._d === mx._d\n\t\t\t\t&& this._tx === mx._tx && this._ty === mx._ty\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '[[' + [f.number(this._a), f.number(this._b),\n\t\t\t\t\tf.number(this._tx)].join(', ') + '], ['\n\t\t\t\t+ [f.number(this._c), f.number(this._d),\n\t\t\t\t\tf.number(this._ty)].join(', ') + ']]';\n\t},\n\n\treset: function(_dontNotify) {\n\t\tthis._a = this._d = 1;\n\t\tthis._c = this._b = this._tx = this._ty = 0;\n\t\tif (!_dontNotify)\n\t\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tapply: function(recursively, _setApplyMatrix) {\n\t\tvar owner = this._owner;\n\t\tif (owner) {\n\t\t\towner.transform(null, true, Base.pick(recursively, true),\n\t\t\t\t\t_setApplyMatrix);\n\t\t\treturn this.isIdentity();\n\t\t}\n\t\treturn false;\n\t},\n\n\ttranslate: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tx = point.x,\n\t\t\ty = point.y;\n\t\tthis._tx += x * this._a + y * this._b;\n\t\tthis._ty += x * this._c + y * this._d;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tscale: function() {\n\t\tvar scale = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\tif (center)\n\t\t\tthis.translate(center);\n\t\tthis._a *= scale.x;\n\t\tthis._c *= scale.x;\n\t\tthis._b *= scale.y;\n\t\tthis._d *= scale.y;\n\t\tif (center)\n\t\t\tthis.translate(center.negate());\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\trotate: function(angle ) {\n\t\tangle *= Math.PI / 180;\n\t\tvar center = Point.read(arguments, 1),\n\t\t\tx = center.x,\n\t\t\ty = center.y,\n\t\t\tcos = Math.cos(angle),\n\t\t\tsin = Math.sin(angle),\n\t\t\ttx = x - x * cos + y * sin,\n\t\t\tty = y - x * sin - y * cos,\n\t\t\ta = this._a,\n\t\t\tb = this._b,\n\t\t\tc = this._c,\n\t\t\td = this._d;\n\t\tthis._a = cos * a + sin * b;\n\t\tthis._b = -sin * a + cos * b;\n\t\tthis._c = cos * c + sin * d;\n\t\tthis._d = -sin * c + cos * d;\n\t\tthis._tx += tx * a + ty * b;\n\t\tthis._ty += tx * c + ty * d;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tshear: function() {\n\t\tvar shear = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\tif (center)\n\t\t\tthis.translate(center);\n\t\tvar a = this._a,\n\t\t\tc = this._c;\n\t\tthis._a += shear.y * this._b;\n\t\tthis._c += shear.y * this._d;\n\t\tthis._b += shear.x * a;\n\t\tthis._d += shear.x * c;\n\t\tif (center)\n\t\t\tthis.translate(center.negate());\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tskew: function() {\n\t\tvar skew = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true }),\n\t\t\ttoRadians = Math.PI / 180,\n\t\t\tshear = new Point(Math.tan(skew.x * toRadians),\n\t\t\t\tMath.tan(skew.y * toRadians));\n\t\treturn this.shear(shear, center);\n\t},\n\n\tconcatenate: function(mx) {\n\t\tvar a1 = this._a,\n\t\t\tb1 = this._b,\n\t\t\tc1 = this._c,\n\t\t\td1 = this._d,\n\t\t\ta2 = mx._a,\n\t\t\tb2 = mx._b,\n\t\t\tc2 = mx._c,\n\t\t\td2 = mx._d,\n\t\t\ttx2 = mx._tx,\n\t\t\tty2 = mx._ty;\n\t\tthis._a = a2 * a1 + c2 * b1;\n\t\tthis._b = b2 * a1 + d2 * b1;\n\t\tthis._c = a2 * c1 + c2 * d1;\n\t\tthis._d = b2 * c1 + d2 * d1;\n\t\tthis._tx += tx2 * a1 + ty2 * b1;\n\t\tthis._ty += tx2 * c1 + ty2 * d1;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tpreConcatenate: function(mx) {\n\t\tvar a1 = this._a,\n\t\t\tb1 = this._b,\n\t\t\tc1 = this._c,\n\t\t\td1 = this._d,\n\t\t\ttx1 = this._tx,\n\t\t\tty1 = this._ty,\n\t\t\ta2 = mx._a,\n\t\t\tb2 = mx._b,\n\t\t\tc2 = mx._c,\n\t\t\td2 = mx._d,\n\t\t\ttx2 = mx._tx,\n\t\t\tty2 = mx._ty;\n\t\tthis._a = a2 * a1 + b2 * c1;\n\t\tthis._b = a2 * b1 + b2 * d1;\n\t\tthis._c = c2 * a1 + d2 * c1;\n\t\tthis._d = c2 * b1 + d2 * d1;\n\t\tthis._tx = a2 * tx1 + b2 * ty1 + tx2;\n\t\tthis._ty = c2 * tx1 + d2 * ty1 + ty2;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tchain: function(mx) {\n\t\tvar a1 = this._a,\n\t\t\tb1 = this._b,\n\t\t\tc1 = this._c,\n\t\t\td1 = this._d,\n\t\t\ttx1 = this._tx,\n\t\t\tty1 = this._ty,\n\t\t\ta2 = mx._a,\n\t\t\tb2 = mx._b,\n\t\t\tc2 = mx._c,\n\t\t\td2 = mx._d,\n\t\t\ttx2 = mx._tx,\n\t\t\tty2 = mx._ty;\n\t\treturn new Matrix(\n\t\t\t\ta2 * a1 + c2 * b1,\n\t\t\t\ta2 * c1 + c2 * d1,\n\t\t\t\tb2 * a1 + d2 * b1,\n\t\t\t\tb2 * c1 + d2 * d1,\n\t\t\t\ttx1 + tx2 * a1 + ty2 * b1,\n\t\t\t\tty1 + tx2 * c1 + ty2 * d1);\n\t},\n\n\tisIdentity: function() {\n\t\treturn this._a === 1 && this._c === 0 && this._b === 0 && this._d === 1\n\t\t\t\t&& this._tx === 0 && this._ty === 0;\n\t},\n\n\torNullIfIdentity: function() {\n\t\treturn this.isIdentity() ? null : this;\n\t},\n\n\tisInvertible: function() {\n\t\treturn !!this._getDeterminant();\n\t},\n\n\tisSingular: function() {\n\t\treturn !this._getDeterminant();\n\t},\n\n\ttransform: function( src, dst, count) {\n\t\treturn arguments.length < 3\n\t\t\t? this._transformPoint(Point.read(arguments))\n\t\t\t: this._transformCoordinates(src, dst, count);\n\t},\n\n\t_transformPoint: function(point, dest, _dontNotify) {\n\t\tvar x = point.x,\n\t\t\ty = point.y;\n\t\tif (!dest)\n\t\t\tdest = new Point();\n\t\treturn dest.set(\n\t\t\tx * this._a + y * this._b + this._tx,\n\t\t\tx * this._c + y * this._d + this._ty,\n\t\t\t_dontNotify\n\t\t);\n\t},\n\n\t_transformCoordinates: function(src, dst, count) {\n\t\tvar i = 0,\n\t\t\tj = 0,\n\t\t\tmax = 2 * count;\n\t\twhile (i < max) {\n\t\t\tvar x = src[i++],\n\t\t\t\ty = src[i++];\n\t\t\tdst[j++] = x * this._a + y * this._b + this._tx;\n\t\t\tdst[j++] = x * this._c + y * this._d + this._ty;\n\t\t}\n\t\treturn dst;\n\t},\n\n\t_transformCorners: function(rect) {\n\t\tvar x1 = rect.x,\n\t\t\ty1 = rect.y,\n\t\t\tx2 = x1 + rect.width,\n\t\t\ty2 = y1 + rect.height,\n\t\t\tcoords = [ x1, y1, x2, y1, x2, y2, x1, y2 ];\n\t\treturn this._transformCoordinates(coords, coords, 4);\n\t},\n\n\t_transformBounds: function(bounds, dest, _dontNotify) {\n\t\tvar coords = this._transformCorners(bounds),\n\t\t\tmin = coords.slice(0, 2),\n\t\t\tmax = min.slice();\n\t\tfor (var i = 2; i < 8; i++) {\n\t\t\tvar val = coords[i],\n\t\t\t\tj = i & 1;\n\t\t\tif (val < min[j])\n\t\t\t\tmin[j] = val;\n\t\t\telse if (val > max[j])\n\t\t\t\tmax[j] = val;\n\t\t}\n\t\tif (!dest)\n\t\t\tdest = new Rectangle();\n\t\treturn dest.set(min[0], min[1], max[0] - min[0], max[1] - min[1],\n\t\t\t\t_dontNotify);\n\t},\n\n\tinverseTransform: function() {\n\t\treturn this._inverseTransform(Point.read(arguments));\n\t},\n\n\t_getDeterminant: function() {\n\t\tvar det = this._a * this._d - this._b * this._c;\n\t\treturn isFinite(det) && !Numerical.isZero(det)\n\t\t\t\t&& isFinite(this._tx) && isFinite(this._ty)\n\t\t\t\t? det : null;\n\t},\n\n\t_inverseTransform: function(point, dest, _dontNotify) {\n\t\tvar det = this._getDeterminant();\n\t\tif (!det)\n\t\t\treturn null;\n\t\tvar x = point.x - this._tx,\n\t\t\ty = point.y - this._ty;\n\t\tif (!dest)\n\t\t\tdest = new Point();\n\t\treturn dest.set(\n\t\t\t(x * this._d - y * this._b) / det,\n\t\t\t(y * this._a - x * this._c) / det,\n\t\t\t_dontNotify\n\t\t);\n\t},\n\n\tdecompose: function() {\n\t\tvar a = this._a, b = this._b, c = this._c, d = this._d;\n\t\tif (Numerical.isZero(a * d - b * c))\n\t\t\treturn null;\n\n\t\tvar scaleX = Math.sqrt(a * a + b * b);\n\t\ta /= scaleX;\n\t\tb /= scaleX;\n\n\t\tvar shear = a * c + b * d;\n\t\tc -= a * shear;\n\t\td -= b * shear;\n\n\t\tvar scaleY = Math.sqrt(c * c + d * d);\n\t\tc /= scaleY;\n\t\td /= scaleY;\n\t\tshear /= scaleY;\n\n\t\tif (a * d < b * c) {\n\t\t\ta = -a;\n\t\t\tb = -b;\n\t\t\tshear = -shear;\n\t\t\tscaleX = -scaleX;\n\t\t}\n\n\t\treturn {\n\t\t\tscaling: new Point(scaleX, scaleY),\n\t\t\trotation: -Math.atan2(b, a) * 180 / Math.PI,\n\t\t\tshearing: shear\n\t\t};\n\t},\n\n\tgetValues: function() {\n\t\treturn [ this._a, this._c, this._b, this._d, this._tx, this._ty ];\n\t},\n\n\tgetTranslation: function() {\n\t\treturn new Point(this._tx, this._ty);\n\t},\n\n\tgetScaling: function() {\n\t\treturn (this.decompose() || {}).scaling;\n\t},\n\n\tgetRotation: function() {\n\t\treturn (this.decompose() || {}).rotation;\n\t},\n\n\tinverted: function() {\n\t\tvar det = this._getDeterminant();\n\t\treturn det && new Matrix(\n\t\t\t\tthis._d / det,\n\t\t\t\t-this._c / det,\n\t\t\t\t-this._b / det,\n\t\t\t\tthis._a / det,\n\t\t\t\t(this._b * this._ty - this._d * this._tx) / det,\n\t\t\t\t(this._c * this._tx - this._a * this._ty) / det);\n\t},\n\n\tshiftless: function() {\n\t\treturn new Matrix(this._a, this._c, this._b, this._d, 0, 0);\n\t},\n\n\tapplyToContext: function(ctx) {\n\t\tctx.transform(this._a, this._c, this._b, this._d, this._tx, this._ty);\n\t}\n}, Base.each(['a', 'c', 'b', 'd', 'tx', 'ty'], function(name) {\n\tvar part = Base.capitalize(name),\n\t\tprop = '_' + name;\n\tthis['get' + part] = function() {\n\t\treturn this[prop];\n\t};\n\tthis['set' + part] = function(value) {\n\t\tthis[prop] = value;\n\t\tthis._changed();\n\t};\n}, {}));\n\nvar Line = Base.extend({\n\t_class: 'Line',\n\n\tinitialize: function Line(arg0, arg1, arg2, arg3, arg4) {\n\t\tvar asVector = false;\n\t\tif (arguments.length >= 4) {\n\t\t\tthis._px = arg0;\n\t\t\tthis._py = arg1;\n\t\t\tthis._vx = arg2;\n\t\t\tthis._vy = arg3;\n\t\t\tasVector = arg4;\n\t\t} else {\n\t\t\tthis._px = arg0.x;\n\t\t\tthis._py = arg0.y;\n\t\t\tthis._vx = arg1.x;\n\t\t\tthis._vy = arg1.y;\n\t\t\tasVector = arg2;\n\t\t}\n\t\tif (!asVector) {\n\t\t\tthis._vx -= this._px;\n\t\t\tthis._vy -= this._py;\n\t\t}\n\t},\n\n\tgetPoint: function() {\n\t\treturn new Point(this._px, this._py);\n\t},\n\n\tgetVector: function() {\n\t\treturn new Point(this._vx, this._vy);\n\t},\n\n\tgetLength: function() {\n\t\treturn this.getVector().getLength();\n\t},\n\n\tintersect: function(line, isInfinite) {\n\t\treturn Line.intersect(\n\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\tline._px, line._py, line._vx, line._vy,\n\t\t\t\ttrue, isInfinite);\n\t},\n\n\tgetSide: function(point, isInfinite) {\n\t\treturn Line.getSide(\n\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\tpoint.x, point.y, true, isInfinite);\n\t},\n\n\tgetDistance: function(point) {\n\t\treturn Math.abs(Line.getSignedDistance(\n\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\tpoint.x, point.y, true));\n\t},\n\n\tisCollinear: function(line) {\n\t\treturn Point.isCollinear(this._vx, this._vy, line._vx, line._vy);\n\t},\n\n\tisOrthogonal: function(line) {\n\t\treturn Point.isOrthogonal(this._vx, this._vy, line._vx, line._vy);\n\t},\n\n\tstatics: {\n\t\tintersect: function(p1x, p1y, v1x, v1y, p2x, p2y, v2x, v2y, asVector,\n\t\t\t\tisInfinite) {\n\t\t\tif (!asVector) {\n\t\t\t\tv1x -= p1x;\n\t\t\t\tv1y -= p1y;\n\t\t\t\tv2x -= p2x;\n\t\t\t\tv2y -= p2y;\n\t\t\t}\n\t\t\tvar cross = v1x * v2y - v1y * v2x;\n\t\t\tif (!Numerical.isZero(cross)) {\n\t\t\t\tvar dx = p1x - p2x,\n\t\t\t\t\tdy = p1y - p2y,\n\t\t\t\t\tu1 = (v2x * dy - v2y * dx) / cross,\n\t\t\t\t\tu2 = (v1x * dy - v1y * dx) / cross,\n\t\t\t\t\tepsilon = 1e-12,\n\t\t\t\t\tuMin = -epsilon,\n\t\t\t\t\tuMax = 1 + epsilon;\n\t\t\t\tif (isInfinite\n\t\t\t\t\t\t|| uMin < u1 && u1 < uMax && uMin < u2 && u2 < uMax) {\n\t\t\t\t\tif (!isInfinite) {\n\t\t\t\t\t\tu1 = u1 <= 0 ? 0 : u1 >= 1 ? 1 : u1;\n\t\t\t\t\t}\n\t\t\t\t\treturn new Point(\n\t\t\t\t\t\t\tp1x + u1 * v1x,\n\t\t\t\t\t\t\tp1y + u1 * v1y);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tgetSide: function(px, py, vx, vy, x, y, asVector, isInfinite) {\n\t\t\tif (!asVector) {\n\t\t\t\tvx -= px;\n\t\t\t\tvy -= py;\n\t\t\t}\n\t\t\tvar v2x = x - px,\n\t\t\t\tv2y = y - py,\n\t\t\t\tccw = v2x * vy - v2y * vx;\n\t\t\tif (ccw === 0 && !isInfinite) {\n\t\t\t\tccw = (v2x * vx + v2x * vx) / (vx * vx + vy * vy);\n\t\t\t\tif (ccw >= 0 && ccw <= 1)\n\t\t\t\t\tccw = 0;\n\t\t\t}\n\t\t\treturn ccw < 0 ? -1 : ccw > 0 ? 1 : 0;\n\t\t},\n\n\t\tgetSignedDistance: function(px, py, vx, vy, x, y, asVector) {\n\t\t\tif (!asVector) {\n\t\t\t\tvx -= px;\n\t\t\t\tvy -= py;\n\t\t\t}\n\t\t\treturn vx === 0 ? vy > 0 ? x - px : px - x\n\t\t\t\t : vy === 0 ? vx < 0 ? y - py : py - y\n\t\t\t\t : ((x-px) * vy - (y-py) * vx) / Math.sqrt(vx * vx + vy * vy);\n\t\t}\n\t}\n});\n\nvar Project = PaperScopeItem.extend({\n\t_class: 'Project',\n\t_list: 'projects',\n\t_reference: 'project',\n\n\tinitialize: function Project(element) {\n\t\tPaperScopeItem.call(this, true);\n\t\tthis.layers = [];\n\t\tthis._activeLayer = null;\n\t\tthis.symbols = [];\n\t\tthis._currentStyle = new Style(null, null, this);\n\t\tthis._view = View.create(this,\n\t\t\t\telement || CanvasProvider.getCanvas(1, 1));\n\t\tthis._selectedItems = {};\n\t\tthis._selectedItemCount = 0;\n\t\tthis._updateVersion = 0;\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn Base.serialize(this.layers, options, true, dictionary);\n\t},\n\n\tclear: function() {\n\t\tfor (var i = this.layers.length - 1; i >= 0; i--)\n\t\t\tthis.layers[i].remove();\n\t\tthis.symbols = [];\n\t},\n\n\tisEmpty: function() {\n\t\treturn this.layers.length === 0;\n\t},\n\n\tremove: function remove() {\n\t\tif (!remove.base.call(this))\n\t\t\treturn false;\n\t\tif (this._view)\n\t\t\tthis._view.remove();\n\t\treturn true;\n\t},\n\n\tgetView: function() {\n\t\treturn this._view;\n\t},\n\n\tgetCurrentStyle: function() {\n\t\treturn this._currentStyle;\n\t},\n\n\tsetCurrentStyle: function(style) {\n\t\tthis._currentStyle.initialize(style);\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index;\n\t},\n\n\tgetOptions: function() {\n\t\treturn this._scope.settings;\n\t},\n\n\tgetActiveLayer: function() {\n\t\treturn this._activeLayer || new Layer({ project: this });\n\t},\n\n\tgetSelectedItems: function() {\n\t\tvar items = [];\n\t\tfor (var id in this._selectedItems) {\n\t\t\tvar item = this._selectedItems[id];\n\t\t\tif (item.isInserted())\n\t\t\t\titems.push(item);\n\t\t}\n\t\treturn items;\n\t},\n\n\tinsertChild: function(index, item, _preserve) {\n\t\tif (item instanceof Layer) {\n\t\t\titem._remove(false, true);\n\t\t\tBase.splice(this.layers, [item], index, 0);\n\t\t\titem._setProject(this, true);\n\t\t\tif (this._changes)\n\t\t\t\titem._changed(5);\n\t\t\tif (!this._activeLayer)\n\t\t\t\tthis._activeLayer = item;\n\t\t} else if (item instanceof Item) {\n\t\t\t(this._activeLayer\n\t\t\t\t|| this.insertChild(index, new Layer(Item.NO_INSERT)))\n\t\t\t\t\t.insertChild(index, item, _preserve);\n\t\t} else {\n\t\t\titem = null;\n\t\t}\n\t\treturn item;\n\t},\n\n\taddChild: function(item, _preserve) {\n\t\treturn this.insertChild(undefined, item, _preserve);\n\t},\n\n\t_updateSelection: function(item) {\n\t\tvar id = item._id,\n\t\t\tselectedItems = this._selectedItems;\n\t\tif (item._selected) {\n\t\t\tif (selectedItems[id] !== item) {\n\t\t\t\tthis._selectedItemCount++;\n\t\t\t\tselectedItems[id] = item;\n\t\t\t}\n\t\t} else if (selectedItems[id] === item) {\n\t\t\tthis._selectedItemCount--;\n\t\t\tdelete selectedItems[id];\n\t\t}\n\t},\n\n\tselectAll: function() {\n\t\tvar layers = this.layers;\n\t\tfor (var i = 0, l = layers.length; i < l; i++)\n\t\t\tlayers[i].setFullySelected(true);\n\t},\n\n\tdeselectAll: function() {\n\t\tvar selectedItems = this._selectedItems;\n\t\tfor (var i in selectedItems)\n\t\t\tselectedItems[i].setFullySelected(false);\n\t},\n\n\thitTest: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\toptions = HitResult.getOptions(Base.read(arguments));\n\t\tfor (var i = this.layers.length - 1; i >= 0; i--) {\n\t\t\tvar res = this.layers[i]._hitTest(point, options);\n\t\t\tif (res) return res;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetItems: function(match) {\n\t\treturn Item._getItems(this.layers, match);\n\t},\n\n\tgetItem: function(match) {\n\t\treturn Item._getItems(this.layers, match, null, null, true)[0] || null;\n\t},\n\n\timportJSON: function(json) {\n\t\tthis.activate();\n\t\tvar layer = this._activeLayer;\n\t\treturn Base.importJSON(json, layer && layer.isEmpty() && layer);\n\t},\n\n\tdraw: function(ctx, matrix, pixelRatio) {\n\t\tthis._updateVersion++;\n\t\tctx.save();\n\t\tmatrix.applyToContext(ctx);\n\t\tvar param = new Base({\n\t\t\toffset: new Point(0, 0),\n\t\t\tpixelRatio: pixelRatio,\n\t\t\tviewMatrix: matrix.isIdentity() ? null : matrix,\n\t\t\tmatrices: [new Matrix()],\n\t\t\tupdateMatrix: true\n\t\t});\n\t\tfor (var i = 0, layers = this.layers, l = layers.length; i < l; i++)\n\t\t\tlayers[i].draw(ctx, param);\n\t\tctx.restore();\n\n\t\tif (this._selectedItemCount > 0) {\n\t\t\tctx.save();\n\t\t\tctx.strokeWidth = 1;\n\t\t\tvar items = this._selectedItems,\n\t\t\t\tsize = this._scope.settings.handleSize,\n\t\t\t\tversion = this._updateVersion;\n\t\t\tfor (var id in items)\n\t\t\t\titems[id]._drawSelection(ctx, matrix, size, items, version);\n\t\t\tctx.restore();\n\t\t}\n\t}\n});\n\nvar Symbol = Base.extend({\n\t_class: 'Symbol',\n\n\tinitialize: function Symbol(item, dontCenter) {\n\t\tthis._id = UID.get();\n\t\tthis.project = paper.project;\n\t\tthis.project.symbols.push(this);\n\t\tif (item)\n\t\t\tthis.setDefinition(item, dontCenter);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn dictionary.add(this, function() {\n\t\t\treturn Base.serialize([this._class, this._definition],\n\t\t\t\t\toptions, false, dictionary);\n\t\t});\n\t},\n\n\t_changed: function(flags) {\n\t\tif (flags & 8) {\n\t\t\tItem._clearBoundsCache(this);\n\t\t}\n\t\tif (flags & 1) {\n\t\t\tthis.project._needsUpdate = true;\n\t\t}\n\t},\n\n\tgetDefinition: function() {\n\t\treturn this._definition;\n\t},\n\n\tsetDefinition: function(item, _dontCenter) {\n\t\tif (item._parentSymbol)\n\t\t\titem = item.clone();\n\t\tif (this._definition)\n\t\t\tthis._definition._parentSymbol = null;\n\t\tthis._definition = item;\n\t\titem.remove();\n\t\titem.setSelected(false);\n\t\tif (!_dontCenter)\n\t\t\titem.setPosition(new Point());\n\t\titem._parentSymbol = this;\n\t\tthis._changed(9);\n\t},\n\n\tplace: function(position) {\n\t\treturn new PlacedSymbol(this, position);\n\t},\n\n\tclone: function() {\n\t\treturn new Symbol(this._definition.clone(false));\n\t},\n\n\tequals: function(symbol) {\n\t\treturn symbol === this\n\t\t\t\t|| symbol && this.definition.equals(symbol.definition)\n\t\t\t\t|| false;\n\t}\n});\n\nvar Item = Base.extend(Emitter, {\n\tstatics: {\n\t\textend: function extend(src) {\n\t\t\tif (src._serializeFields)\n\t\t\t\tsrc._serializeFields = new Base(\n\t\t\t\t\t\tthis.prototype._serializeFields, src._serializeFields);\n\t\t\treturn extend.base.apply(this, arguments);\n\t\t},\n\n\t\tNO_INSERT: { insert: false }\n\t},\n\n\t_class: 'Item',\n\t_applyMatrix: true,\n\t_canApplyMatrix: true,\n\t_boundsSelected: false,\n\t_selectChildren: false,\n\t_serializeFields: {\n\t\tname: null,\n\t\tapplyMatrix: null,\n\t\tmatrix: new Matrix(),\n\t\tpivot: null,\n\t\tlocked: false,\n\t\tvisible: true,\n\t\tblendMode: 'normal',\n\t\topacity: 1,\n\t\tguide: false,\n\t\tselected: false,\n\t\tclipMask: false,\n\t\tdata: {}\n\t},\n\n\tinitialize: function Item() {\n\t},\n\n\t_initialize: function(props, point) {\n\t\tvar hasProps = props && Base.isPlainObject(props),\n\t\t\tinternal = hasProps && props.internal === true,\n\t\t\tmatrix = this._matrix = new Matrix(),\n\t\t\tproject = hasProps && props.project || paper.project;\n\t\tif (!internal)\n\t\t\tthis._id = UID.get();\n\t\tthis._applyMatrix = this._canApplyMatrix && paper.settings.applyMatrix;\n\t\tif (point)\n\t\t\tmatrix.translate(point);\n\t\tmatrix._owner = this;\n\t\tthis._style = new Style(project._currentStyle, this, project);\n\t\tif (!this._project) {\n\t\t\tif (internal || hasProps && props.insert === false) {\n\t\t\t\tthis._setProject(project);\n\t\t\t} else if (hasProps && props.parent) {\n\t\t\t\tthis.setParent(props.parent);\n\t\t\t} else {\n\t\t\t\t(project._activeLayer || new Layer()).addChild(this);\n\t\t\t}\n\t\t}\n\t\tif (hasProps && props !== Item.NO_INSERT)\n\t\t\tthis._set(props, { insert: true, project: true, parent: true },\n\t\t\t\t\ttrue);\n\t\treturn hasProps;\n\t},\n\n\t_events: Base.each(['onMouseDown', 'onMouseUp', 'onMouseDrag', 'onClick',\n\t\t\t'onDoubleClick', 'onMouseMove', 'onMouseEnter', 'onMouseLeave'],\n\t\tfunction(name) {\n\t\t\tthis[name] = {\n\t\t\t\tinstall: function(type) {\n\t\t\t\t\tthis.getView()._installEvent(type);\n\t\t\t\t},\n\n\t\t\t\tuninstall: function(type) {\n\t\t\t\t\tthis.getView()._uninstallEvent(type);\n\t\t\t\t}\n\t\t\t};\n\t\t}, {\n\t\t\tonFrame: {\n\t\t\t\tinstall: function() {\n\t\t\t\t\tthis.getView()._animateItem(this, true);\n\t\t\t\t},\n\n\t\t\t\tuninstall: function() {\n\t\t\t\t\tthis.getView()._animateItem(this, false);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonLoad: {}\n\t\t}\n\t),\n\n\t_serialize: function(options, dictionary) {\n\t\tvar props = {},\n\t\t\tthat = this;\n\n\t\tfunction serialize(fields) {\n\t\t\tfor (var key in fields) {\n\t\t\t\tvar value = that[key];\n\t\t\t\tif (!Base.equals(value, key === 'leading'\n\t\t\t\t\t\t? fields.fontSize * 1.2 : fields[key])) {\n\t\t\t\t\tprops[key] = Base.serialize(value, options,\n\t\t\t\t\t\t\tkey !== 'data', dictionary);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tserialize(this._serializeFields);\n\t\tif (!(this instanceof Group))\n\t\t\tserialize(this._style._defaults);\n\t\treturn [ this._class, props ];\n\t},\n\n\t_changed: function(flags) {\n\t\tvar symbol = this._parentSymbol,\n\t\t\tcacheParent = this._parent || symbol,\n\t\t\tproject = this._project;\n\t\tif (flags & 8) {\n\t\t\tthis._bounds = this._position = this._decomposed =\n\t\t\t\t\tthis._globalMatrix = this._currentPath = undefined;\n\t\t}\n\t\tif (cacheParent\n\t\t\t\t&& (flags & 40)) {\n\t\t\tItem._clearBoundsCache(cacheParent);\n\t\t}\n\t\tif (flags & 2) {\n\t\t\tItem._clearBoundsCache(this);\n\t\t}\n\t\tif (project) {\n\t\t\tif (flags & 1) {\n\t\t\t\tproject._needsUpdate = true;\n\t\t\t}\n\t\t\tif (project._changes) {\n\t\t\t\tvar entry = project._changesById[this._id];\n\t\t\t\tif (entry) {\n\t\t\t\t\tentry.flags |= flags;\n\t\t\t\t} else {\n\t\t\t\t\tentry = { item: this, flags: flags };\n\t\t\t\t\tproject._changesById[this._id] = entry;\n\t\t\t\t\tproject._changes.push(entry);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (symbol)\n\t\t\tsymbol._changed(flags);\n\t},\n\n\tset: function(props) {\n\t\tif (props)\n\t\t\tthis._set(props);\n\t\treturn this;\n\t},\n\n\tgetId: function() {\n\t\treturn this._id;\n\t},\n\n\tgetName: function() {\n\t\treturn this._name;\n\t},\n\n\tsetName: function(name, unique) {\n\n\t\tif (this._name)\n\t\t\tthis._removeNamed();\n\t\tif (name === (+name) + '')\n\t\t\tthrow new Error(\n\t\t\t\t\t'Names consisting only of numbers are not supported.');\n\t\tvar parent = this._parent;\n\t\tif (name && parent) {\n\t\t\tvar children = parent._children,\n\t\t\t\tnamedChildren = parent._namedChildren,\n\t\t\t\torig = name,\n\t\t\t\ti = 1;\n\t\t\twhile (unique && children[name])\n\t\t\t\tname = orig + ' ' + (i++);\n\t\t\t(namedChildren[name] = namedChildren[name] || []).push(this);\n\t\t\tchildren[name] = this;\n\t\t}\n\t\tthis._name = name || undefined;\n\t\tthis._changed(128);\n\t},\n\n\tgetStyle: function() {\n\t\treturn this._style;\n\t},\n\n\tsetStyle: function(style) {\n\t\tthis.getStyle().set(style);\n\t}\n}, Base.each(['locked', 'visible', 'blendMode', 'opacity', 'guide'],\n\tfunction(name) {\n\t\tvar part = Base.capitalize(name),\n\t\t\tname = '_' + name;\n\t\tthis['get' + part] = function() {\n\t\t\treturn this[name];\n\t\t};\n\t\tthis['set' + part] = function(value) {\n\t\t\tif (value != this[name]) {\n\t\t\t\tthis[name] = value;\n\t\t\t\tthis._changed(name === '_locked'\n\t\t\t\t\t\t? 128 : 129);\n\t\t\t}\n\t\t};\n\t},\n{}), {\n\tbeans: true,\n\n\t_locked: false,\n\n\t_visible: true,\n\n\t_blendMode: 'normal',\n\n\t_opacity: 1,\n\n\t_guide: false,\n\n\tisSelected: function() {\n\t\tif (this._selectChildren) {\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tif (children[i].isSelected())\n\t\t\t\t\treturn true;\n\t\t}\n\t\treturn this._selected;\n\t},\n\n\tsetSelected: function(selected, noChildren) {\n\t\tif (!noChildren && this._selectChildren) {\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].setSelected(selected);\n\t\t}\n\t\tif ((selected = !!selected) ^ this._selected) {\n\t\t\tthis._selected = selected;\n\t\t\tthis._project._updateSelection(this);\n\t\t\tthis._changed(129);\n\t\t}\n\t},\n\n\t_selected: false,\n\n\tisFullySelected: function() {\n\t\tvar children = this._children;\n\t\tif (children && this._selected) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tif (!children[i].isFullySelected())\n\t\t\t\t\treturn false;\n\t\t\treturn true;\n\t\t}\n\t\treturn this._selected;\n\t},\n\n\tsetFullySelected: function(selected) {\n\t\tvar children = this._children;\n\t\tif (children) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].setFullySelected(selected);\n\t\t}\n\t\tthis.setSelected(selected, true);\n\t},\n\n\tisClipMask: function() {\n\t\treturn this._clipMask;\n\t},\n\n\tsetClipMask: function(clipMask) {\n\t\tif (this._clipMask != (clipMask = !!clipMask)) {\n\t\t\tthis._clipMask = clipMask;\n\t\t\tif (clipMask) {\n\t\t\t\tthis.setFillColor(null);\n\t\t\t\tthis.setStrokeColor(null);\n\t\t\t}\n\t\t\tthis._changed(129);\n\t\t\tif (this._parent)\n\t\t\t\tthis._parent._changed(1024);\n\t\t}\n\t},\n\n\t_clipMask: false,\n\n\tgetData: function() {\n\t\tif (!this._data)\n\t\t\tthis._data = {};\n\t\treturn this._data;\n\t},\n\n\tsetData: function(data) {\n\t\tthis._data = data;\n\t},\n\n\tgetPosition: function(_dontLink) {\n\t\tvar position = this._position,\n\t\t\tctor = _dontLink ? Point : LinkedPoint;\n\t\tif (!position) {\n\t\t\tvar pivot = this._pivot;\n\t\t\tposition = this._position = pivot\n\t\t\t\t\t? this._matrix._transformPoint(pivot)\n\t\t\t\t\t: this.getBounds().getCenter(true);\n\t\t}\n\t\treturn new ctor(position.x, position.y, this, 'setPosition');\n\t},\n\n\tsetPosition: function() {\n\t\tthis.translate(Point.read(arguments).subtract(this.getPosition(true)));\n\t},\n\n\tgetPivot: function(_dontLink) {\n\t\tvar pivot = this._pivot;\n\t\tif (pivot) {\n\t\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\t\tpivot = new ctor(pivot.x, pivot.y, this, 'setPivot');\n\t\t}\n\t\treturn pivot;\n\t},\n\n\tsetPivot: function() {\n\t\tthis._pivot = Point.read(arguments, 0, { clone: true, readNull: true });\n\t\tthis._position = undefined;\n\t},\n\n\t_pivot: null,\n}, Base.each(['bounds', 'strokeBounds', 'handleBounds', 'roughBounds',\n\t\t'internalBounds', 'internalRoughBounds'],\n\tfunction(key) {\n\t\tvar getter = 'get' + Base.capitalize(key),\n\t\t\tmatch = key.match(/^internal(.*)$/),\n\t\t\tinternalGetter = match ? 'get' + match[1] : null;\n\t\tthis[getter] = function(_matrix) {\n\t\t\tvar boundsGetter = this._boundsGetter,\n\t\t\t\tname = !internalGetter && (typeof boundsGetter === 'string'\n\t\t\t\t\t\t? boundsGetter : boundsGetter && boundsGetter[getter])\n\t\t\t\t\t\t|| getter,\n\t\t\t\tbounds = this._getCachedBounds(name, _matrix, this,\n\t\t\t\t\t\tinternalGetter);\n\t\t\treturn key === 'bounds'\n\t\t\t\t\t? new LinkedRectangle(bounds.x, bounds.y, bounds.width,\n\t\t\t\t\t\t\tbounds.height, this, 'setBounds')\n\t\t\t\t\t: bounds;\n\t\t};\n\t},\n{\n\tbeans: true,\n\n\t_getBounds: function(getter, matrix, cacheItem) {\n\t\tvar children = this._children;\n\t\tif (!children || children.length == 0)\n\t\t\treturn new Rectangle();\n\t\tItem._updateBoundsCache(this, cacheItem);\n\t\tvar x1 = Infinity,\n\t\t\tx2 = -x1,\n\t\t\ty1 = x1,\n\t\t\ty2 = x2;\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i];\n\t\t\tif (child._visible && !child.isEmpty()) {\n\t\t\t\tvar rect = child._getCachedBounds(getter,\n\t\t\t\t\t\tmatrix && matrix.chain(child._matrix), cacheItem);\n\t\t\t\tx1 = Math.min(rect.x, x1);\n\t\t\t\ty1 = Math.min(rect.y, y1);\n\t\t\t\tx2 = Math.max(rect.x + rect.width, x2);\n\t\t\t\ty2 = Math.max(rect.y + rect.height, y2);\n\t\t\t}\n\t\t}\n\t\treturn isFinite(x1)\n\t\t\t\t? new Rectangle(x1, y1, x2 - x1, y2 - y1)\n\t\t\t\t: new Rectangle();\n\t},\n\n\tsetBounds: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tbounds = this.getBounds(),\n\t\t\tmatrix = new Matrix(),\n\t\t\tcenter = rect.getCenter();\n\t\tmatrix.translate(center);\n\t\tif (rect.width != bounds.width || rect.height != bounds.height) {\n\t\t\tmatrix.scale(\n\t\t\t\t\tbounds.width != 0 ? rect.width / bounds.width : 1,\n\t\t\t\t\tbounds.height != 0 ? rect.height / bounds.height : 1);\n\t\t}\n\t\tcenter = bounds.getCenter();\n\t\tmatrix.translate(-center.x, -center.y);\n\t\tthis.transform(matrix);\n\t},\n\n\t_getCachedBounds: function(getter, matrix, cacheItem, internalGetter) {\n\t\tmatrix = matrix && matrix.orNullIfIdentity();\n\t\tvar _matrix = internalGetter ? null : this._matrix.orNullIfIdentity(),\n\t\t\tcache = (!matrix || matrix.equals(_matrix)) && getter;\n\t\tItem._updateBoundsCache(this._parent || this._parentSymbol, cacheItem);\n\t\tif (cache && this._bounds && this._bounds[cache])\n\t\t\treturn this._bounds[cache].clone();\n\t\tvar bounds = this._getBounds(internalGetter || getter,\n\t\t\t\tmatrix || _matrix, cacheItem);\n\t\tif (cache) {\n\t\t\tif (!this._bounds)\n\t\t\t\tthis._bounds = {};\n\t\t\tvar cached = this._bounds[cache] = bounds.clone();\n\t\t\tcached._internal = !!internalGetter;\n\t\t}\n\t\treturn bounds;\n\t},\n\n\tstatics: {\n\t\t_updateBoundsCache: function(parent, item) {\n\t\t\tif (parent) {\n\t\t\t\tvar id = item._id,\n\t\t\t\t\tref = parent._boundsCache = parent._boundsCache || {\n\t\t\t\t\t\tids: {},\n\t\t\t\t\t\tlist: []\n\t\t\t\t\t};\n\t\t\t\tif (!ref.ids[id]) {\n\t\t\t\t\tref.list.push(item);\n\t\t\t\t\tref.ids[id] = item;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_clearBoundsCache: function(item) {\n\t\t\tvar cache = item._boundsCache;\n\t\t\tif (cache) {\n\t\t\t\titem._bounds = item._position = item._boundsCache = undefined;\n\t\t\t\tfor (var i = 0, list = cache.list, l = list.length; i < l; i++){\n\t\t\t\t\tvar other = list[i];\n\t\t\t\t\tif (other !== item) {\n\t\t\t\t\t\tother._bounds = other._position = undefined;\n\t\t\t\t\t\tif (other._boundsCache)\n\t\t\t\t\t\t\tItem._clearBoundsCache(other);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n}), {\n\tbeans: true,\n\n\t_decompose: function() {\n\t\treturn this._decomposed = this._matrix.decompose();\n\t},\n\n\tgetRotation: function() {\n\t\tvar decomposed = this._decomposed || this._decompose();\n\t\treturn decomposed && decomposed.rotation;\n\t},\n\n\tsetRotation: function(rotation) {\n\t\tvar current = this.getRotation();\n\t\tif (current != null && rotation != null) {\n\t\t\tvar decomposed = this._decomposed;\n\t\t\tthis.rotate(rotation - current);\n\t\t\tdecomposed.rotation = rotation;\n\t\t\tthis._decomposed = decomposed;\n\t\t}\n\t},\n\n\tgetScaling: function(_dontLink) {\n\t\tvar decomposed = this._decomposed || this._decompose(),\n\t\t\tscaling = decomposed && decomposed.scaling,\n\t\t\tctor = _dontLink ? Point : LinkedPoint;\n\t\treturn scaling && new ctor(scaling.x, scaling.y, this, 'setScaling');\n\t},\n\n\tsetScaling: function() {\n\t\tvar current = this.getScaling();\n\t\tif (current) {\n\t\t\tvar scaling = Point.read(arguments, 0, { clone: true }),\n\t\t\t\tdecomposed = this._decomposed;\n\t\t\tthis.scale(scaling.x / current.x, scaling.y / current.y);\n\t\t\tdecomposed.scaling = scaling;\n\t\t\tthis._decomposed = decomposed;\n\t\t}\n\t},\n\n\tgetMatrix: function() {\n\t\treturn this._matrix;\n\t},\n\n\tsetMatrix: function() {\n\t\tvar matrix = this._matrix;\n\t\tmatrix.initialize.apply(matrix, arguments);\n\t\tif (this._applyMatrix) {\n\t\t\tthis.transform(null, true);\n\t\t} else {\n\t\t\tthis._changed(9);\n\t\t}\n\t},\n\n\tgetGlobalMatrix: function(_dontClone) {\n\t\tvar matrix = this._globalMatrix,\n\t\t\tupdateVersion = this._project._updateVersion;\n\t\tif (matrix && matrix._updateVersion !== updateVersion)\n\t\t\tmatrix = null;\n\t\tif (!matrix) {\n\t\t\tmatrix = this._globalMatrix = this._matrix.clone();\n\t\t\tvar parent = this._parent;\n\t\t\tif (parent)\n\t\t\t\tmatrix.preConcatenate(parent.getGlobalMatrix(true));\n\t\t\tmatrix._updateVersion = updateVersion;\n\t\t}\n\t\treturn _dontClone ? matrix : matrix.clone();\n\t},\n\n\tgetApplyMatrix: function() {\n\t\treturn this._applyMatrix;\n\t},\n\n\tsetApplyMatrix: function(apply) {\n\t\tif (this._applyMatrix = this._canApplyMatrix && !!apply)\n\t\t\tthis.transform(null, true);\n\t},\n\n\tgetTransformContent: '#getApplyMatrix',\n\tsetTransformContent: '#setApplyMatrix',\n}, {\n\tgetProject: function() {\n\t\treturn this._project;\n\t},\n\n\t_setProject: function(project, installEvents) {\n\t\tif (this._project !== project) {\n\t\t\tif (this._project)\n\t\t\t\tthis._installEvents(false);\n\t\t\tthis._project = project;\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children && children.length; i < l; i++)\n\t\t\t\tchildren[i]._setProject(project);\n\t\t\tinstallEvents = true;\n\t\t}\n\t\tif (installEvents)\n\t\t\tthis._installEvents(true);\n\t},\n\n\tgetView: function() {\n\t\treturn this._project.getView();\n\t},\n\n\t_installEvents: function _installEvents(install) {\n\t\t_installEvents.base.call(this, install);\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children && children.length; i < l; i++)\n\t\t\tchildren[i]._installEvents(install);\n\t},\n\n\tgetLayer: function() {\n\t\tvar parent = this;\n\t\twhile (parent = parent._parent) {\n\t\t\tif (parent instanceof Layer)\n\t\t\t\treturn parent;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetParent: function() {\n\t\treturn this._parent;\n\t},\n\n\tsetParent: function(item) {\n\t\treturn item.addChild(this);\n\t},\n\n\tgetChildren: function() {\n\t\treturn this._children;\n\t},\n\n\tsetChildren: function(items) {\n\t\tthis.removeChildren();\n\t\tthis.addChildren(items);\n\t},\n\n\tgetFirstChild: function() {\n\t\treturn this._children && this._children[0] || null;\n\t},\n\n\tgetLastChild: function() {\n\t\treturn this._children && this._children[this._children.length - 1]\n\t\t\t\t|| null;\n\t},\n\n\tgetNextSibling: function() {\n\t\treturn this._parent && this._parent._children[this._index + 1] || null;\n\t},\n\n\tgetPreviousSibling: function() {\n\t\treturn this._parent && this._parent._children[this._index - 1] || null;\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index;\n\t},\n\n\tequals: function(item) {\n\t\treturn item === this || item && this._class === item._class\n\t\t\t\t&& this._style.equals(item._style)\n\t\t\t\t&& this._matrix.equals(item._matrix)\n\t\t\t\t&& this._locked === item._locked\n\t\t\t\t&& this._visible === item._visible\n\t\t\t\t&& this._blendMode === item._blendMode\n\t\t\t\t&& this._opacity === item._opacity\n\t\t\t\t&& this._clipMask === item._clipMask\n\t\t\t\t&& this._guide === item._guide\n\t\t\t\t&& this._equals(item)\n\t\t\t\t|| false;\n\t},\n\n\t_equals: function(item) {\n\t\treturn Base.equals(this._children, item._children);\n\t},\n\n\tclone: function(insert) {\n\t\treturn this._clone(new this.constructor(Item.NO_INSERT), insert);\n\t},\n\n\t_clone: function(copy, insert, includeMatrix) {\n\t\tvar keys = ['_locked', '_visible', '_blendMode', '_opacity',\n\t\t\t\t'_clipMask', '_guide'],\n\t\t\tchildren = this._children;\n\t\tcopy.setStyle(this._style);\n\t\tfor (var i = 0, l = children && children.length; i < l; i++) {\n\t\t\tcopy.addChild(children[i].clone(false), true);\n\t\t}\n\t\tfor (var i = 0, l = keys.length; i < l; i++) {\n\t\t\tvar key = keys[i];\n\t\t\tif (this.hasOwnProperty(key))\n\t\t\t\tcopy[key] = this[key];\n\t\t}\n\t\tif (includeMatrix !== false)\n\t\t\tcopy._matrix.initialize(this._matrix);\n\t\tcopy.setApplyMatrix(this._applyMatrix);\n\t\tcopy.setPivot(this._pivot);\n\t\tcopy.setSelected(this._selected);\n\t\tcopy._data = this._data ? Base.clone(this._data) : null;\n\t\tif (insert || insert === undefined)\n\t\t\tcopy.insertAbove(this);\n\t\tif (this._name)\n\t\t\tcopy.setName(this._name, true);\n\t\treturn copy;\n\t},\n\n\tcopyTo: function(itemOrProject) {\n\t\treturn itemOrProject.addChild(this.clone(false));\n\t},\n\n\trasterize: function(resolution) {\n\t\tvar bounds = this.getStrokeBounds(),\n\t\t\tscale = (resolution || this.getView().getResolution()) / 72,\n\t\t\ttopLeft = bounds.getTopLeft().floor(),\n\t\t\tbottomRight = bounds.getBottomRight().ceil(),\n\t\t\tsize = new Size(bottomRight.subtract(topLeft)),\n\t\t\tcanvas = CanvasProvider.getCanvas(size.multiply(scale)),\n\t\t\tctx = canvas.getContext('2d'),\n\t\t\tmatrix = new Matrix().scale(scale).translate(topLeft.negate());\n\t\tctx.save();\n\t\tmatrix.applyToContext(ctx);\n\t\tthis.draw(ctx, new Base({ matrices: [matrix] }));\n\t\tctx.restore();\n\t\tvar raster = new Raster(Item.NO_INSERT);\n\t\traster.setCanvas(canvas);\n\t\traster.transform(new Matrix().translate(topLeft.add(size.divide(2)))\n\t\t\t\t.scale(1 / scale));\n\t\traster.insertAbove(this);\n\t\treturn raster;\n\t},\n\n\tcontains: function() {\n\t\treturn !!this._contains(\n\t\t\t\tthis._matrix._inverseTransform(Point.read(arguments)));\n\t},\n\n\t_contains: function(point) {\n\t\tif (this._children) {\n\t\t\tfor (var i = this._children.length - 1; i >= 0; i--) {\n\t\t\t\tif (this._children[i].contains(point))\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\treturn point.isInside(this.getInternalBounds());\n\t},\n\n\tisInside: function() {\n\t\treturn Rectangle.read(arguments).contains(this.getBounds());\n\t},\n\n\t_asPathItem: function() {\n\t\treturn new Path.Rectangle({\n\t\t\trectangle: this.getInternalBounds(),\n\t\t\tmatrix: this._matrix,\n\t\t\tinsert: false,\n\t\t});\n\t},\n\n\tintersects: function(item, _matrix) {\n\t\tif (!(item instanceof Item))\n\t\t\treturn false;\n\t\treturn this._asPathItem().getIntersections(item._asPathItem(), null,\n\t\t\t\t_matrix || item._matrix, true).length > 0;\n\t},\n\n\thitTest: function() {\n\t\treturn this._hitTest(\n\t\t\t\tPoint.read(arguments),\n\t\t\t\tHitResult.getOptions(Base.read(arguments)));\n\t},\n\n\t_hitTest: function(point, options) {\n\t\tif (this._locked || !this._visible || this._guide && !options.guides\n\t\t\t\t|| this.isEmpty())\n\t\t\treturn null;\n\n\t\tvar matrix = this._matrix,\n\t\t\tparentTotalMatrix = options._totalMatrix,\n\t\t\tview = this.getView(),\n\t\t\ttotalMatrix = options._totalMatrix = parentTotalMatrix\n\t\t\t\t\t? parentTotalMatrix.chain(matrix)\n\t\t\t\t\t: this.getGlobalMatrix().preConcatenate(view._matrix),\n\t\t\ttolerancePadding = options._tolerancePadding = new Size(\n\t\t\t\t\t\tPath._getPenPadding(1, totalMatrix.inverted())\n\t\t\t\t\t).multiply(\n\t\t\t\t\t\tMath.max(options.tolerance, 1e-6)\n\t\t\t\t\t);\n\t\tpoint = matrix._inverseTransform(point);\n\n\t\tif (!this._children && !this.getInternalRoughBounds()\n\t\t\t\t.expand(tolerancePadding.multiply(2))._containsPoint(point))\n\t\t\treturn null;\n\t\tvar checkSelf = !(options.guides && !this._guide\n\t\t\t\t|| options.selected && !this._selected\n\t\t\t\t|| options.type && options.type !== Base.hyphenate(this._class)\n\t\t\t\t|| options.class && !(this instanceof options.class)),\n\t\t\tthat = this,\n\t\t\tres;\n\n\t\tfunction checkBounds(type, part) {\n\t\t\tvar pt = bounds['get' + part]();\n\t\t\tif (point.subtract(pt).divide(tolerancePadding).length <= 1)\n\t\t\t\treturn new HitResult(type, that,\n\t\t\t\t\t\t{ name: Base.hyphenate(part), point: pt });\n\t\t}\n\n\t\tif (checkSelf && (options.center || options.bounds) && this._parent) {\n\t\t\tvar bounds = this.getInternalBounds();\n\t\t\tif (options.center)\n\t\t\t\tres = checkBounds('center', 'Center');\n\t\t\tif (!res && options.bounds) {\n\t\t\t\tvar points = [\n\t\t\t\t\t'TopLeft', 'TopRight', 'BottomLeft', 'BottomRight',\n\t\t\t\t\t'LeftCenter', 'TopCenter', 'RightCenter', 'BottomCenter'\n\t\t\t\t];\n\t\t\t\tfor (var i = 0; i < 8 && !res; i++)\n\t\t\t\t\tres = checkBounds('bounds', points[i]);\n\t\t\t}\n\t\t}\n\n\t\tvar children = !res && this._children;\n\t\tif (children) {\n\t\t\tvar opts = this._getChildHitTestOptions(options);\n\t\t\tfor (var i = children.length - 1; i >= 0 && !res; i--)\n\t\t\t\tres = children[i]._hitTest(point, opts);\n\t\t}\n\t\tif (!res && checkSelf)\n\t\t\tres = this._hitTestSelf(point, options);\n\t\tif (res && res.point)\n\t\t\tres.point = matrix.transform(res.point);\n\t\toptions._totalMatrix = parentTotalMatrix;\n\t\treturn res;\n\t},\n\n\t_getChildHitTestOptions: function(options) {\n\t\treturn options;\n\t},\n\n\t_hitTestSelf: function(point, options) {\n\t\tif (options.fill && this.hasFill() && this._contains(point))\n\t\t\treturn new HitResult('fill', this);\n\t},\n\n\tmatches: function(name, compare) {\n\t\tfunction matchObject(obj1, obj2) {\n\t\t\tfor (var i in obj1) {\n\t\t\t\tif (obj1.hasOwnProperty(i)) {\n\t\t\t\t\tvar val1 = obj1[i],\n\t\t\t\t\t\tval2 = obj2[i];\n\t\t\t\t\tif (Base.isPlainObject(val1) && Base.isPlainObject(val2)) {\n\t\t\t\t\t\tif (!matchObject(val1, val2))\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t} else if (!Base.equals(val1, val2)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\tvar type = typeof name;\n\t\tif (type === 'object') {\n\t\t\tfor (var key in name) {\n\t\t\t\tif (name.hasOwnProperty(key) && !this.matches(key, name[key]))\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t} else if (type === 'function') {\n\t\t\treturn name(this);\n\t\t} else {\n\t\t\tvar value = /^(empty|editable)$/.test(name)\n\t\t\t\t\t? this['is' + Base.capitalize(name)]()\n\t\t\t\t\t: name === 'type'\n\t\t\t\t\t\t? Base.hyphenate(this._class)\n\t\t\t\t\t\t: this[name];\n\t\t\tif (/^(constructor|class)$/.test(name)) {\n\t\t\t\tif (!(this instanceof compare))\n\t\t\t\t\treturn false;\n\t\t\t} else if (compare instanceof RegExp) {\n\t\t\t\tif (!compare.test(value))\n\t\t\t\t\treturn false;\n\t\t\t} else if (typeof compare === 'function') {\n\t\t\t\tif (!compare(value))\n\t\t\t\t\treturn false;\n\t\t\t} else if (Base.isPlainObject(compare)) {\n\t\t\t\tif (!matchObject(compare, value))\n\t\t\t\t\treturn false;\n\t\t\t} else if (!Base.equals(value, compare)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\n\tgetItems: function(match) {\n\t\treturn Item._getItems(this._children, match, this._matrix);\n\t},\n\n\tgetItem: function(match) {\n\t\treturn Item._getItems(this._children, match, this._matrix, null, true)\n\t\t\t\t[0] || null;\n\t},\n\n\tstatics: {\n\t\t_getItems: function _getItems(children, match, matrix, param,\n\t\t\t\tfirstOnly) {\n\t\t\tif (!param && typeof match === 'object') {\n\t\t\t\tvar overlapping = match.overlapping,\n\t\t\t\t\tinside = match.inside,\n\t\t\t\t\tbounds = overlapping || inside,\n\t\t\t\t\trect = bounds && Rectangle.read([bounds]);\n\t\t\t\tparam = {\n\t\t\t\t\titems: [],\n\t\t\t\t\tinside: !!inside,\n\t\t\t\t\toverlapping: !!overlapping,\n\t\t\t\t\trect: rect,\n\t\t\t\t\tpath: overlapping && new Path.Rectangle({\n\t\t\t\t\t\trectangle: rect,\n\t\t\t\t\t\tinsert: false\n\t\t\t\t\t})\n\t\t\t\t};\n\t\t\t\tif (bounds)\n\t\t\t\t\tmatch = Base.set({}, match,\n\t\t\t\t\t\t\t{ inside: true, overlapping: true });\n\t\t\t}\n\t\t\tvar items = param && param.items,\n\t\t\t\trect = param && param.rect;\n\t\t\tmatrix = rect && (matrix || new Matrix());\n\t\t\tfor (var i = 0, l = children && children.length; i < l; i++) {\n\t\t\t\tvar child = children[i],\n\t\t\t\t\tchildMatrix = matrix && matrix.chain(child._matrix),\n\t\t\t\t\tadd = true;\n\t\t\t\tif (rect) {\n\t\t\t\t\tvar bounds = child.getBounds(childMatrix);\n\t\t\t\t\tif (!rect.intersects(bounds))\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tif (!(param.inside && rect.contains(bounds))\n\t\t\t\t\t\t\t&& !(param.overlapping && (bounds.contains(rect)\n\t\t\t\t\t\t\t\t|| param.path.intersects(child, childMatrix))))\n\t\t\t\t\t\tadd = false;\n\t\t\t\t}\n\t\t\t\tif (add && child.matches(match)) {\n\t\t\t\t\titems.push(child);\n\t\t\t\t\tif (firstOnly)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t_getItems(child._children, match,\n\t\t\t\t\t\tchildMatrix, param,\n\t\t\t\t\t\tfirstOnly);\n\t\t\t\tif (firstOnly && items.length > 0)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn items;\n\t\t}\n\t}\n}, {\n\n\timportJSON: function(json) {\n\t\tvar res = Base.importJSON(json, this);\n\t\treturn res !== this\n\t\t\t\t? this.addChild(res)\n\t\t\t\t: res;\n\t},\n\n\taddChild: function(item, _preserve) {\n\t\treturn this.insertChild(undefined, item, _preserve);\n\t},\n\n\tinsertChild: function(index, item, _preserve) {\n\t\tvar res = item ? this.insertChildren(index, [item], _preserve) : null;\n\t\treturn res && res[0];\n\t},\n\n\taddChildren: function(items, _preserve) {\n\t\treturn this.insertChildren(this._children.length, items, _preserve);\n\t},\n\n\tinsertChildren: function(index, items, _preserve, _proto) {\n\t\tvar children = this._children;\n\t\tif (children && items && items.length > 0) {\n\t\t\titems = Array.prototype.slice.apply(items);\n\t\t\tfor (var i = items.length - 1; i >= 0; i--) {\n\t\t\t\tvar item = items[i];\n\t\t\t\tif (_proto && !(item instanceof _proto)) {\n\t\t\t\t\titems.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tvar shift = item._parent === this && item._index < index;\n\t\t\t\t\tif (item._remove(false, true) && shift)\n\t\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t}\n\t\t\tBase.splice(children, items, index, 0);\n\t\t\tvar project = this._project,\n\t\t\t\tnotifySelf = project && project._changes;\n\t\t\tfor (var i = 0, l = items.length; i < l; i++) {\n\t\t\t\tvar item = items[i];\n\t\t\t\titem._parent = this;\n\t\t\t\titem._setProject(this._project, true);\n\t\t\t\tif (item._name)\n\t\t\t\t\titem.setName(item._name);\n\t\t\t\tif (notifySelf)\n\t\t\t\t\tthis._changed(5);\n\t\t\t}\n\t\t\tthis._changed(11);\n\t\t} else {\n\t\t\titems = null;\n\t\t}\n\t\treturn items;\n\t},\n\n\t_insertSibling: function(index, item, _preserve) {\n\t\treturn this._parent\n\t\t\t\t? this._parent.insertChild(index, item, _preserve)\n\t\t\t\t: null;\n\t},\n\n\tinsertAbove: function(item, _preserve) {\n\t\treturn item._insertSibling(item._index + 1, this, _preserve);\n\t},\n\n\tinsertBelow: function(item, _preserve) {\n\t\treturn item._insertSibling(item._index, this, _preserve);\n\t},\n\n\tsendToBack: function() {\n\t\treturn (this._parent || this instanceof Layer && this._project)\n\t\t\t\t.insertChild(0, this);\n\t},\n\n\tbringToFront: function() {\n\t\treturn (this._parent || this instanceof Layer && this._project)\n\t\t\t\t.addChild(this);\n\t},\n\n\tappendTop: '#addChild',\n\n\tappendBottom: function(item) {\n\t\treturn this.insertChild(0, item);\n\t},\n\n\tmoveAbove: '#insertAbove',\n\n\tmoveBelow: '#insertBelow',\n\n\treduce: function() {\n\t\tif (this._children && this._children.length === 1) {\n\t\t\tvar child = this._children[0].reduce();\n\t\t\tchild.insertAbove(this);\n\t\t\tchild.setStyle(this._style);\n\t\t\tthis.remove();\n\t\t\treturn child;\n\t\t}\n\t\treturn this;\n\t},\n\n\t_removeNamed: function() {\n\t\tvar parent = this._parent;\n\t\tif (parent) {\n\t\t\tvar children = parent._children,\n\t\t\t\tnamedChildren = parent._namedChildren,\n\t\t\t\tname = this._name,\n\t\t\t\tnamedArray = namedChildren[name],\n\t\t\t\tindex = namedArray ? namedArray.indexOf(this) : -1;\n\t\t\tif (index !== -1) {\n\t\t\t\tif (children[name] == this)\n\t\t\t\t\tdelete children[name];\n\t\t\t\tnamedArray.splice(index, 1);\n\t\t\t\tif (namedArray.length) {\n\t\t\t\t\tchildren[name] = namedArray[namedArray.length - 1];\n\t\t\t\t} else {\n\t\t\t\t\tdelete namedChildren[name];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t_remove: function(notifySelf, notifyParent) {\n\t\tvar parent = this._parent;\n\t\tif (parent) {\n\t\t\tif (this._name)\n\t\t\t\tthis._removeNamed();\n\t\t\tif (this._index != null)\n\t\t\t\tBase.splice(parent._children, null, this._index, 1);\n\t\t\tthis._installEvents(false);\n\t\t\tif (notifySelf) {\n\t\t\t\tvar project = this._project;\n\t\t\t\tif (project && project._changes)\n\t\t\t\t\tthis._changed(5);\n\t\t\t}\n\t\t\tif (notifyParent)\n\t\t\t\tparent._changed(11);\n\t\t\tthis._parent = null;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tremove: function() {\n\t\treturn this._remove(true, true);\n\t},\n\n\treplaceWith: function(item) {\n\t\tvar ok = item && item.insertBelow(this);\n\t\tif (ok)\n\t\t\tthis.remove();\n\t\treturn ok;\n\t},\n\n\tremoveChildren: function(from, to) {\n\t\tif (!this._children)\n\t\t\treturn null;\n\t\tfrom = from || 0;\n\t\tto = Base.pick(to, this._children.length);\n\t\tvar removed = Base.splice(this._children, null, from, to - from);\n\t\tfor (var i = removed.length - 1; i >= 0; i--) {\n\t\t\tremoved[i]._remove(true, false);\n\t\t}\n\t\tif (removed.length > 0)\n\t\t\tthis._changed(11);\n\t\treturn removed;\n\t},\n\n\tclear: '#removeChildren',\n\n\treverseChildren: function() {\n\t\tif (this._children) {\n\t\t\tthis._children.reverse();\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++)\n\t\t\t\tthis._children[i]._index = i;\n\t\t\tthis._changed(11);\n\t\t}\n\t},\n\n\tisEmpty: function() {\n\t\treturn !this._children || this._children.length === 0;\n\t},\n\n\tisEditable: function() {\n\t\tvar item = this;\n\t\twhile (item) {\n\t\t\tif (!item._visible || item._locked)\n\t\t\t\treturn false;\n\t\t\titem = item._parent;\n\t\t}\n\t\treturn true;\n\t},\n\n\thasFill: function() {\n\t\treturn this.getStyle().hasFill();\n\t},\n\n\thasStroke: function() {\n\t\treturn this.getStyle().hasStroke();\n\t},\n\n\thasShadow: function() {\n\t\treturn this.getStyle().hasShadow();\n\t},\n\n\t_getOrder: function(item) {\n\t\tfunction getList(item) {\n\t\t\tvar list = [];\n\t\t\tdo {\n\t\t\t\tlist.unshift(item);\n\t\t\t} while (item = item._parent);\n\t\t\treturn list;\n\t\t}\n\t\tvar list1 = getList(this),\n\t\t\tlist2 = getList(item);\n\t\tfor (var i = 0, l = Math.min(list1.length, list2.length); i < l; i++) {\n\t\t\tif (list1[i] != list2[i]) {\n\t\t\t\treturn list1[i]._index < list2[i]._index ? 1 : -1;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t},\n\n\thasChildren: function() {\n\t\treturn this._children && this._children.length > 0;\n\t},\n\n\tisInserted: function() {\n\t\treturn this._parent ? this._parent.isInserted() : false;\n\t},\n\n\tisAbove: function(item) {\n\t\treturn this._getOrder(item) === -1;\n\t},\n\n\tisBelow: function(item) {\n\t\treturn this._getOrder(item) === 1;\n\t},\n\n\tisParent: function(item) {\n\t\treturn this._parent === item;\n\t},\n\n\tisChild: function(item) {\n\t\treturn item && item._parent === this;\n\t},\n\n\tisDescendant: function(item) {\n\t\tvar parent = this;\n\t\twhile (parent = parent._parent) {\n\t\t\tif (parent == item)\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tisAncestor: function(item) {\n\t\treturn item ? item.isDescendant(this) : false;\n\t},\n\n\tisSibling: function(item) {\n\t\treturn this._parent === item._parent;\n\t},\n\n\tisGroupedWith: function(item) {\n\t\tvar parent = this._parent;\n\t\twhile (parent) {\n\t\t\tif (parent._parent\n\t\t\t\t&& /^(Group|Layer|CompoundPath)$/.test(parent._class)\n\t\t\t\t&& item.isDescendant(parent))\n\t\t\t\t\treturn true;\n\t\t\tparent = parent._parent;\n\t\t}\n\t\treturn false;\n\t},\n\n\ttranslate: function() {\n\t\tvar mx = new Matrix();\n\t\treturn this.transform(mx.translate.apply(mx, arguments));\n\t},\n\n\trotate: function(angle ) {\n\t\treturn this.transform(new Matrix().rotate(angle,\n\t\t\t\tPoint.read(arguments, 1, { readNull: true })\n\t\t\t\t\t|| this.getPosition(true)));\n\t}\n}, Base.each(['scale', 'shear', 'skew'], function(name) {\n\tthis[name] = function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\treturn this.transform(new Matrix()[name](point,\n\t\t\t\tcenter || this.getPosition(true)));\n\t};\n}, {\n\n}), {\n\ttransform: function(matrix, _applyMatrix, _applyRecursively,\n\t\t\t_setApplyMatrix) {\n\t\tif (matrix && matrix.isIdentity())\n\t\t\tmatrix = null;\n\t\tvar _matrix = this._matrix,\n\t\t\tapplyMatrix = (_applyMatrix || this._applyMatrix)\n\t\t\t\t\t&& ((!_matrix.isIdentity() || matrix)\n\t\t\t\t\t\t|| _applyMatrix && _applyRecursively && this._children);\n\t\tif (!matrix && !applyMatrix)\n\t\t\treturn this;\n\t\tif (matrix)\n\t\t\t_matrix.preConcatenate(matrix);\n\t\tif (applyMatrix = applyMatrix && this._transformContent(_matrix,\n\t\t\t\t\t_applyRecursively, _setApplyMatrix)) {\n\t\t\tvar pivot = this._pivot,\n\t\t\t\tstyle = this._style,\n\t\t\t\tfillColor = style.getFillColor(true),\n\t\t\t\tstrokeColor = style.getStrokeColor(true);\n\t\t\tif (pivot)\n\t\t\t\t_matrix._transformPoint(pivot, pivot, true);\n\t\t\tif (fillColor)\n\t\t\t\tfillColor.transform(_matrix);\n\t\t\tif (strokeColor)\n\t\t\t\tstrokeColor.transform(_matrix);\n\t\t\t_matrix.reset(true);\n\t\t\tif (_setApplyMatrix && this._canApplyMatrix)\n\t\t\t\tthis._applyMatrix = true;\n\t\t}\n\t\tvar bounds = this._bounds,\n\t\t\tposition = this._position;\n\t\tthis._changed(9);\n\t\tvar decomp = bounds && matrix && matrix.decompose();\n\t\tif (decomp && !decomp.shearing && decomp.rotation % 90 === 0) {\n\t\t\tfor (var key in bounds) {\n\t\t\t\tvar rect = bounds[key];\n\t\t\t\tif (applyMatrix || !rect._internal)\n\t\t\t\t\tmatrix._transformBounds(rect, rect);\n\t\t\t}\n\t\t\tvar getter = this._boundsGetter,\n\t\t\t\trect = bounds[getter && getter.getBounds || getter || 'getBounds'];\n\t\t\tif (rect)\n\t\t\t\tthis._position = rect.getCenter(true);\n\t\t\tthis._bounds = bounds;\n\t\t} else if (matrix && position) {\n\t\t\tthis._position = matrix._transformPoint(position, position);\n\t\t}\n\t\treturn this;\n\t},\n\n\t_transformContent: function(matrix, applyRecursively, setApplyMatrix) {\n\t\tvar children = this._children;\n\t\tif (children) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].transform(matrix, true, applyRecursively,\n\t\t\t\t\t\tsetApplyMatrix);\n\t\t\treturn true;\n\t\t}\n\t},\n\n\tglobalToLocal: function() {\n\t\treturn this.getGlobalMatrix(true)._inverseTransform(\n\t\t\t\tPoint.read(arguments));\n\t},\n\n\tlocalToGlobal: function() {\n\t\treturn this.getGlobalMatrix(true)._transformPoint(\n\t\t\t\tPoint.read(arguments));\n\t},\n\n\tparentToLocal: function() {\n\t\treturn this._matrix._inverseTransform(Point.read(arguments));\n\t},\n\n\tlocalToParent: function() {\n\t\treturn this._matrix._transformPoint(Point.read(arguments));\n\t},\n\n\tfitBounds: function(rectangle, fill) {\n\t\trectangle = Rectangle.read(arguments);\n\t\tvar bounds = this.getBounds(),\n\t\t\titemRatio = bounds.height / bounds.width,\n\t\t\trectRatio = rectangle.height / rectangle.width,\n\t\t\tscale = (fill ? itemRatio > rectRatio : itemRatio < rectRatio)\n\t\t\t\t\t? rectangle.width / bounds.width\n\t\t\t\t\t: rectangle.height / bounds.height,\n\t\t\tnewBounds = new Rectangle(new Point(),\n\t\t\t\t\tnew Size(bounds.width * scale, bounds.height * scale));\n\t\tnewBounds.setCenter(rectangle.getCenter());\n\t\tthis.setBounds(newBounds);\n\t},\n\n\t_setStyles: function(ctx) {\n\t\tvar style = this._style,\n\t\t\tfillColor = style.getFillColor(),\n\t\t\tstrokeColor = style.getStrokeColor(),\n\t\t\tshadowColor = style.getShadowColor();\n\t\tif (fillColor)\n\t\t\tctx.fillStyle = fillColor.toCanvasStyle(ctx);\n\t\tif (strokeColor) {\n\t\t\tvar strokeWidth = style.getStrokeWidth();\n\t\t\tif (strokeWidth > 0) {\n\t\t\t\tctx.strokeStyle = strokeColor.toCanvasStyle(ctx);\n\t\t\t\tctx.lineWidth = strokeWidth;\n\t\t\t\tvar strokeJoin = style.getStrokeJoin(),\n\t\t\t\t\tstrokeCap = style.getStrokeCap(),\n\t\t\t\t\tmiterLimit = style.getMiterLimit();\n\t\t\t\tif (strokeJoin)\n\t\t\t\t\tctx.lineJoin = strokeJoin;\n\t\t\t\tif (strokeCap)\n\t\t\t\t\tctx.lineCap = strokeCap;\n\t\t\t\tif (miterLimit)\n\t\t\t\t\tctx.miterLimit = miterLimit;\n\t\t\t\tif (paper.support.nativeDash) {\n\t\t\t\t\tvar dashArray = style.getDashArray(),\n\t\t\t\t\t\tdashOffset = style.getDashOffset();\n\t\t\t\t\tif (dashArray && dashArray.length) {\n\t\t\t\t\t\tif ('setLineDash' in ctx) {\n\t\t\t\t\t\t\tctx.setLineDash(dashArray);\n\t\t\t\t\t\t\tctx.lineDashOffset = dashOffset;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tctx.mozDash = dashArray;\n\t\t\t\t\t\t\tctx.mozDashOffset = dashOffset;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (shadowColor) {\n\t\t\tvar shadowBlur = style.getShadowBlur();\n\t\t\tif (shadowBlur > 0) {\n\t\t\t\tctx.shadowColor = shadowColor.toCanvasStyle(ctx);\n\t\t\t\tctx.shadowBlur = shadowBlur;\n\t\t\t\tvar offset = this.getShadowOffset();\n\t\t\t\tctx.shadowOffsetX = offset.x;\n\t\t\t\tctx.shadowOffsetY = offset.y;\n\t\t\t}\n\t\t}\n\t},\n\n\tdraw: function(ctx, param, parentStrokeMatrix) {\n\t\tvar updateVersion = this._updateVersion = this._project._updateVersion;\n\t\tif (!this._visible || this._opacity === 0)\n\t\t\treturn;\n\t\tvar matrices = param.matrices,\n\t\t\tviewMatrix = param.viewMatrix,\n\t\t\tmatrix = this._matrix,\n\t\t\tglobalMatrix = matrices[matrices.length - 1].chain(matrix);\n\t\tif (!globalMatrix.isInvertible())\n\t\t\treturn;\n\n\t\tfunction getViewMatrix(matrix) {\n\t\t\treturn viewMatrix ? viewMatrix.chain(matrix) : matrix;\n\t\t}\n\n\t\tmatrices.push(globalMatrix);\n\t\tif (param.updateMatrix) {\n\t\t\tglobalMatrix._updateVersion = updateVersion;\n\t\t\tthis._globalMatrix = globalMatrix;\n\t\t}\n\n\t\tvar blendMode = this._blendMode,\n\t\t\topacity = this._opacity,\n\t\t\tnormalBlend = blendMode === 'normal',\n\t\t\tnativeBlend = BlendMode.nativeModes[blendMode],\n\t\t\tdirect = normalBlend && opacity === 1\n\t\t\t\t\t|| param.dontStart\n\t\t\t\t\t|| param.clip\n\t\t\t\t\t|| (nativeBlend || normalBlend && opacity < 1)\n\t\t\t\t\t\t&& this._canComposite(),\n\t\t\tpixelRatio = param.pixelRatio || 1,\n\t\t\tmainCtx, itemOffset, prevOffset;\n\t\tif (!direct) {\n\t\t\tvar bounds = this.getStrokeBounds(getViewMatrix(globalMatrix));\n\t\t\tif (!bounds.width || !bounds.height)\n\t\t\t\treturn;\n\t\t\tprevOffset = param.offset;\n\t\t\titemOffset = param.offset = bounds.getTopLeft().floor();\n\t\t\tmainCtx = ctx;\n\t\t\tctx = CanvasProvider.getContext(bounds.getSize().ceil().add(1)\n\t\t\t\t\t.multiply(pixelRatio));\n\t\t\tif (pixelRatio !== 1)\n\t\t\t\tctx.scale(pixelRatio, pixelRatio);\n\t\t}\n\t\tctx.save();\n\t\tvar strokeMatrix = parentStrokeMatrix\n\t\t\t\t? parentStrokeMatrix.chain(matrix)\n\t\t\t\t: !this.getStrokeScaling(true) && getViewMatrix(globalMatrix),\n\t\t\tclip = !direct && param.clipItem,\n\t\t\ttransform = !strokeMatrix || clip;\n\t\tif (direct) {\n\t\t\tctx.globalAlpha = opacity;\n\t\t\tif (nativeBlend)\n\t\t\t\tctx.globalCompositeOperation = blendMode;\n\t\t} else if (transform) {\n\t\t\tctx.translate(-itemOffset.x, -itemOffset.y);\n\t\t}\n\t\tif (transform)\n\t\t\t(direct ? matrix : getViewMatrix(globalMatrix)).applyToContext(ctx);\n\t\tif (clip)\n\t\t\tparam.clipItem.draw(ctx, param.extend({ clip: true }));\n\t\tif (strokeMatrix) {\n\t\t\tctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n\t\t\tvar offset = param.offset;\n\t\t\tif (offset)\n\t\t\t\tctx.translate(-offset.x, -offset.y);\n\t\t}\n\t\tthis._draw(ctx, param, strokeMatrix);\n\t\tctx.restore();\n\t\tmatrices.pop();\n\t\tif (param.clip && !param.dontFinish)\n\t\t\tctx.clip();\n\t\tif (!direct) {\n\t\t\tBlendMode.process(blendMode, ctx, mainCtx, opacity,\n\t\t\t\t\titemOffset.subtract(prevOffset).multiply(pixelRatio));\n\t\t\tCanvasProvider.release(ctx);\n\t\t\tparam.offset = prevOffset;\n\t\t}\n\t},\n\n\t_isUpdated: function(updateVersion) {\n\t\tvar parent = this._parent;\n\t\tif (parent instanceof CompoundPath)\n\t\t\treturn parent._isUpdated(updateVersion);\n\t\tvar updated = this._updateVersion === updateVersion;\n\t\tif (!updated && parent && parent._visible\n\t\t\t\t&& parent._isUpdated(updateVersion)) {\n\t\t\tthis._updateVersion = updateVersion;\n\t\t\tupdated = true;\n\t\t}\n\t\treturn updated;\n\t},\n\n\t_drawSelection: function(ctx, matrix, size, selectedItems, updateVersion) {\n\t\tif ((this._drawSelected || this._boundsSelected)\n\t\t\t\t&& this._isUpdated(updateVersion)) {\n\t\t\tvar color = this.getSelectedColor(true)\n\t\t\t\t\t|| this.getLayer().getSelectedColor(true),\n\t\t\t\tmx = matrix.chain(this.getGlobalMatrix(true));\n\t\t\tctx.strokeStyle = ctx.fillStyle = color\n\t\t\t\t\t? color.toCanvasStyle(ctx) : '#009dec';\n\t\t\tif (this._drawSelected)\n\t\t\t\tthis._drawSelected(ctx, mx, selectedItems);\n\t\t\tif (this._boundsSelected) {\n\t\t\t\tvar half = size / 2,\n\t\t\t\t\tcoords = mx._transformCorners(this.getInternalBounds());\n\t\t\t\tctx.beginPath();\n\t\t\t\tfor (var i = 0; i < 8; i++)\n\t\t\t\t\tctx[i === 0 ? 'moveTo' : 'lineTo'](coords[i], coords[++i]);\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.stroke();\n\t\t\t\tfor (var i = 0; i < 8; i++)\n\t\t\t\t\tctx.fillRect(coords[i] - half, coords[++i] - half,\n\t\t\t\t\t\t\tsize, size);\n\t\t\t}\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn false;\n\t}\n}, Base.each(['down', 'drag', 'up', 'move'], function(name) {\n\tthis['removeOn' + Base.capitalize(name)] = function() {\n\t\tvar hash = {};\n\t\thash[name] = true;\n\t\treturn this.removeOn(hash);\n\t};\n}, {\n\n\tremoveOn: function(obj) {\n\t\tfor (var name in obj) {\n\t\t\tif (obj[name]) {\n\t\t\t\tvar key = 'mouse' + name,\n\t\t\t\t\tproject = this._project,\n\t\t\t\t\tsets = project._removeSets = project._removeSets || {};\n\t\t\t\tsets[key] = sets[key] || {};\n\t\t\t\tsets[key][this._id] = this;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n}));\n\nvar Group = Item.extend({\n\t_class: 'Group',\n\t_selectChildren: true,\n\t_serializeFields: {\n\t\tchildren: []\n\t},\n\n\tinitialize: function Group(arg) {\n\t\tthis._children = [];\n\t\tthis._namedChildren = {};\n\t\tif (!this._initialize(arg))\n\t\t\tthis.addChildren(Array.isArray(arg) ? arg : arguments);\n\t},\n\n\t_changed: function _changed(flags) {\n\t\t_changed.base.call(this, flags);\n\t\tif (flags & 1026) {\n\t\t\tthis._clipItem = undefined;\n\t\t}\n\t},\n\n\t_getClipItem: function() {\n\t\tvar clipItem = this._clipItem;\n\t\tif (clipItem === undefined) {\n\t\t\tclipItem = null;\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++) {\n\t\t\t\tvar child = this._children[i];\n\t\t\t\tif (child._clipMask) {\n\t\t\t\t\tclipItem = child;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._clipItem = clipItem;\n\t\t}\n\t\treturn clipItem;\n\t},\n\n\tisClipped: function() {\n\t\treturn !!this._getClipItem();\n\t},\n\n\tsetClipped: function(clipped) {\n\t\tvar child = this.getFirstChild();\n\t\tif (child)\n\t\t\tchild.setClipMask(clipped);\n\t},\n\n\t_draw: function(ctx, param) {\n\t\tvar clip = param.clip,\n\t\t\tclipItem = !clip && this._getClipItem(),\n\t\t\tdraw = true;\n\t\tparam = param.extend({ clipItem: clipItem, clip: false });\n\t\tif (clip) {\n\t\t\tif (this._currentPath) {\n\t\t\t\tctx.currentPath = this._currentPath;\n\t\t\t\tdraw = false;\n\t\t\t} else {\n\t\t\t\tctx.beginPath();\n\t\t\t\tparam.dontStart = param.dontFinish = true;\n\t\t\t}\n\t\t} else if (clipItem) {\n\t\t\tclipItem.draw(ctx, param.extend({ clip: true }));\n\t\t}\n\t\tif (draw) {\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++) {\n\t\t\t\tvar item = this._children[i];\n\t\t\t\tif (item !== clipItem)\n\t\t\t\t\titem.draw(ctx, param);\n\t\t\t}\n\t\t}\n\t\tif (clip) {\n\t\t\tthis._currentPath = ctx.currentPath;\n\t\t}\n\t}\n});\n\nvar Layer = Group.extend({\n\t_class: 'Layer',\n\n\tinitialize: function Layer(arg) {\n\t\tvar props = Base.isPlainObject(arg)\n\t\t\t\t? new Base(arg)\n\t\t\t\t: { children: Array.isArray(arg) ? arg : arguments },\n\t\t\tinsert = props.insert;\n\t\tprops.insert = false;\n\t\tGroup.call(this, props);\n\t\tif (insert || insert === undefined) {\n\t\t\tthis._project.addChild(this);\n\t\t\tthis.activate();\n\t\t}\n\t},\n\n\t_remove: function _remove(notifySelf, notifyParent) {\n\t\tif (this._parent)\n\t\t\treturn _remove.base.call(this, notifySelf, notifyParent);\n\t\tif (this._index != null) {\n\t\t\tvar project = this._project;\n\t\t\tif (project._activeLayer === this)\n\t\t\t\tproject._activeLayer = this.getNextSibling()\n\t\t\t\t\t\t|| this.getPreviousSibling();\n\t\t\tBase.splice(project.layers, null, this._index, 1);\n\t\t\tthis._installEvents(false);\n\t\t\tif (notifySelf && project._changes)\n\t\t\t\tthis._changed(5);\n\t\t\tif (notifyParent) {\n\t\t\t\tproject._needsUpdate = true;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tgetNextSibling: function getNextSibling() {\n\t\treturn this._parent ? getNextSibling.base.call(this)\n\t\t\t\t: this._project.layers[this._index + 1] || null;\n\t},\n\n\tgetPreviousSibling: function getPreviousSibling() {\n\t\treturn this._parent ? getPreviousSibling.base.call(this)\n\t\t\t\t: this._project.layers[this._index - 1] || null;\n\t},\n\n\tisInserted: function isInserted() {\n\t\treturn this._parent ? isInserted.base.call(this) : this._index != null;\n\t},\n\n\tactivate: function() {\n\t\tthis._project._activeLayer = this;\n\t},\n\n\t_insertSibling: function _insertSibling(index, item, _preserve) {\n\t\treturn !this._parent\n\t\t\t\t? this._project.insertChild(index, item, _preserve)\n\t\t\t\t: _insertSibling.base.call(this, index, item, _preserve);\n\t}\n});\n\nvar Shape = Item.extend({\n\t_class: 'Shape',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_boundsSelected: true,\n\t_serializeFields: {\n\t\ttype: null,\n\t\tsize: null,\n\t\tradius: null\n\t},\n\n\tinitialize: function Shape(props) {\n\t\tthis._initialize(props);\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._type === item._type\n\t\t\t&& this._size.equals(item._size)\n\t\t\t&& Base.equals(this._radius, item._radius);\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new Shape(Item.NO_INSERT);\n\t\tcopy.setType(this._type);\n\t\tcopy.setSize(this._size);\n\t\tcopy.setRadius(this._radius);\n\t\treturn this._clone(copy, insert);\n\t},\n\n\tgetType: function() {\n\t\treturn this._type;\n\t},\n\n\tsetType: function(type) {\n\t\tthis._type = type;\n\t},\n\n\tgetShape: '#getType',\n\tsetShape: '#setType',\n\n\tgetSize: function() {\n\t\tvar size = this._size;\n\t\treturn new LinkedSize(size.width, size.height, this, 'setSize');\n\t},\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments);\n\t\tif (!this._size) {\n\t\t\tthis._size = size.clone();\n\t\t} else if (!this._size.equals(size)) {\n\t\t\tvar type = this._type,\n\t\t\t\twidth = size.width,\n\t\t\t\theight = size.height;\n\t\t\tif (type === 'rectangle') {\n\t\t\t\tvar radius = Size.min(this._radius, size.divide(2));\n\t\t\t\tthis._radius.set(radius.width, radius.height);\n\t\t\t} else if (type === 'circle') {\n\t\t\t\twidth = height = (width + height) / 2;\n\t\t\t\tthis._radius = width / 2;\n\t\t\t} else if (type === 'ellipse') {\n\t\t\t\tthis._radius.set(width / 2, height / 2);\n\t\t\t}\n\t\t\tthis._size.set(width, height);\n\t\t\tthis._changed(9);\n\t\t}\n\t},\n\n\tgetRadius: function() {\n\t\tvar rad = this._radius;\n\t\treturn this._type === 'circle'\n\t\t\t\t? rad\n\t\t\t\t: new LinkedSize(rad.width, rad.height, this, 'setRadius');\n\t},\n\n\tsetRadius: function(radius) {\n\t\tvar type = this._type;\n\t\tif (type === 'circle') {\n\t\t\tif (radius === this._radius)\n\t\t\t\treturn;\n\t\t\tvar size = radius * 2;\n\t\t\tthis._radius = radius;\n\t\t\tthis._size.set(size, size);\n\t\t} else {\n\t\t\tradius = Size.read(arguments);\n\t\t\tif (!this._radius) {\n\t\t\t\tthis._radius = radius.clone();\n\t\t\t} else {\n\t\t\t\tif (this._radius.equals(radius))\n\t\t\t\t\treturn;\n\t\t\t\tthis._radius.set(radius.width, radius.height);\n\t\t\t\tif (type === 'rectangle') {\n\t\t\t\t\tvar size = Size.max(this._size, radius.multiply(2));\n\t\t\t\t\tthis._size.set(size.width, size.height);\n\t\t\t\t} else if (type === 'ellipse') {\n\t\t\t\t\tthis._size.set(radius.width * 2, radius.height * 2);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._changed(9);\n\t},\n\n\tisEmpty: function() {\n\t\treturn false;\n\t},\n\n\ttoPath: function(insert) {\n\t\tvar path = this._clone(new Path[Base.capitalize(this._type)]({\n\t\t\tcenter: new Point(),\n\t\t\tsize: this._size,\n\t\t\tradius: this._radius,\n\t\t\tinsert: false\n\t\t}), insert);\n\t\tif (paper.settings.applyMatrix)\n\t\t\tpath.setApplyMatrix(true);\n\t\treturn path;\n\t},\n\n\t_draw: function(ctx, param, strokeMatrix) {\n\t\tvar style = this._style,\n\t\t\thasFill = style.hasFill(),\n\t\t\thasStroke = style.hasStroke(),\n\t\t\tdontPaint = param.dontFinish || param.clip,\n\t\t\tuntransformed = !strokeMatrix;\n\t\tif (hasFill || hasStroke || dontPaint) {\n\t\t\tvar type = this._type,\n\t\t\t\tradius = this._radius,\n\t\t\t\tisCircle = type === 'circle';\n\t\t\tif (!param.dontStart)\n\t\t\t\tctx.beginPath();\n\t\t\tif (untransformed && isCircle) {\n\t\t\t\tctx.arc(0, 0, radius, 0, Math.PI * 2, true);\n\t\t\t} else {\n\t\t\t\tvar rx = isCircle ? radius : radius.width,\n\t\t\t\t\try = isCircle ? radius : radius.height,\n\t\t\t\t\tsize = this._size,\n\t\t\t\t\twidth = size.width,\n\t\t\t\t\theight = size.height;\n\t\t\t\tif (untransformed && type === 'rectangle' && rx === 0 && ry === 0) {\n\t\t\t\t\tctx.rect(-width / 2, -height / 2, width, height);\n\t\t\t\t} else {\n\t\t\t\t\tvar x = width / 2,\n\t\t\t\t\t\ty = height / 2,\n\t\t\t\t\t\tkappa = 1 - 0.5522847498307936,\n\t\t\t\t\t\tcx = rx * kappa,\n\t\t\t\t\t\tcy = ry * kappa,\n\t\t\t\t\t\tc = [\n\t\t\t\t\t\t\t-x, -y + ry,\n\t\t\t\t\t\t\t-x, -y + cy,\n\t\t\t\t\t\t\t-x + cx, -y,\n\t\t\t\t\t\t\t-x + rx, -y,\n\t\t\t\t\t\t\tx - rx, -y,\n\t\t\t\t\t\t\tx - cx, -y,\n\t\t\t\t\t\t\tx, -y + cy,\n\t\t\t\t\t\t\tx, -y + ry,\n\t\t\t\t\t\t\tx, y - ry,\n\t\t\t\t\t\t\tx, y - cy,\n\t\t\t\t\t\t\tx - cx, y,\n\t\t\t\t\t\t\tx - rx, y,\n\t\t\t\t\t\t\t-x + rx, y,\n\t\t\t\t\t\t\t-x + cx, y,\n\t\t\t\t\t\t\t-x, y - cy,\n\t\t\t\t\t\t\t-x, y - ry\n\t\t\t\t\t\t];\n\t\t\t\t\tif (strokeMatrix)\n\t\t\t\t\t\tstrokeMatrix.transform(c, c, 32);\n\t\t\t\t\tctx.moveTo(c[0], c[1]);\n\t\t\t\t\tctx.bezierCurveTo(c[2], c[3], c[4], c[5], c[6], c[7]);\n\t\t\t\t\tif (x !== rx)\n\t\t\t\t\t\tctx.lineTo(c[8], c[9]);\n\t\t\t\t\tctx.bezierCurveTo(c[10], c[11], c[12], c[13], c[14], c[15]);\n\t\t\t\t\tif (y !== ry)\n\t\t\t\t\t\tctx.lineTo(c[16], c[17]);\n\t\t\t\t\tctx.bezierCurveTo(c[18], c[19], c[20], c[21], c[22], c[23]);\n\t\t\t\t\tif (x !== rx)\n\t\t\t\t\t\tctx.lineTo(c[24], c[25]);\n\t\t\t\t\tctx.bezierCurveTo(c[26], c[27], c[28], c[29], c[30], c[31]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tctx.closePath();\n\t\t}\n\t\tif (!dontPaint && (hasFill || hasStroke)) {\n\t\t\tthis._setStyles(ctx);\n\t\t\tif (hasFill) {\n\t\t\t\tctx.fill(style.getWindingRule());\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (hasStroke)\n\t\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn !(this.hasFill() && this.hasStroke());\n\t},\n\n\t_getBounds: function(getter, matrix) {\n\t\tvar rect = new Rectangle(this._size).setCenter(0, 0);\n\t\tif (getter !== 'getBounds' && this.hasStroke())\n\t\t\trect = rect.expand(this.getStrokeWidth());\n\t\treturn matrix ? matrix._transformBounds(rect) : rect;\n\t}\n},\nnew function() {\n\tfunction getCornerCenter(that, point, expand) {\n\t\tvar radius = that._radius;\n\t\tif (!radius.isZero()) {\n\t\t\tvar halfSize = that._size.divide(2);\n\t\t\tfor (var i = 0; i < 4; i++) {\n\t\t\t\tvar dir = new Point(i & 1 ? 1 : -1, i > 1 ? 1 : -1),\n\t\t\t\t\tcorner = dir.multiply(halfSize),\n\t\t\t\t\tcenter = corner.subtract(dir.multiply(radius)),\n\t\t\t\t\trect = new Rectangle(corner, center);\n\t\t\t\tif ((expand ? rect.expand(expand) : rect).contains(point))\n\t\t\t\t\treturn center;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction getEllipseRadius(point, radius) {\n\t\tvar angle = point.getAngleInRadians(),\n\t\t\twidth = radius.width * 2,\n\t\t\theight = radius.height * 2,\n\t\t\tx = width * Math.sin(angle),\n\t\t\ty = height * Math.cos(angle);\n\t\treturn width * height / (2 * Math.sqrt(x * x + y * y));\n\t}\n\n\treturn {\n\t\t_contains: function _contains(point) {\n\t\t\tif (this._type === 'rectangle') {\n\t\t\t\tvar center = getCornerCenter(this, point);\n\t\t\t\treturn center\n\t\t\t\t\t\t? point.subtract(center).divide(this._radius)\n\t\t\t\t\t\t\t.getLength() <= 1\n\t\t\t\t\t\t: _contains.base.call(this, point);\n\t\t\t} else {\n\t\t\t\treturn point.divide(this.size).getLength() <= 0.5;\n\t\t\t}\n\t\t},\n\n\t\t_hitTestSelf: function _hitTestSelf(point, options) {\n\t\t\tvar hit = false;\n\t\t\tif (this.hasStroke()) {\n\t\t\t\tvar type = this._type,\n\t\t\t\t\tradius = this._radius,\n\t\t\t\t\tstrokeWidth = this.getStrokeWidth() + 2 * options.tolerance;\n\t\t\t\tif (type === 'rectangle') {\n\t\t\t\t\tvar center = getCornerCenter(this, point, strokeWidth);\n\t\t\t\t\tif (center) {\n\t\t\t\t\t\tvar pt = point.subtract(center);\n\t\t\t\t\t\thit = 2 * Math.abs(pt.getLength()\n\t\t\t\t\t\t\t\t- getEllipseRadius(pt, radius)) <= strokeWidth;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar rect = new Rectangle(this._size).setCenter(0, 0),\n\t\t\t\t\t\t\touter = rect.expand(strokeWidth),\n\t\t\t\t\t\t\tinner = rect.expand(-strokeWidth);\n\t\t\t\t\t\thit = outer._containsPoint(point)\n\t\t\t\t\t\t\t\t&& !inner._containsPoint(point);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (type === 'ellipse')\n\t\t\t\t\t\tradius = getEllipseRadius(point, radius);\n\t\t\t\t\thit = 2 * Math.abs(point.getLength() - radius)\n\t\t\t\t\t\t\t<= strokeWidth;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn hit\n\t\t\t\t\t? new HitResult('stroke', this)\n\t\t\t\t\t: _hitTestSelf.base.apply(this, arguments);\n\t\t}\n\t};\n}, {\n\nstatics: new function() {\n\tfunction createShape(type, point, size, radius, args) {\n\t\tvar item = new Shape(Base.getNamed(args));\n\t\titem._type = type;\n\t\titem._size = size;\n\t\titem._radius = radius;\n\t\treturn item.translate(point);\n\t}\n\n\treturn {\n\t\tCircle: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius');\n\t\t\treturn createShape('circle', center, new Size(radius * 2), radius,\n\t\t\t\t\targuments);\n\t\t},\n\n\t\tRectangle: function() {\n\t\t\tvar rect = Rectangle.readNamed(arguments, 'rectangle'),\n\t\t\t\tradius = Size.min(Size.readNamed(arguments, 'radius'),\n\t\t\t\t\t\trect.getSize(true).divide(2));\n\t\t\treturn createShape('rectangle', rect.getCenter(true),\n\t\t\t\t\trect.getSize(true), radius, arguments);\n\t\t},\n\n\t\tEllipse: function() {\n\t\t\tvar ellipse = Shape._readEllipse(arguments),\n\t\t\t\tradius = ellipse.radius;\n\t\t\treturn createShape('ellipse', ellipse.center, radius.multiply(2),\n\t\t\t\t\tradius, arguments);\n\t\t},\n\n\t\t_readEllipse: function(args) {\n\t\t\tvar center,\n\t\t\t\tradius;\n\t\t\tif (Base.hasNamed(args, 'radius')) {\n\t\t\t\tcenter = Point.readNamed(args, 'center');\n\t\t\t\tradius = Size.readNamed(args, 'radius');\n\t\t\t} else {\n\t\t\t\tvar rect = Rectangle.readNamed(args, 'rectangle');\n\t\t\t\tcenter = rect.getCenter(true);\n\t\t\t\tradius = rect.getSize(true).divide(2);\n\t\t\t}\n\t\t\treturn { center: center, radius: radius };\n\t\t}\n\t};\n}});\n\nvar Raster = Item.extend({\n\t_class: 'Raster',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_boundsGetter: 'getBounds',\n\t_boundsSelected: true,\n\t_serializeFields: {\n\t\tcrossOrigin: null,\n\t\tsource: null\n\t},\n\n\tinitialize: function Raster(object, position) {\n\t\tif (!this._initialize(object,\n\t\t\t\tposition !== undefined && Point.read(arguments, 1))) {\n\t\t\tif (typeof object === 'string') {\n\t\t\t\tthis.setSource(object);\n\t\t\t} else {\n\t\t\t\tthis.setImage(object);\n\t\t\t}\n\t\t}\n\t\tif (!this._size) {\n\t\t\tthis._size = new Size();\n\t\t\tthis._loaded = false;\n\t\t}\n\t},\n\n\t_equals: function(item) {\n\t\treturn this.getSource() === item.getSource();\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new Raster(Item.NO_INSERT),\n\t\t\timage = this._image,\n\t\t\tcanvas = this._canvas;\n\t\tif (image) {\n\t\t\tcopy.setImage(image);\n\t\t} else if (canvas) {\n\t\t\tvar copyCanvas = CanvasProvider.getCanvas(this._size);\n\t\t\tcopyCanvas.getContext('2d').drawImage(canvas, 0, 0);\n\t\t\tcopy.setImage(copyCanvas);\n\t\t}\n\t\tcopy._crossOrigin = this._crossOrigin;\n\t\treturn this._clone(copy, insert);\n\t},\n\n\tgetSize: function() {\n\t\tvar size = this._size;\n\t\treturn new LinkedSize(size ? size.width : 0, size ? size.height : 0,\n\t\t\t\tthis, 'setSize');\n\t},\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments);\n\t\tif (!size.equals(this._size)) {\n\t\t\tif (size.width > 0 && size.height > 0) {\n\t\t\t\tvar element = this.getElement();\n\t\t\t\tthis.setImage(CanvasProvider.getCanvas(size));\n\t\t\t\tif (element)\n\t\t\t\t\tthis.getContext(true).drawImage(element, 0, 0,\n\t\t\t\t\t\t\tsize.width, size.height);\n\t\t\t} else {\n\t\t\t\tif (this._canvas)\n\t\t\t\t\tCanvasProvider.release(this._canvas);\n\t\t\t\tthis._size = size.clone();\n\t\t\t}\n\t\t}\n\t},\n\n\tgetWidth: function() {\n\t\treturn this._size ? this._size.width : 0;\n\t},\n\n\tsetWidth: function(width) {\n\t\tthis.setSize(width, this.getHeight());\n\t},\n\n\tgetHeight: function() {\n\t\treturn this._size ? this._size.height : 0;\n\t},\n\n\tsetHeight: function(height) {\n\t\tthis.setSize(this.getWidth(), height);\n\t},\n\n\tisEmpty: function() {\n\t\tvar size = this._size;\n\t\treturn !size || size.width === 0 && size.height === 0;\n\t},\n\n\tgetResolution: function() {\n\t\tvar matrix = this._matrix,\n\t\t\torig = new Point(0, 0).transform(matrix),\n\t\t\tu = new Point(1, 0).transform(matrix).subtract(orig),\n\t\t\tv = new Point(0, 1).transform(matrix).subtract(orig);\n\t\treturn new Size(\n\t\t\t72 / u.getLength(),\n\t\t\t72 / v.getLength()\n\t\t);\n\t},\n\n\tgetPpi: '#getResolution',\n\n\tgetImage: function() {\n\t\treturn this._image;\n\t},\n\n\tsetImage: function(image) {\n\t\tif (this._canvas)\n\t\t\tCanvasProvider.release(this._canvas);\n\t\tif (image && image.getContext) {\n\t\t\tthis._image = null;\n\t\t\tthis._canvas = image;\n\t\t\tthis._loaded = true;\n\t\t} else {\n\t\t\tthis._image = image;\n\t\t\tthis._canvas = null;\n\t\t\tthis._loaded = image && image.complete;\n\t\t}\n\t\tthis._size = new Size(\n\t\t\t\timage ? image.naturalWidth || image.width : 0,\n\t\t\t\timage ? image.naturalHeight || image.height : 0);\n\t\tthis._context = null;\n\t\tthis._changed(521);\n\t},\n\n\tgetCanvas: function() {\n\t\tif (!this._canvas) {\n\t\t\tvar ctx = CanvasProvider.getContext(this._size);\n\t\t\ttry {\n\t\t\t\tif (this._image)\n\t\t\t\t\tctx.drawImage(this._image, 0, 0);\n\t\t\t\tthis._canvas = ctx.canvas;\n\t\t\t} catch (e) {\n\t\t\t\tCanvasProvider.release(ctx);\n\t\t\t}\n\t\t}\n\t\treturn this._canvas;\n\t},\n\n\tsetCanvas: '#setImage',\n\n\tgetContext: function(modify) {\n\t\tif (!this._context)\n\t\t\tthis._context = this.getCanvas().getContext('2d');\n\t\tif (modify) {\n\t\t\tthis._image = null;\n\t\t\tthis._changed(513);\n\t\t}\n\t\treturn this._context;\n\t},\n\n\tsetContext: function(context) {\n\t\tthis._context = context;\n\t},\n\n\tgetSource: function() {\n\t\treturn this._image && this._image.src || this.toDataURL();\n\t},\n\n\tsetSource: function(src) {\n\t\tvar that = this,\n\t\t\tcrossOrigin = this._crossOrigin,\n\t\t\timage;\n\n\t\tfunction loaded() {\n\t\t\tvar view = that.getView();\n\t\t\tif (view) {\n\t\t\t\tpaper = view._scope;\n\t\t\t\tthat.setImage(image);\n\t\t\t\tthat.emit('load');\n\t\t\t\tview.update();\n\t\t\t}\n\t\t}\n\n\t\timage = document.getElementById(src) || new Image();\n\t\tif (crossOrigin)\n\t\t\timage.crossOrigin = crossOrigin;\n\t\tif (image.naturalWidth && image.naturalHeight) {\n\t\t\tsetTimeout(loaded, 0);\n\t\t} else {\n\t\t\tDomEvent.add(image, { load: loaded });\n\t\t\tif (!image.src)\n\t\t\t\timage.src = src;\n\t\t}\n\t\tthis.setImage(image);\n\t},\n\n\tgetCrossOrigin: function() {\n\t\treturn this._image && this._image.crossOrigin || this._crossOrigin || '';\n\t},\n\n\tsetCrossOrigin: function(crossOrigin) {\n\t\tthis._crossOrigin = crossOrigin;\n\t\tif (this._image)\n\t\t\tthis._image.crossOrigin = crossOrigin;\n\t},\n\n\tgetElement: function() {\n\t\treturn this._canvas || this._loaded && this._image;\n\t}\n}, {\n\tbeans: false,\n\n\tgetSubCanvas: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tctx = CanvasProvider.getContext(rect.getSize());\n\t\tctx.drawImage(this.getCanvas(), rect.x, rect.y,\n\t\t\t\trect.width, rect.height, 0, 0, rect.width, rect.height);\n\t\treturn ctx.canvas;\n\t},\n\n\tgetSubRaster: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\traster = new Raster(Item.NO_INSERT);\n\t\traster.setImage(this.getSubCanvas(rect));\n\t\traster.translate(rect.getCenter().subtract(this.getSize().divide(2)));\n\t\traster._matrix.preConcatenate(this._matrix);\n\t\traster.insertAbove(this);\n\t\treturn raster;\n\t},\n\n\ttoDataURL: function() {\n\t\tvar src = this._image && this._image.src;\n\t\tif (/^data:/.test(src))\n\t\t\treturn src;\n\t\tvar canvas = this.getCanvas();\n\t\treturn canvas ? canvas.toDataURL.apply(canvas, arguments) : null;\n\t},\n\n\tdrawImage: function(image ) {\n\t\tvar point = Point.read(arguments, 1);\n\t\tthis.getContext(true).drawImage(image, point.x, point.y);\n\t},\n\n\tgetAverageColor: function(object) {\n\t\tvar bounds, path;\n\t\tif (!object) {\n\t\t\tbounds = this.getBounds();\n\t\t} else if (object instanceof PathItem) {\n\t\t\tpath = object;\n\t\t\tbounds = object.getBounds();\n\t\t} else if (object.width) {\n\t\t\tbounds = new Rectangle(object);\n\t\t} else if (object.x) {\n\t\t\tbounds = new Rectangle(object.x - 0.5, object.y - 0.5, 1, 1);\n\t\t}\n\t\tvar sampleSize = 32,\n\t\t\twidth = Math.min(bounds.width, sampleSize),\n\t\t\theight = Math.min(bounds.height, sampleSize);\n\t\tvar ctx = Raster._sampleContext;\n\t\tif (!ctx) {\n\t\t\tctx = Raster._sampleContext = CanvasProvider.getContext(\n\t\t\t\t\tnew Size(sampleSize));\n\t\t} else {\n\t\t\tctx.clearRect(0, 0, sampleSize + 1, sampleSize + 1);\n\t\t}\n\t\tctx.save();\n\t\tvar matrix = new Matrix()\n\t\t\t\t.scale(width / bounds.width, height / bounds.height)\n\t\t\t\t.translate(-bounds.x, -bounds.y);\n\t\tmatrix.applyToContext(ctx);\n\t\tif (path)\n\t\t\tpath.draw(ctx, new Base({ clip: true, matrices: [matrix] }));\n\t\tthis._matrix.applyToContext(ctx);\n\t\tvar element = this.getElement(),\n\t\t\tsize = this._size;\n\t\tif (element)\n\t\t\tctx.drawImage(element, -size.width / 2, -size.height / 2);\n\t\tctx.restore();\n\t\tvar pixels = ctx.getImageData(0.5, 0.5, Math.ceil(width),\n\t\t\t\tMath.ceil(height)).data,\n\t\t\tchannels = [0, 0, 0],\n\t\t\ttotal = 0;\n\t\tfor (var i = 0, l = pixels.length; i < l; i += 4) {\n\t\t\tvar alpha = pixels[i + 3];\n\t\t\ttotal += alpha;\n\t\t\talpha /= 255;\n\t\t\tchannels[0] += pixels[i] * alpha;\n\t\t\tchannels[1] += pixels[i + 1] * alpha;\n\t\t\tchannels[2] += pixels[i + 2] * alpha;\n\t\t}\n\t\tfor (var i = 0; i < 3; i++)\n\t\t\tchannels[i] /= total;\n\t\treturn total ? Color.read(channels) : null;\n\t},\n\n\tgetPixel: function() {\n\t\tvar point = Point.read(arguments);\n\t\tvar data = this.getContext().getImageData(point.x, point.y, 1, 1).data;\n\t\treturn new Color('rgb', [data[0] / 255, data[1] / 255, data[2] / 255],\n\t\t\t\tdata[3] / 255);\n\t},\n\n\tsetPixel: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcolor = Color.read(arguments),\n\t\t\tcomponents = color._convert('rgb'),\n\t\t\talpha = color._alpha,\n\t\t\tctx = this.getContext(true),\n\t\t\timageData = ctx.createImageData(1, 1),\n\t\t\tdata = imageData.data;\n\t\tdata[0] = components[0] * 255;\n\t\tdata[1] = components[1] * 255;\n\t\tdata[2] = components[2] * 255;\n\t\tdata[3] = alpha != null ? alpha * 255 : 255;\n\t\tctx.putImageData(imageData, point.x, point.y);\n\t},\n\n\tcreateImageData: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn this.getContext().createImageData(size.width, size.height);\n\t},\n\n\tgetImageData: function() {\n\t\tvar rect = Rectangle.read(arguments);\n\t\tif (rect.isEmpty())\n\t\t\trect = new Rectangle(this._size);\n\t\treturn this.getContext().getImageData(rect.x, rect.y,\n\t\t\t\trect.width, rect.height);\n\t},\n\n\tsetImageData: function(data ) {\n\t\tvar point = Point.read(arguments, 1);\n\t\tthis.getContext(true).putImageData(data, point.x, point.y);\n\t},\n\n\t_getBounds: function(getter, matrix) {\n\t\tvar rect = new Rectangle(this._size).setCenter(0, 0);\n\t\treturn matrix ? matrix._transformBounds(rect) : rect;\n\t},\n\n\t_hitTestSelf: function(point) {\n\t\tif (this._contains(point)) {\n\t\t\tvar that = this;\n\t\t\treturn new HitResult('pixel', that, {\n\t\t\t\toffset: point.add(that._size.divide(2)).round(),\n\t\t\t\tcolor: {\n\t\t\t\t\tget: function() {\n\t\t\t\t\t\treturn that.getPixel(this.offset);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t},\n\n\t_draw: function(ctx) {\n\t\tvar element = this.getElement();\n\t\tif (element) {\n\t\t\tctx.globalAlpha = this._opacity;\n\t\t\tctx.drawImage(element,\n\t\t\t\t\t-this._size.width / 2, -this._size.height / 2);\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn true;\n\t}\n});\n\nvar PlacedSymbol = Item.extend({\n\t_class: 'PlacedSymbol',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_boundsGetter: { getBounds: 'getStrokeBounds' },\n\t_boundsSelected: true,\n\t_serializeFields: {\n\t\tsymbol: null\n\t},\n\n\tinitialize: function PlacedSymbol(arg0, arg1) {\n\t\tif (!this._initialize(arg0,\n\t\t\t\targ1 !== undefined && Point.read(arguments, 1)))\n\t\t\tthis.setSymbol(arg0 instanceof Symbol ? arg0 : new Symbol(arg0));\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._symbol === item._symbol;\n\t},\n\n\tgetSymbol: function() {\n\t\treturn this._symbol;\n\t},\n\n\tsetSymbol: function(symbol) {\n\t\tthis._symbol = symbol;\n\t\tthis._changed(9);\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new PlacedSymbol(Item.NO_INSERT);\n\t\tcopy.setSymbol(this._symbol);\n\t\treturn this._clone(copy, insert);\n\t},\n\n\tisEmpty: function() {\n\t\treturn this._symbol._definition.isEmpty();\n\t},\n\n\t_getBounds: function(getter, matrix, cacheItem) {\n\t\tvar definition = this.symbol._definition;\n\t\treturn definition._getCachedBounds(getter,\n\t\t\t\tmatrix && matrix.chain(definition._matrix), cacheItem);\n\t},\n\n\t_hitTestSelf: function(point, options) {\n\t\tvar res = this._symbol._definition._hitTest(point, options);\n\t\tif (res)\n\t\t\tres.item = this;\n\t\treturn res;\n\t},\n\n\t_draw: function(ctx, param) {\n\t\tthis.symbol._definition.draw(ctx, param);\n\t}\n\n});\n\nvar HitResult = Base.extend({\n\t_class: 'HitResult',\n\n\tinitialize: function HitResult(type, item, values) {\n\t\tthis.type = type;\n\t\tthis.item = item;\n\t\tif (values) {\n\t\t\tvalues.enumerable = true;\n\t\t\tthis.inject(values);\n\t\t}\n\t},\n\n\tstatics: {\n\t\tgetOptions: function(options) {\n\t\t\treturn new Base({\n\t\t\t\ttype: null,\n\t\t\t\ttolerance: paper.settings.hitTolerance,\n\t\t\t\tfill: !options,\n\t\t\t\tstroke: !options,\n\t\t\t\tsegments: !options,\n\t\t\t\thandles: false,\n\t\t\t\tends: false,\n\t\t\t\tcenter: false,\n\t\t\t\tbounds: false,\n\t\t\t\tguides: false,\n\t\t\t\tselected: false\n\t\t\t}, options);\n\t\t}\n\t}\n});\n\nvar Segment = Base.extend({\n\t_class: 'Segment',\n\tbeans: true,\n\n\tinitialize: function Segment(arg0, arg1, arg2, arg3, arg4, arg5) {\n\t\tvar count = arguments.length,\n\t\t\tpoint, handleIn, handleOut;\n\t\tif (count === 0) {\n\t\t} else if (count === 1) {\n\t\t\tif ('point' in arg0) {\n\t\t\t\tpoint = arg0.point;\n\t\t\t\thandleIn = arg0.handleIn;\n\t\t\t\thandleOut = arg0.handleOut;\n\t\t\t} else {\n\t\t\t\tpoint = arg0;\n\t\t\t}\n\t\t} else if (count === 2 && typeof arg0 === 'number') {\n\t\t\tpoint = arguments;\n\t\t} else if (count <= 3) {\n\t\t\tpoint = arg0;\n\t\t\thandleIn = arg1;\n\t\t\thandleOut = arg2;\n\t\t} else {\n\t\t\tpoint = arg0 !== undefined ? [ arg0, arg1 ] : null;\n\t\t\thandleIn = arg2 !== undefined ? [ arg2, arg3 ] : null;\n\t\t\thandleOut = arg4 !== undefined ? [ arg4, arg5 ] : null;\n\t\t}\n\t\tnew SegmentPoint(point, this, '_point');\n\t\tnew SegmentPoint(handleIn, this, '_handleIn');\n\t\tnew SegmentPoint(handleOut, this, '_handleOut');\n\t},\n\n\t_serialize: function(options) {\n\t\treturn Base.serialize(this.hasHandles()\n\t\t\t\t? [this._point, this._handleIn, this._handleOut]\n\t\t\t\t: this._point,\n\t\t\t\toptions, true);\n\t},\n\n\t_changed: function(point) {\n\t\tvar path = this._path;\n\t\tif (!path)\n\t\t\treturn;\n\t\tvar curves = path._curves,\n\t\t\tindex = this._index,\n\t\t\tcurve;\n\t\tif (curves) {\n\t\t\tif ((!point || point === this._point || point === this._handleIn)\n\t\t\t\t\t&& (curve = index > 0 ? curves[index - 1] : path._closed\n\t\t\t\t\t\t? curves[curves.length - 1] : null))\n\t\t\t\tcurve._changed();\n\t\t\tif ((!point || point === this._point || point === this._handleOut)\n\t\t\t\t\t&& (curve = curves[index]))\n\t\t\t\tcurve._changed();\n\t\t}\n\t\tpath._changed(25);\n\t},\n\n\tgetPoint: function() {\n\t\treturn this._point;\n\t},\n\n\tsetPoint: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._point.set(point.x, point.y);\n\t},\n\n\tgetHandleIn: function() {\n\t\treturn this._handleIn;\n\t},\n\n\tsetHandleIn: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._handleIn.set(point.x, point.y);\n\t},\n\n\tgetHandleOut: function() {\n\t\treturn this._handleOut;\n\t},\n\n\tsetHandleOut: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._handleOut.set(point.x, point.y);\n\t},\n\n\thasHandles: function() {\n\t\treturn !this._handleIn.isZero() || !this._handleOut.isZero();\n\t},\n\n\tclearHandles: function() {\n\t\tthis._handleIn.set(0, 0);\n\t\tthis._handleOut.set(0, 0);\n\t},\n\n\t_selectionState: 0,\n\n\tisSelected: function(_point) {\n\t\tvar state = this._selectionState;\n\t\treturn !_point ? !!(state & 7)\n\t\t\t: _point === this._point ? !!(state & 4)\n\t\t\t: _point === this._handleIn ? !!(state & 1)\n\t\t\t: _point === this._handleOut ? !!(state & 2)\n\t\t\t: false;\n\t},\n\n\tsetSelected: function(selected, _point) {\n\t\tvar path = this._path,\n\t\t\tselected = !!selected,\n\t\t\tstate = this._selectionState,\n\t\t\toldState = state,\n\t\t\tflag = !_point ? 7\n\t\t\t\t\t: _point === this._point ? 4\n\t\t\t\t\t: _point === this._handleIn ? 1\n\t\t\t\t\t: _point === this._handleOut ? 2\n\t\t\t\t\t: 0;\n\t\tif (selected) {\n\t\t\tstate |= flag;\n\t\t} else {\n\t\t\tstate &= ~flag;\n\t\t}\n\t\tthis._selectionState = state;\n\t\tif (path && state !== oldState) {\n\t\t\tpath._updateSelection(this, oldState, state);\n\t\t\tpath._changed(129);\n\t\t}\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index !== undefined ? this._index : null;\n\t},\n\n\tgetPath: function() {\n\t\treturn this._path || null;\n\t},\n\n\tgetCurve: function() {\n\t\tvar path = this._path,\n\t\t\tindex = this._index;\n\t\tif (path) {\n\t\t\tif (index > 0 && !path._closed\n\t\t\t\t\t&& index === path._segments.length - 1)\n\t\t\t\tindex--;\n\t\t\treturn path.getCurves()[index] || null;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetLocation: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve\n\t\t\t\t? new CurveLocation(curve, this === curve._segment1 ? 0 : 1)\n\t\t\t\t: null;\n\t},\n\n\tgetNext: function() {\n\t\tvar segments = this._path && this._path._segments;\n\t\treturn segments && (segments[this._index + 1]\n\t\t\t\t|| this._path._closed && segments[0]) || null;\n\t},\n\n\tgetPrevious: function() {\n\t\tvar segments = this._path && this._path._segments;\n\t\treturn segments && (segments[this._index - 1]\n\t\t\t\t|| this._path._closed && segments[segments.length - 1]) || null;\n\t},\n\n\tisFirst: function() {\n\t\treturn this._index === 0;\n\t},\n\n\tisLast: function() {\n\t\tvar path = this._path;\n\t\treturn path && this._index === path._segments.length - 1 || false;\n\t},\n\n\treverse: function() {\n\t\tvar handleIn = this._handleIn,\n\t\t\thandleOut = this._handleOut,\n\t\t\tinX = handleIn._x,\n\t\t\tinY = handleIn._y;\n\t\thandleIn.set(handleOut._x, handleOut._y);\n\t\thandleOut.set(inX, inY);\n\t},\n\n\treversed: function() {\n\t\treturn new Segment(this._point, this._handleOut, this._handleIn);\n\t},\n\n\tremove: function() {\n\t\treturn this._path ? !!this._path.removeSegment(this._index) : false;\n\t},\n\n\tclone: function() {\n\t\treturn new Segment(this._point, this._handleIn, this._handleOut);\n\t},\n\n\tequals: function(segment) {\n\t\treturn segment === this || segment && this._class === segment._class\n\t\t\t\t&& this._point.equals(segment._point)\n\t\t\t\t&& this._handleIn.equals(segment._handleIn)\n\t\t\t\t&& this._handleOut.equals(segment._handleOut)\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [ 'point: ' + this._point ];\n\t\tif (!this._handleIn.isZero())\n\t\t\tparts.push('handleIn: ' + this._handleIn);\n\t\tif (!this._handleOut.isZero())\n\t\t\tparts.push('handleOut: ' + this._handleOut);\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t},\n\n\ttransform: function(matrix) {\n\t\tthis._transformCoordinates(matrix, new Array(6), true);\n\t\tthis._changed();\n\t},\n\n\t_transformCoordinates: function(matrix, coords, change) {\n\t\tvar point = this._point,\n\t\t\thandleIn = !change || !this._handleIn.isZero()\n\t\t\t\t\t? this._handleIn : null,\n\t\t\thandleOut = !change || !this._handleOut.isZero()\n\t\t\t\t\t? this._handleOut : null,\n\t\t\tx = point._x,\n\t\t\ty = point._y,\n\t\t\ti = 2;\n\t\tcoords[0] = x;\n\t\tcoords[1] = y;\n\t\tif (handleIn) {\n\t\t\tcoords[i++] = handleIn._x + x;\n\t\t\tcoords[i++] = handleIn._y + y;\n\t\t}\n\t\tif (handleOut) {\n\t\t\tcoords[i++] = handleOut._x + x;\n\t\t\tcoords[i++] = handleOut._y + y;\n\t\t}\n\t\tif (matrix) {\n\t\t\tmatrix._transformCoordinates(coords, coords, i / 2);\n\t\t\tx = coords[0];\n\t\t\ty = coords[1];\n\t\t\tif (change) {\n\t\t\t\tpoint._x = x;\n\t\t\t\tpoint._y = y;\n\t\t\t\ti  = 2;\n\t\t\t\tif (handleIn) {\n\t\t\t\t\thandleIn._x = coords[i++] - x;\n\t\t\t\t\thandleIn._y = coords[i++] - y;\n\t\t\t\t}\n\t\t\t\tif (handleOut) {\n\t\t\t\t\thandleOut._x = coords[i++] - x;\n\t\t\t\t\thandleOut._y = coords[i++] - y;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!handleIn) {\n\t\t\t\t\tcoords[i++] = x;\n\t\t\t\t\tcoords[i++] = y;\n\t\t\t\t}\n\t\t\t\tif (!handleOut) {\n\t\t\t\t\tcoords[i++] = x;\n\t\t\t\t\tcoords[i++] = y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn coords;\n\t}\n});\n\nvar SegmentPoint = Point.extend({\n\tinitialize: function SegmentPoint(point, owner, key) {\n\t\tvar x, y, selected;\n\t\tif (!point) {\n\t\t\tx = y = 0;\n\t\t} else if ((x = point[0]) !== undefined) {\n\t\t\ty = point[1];\n\t\t} else {\n\t\t\tvar pt = point;\n\t\t\tif ((x = pt.x) === undefined) {\n\t\t\t\tpt = Point.read(arguments);\n\t\t\t\tx = pt.x;\n\t\t\t}\n\t\t\ty = pt.y;\n\t\t\tselected = pt.selected;\n\t\t}\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner = owner;\n\t\towner[key] = this;\n\t\tif (selected)\n\t\t\tthis.setSelected(true);\n\t},\n\n\tset: function(x, y) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner._changed(this);\n\t\treturn this;\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter,\n\t\t\tx = f.number(this._x),\n\t\t\ty = f.number(this._y);\n\t\treturn this.isSelected()\n\t\t\t\t? { x: x, y: y, selected: true }\n\t\t\t\t: [x, y];\n\t},\n\n\tgetX: function() {\n\t\treturn this._x;\n\t},\n\n\tsetX: function(x) {\n\t\tthis._x = x;\n\t\tthis._owner._changed(this);\n\t},\n\n\tgetY: function() {\n\t\treturn this._y;\n\t},\n\n\tsetY: function(y) {\n\t\tthis._y = y;\n\t\tthis._owner._changed(this);\n\t},\n\n\tisZero: function() {\n\t\treturn Numerical.isZero(this._x) && Numerical.isZero(this._y);\n\t},\n\n\tsetSelected: function(selected) {\n\t\tthis._owner.setSelected(selected, this);\n\t},\n\n\tisSelected: function() {\n\t\treturn this._owner.isSelected(this);\n\t}\n});\n\nvar Curve = Base.extend({\n\t_class: 'Curve',\n\n\tinitialize: function Curve(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n\t\tvar count = arguments.length,\n\t\t\tseg1, seg2,\n\t\t\tpoint1, point2,\n\t\t\thandle1, handle2;\n\t\tif (count === 3) {\n\t\t\tthis._path = arg0;\n\t\t\tseg1 = arg1;\n\t\t\tseg2 = arg2;\n\t\t} else if (count === 0) {\n\t\t\tseg1 = new Segment();\n\t\t\tseg2 = new Segment();\n\t\t} else if (count === 1) {\n\t\t\tif ('segment1' in arg0) {\n\t\t\t\tseg1 = new Segment(arg0.segment1);\n\t\t\t\tseg2 = new Segment(arg0.segment2);\n\t\t\t} else if ('point1' in arg0) {\n\t\t\t\tpoint1 = arg0.point1;\n\t\t\t\thandle1 = arg0.handle1;\n\t\t\t\thandle2 = arg0.handle2;\n\t\t\t\tpoint2 = arg0.point2;\n\t\t\t} else if (Array.isArray(arg0)) {\n\t\t\t\tpoint1 = [arg0[0], arg0[1]];\n\t\t\t\tpoint2 = [arg0[6], arg0[7]];\n\t\t\t\thandle1 = [arg0[2] - arg0[0], arg0[3] - arg0[1]];\n\t\t\t\thandle2 = [arg0[4] - arg0[6], arg0[5] - arg0[7]];\n\t\t\t}\n\t\t} else if (count === 2) {\n\t\t\tseg1 = new Segment(arg0);\n\t\t\tseg2 = new Segment(arg1);\n\t\t} else if (count === 4) {\n\t\t\tpoint1 = arg0;\n\t\t\thandle1 = arg1;\n\t\t\thandle2 = arg2;\n\t\t\tpoint2 = arg3;\n\t\t} else if (count === 8) {\n\t\t\tpoint1 = [arg0, arg1];\n\t\t\tpoint2 = [arg6, arg7];\n\t\t\thandle1 = [arg2 - arg0, arg3 - arg1];\n\t\t\thandle2 = [arg4 - arg6, arg5 - arg7];\n\t\t}\n\t\tthis._segment1 = seg1 || new Segment(point1, null, handle1);\n\t\tthis._segment2 = seg2 || new Segment(point2, handle2, null);\n\t},\n\n\t_serialize: function(options) {\n\t\treturn Base.serialize(this.hasHandles()\n\t\t\t\t? [this.getPoint1(), this.getHandle1(), this.getHandle2(),\n\t\t\t\t\tthis.getPoint2()]\n\t\t\t\t: [this.getPoint1(), this.getPoint2()],\n\t\t\t\toptions, true);\n\t},\n\n\t_changed: function() {\n\t\tthis._length = this._bounds = undefined;\n\t},\n\n\tclone: function() {\n\t\treturn new Curve(this._segment1, this._segment2);\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [ 'point1: ' + this._segment1._point ];\n\t\tif (!this._segment1._handleOut.isZero())\n\t\t\tparts.push('handle1: ' + this._segment1._handleOut);\n\t\tif (!this._segment2._handleIn.isZero())\n\t\t\tparts.push('handle2: ' + this._segment2._handleIn);\n\t\tparts.push('point2: ' + this._segment2._point);\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t},\n\n\tremove: function() {\n\t\tvar removed = false;\n\t\tif (this._path) {\n\t\t\tvar segment2 = this._segment2,\n\t\t\t\thandleOut = segment2._handleOut;\n\t\t\tremoved = segment2.remove();\n\t\t\tif (removed)\n\t\t\t\tthis._segment1._handleOut.set(handleOut.x, handleOut.y);\n\t\t}\n\t\treturn removed;\n\t},\n\n\tgetPoint1: function() {\n\t\treturn this._segment1._point;\n\t},\n\n\tsetPoint1: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment1._point.set(point.x, point.y);\n\t},\n\n\tgetPoint2: function() {\n\t\treturn this._segment2._point;\n\t},\n\n\tsetPoint2: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment2._point.set(point.x, point.y);\n\t},\n\n\tgetHandle1: function() {\n\t\treturn this._segment1._handleOut;\n\t},\n\n\tsetHandle1: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment1._handleOut.set(point.x, point.y);\n\t},\n\n\tgetHandle2: function() {\n\t\treturn this._segment2._handleIn;\n\t},\n\n\tsetHandle2: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment2._handleIn.set(point.x, point.y);\n\t},\n\n\tgetSegment1: function() {\n\t\treturn this._segment1;\n\t},\n\n\tgetSegment2: function() {\n\t\treturn this._segment2;\n\t},\n\n\tgetPath: function() {\n\t\treturn this._path;\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._segment1._index;\n\t},\n\n\tgetNext: function() {\n\t\tvar curves = this._path && this._path._curves;\n\t\treturn curves && (curves[this._segment1._index + 1]\n\t\t\t\t|| this._path._closed && curves[0]) || null;\n\t},\n\n\tgetPrevious: function() {\n\t\tvar curves = this._path && this._path._curves;\n\t\treturn curves && (curves[this._segment1._index - 1]\n\t\t\t\t|| this._path._closed && curves[curves.length - 1]) || null;\n\t},\n\n\tisFirst: function() {\n\t\treturn this._segment1._index === 0;\n\t},\n\n\tisLast: function() {\n\t\tvar path = this._path;\n\t\treturn path && this._segment1._index === path._curves.length - 1\n\t\t\t\t|| false;\n\t},\n\n\tisSelected: function() {\n\t\treturn this.getPoint1().isSelected()\n\t\t\t\t&& this.getHandle2().isSelected()\n\t\t\t\t&& this.getHandle2().isSelected()\n\t\t\t\t&& this.getPoint2().isSelected();\n\t},\n\n\tsetSelected: function(selected) {\n\t\tthis.getPoint1().setSelected(selected);\n\t\tthis.getHandle1().setSelected(selected);\n\t\tthis.getHandle2().setSelected(selected);\n\t\tthis.getPoint2().setSelected(selected);\n\t},\n\n\tgetValues: function(matrix) {\n\t\treturn Curve.getValues(this._segment1, this._segment2, matrix);\n\t},\n\n\tgetPoints: function() {\n\t\tvar coords = this.getValues(),\n\t\t\tpoints = [];\n\t\tfor (var i = 0; i < 8; i += 2)\n\t\t\tpoints.push(new Point(coords[i], coords[i + 1]));\n\t\treturn points;\n\t},\n\n\tgetLength: function() {\n\t\tif (this._length == null)\n\t\t\tthis._length = Curve.getLength(this.getValues(), 0, 1);\n\t\treturn this._length;\n\t},\n\n\tgetArea: function() {\n\t\treturn Curve.getArea(this.getValues());\n\t},\n\n\tgetLine: function() {\n\t\treturn new Line(this._segment1._point, this._segment2._point);\n\t},\n\n\tgetPart: function(from, to) {\n\t\treturn new Curve(Curve.getPart(this.getValues(), from, to));\n\t},\n\n\tgetPartLength: function(from, to) {\n\t\treturn Curve.getLength(this.getValues(), from, to);\n\t},\n\n\tgetIntersections: function(curve) {\n\t\treturn Curve._getIntersections(this.getValues(),\n\t\t\t\tcurve && curve !== this ? curve.getValues() : null,\n\t\t\t\tthis, curve, [], {});\n\t},\n\n\t_getParameter: function(offset, isParameter) {\n\t\treturn isParameter\n\t\t\t\t? offset\n\t\t\t\t: offset && offset.curve === this\n\t\t\t\t\t? offset.parameter\n\t\t\t\t\t: offset === undefined && isParameter === undefined\n\t\t\t\t\t\t? 0.5\n\t\t\t\t\t\t: this.getParameterAt(offset, 0);\n\t},\n\n\tdivide: function(offset, isParameter, _setHandles) {\n\t\tvar parameter = this._getParameter(offset, isParameter),\n\t\t\ttMin = 4e-7,\n\t\t\ttMax = 1 - tMin,\n\t\t\tres = null;\n\t\tif (parameter >= tMin && parameter <= tMax) {\n\t\t\tvar parts = Curve.subdivide(this.getValues(), parameter),\n\t\t\t\tleft = parts[0],\n\t\t\t\tright = parts[1],\n\t\t\t\tsetHandles = _setHandles || this.hasHandles(),\n\t\t\t\tsegment1 = this._segment1,\n\t\t\t\tsegment2 = this._segment2,\n\t\t\t\tpath = this._path;\n\t\t\tif (setHandles) {\n\t\t\t\tsegment1._handleOut.set(left[2] - left[0],\n\t\t\t\t\t\tleft[3] - left[1]);\n\t\t\t\tsegment2._handleIn.set(right[4] - right[6],\n\t\t\t\t\t\tright[5] - right[7]);\n\t\t\t}\n\t\t\tvar x = left[6], y = left[7],\n\t\t\t\tsegment = new Segment(new Point(x, y),\n\t\t\t\t\t\tsetHandles && new Point(left[4] - x, left[5] - y),\n\t\t\t\t\t\tsetHandles && new Point(right[2] - x, right[3] - y));\n\t\t\tif (path) {\n\t\t\t\tpath.insert(segment1._index + 1, segment);\n\t\t\t\tres = this.getNext();\n\t\t\t} else {\n\t\t\t\tthis._segment2 = segment;\n\t\t\t\tres = new Curve(segment, segment2);\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t},\n\n\tsplit: function(offset, isParameter) {\n\t\treturn this._path\n\t\t\t? this._path.split(this._segment1._index,\n\t\t\t\t\tthis._getParameter(offset, isParameter))\n\t\t\t: null;\n\t},\n\n\treversed: function() {\n\t\treturn new Curve(this._segment2.reversed(), this._segment1.reversed());\n\t},\n\n\tclearHandles: function() {\n\t\tthis._segment1._handleOut.set(0, 0);\n\t\tthis._segment2._handleIn.set(0, 0);\n\t},\n\nstatics: {\n\tgetValues: function(segment1, segment2, matrix) {\n\t\tvar p1 = segment1._point,\n\t\t\th1 = segment1._handleOut,\n\t\t\th2 = segment2._handleIn,\n\t\t\tp2 = segment2._point,\n\t\t\tvalues = [\n\t\t\t\tp1._x, p1._y,\n\t\t\t\tp1._x + h1._x, p1._y + h1._y,\n\t\t\t\tp2._x + h2._x, p2._y + h2._y,\n\t\t\t\tp2._x, p2._y\n\t\t\t];\n\t\tif (matrix)\n\t\t\tmatrix._transformCoordinates(values, values, 4);\n\t\treturn values;\n\t},\n\n\tsubdivide: function(v, t) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7];\n\t\tif (t === undefined)\n\t\t\tt = 0.5;\n\t\tvar u = 1 - t,\n\t\t\tp3x = u * p1x + t * c1x, p3y = u * p1y + t * c1y,\n\t\t\tp4x = u * c1x + t * c2x, p4y = u * c1y + t * c2y,\n\t\t\tp5x = u * c2x + t * p2x, p5y = u * c2y + t * p2y,\n\t\t\tp6x = u * p3x + t * p4x, p6y = u * p3y + t * p4y,\n\t\t\tp7x = u * p4x + t * p5x, p7y = u * p4y + t * p5y,\n\t\t\tp8x = u * p6x + t * p7x, p8y = u * p6y + t * p7y;\n\t\treturn [\n\t\t\t[p1x, p1y, p3x, p3y, p6x, p6y, p8x, p8y],\n\t\t\t[p8x, p8y, p7x, p7y, p5x, p5y, p2x, p2y]\n\t\t];\n\t},\n\n\tsolveCubic: function (v, coord, val, roots, min, max) {\n\t\tvar p1 = v[coord],\n\t\t\tc1 = v[coord + 2],\n\t\t\tc2 = v[coord + 4],\n\t\t\tp2 = v[coord + 6],\n\t\t\tc = 3 * (c1 - p1),\n\t\t\tb = 3 * (c2 - c1) - c,\n\t\t\ta = p2 - p1 - c - b;\n\t\treturn Numerical.solveCubic(a, b, c, p1 - val, roots, min, max);\n\t},\n\n\tgetParameterOf: function(v, point) {\n\t\tvar p1 = new Point(v[0], v[1]),\n\t\t\tp2 = new Point(v[6], v[7]),\n\t\t\tepsilon = 1e-12,\n\t\t\tt = point.isClose(p1, epsilon) ? 0\n\t\t\t  : point.isClose(p2, epsilon) ? 1\n\t\t\t  : null;\n\t\tif (t !== null)\n\t\t\treturn t;\n\t\tvar coords = [point.x, point.y],\n\t\t\troots = [],\n\t\t\tgeomEpsilon = 2e-7;\n\t\tfor (var c = 0; c < 2; c++) {\n\t\t\tvar count = Curve.solveCubic(v, c, coords[c], roots, 0, 1);\n\t\t\tfor (var i = 0; i < count; i++) {\n\t\t\t\tt = roots[i];\n\t\t\t\tif (point.isClose(Curve.getPoint(v, t), geomEpsilon))\n\t\t\t\t\treturn t;\n\t\t\t}\n\t\t}\n\t\treturn point.isClose(p1, geomEpsilon) ? 0\n\t\t\t : point.isClose(p2, geomEpsilon) ? 1\n\t\t\t : null;\n\t},\n\n\tgetNearestParameter: function(v, point) {\n\t\tif (Curve.isStraight(v)) {\n\t\t\tvar p1x = v[0], p1y = v[1],\n\t\t\t\tp2x = v[6], p2y = v[7],\n\t\t\t\tvx = p2x - p1x, vy = p2y - p1y,\n\t\t\t\tdet = vx * vx + vy * vy;\n\t\t\tif (det === 0)\n\t\t\t\treturn 0;\n\t\t\tvar u = ((point.x - p1x) * vx + (point.y - p1y) * vy) / det;\n\t\t\treturn u < 1e-12 ? 0\n\t\t\t\t : u > 0.999999999999 ? 1\n\t\t\t\t : Curve.getParameterOf(v,\n\t\t\t\t\tnew Point(p1x + u * vx, p1y + u * vy));\n\t\t}\n\n\t\tvar count = 100,\n\t\t\tminDist = Infinity,\n\t\t\tminT = 0;\n\n\t\tfunction refine(t) {\n\t\t\tif (t >= 0 && t <= 1) {\n\t\t\t\tvar dist = point.getDistance(Curve.getPoint(v, t), true);\n\t\t\t\tif (dist < minDist) {\n\t\t\t\t\tminDist = dist;\n\t\t\t\t\tminT = t;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i <= count; i++)\n\t\t\trefine(i / count);\n\n\t\tvar step = 1 / (count * 2);\n\t\twhile (step > 4e-7) {\n\t\t\tif (!refine(minT - step) && !refine(minT + step))\n\t\t\t\tstep /= 2;\n\t\t}\n\t\treturn minT;\n\t},\n\n\tgetPart: function(v, from, to) {\n\t\tvar flip = from > to;\n\t\tif (flip) {\n\t\t\tvar tmp = from;\n\t\t\tfrom = to;\n\t\t\tto = tmp;\n\t\t}\n\t\tif (from > 0)\n\t\t\tv = Curve.subdivide(v, from)[1];\n\t\tif (to < 1)\n\t\t\tv = Curve.subdivide(v, (to - from) / (1 - from))[0];\n\t\treturn flip\n\t\t\t\t? [v[6], v[7], v[4], v[5], v[2], v[3], v[0], v[1]]\n\t\t\t\t: v;\n\t},\n\n\thasHandles: function(v) {\n\t\tvar isZero = Numerical.isZero;\n\t\treturn !(isZero(v[0] - v[2]) && isZero(v[1] - v[3])\n\t\t\t\t&& isZero(v[4] - v[6]) && isZero(v[5] - v[7]));\n\t},\n\n\tisFlatEnough: function(v, tolerance) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7],\n\t\t\tux = 3 * c1x - 2 * p1x - p2x,\n\t\t\tuy = 3 * c1y - 2 * p1y - p2y,\n\t\t\tvx = 3 * c2x - 2 * p2x - p1x,\n\t\t\tvy = 3 * c2y - 2 * p2y - p1y;\n\t\treturn Math.max(ux * ux, vx * vx) + Math.max(uy * uy, vy * vy)\n\t\t\t\t< 10 * tolerance * tolerance;\n\t},\n\n\tgetArea: function(v) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tp2x = v[6], p2y = v[7],\n\t\t\th1x = (v[2] + p1x) / 2,\n\t\t\th1y = (v[3] + p1y) / 2,\n\t\t\th2x = (v[4] + v[6]) / 2,\n\t\t\th2y = (v[5] + v[7]) / 2;\n\t\treturn 6 * ((p1x - h1x) * (h1y + p1y)\n\t\t\t\t  + (h1x - h2x) * (h2y + h1y)\n\t\t\t\t  + (h2x - p2x) * (p2y + h2y)) / 10;\n\t},\n\n\tgetBounds: function(v) {\n\t\tvar min = v.slice(0, 2),\n\t\t\tmax = min.slice(),\n\t\t\troots = [0, 0];\n\t\tfor (var i = 0; i < 2; i++)\n\t\t\tCurve._addBounds(v[i], v[i + 2], v[i + 4], v[i + 6],\n\t\t\t\t\ti, 0, min, max, roots);\n\t\treturn new Rectangle(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n\t},\n\n\t_addBounds: function(v0, v1, v2, v3, coord, padding, min, max, roots) {\n\t\tfunction add(value, padding) {\n\t\t\tvar left = value - padding,\n\t\t\t\tright = value + padding;\n\t\t\tif (left < min[coord])\n\t\t\t\tmin[coord] = left;\n\t\t\tif (right > max[coord])\n\t\t\t\tmax[coord] = right;\n\t\t}\n\t\tvar a = 3 * (v1 - v2) - v0 + v3,\n\t\t\tb = 2 * (v0 + v2) - 4 * v1,\n\t\t\tc = v1 - v0,\n\t\t\tcount = Numerical.solveQuadratic(a, b, c, roots),\n\t\t\ttMin = 4e-7,\n\t\t\ttMax = 1 - tMin;\n\t\tadd(v3, 0);\n\t\tfor (var i = 0; i < count; i++) {\n\t\t\tvar t = roots[i],\n\t\t\t\tu = 1 - t;\n\t\t\tif (tMin < t && t < tMax)\n\t\t\t\tadd(u * u * u * v0\n\t\t\t\t\t+ 3 * u * u * t * v1\n\t\t\t\t\t+ 3 * u * t * t * v2\n\t\t\t\t\t+ t * t * t * v3,\n\t\t\t\t\tpadding);\n\t\t}\n\t}\n}}, Base.each(\n\t['getBounds', 'getStrokeBounds', 'getHandleBounds', 'getRoughBounds'],\n\tfunction(name) {\n\t\tthis[name] = function() {\n\t\t\tif (!this._bounds)\n\t\t\t\tthis._bounds = {};\n\t\t\tvar bounds = this._bounds[name];\n\t\t\tif (!bounds) {\n\t\t\t\tvar path = this._path;\n\t\t\t\tbounds = this._bounds[name] = Path[name](\n\t\t\t\t\t\t[this._segment1, this._segment2], false,\n\t\t\t\t\t\tpath && path.getStyle());\n\t\t\t}\n\t\t\treturn bounds.clone();\n\t\t};\n\t},\n{\n\n}), Base.each({\n\tisStraight: function(l, h1, h2) {\n\t\tif (h1.isZero() && h2.isZero()) {\n\t\t\treturn true;\n\t\t} else if (l.isZero()) {\n\t\t\treturn false;\n\t\t} else if (h1.isCollinear(l) && h2.isCollinear(l)) {\n\t\t\tvar div = l.dot(l),\n\t\t\t\tp1 = l.dot(h1) / div,\n\t\t\t\tp2 = l.dot(h2) / div;\n\t\t\treturn p1 >= 0 && p1 <= 1 && p2 <= 0 && p2 >= -1;\n\t\t}\n\t\treturn false;\n\t},\n\n\tisLinear: function(l, h1, h2) {\n\t\tvar third = l.divide(3);\n\t\treturn h1.equals(third) && h2.negate().equals(third);\n\t}\n}, function(test, name) {\n\tthis[name] = function() {\n\t\tvar seg1 = this._segment1,\n\t\t\tseg2 = this._segment2;\n\t\treturn test(seg2._point.subtract(seg1._point),\n\t\t\t\tseg1._handleOut, seg2._handleIn);\n\t};\n\n\tthis.statics[name] = function(v) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tp2x = v[6], p2y = v[7];\n\t\treturn test(new Point(p2x - p1x, p2y - p1y),\n\t\t\t\tnew Point(v[2] - p1x, v[3] - p1y),\n\t\t\t\tnew Point(v[4] - p2x, v[5] - p2y));\n\t};\n}, {\n\tstatics: {},\n\n\thasHandles: function() {\n\t\treturn !this._segment1._handleOut.isZero()\n\t\t\t\t|| !this._segment2._handleIn.isZero();\n\t},\n\n\tisCollinear: function(curve) {\n\t\treturn curve && this.isStraight() && curve.isStraight()\n\t\t\t\t&& this.getLine().isCollinear(curve.getLine());\n\t},\n\n\tisHorizontal: function() {\n\t\treturn this.isStraight() && Math.abs(this.getTangentAt(0.5, true).y)\n\t\t\t\t< 1e-7;\n\t},\n\n\tisVertical: function() {\n\t\treturn this.isStraight() && Math.abs(this.getTangentAt(0.5, true).x)\n\t\t\t\t< 1e-7;\n\t}\n}), {\n\tbeans: false,\n\n\tgetParameterAt: function(offset, start) {\n\t\treturn Curve.getParameterAt(this.getValues(), offset, start);\n\t},\n\n\tgetParameterOf: function() {\n\t\treturn Curve.getParameterOf(this.getValues(), Point.read(arguments));\n\t},\n\n\tgetLocationAt: function(offset, isParameter) {\n\t\tvar t = isParameter ? offset : this.getParameterAt(offset);\n\t\treturn t != null && t >= 0 && t <= 1\n\t\t\t\t? new CurveLocation(this, t)\n\t\t\t\t: null;\n\t},\n\n\tgetLocationOf: function() {\n\t\treturn this.getLocationAt(this.getParameterOf(Point.read(arguments)),\n\t\t\t\ttrue);\n\t},\n\n\tgetOffsetOf: function() {\n\t\tvar loc = this.getLocationOf.apply(this, arguments);\n\t\treturn loc ? loc.getOffset() : null;\n\t},\n\n\tgetNearestLocation: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tvalues = this.getValues(),\n\t\t\tt = Curve.getNearestParameter(values, point),\n\t\t\tpt = Curve.getPoint(values, t);\n\t\treturn new CurveLocation(this, t, pt, null, point.getDistance(pt));\n\t},\n\n\tgetNearestPoint: function() {\n\t\treturn this.getNearestLocation.apply(this, arguments).getPoint();\n\t}\n\n},\nnew function() {\n\tvar methods = ['getPoint', 'getTangent', 'getNormal', 'getWeightedTangent',\n\t\t'getWeightedNormal', 'getCurvature'];\n\treturn Base.each(methods,\n\tfunction(name) {\n\t\tthis[name + 'At'] = function(offset, isParameter) {\n\t\t\tvar values = this.getValues();\n\t\t\treturn Curve[name](values, isParameter ? offset\n\t\t\t\t\t: Curve.getParameterAt(values, offset, 0));\n\t\t};\n\t}, {\n\t\tstatics: {\n\t\t\tevaluateMethods: methods\n\t\t}\n\t})\n},\nnew function() {\n\n\tfunction getLengthIntegrand(v) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7],\n\n\t\t\tax = 9 * (c1x - c2x) + 3 * (p2x - p1x),\n\t\t\tbx = 6 * (p1x + c2x) - 12 * c1x,\n\t\t\tcx = 3 * (c1x - p1x),\n\n\t\t\tay = 9 * (c1y - c2y) + 3 * (p2y - p1y),\n\t\t\tby = 6 * (p1y + c2y) - 12 * c1y,\n\t\t\tcy = 3 * (c1y - p1y);\n\n\t\treturn function(t) {\n\t\t\tvar dx = (ax * t + bx) * t + cx,\n\t\t\t\tdy = (ay * t + by) * t + cy;\n\t\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t\t};\n\t}\n\n\tfunction getIterations(a, b) {\n\t\treturn Math.max(2, Math.min(16, Math.ceil(Math.abs(b - a) * 32)));\n\t}\n\n\tfunction evaluate(v, t, type, normalized) {\n\t\tif (t == null || t < 0 || t > 1)\n\t\t\treturn null;\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7],\n\t\t\ttMin = 4e-7,\n\t\t\ttMax = 1 - tMin,\n\t\t\tx, y;\n\n\t\tif (type === 0 && (t < tMin || t > tMax)) {\n\t\t\tvar isZero = t < tMin;\n\t\t\tx = isZero ? p1x : p2x;\n\t\t\ty = isZero ? p1y : p2y;\n\t\t} else {\n\t\t\tvar cx = 3 * (c1x - p1x),\n\t\t\t\tbx = 3 * (c2x - c1x) - cx,\n\t\t\t\tax = p2x - p1x - cx - bx,\n\n\t\t\t\tcy = 3 * (c1y - p1y),\n\t\t\t\tby = 3 * (c2y - c1y) - cy,\n\t\t\t\tay = p2y - p1y - cy - by;\n\t\t\tif (type === 0) {\n\t\t\t\tx = ((ax * t + bx) * t + cx) * t + p1x;\n\t\t\t\ty = ((ay * t + by) * t + cy) * t + p1y;\n\t\t\t} else {\n\t\t\t\tif (t < tMin) {\n\t\t\t\t\tx = cx;\n\t\t\t\t\ty = cy;\n\t\t\t\t} else if (t > tMax) {\n\t\t\t\t\tx = 3 * (p2x - c2x);\n\t\t\t\t\ty = 3 * (p2y - c2y);\n\t\t\t\t} else {\n\t\t\t\t\tx = (3 * ax * t + 2 * bx) * t + cx;\n\t\t\t\t\ty = (3 * ay * t + 2 * by) * t + cy;\n\t\t\t\t}\n\t\t\t\tif (normalized) {\n\t\t\t\t\tif (x === 0 && y === 0 && (t < tMin || t > tMax)) {\n\t\t\t\t\t\tx = c2x - c1x;\n\t\t\t\t\t\ty = c2y - c1y;\n\t\t\t\t\t}\n\t\t\t\t\tvar len = Math.sqrt(x * x + y * y);\n\t\t\t\t\tif (len) {\n\t\t\t\t\t\tx /= len;\n\t\t\t\t\t\ty /= len;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (type === 3) {\n\t\t\t\t\tvar x2 = 6 * ax * t + 2 * bx,\n\t\t\t\t\t\ty2 = 6 * ay * t + 2 * by,\n\t\t\t\t\t\td = Math.pow(x * x + y * y, 3 / 2);\n\t\t\t\t\tx = d !== 0 ? (x * y2 - y * x2) / d : 0;\n\t\t\t\t\ty = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn type === 2 ? new Point(y, -x) : new Point(x, y);\n\t}\n\n\treturn { statics: {\n\n\t\tgetLength: function(v, a, b) {\n\t\t\tif (a === undefined)\n\t\t\t\ta = 0;\n\t\t\tif (b === undefined)\n\t\t\t\tb = 1;\n\t\t\tif (a === 0 && b === 1 && Curve.isStraight(v)) {\n\t\t\t\tvar dx = v[6] - v[0],\n\t\t\t\t\tdy = v[7] - v[1];\n\t\t\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t\t\t}\n\t\t\tvar ds = getLengthIntegrand(v);\n\t\t\treturn Numerical.integrate(ds, a, b, getIterations(a, b));\n\t\t},\n\n\t\tgetParameterAt: function(v, offset, start) {\n\t\t\tif (start === undefined)\n\t\t\t\tstart = offset < 0 ? 1 : 0\n\t\t\tif (offset === 0)\n\t\t\t\treturn start;\n\t\t\tvar abs = Math.abs,\n\t\t\t\tforward = offset > 0,\n\t\t\t\ta = forward ? start : 0,\n\t\t\t\tb = forward ? 1 : start,\n\t\t\t\tds = getLengthIntegrand(v),\n\t\t\t\trangeLength = Numerical.integrate(ds, a, b,\n\t\t\t\t\t\tgetIterations(a, b));\n\t\t\tif (abs(offset - rangeLength) < 1e-12) {\n\t\t\t\treturn forward ? b : a;\n\t\t\t} else if (abs(offset) > rangeLength) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvar guess = offset / rangeLength,\n\t\t\t\tlength = 0;\n\t\t\tfunction f(t) {\n\t\t\t\tlength += Numerical.integrate(ds, start, t,\n\t\t\t\t\t\tgetIterations(start, t));\n\t\t\t\tstart = t;\n\t\t\t\treturn length - offset;\n\t\t\t}\n\t\t\treturn Numerical.findRoot(f, ds, start + guess, a, b, 32,\n\t\t\t\t\t1e-12);\n\t\t},\n\n\t\tgetPoint: function(v, t) {\n\t\t\treturn evaluate(v, t, 0, false);\n\t\t},\n\n\t\tgetTangent: function(v, t) {\n\t\t\treturn evaluate(v, t, 1, true);\n\t\t},\n\n\t\tgetWeightedTangent: function(v, t) {\n\t\t\treturn evaluate(v, t, 1, false);\n\t\t},\n\n\t\tgetNormal: function(v, t) {\n\t\t\treturn evaluate(v, t, 2, true);\n\t\t},\n\n\t\tgetWeightedNormal: function(v, t) {\n\t\t\treturn evaluate(v, t, 2, false);\n\t\t},\n\n\t\tgetCurvature: function(v, t) {\n\t\t\treturn evaluate(v, t, 3, false).x;\n\t\t}\n\t}};\n},\nnew function() {\n\n\tfunction addLocation(locations, param, v1, c1, t1, p1, v2, c2, t2, p2,\n\t\t\toverlap) {\n\t\tvar startConnected = param.startConnected,\n\t\t\tendConnected = param.endConnected,\n\t\t\ttMin = 4e-7,\n\t\t\ttMax = 1 - tMin;\n\t\tif (t1 == null)\n\t\t\tt1 = Curve.getParameterOf(v1, p1);\n\t\tif (t1 !== null && t1 >= (startConnected ? tMin : 0) &&\n\t\t\tt1 <= (endConnected ? tMax : 1)) {\n\t\t\tif (t2 == null)\n\t\t\t\tt2 = Curve.getParameterOf(v2, p2);\n\t\t\tif (t2 !== null && t2 >= (endConnected ? tMin : 0) &&\n\t\t\t\tt2 <= (startConnected ? tMax : 1)) {\n\t\t\t\tvar renormalize = param.renormalize;\n\t\t\t\tif (renormalize) {\n\t\t\t\t\tvar res = renormalize(t1, t2);\n\t\t\t\t\tt1 = res[0];\n\t\t\t\t\tt2 = res[1];\n\t\t\t\t}\n\t\t\t\tvar loc1 = new CurveLocation(c1, t1,\n\t\t\t\t\t\tp1 || Curve.getPoint(v1, t1), overlap),\n\t\t\t\t\tloc2 = new CurveLocation(c2, t2,\n\t\t\t\t\t\tp2 || Curve.getPoint(v2, t2), overlap),\n\t\t\t\t\tflip = loc1.getPath() === loc2.getPath()\n\t\t\t\t\t\t&& loc1.getIndex() > loc2.getIndex(),\n\t\t\t\t\tloc = flip ? loc2 : loc1,\n\t\t\t\t\tinclude = param.include;\n\t\t\t\tloc1._intersection = loc2;\n\t\t\t\tloc2._intersection = loc1;\n\t\t\t\tif (!include || include(loc)) {\n\t\t\t\t\tCurveLocation.insert(locations, loc, true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction addCurveIntersections(v1, v2, c1, c2, locations, param,\n\t\t\ttMin, tMax, uMin, uMax, oldTDiff, reverse, recursion) {\n\t\tif (++recursion >= 24)\n\t\t\treturn;\n\t\tvar q0x = v2[0], q0y = v2[1], q3x = v2[6], q3y = v2[7],\n\t\t\tgetSignedDistance = Line.getSignedDistance,\n\t\t\td1 = getSignedDistance(q0x, q0y, q3x, q3y, v2[2], v2[3]),\n\t\t\td2 = getSignedDistance(q0x, q0y, q3x, q3y, v2[4], v2[5]),\n\t\t\tfactor = d1 * d2 > 0 ? 3 / 4 : 4 / 9,\n\t\t\tdMin = factor * Math.min(0, d1, d2),\n\t\t\tdMax = factor * Math.max(0, d1, d2),\n\t\t\tdp0 = getSignedDistance(q0x, q0y, q3x, q3y, v1[0], v1[1]),\n\t\t\tdp1 = getSignedDistance(q0x, q0y, q3x, q3y, v1[2], v1[3]),\n\t\t\tdp2 = getSignedDistance(q0x, q0y, q3x, q3y, v1[4], v1[5]),\n\t\t\tdp3 = getSignedDistance(q0x, q0y, q3x, q3y, v1[6], v1[7]),\n\t\t\thull = getConvexHull(dp0, dp1, dp2, dp3),\n\t\t\ttop = hull[0],\n\t\t\tbottom = hull[1],\n\t\t\ttMinClip,\n\t\t\ttMaxClip;\n\t\tif ((tMinClip = clipConvexHull(top, bottom, dMin, dMax)) == null ||\n\t\t\t(tMaxClip = clipConvexHull(top.reverse(), bottom.reverse(),\n\t\t\t\tdMin, dMax)) == null)\n\t\t\treturn;\n\t\tv1 = Curve.getPart(v1, tMinClip, tMaxClip);\n\t\tvar tDiff = tMaxClip - tMinClip,\n\t\t\ttMinNew = tMin + (tMax - tMin) * tMinClip,\n\t\t\ttMaxNew = tMin + (tMax - tMin) * tMaxClip;\n\t\tif (oldTDiff > 0.5 && tDiff > 0.5) {\n\t\t\tif (tMaxNew - tMinNew > uMax - uMin) {\n\t\t\t\tvar parts = Curve.subdivide(v1, 0.5),\n\t\t\t\t\tt = tMinNew + (tMaxNew - tMinNew) / 2;\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tv2, parts[0], c2, c1, locations, param,\n\t\t\t\t\tuMin, uMax, tMinNew, t, tDiff, !reverse, recursion);\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tv2, parts[1], c2, c1, locations, param,\n\t\t\t\t\tuMin, uMax, t, tMaxNew, tDiff, !reverse, recursion);\n\t\t\t} else {\n\t\t\t\tvar parts = Curve.subdivide(v2, 0.5),\n\t\t\t\t\tt = uMin + (uMax - uMin) / 2;\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tparts[0], v1, c2, c1, locations, param,\n\t\t\t\t\tuMin, t, tMinNew, tMaxNew, tDiff, !reverse, recursion);\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tparts[1], v1, c2, c1, locations, param,\n\t\t\t\t\tt, uMax, tMinNew, tMaxNew, tDiff, !reverse, recursion);\n\t\t\t}\n\t\t} else if (Math.max(uMax - uMin, tMaxNew - tMinNew)\n\t\t\t\t< 1e-7) {\n\t\t\tvar t1 = tMinNew + (tMaxNew - tMinNew) / 2,\n\t\t\t\tt2 = uMin + (uMax - uMin) / 2;\n\t\t\tv1 = c1.getValues();\n\t\t\tv2 = c2.getValues();\n\t\t\taddLocation(locations, param,\n\t\t\t\treverse ? v2 : v1, reverse ? c2 : c1, reverse ? t2 : t1, null,\n\t\t\t\treverse ? v1 : v2, reverse ? c1 : c2, reverse ? t1 : t2, null);\n\t\t} else if (tDiff > 1e-12) {\n\t\t\taddCurveIntersections(v2, v1, c2, c1, locations, param,\n\t\t\t\t\tuMin, uMax, tMinNew, tMaxNew, tDiff, !reverse, recursion);\n\t\t}\n\t}\n\n\tfunction getConvexHull(dq0, dq1, dq2, dq3) {\n\t\tvar p0 = [ 0, dq0 ],\n\t\t\tp1 = [ 1 / 3, dq1 ],\n\t\t\tp2 = [ 2 / 3, dq2 ],\n\t\t\tp3 = [ 1, dq3 ],\n\t\t\tdist1 = dq1 - (2 * dq0 + dq3) / 3,\n\t\t\tdist2 = dq2 - (dq0 + 2 * dq3) / 3,\n\t\t\thull;\n\t\tif (dist1 * dist2 < 0) {\n\t\t\thull = [[p0, p1, p3], [p0, p2, p3]];\n\t\t} else {\n\t\t\tvar distRatio = dist1 / dist2;\n\t\t\thull = [\n\t\t\t\tdistRatio >= 2 ? [p0, p1, p3]\n\t\t\t\t: distRatio <= .5 ? [p0, p2, p3]\n\t\t\t\t: [p0, p1, p2, p3],\n\t\t\t\t[p0, p3]\n\t\t\t];\n\t\t}\n\t\treturn (dist1 || dist2) < 0 ? hull.reverse() : hull;\n\t}\n\n\tfunction clipConvexHull(hullTop, hullBottom, dMin, dMax) {\n\t\tif (hullTop[0][1] < dMin) {\n\t\t\treturn clipConvexHullPart(hullTop, true, dMin);\n\t\t} else if (hullBottom[0][1] > dMax) {\n\t\t\treturn clipConvexHullPart(hullBottom, false, dMax);\n\t\t} else {\n\t\t\treturn hullTop[0][0];\n\t\t}\n\t}\n\n\tfunction clipConvexHullPart(part, top, threshold) {\n\t\tvar px = part[0][0],\n\t\t\tpy = part[0][1];\n\t\tfor (var i = 1, l = part.length; i < l; i++) {\n\t\t\tvar qx = part[i][0],\n\t\t\t\tqy = part[i][1];\n\t\t\tif (top ? qy >= threshold : qy <= threshold) {\n\t\t\t\treturn qy === threshold ? qx\n\t\t\t\t\t\t: px + (threshold - py) * (qx - px) / (qy - py);\n\t\t\t}\n\t\t\tpx = qx;\n\t\t\tpy = qy;\n\t\t}\n\t\treturn null;\n\t}\n\n\tfunction addCurveLineIntersections(v1, v2, c1, c2, locations, param) {\n\t\tvar flip = Curve.isStraight(v1),\n\t\t\tvc = flip ? v2 : v1,\n\t\t\tvl = flip ? v1 : v2,\n\t\t\tlx1 = vl[0], ly1 = vl[1],\n\t\t\tlx2 = vl[6], ly2 = vl[7],\n\t\t\tldx = lx2 - lx1,\n\t\t\tldy = ly2 - ly1,\n\t\t\tangle = Math.atan2(-ldy, ldx),\n\t\t\tsin = Math.sin(angle),\n\t\t\tcos = Math.cos(angle),\n\t\t\trvc = [];\n\t\tfor(var i = 0; i < 8; i += 2) {\n\t\t\tvar x = vc[i] - lx1,\n\t\t\t\ty = vc[i + 1] - ly1;\n\t\t\trvc.push(\n\t\t\t\tx * cos - y * sin,\n\t\t\t\tx * sin + y * cos);\n\t\t}\n\t\tvar roots = [],\n\t\t\tcount = Curve.solveCubic(rvc, 1, 0, roots, 0, 1);\n\t\tfor (var i = 0; i < count; i++) {\n\t\t\tvar tc = roots[i],\n\t\t\t\tpc = Curve.getPoint(vc, tc),\n\t\t\t\ttl = Curve.getParameterOf(vl, pc);\n\t\t\tif (tl !== null) {\n\t\t\t\tvar pl = Curve.getPoint(vl, tl),\n\t\t\t\t\tt1 = flip ? tl : tc,\n\t\t\t\t\tt2 = flip ? tc : tl;\n\t\t\t\tif (!param.endConnected || t2 > Numerical.CURVETIME_EPSILON) {\n\t\t\t\t\taddLocation(locations, param,\n\t\t\t\t\t\t\tv1, c1, t1, flip ? pl : pc,\n\t\t\t\t\t\t\tv2, c2, t2, flip ? pc : pl);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction addLineIntersection(v1, v2, c1, c2, locations, param) {\n\t\tvar pt = Line.intersect(\n\t\t\t\tv1[0], v1[1], v1[6], v1[7],\n\t\t\t\tv2[0], v2[1], v2[6], v2[7]);\n\t\tif (pt) {\n\t\t\taddLocation(locations, param, v1, c1, null, pt, v2, c2, null, pt);\n\t\t}\n\t}\n\n\treturn { statics: {\n\t\t_getIntersections: function(v1, v2, c1, c2, locations, param) {\n\t\t\tif (!v2) {\n\t\t\t\treturn Curve._getSelfIntersection(v1, c1, locations, param);\n\t\t\t}\n\t\t\tvar c1p1x = v1[0], c1p1y = v1[1],\n\t\t\t\tc1p2x = v1[6], c1p2y = v1[7],\n\t\t\t\tc2p1x = v2[0], c2p1y = v2[1],\n\t\t\t\tc2p2x = v2[6], c2p2y = v2[7],\n\t\t\t\tc1s1x = (3 * v1[2] + c1p1x) / 4,\n\t\t\t\tc1s1y = (3 * v1[3] + c1p1y) / 4,\n\t\t\t\tc1s2x = (3 * v1[4] + c1p2x) / 4,\n\t\t\t\tc1s2y = (3 * v1[5] + c1p2y) / 4,\n\t\t\t\tc2s1x = (3 * v2[2] + c2p1x) / 4,\n\t\t\t\tc2s1y = (3 * v2[3] + c2p1y) / 4,\n\t\t\t\tc2s2x = (3 * v2[4] + c2p2x) / 4,\n\t\t\t\tc2s2y = (3 * v2[5] + c2p2y) / 4,\n\t\t\t\tmin = Math.min,\n\t\t\t\tmax = Math.max;\n\t\t\tif (!(\tmax(c1p1x, c1s1x, c1s2x, c1p2x) >=\n\t\t\t\t\tmin(c2p1x, c2s1x, c2s2x, c2p2x) &&\n\t\t\t\t\tmin(c1p1x, c1s1x, c1s2x, c1p2x) <=\n\t\t\t\t\tmax(c2p1x, c2s1x, c2s2x, c2p2x) &&\n\t\t\t\t\tmax(c1p1y, c1s1y, c1s2y, c1p2y) >=\n\t\t\t\t\tmin(c2p1y, c2s1y, c2s2y, c2p2y) &&\n\t\t\t\t\tmin(c1p1y, c1s1y, c1s2y, c1p2y) <=\n\t\t\t\t\tmax(c2p1y, c2s1y, c2s2y, c2p2y)))\n\t\t\t\treturn locations;\n\t\t\tif (!param.startConnected && !param.endConnected) {\n\t\t\t\tvar overlaps = Curve.getOverlaps(v1, v2);\n\t\t\t\tif (overlaps) {\n\t\t\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\t\t\tvar overlap = overlaps[i];\n\t\t\t\t\t\taddLocation(locations, param,\n\t\t\t\t\t\t\tv1, c1, overlap[0], null,\n\t\t\t\t\t\t\tv2, c2, overlap[1], null, true);\n\t\t\t\t\t}\n\t\t\t\t\treturn locations;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar straight1 = Curve.isStraight(v1),\n\t\t\t\tstraight2 = Curve.isStraight(v2),\n\t\t\t\tstraight = straight1 && straight2,\n\t\t\t\tepsilon = 1e-12,\n\t\t\t\tbefore = locations.length;\n\t\t\t(straight\n\t\t\t\t? addLineIntersection\n\t\t\t\t: straight1 || straight2\n\t\t\t\t\t? addCurveLineIntersections\n\t\t\t\t\t: addCurveIntersections)(\n\t\t\t\t\t\tv1, v2, c1, c2, locations, param,\n\t\t\t\t\t\t0, 1, 0, 1, 0, false, 0);\n\t\t\tif (straight && locations.length > before)\n\t\t\t\treturn locations;\n\t\t\tvar c1p1 = new Point(c1p1x, c1p1y),\n\t\t\t\tc1p2 = new Point(c1p2x, c1p2y),\n\t\t\t\tc2p1 = new Point(c2p1x, c2p1y),\n\t\t\t\tc2p2 = new Point(c2p2x, c2p2y);\n\t\t\tif (c1p1.isClose(c2p1, epsilon))\n\t\t\t\taddLocation(locations, param, v1, c1, 0, c1p1, v2, c2, 0, c2p1);\n\t\t\tif (!param.startConnected && c1p1.isClose(c2p2, epsilon))\n\t\t\t\taddLocation(locations, param, v1, c1, 0, c1p1, v2, c2, 1, c2p2);\n\t\t\tif (!param.endConnected && c1p2.isClose(c2p1, epsilon))\n\t\t\t\taddLocation(locations, param, v1, c1, 1, c1p2, v2, c2, 0, c2p1);\n\t\t\tif (c1p2.isClose(c2p2, epsilon))\n\t\t\t\taddLocation(locations, param, v1, c1, 1, c1p2, v2, c2, 1, c2p2);\n\t\t\treturn locations;\n\t\t},\n\n\t\t_getSelfIntersection: function(v1, c1, locations, param) {\n\t\t\tvar p1x = v1[0], p1y = v1[1],\n\t\t\t\th1x = v1[2], h1y = v1[3],\n\t\t\t\th2x = v1[4], h2y = v1[5],\n\t\t\t\tp2x = v1[6], p2y = v1[7];\n\t\t\tvar line = new Line(p1x, p1y, p2x, p2y, false),\n\t\t\t\tside1 = line.getSide(new Point(h1x, h1y), true),\n\t\t\t\tside2 = line.getSide(new Point(h2x, h2y), true);\n\t\t\tif (side1 === side2) {\n\t\t\t\tvar edgeSum = (p1x - h2x) * (h1y - p2y)\n\t\t\t\t\t\t\t+ (h1x - p2x) * (h2y - p1y);\n\t\t\t\tif (edgeSum * side1 > 0)\n\t\t\t\t\treturn locations;\n\t\t\t}\n\t\t\tvar ax = p2x - 3 * h2x + 3 * h1x - p1x,\n\t\t\t\tbx = h2x - 2 * h1x + p1x,\n\t\t\t\tcx = h1x - p1x,\n\t\t\t\tay = p2y - 3 * h2y + 3 * h1y - p1y,\n\t\t\t\tby = h2y - 2 * h1y + p1y,\n\t\t\t\tcy = h1y - p1y,\n\t\t\t\tac = ay * cx - ax * cy,\n\t\t\t\tab = ay * bx - ax * by,\n\t\t\t\tbc = by * cx - bx * cy;\n\t\t\tif (ac * ac - 4 * ab * bc < 0) {\n\t\t\t\tvar roots = [],\n\t\t\t\t\ttSplit,\n\t\t\t\t\tcount = Numerical.solveCubic(\n\t\t\t\t\t\t\tax * ax\t + ay * ay,\n\t\t\t\t\t\t\t3 * (ax * bx + ay * by),\n\t\t\t\t\t\t\t2 * (bx * bx + by * by) + ax * cx + ay * cy,\n\t\t\t\t\t\t\tbx * cx + by * cy,\n\t\t\t\t\t\t\troots, 0, 1);\n\t\t\t\tif (count > 0) {\n\t\t\t\t\tfor (var i = 0, maxCurvature = 0; i < count; i++) {\n\t\t\t\t\t\tvar curvature = Math.abs(\n\t\t\t\t\t\t\t\tc1.getCurvatureAt(roots[i], true));\n\t\t\t\t\t\tif (curvature > maxCurvature) {\n\t\t\t\t\t\t\tmaxCurvature = curvature;\n\t\t\t\t\t\t\ttSplit = roots[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tvar parts = Curve.subdivide(v1, tSplit);\n\t\t\t\t\tparam.endConnected = true;\n\t\t\t\t\tparam.renormalize = function(t1, t2) {\n\t\t\t\t\t\treturn [t1 * tSplit, t2 * (1 - tSplit) + tSplit];\n\t\t\t\t\t};\n\t\t\t\t\tCurve._getIntersections(parts[0], parts[1], c1, c1,\n\t\t\t\t\t\t\tlocations, param);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn locations;\n\t\t},\n\n\t\tgetOverlaps: function(v1, v2) {\n\t\t\tvar abs = Math.abs,\n\t\t\t\ttimeEpsilon = 4e-7,\n\t\t\t\tgeomEpsilon = 2e-7,\n\t\t\t\tstraight1 = Curve.isStraight(v1),\n\t\t\t\tstraight2 = Curve.isStraight(v2),\n\t\t\t\tstraight =\tstraight1 && straight2;\n\n\t\t\tfunction getLineLengthSquared(v) {\n\t\t\t\tvar x = v[6] - v[0],\n\t\t\t\t\ty = v[7] - v[1];\n\t\t\t\treturn x * x + y * y;\n\t\t\t}\n\n\t\t\tif (straight) {\n\t\t\t\tvar flip = getLineLengthSquared(v1) < getLineLengthSquared(v2),\n\t\t\t\t\tl1 = flip ? v2 : v1,\n\t\t\t\t\tl2 = flip ? v1 : v2,\n\t\t\t\t\tline = new Line(l1[0], l1[1], l1[6], l1[7]);\n\t\t\t\tif (line.getDistance(new Point(l2[0], l2[1])) > geomEpsilon ||\n\t\t\t\t\tline.getDistance(new Point(l2[6], l2[7])) > geomEpsilon)\n\t\t\t\t\treturn null;\n\t\t\t} else if (straight1 ^ straight2) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar v = [v1, v2],\n\t\t\t\tpairs = [];\n\t\t\tfor (var i = 0, t1 = 0;\n\t\t\t\t\ti < 2 && pairs.length < 2;\n\t\t\t\t\ti += t1 === 0 ? 0 : 1, t1 = t1 ^ 1) {\n\t\t\t\tvar t2 = Curve.getParameterOf(v[i ^ 1], new Point(\n\t\t\t\t\t\tv[i][t1 === 0 ? 0 : 6],\n\t\t\t\t\t\tv[i][t1 === 0 ? 1 : 7]));\n\t\t\t\tif (t2 != null) {\n\t\t\t\t\tvar pair = i === 0 ? [t1, t2] : [t2, t1];\n\t\t\t\t\tif (pairs.length === 0 ||\n\t\t\t\t\t\tabs(pair[0] - pairs[0][0]) > timeEpsilon &&\n\t\t\t\t\t\tabs(pair[1] - pairs[0][1]) > timeEpsilon)\n\t\t\t\t\t\tpairs.push(pair);\n\t\t\t\t}\n\t\t\t\tif (i === 1 && pairs.length === 0)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (pairs.length !== 2) {\n\t\t\t\tpairs = null;\n\t\t\t} else if (!straight) {\n\t\t\t\tvar o1 = Curve.getPart(v1, pairs[0][0], pairs[1][0]),\n\t\t\t\t\to2 = Curve.getPart(v2, pairs[0][1], pairs[1][1]);\n\t\t\t\tif (abs(o2[2] - o1[2]) > geomEpsilon ||\n\t\t\t\t\tabs(o2[3] - o1[3]) > geomEpsilon ||\n\t\t\t\t\tabs(o2[4] - o1[4]) > geomEpsilon ||\n\t\t\t\t\tabs(o2[5] - o1[5]) > geomEpsilon)\n\t\t\t\t\tpairs = null;\n\t\t\t}\n\t\t\treturn pairs;\n\t\t}\n\t}};\n});\n\nvar CurveLocation = Base.extend({\n\t_class: 'CurveLocation',\n\tbeans: true,\n\n\tinitialize: function CurveLocation(curve, parameter, point,\n\t\t\t_overlap, _distance) {\n\t\tif (parameter > 0.9999996) {\n\t\t\tvar next = curve.getNext();\n\t\t\tif (next) {\n\t\t\t\tparameter = 0;\n\t\t\t\tcurve = next;\n\t\t\t}\n\t\t}\n\t\tthis._id = UID.get(CurveLocation);\n\t\tthis._setCurve(curve);\n\t\tthis._parameter = parameter;\n\t\tthis._point = point || curve.getPointAt(parameter, true);\n\t\tthis._overlap = _overlap;\n\t\tthis._distance = _distance;\n\t\tthis._intersection = this._next = this._prev = null;\n\t},\n\n\t_setCurve: function(curve) {\n\t\tvar path = curve._path;\n\t\tthis._version = path ? path._version : 0;\n\t\tthis._curve = curve;\n\t\tthis._segment = null;\n\t\tthis._segment1 = curve._segment1;\n\t\tthis._segment2 = curve._segment2;\n\t},\n\n\t_setSegment: function(segment) {\n\t\tthis._setCurve(segment.getCurve());\n\t\tthis._segment = segment;\n\t\tthis._parameter = segment === this._segment1 ? 0 : 1;\n\t\tthis._point = segment._point.clone();\n\t},\n\n\tgetSegment: function() {\n\t\tvar curve = this.getCurve(),\n\t\t\tsegment = this._segment;\n\t\tif (!segment) {\n\t\t\tvar parameter = this.getParameter();\n\t\t\tif (parameter === 0) {\n\t\t\t\tsegment = curve._segment1;\n\t\t\t} else if (parameter === 1) {\n\t\t\t\tsegment = curve._segment2;\n\t\t\t} else if (parameter != null) {\n\t\t\t\tsegment = curve.getPartLength(0, parameter)\n\t\t\t\t\t< curve.getPartLength(parameter, 1)\n\t\t\t\t\t\t? curve._segment1\n\t\t\t\t\t\t: curve._segment2;\n\t\t\t}\n\t\t\tthis._segment = segment;\n\t\t}\n\t\treturn segment;\n\t},\n\n\tgetCurve: function() {\n\t\tvar curve = this._curve,\n\t\t\tpath = curve && curve._path,\n\t\t\tthat = this;\n\t\tif (path && path._version !== this._version) {\n\t\t\tcurve = this._parameter = this._curve = this._offset = null;\n\t\t}\n\n\t\tfunction trySegment(segment) {\n\t\t\tvar curve = segment && segment.getCurve();\n\t\t\tif (curve && (that._parameter = curve.getParameterOf(that._point))\n\t\t\t\t\t!= null) {\n\t\t\t\tthat._setCurve(curve);\n\t\t\t\tthat._segment = segment;\n\t\t\t\treturn curve;\n\t\t\t}\n\t\t}\n\n\t\treturn curve\n\t\t\t|| trySegment(this._segment)\n\t\t\t|| trySegment(this._segment1)\n\t\t\t|| trySegment(this._segment2.getPrevious());\n\t},\n\n\tgetPath: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve && curve._path;\n\t},\n\n\tgetIndex: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve && curve.getIndex();\n\t},\n\n\tgetParameter: function() {\n\t\tvar curve = this.getCurve(),\n\t\t\tparameter = this._parameter;\n\t\treturn curve && parameter == null\n\t\t\t? this._parameter = curve.getParameterOf(this._point)\n\t\t\t: parameter;\n\t},\n\n\tgetPoint: function() {\n\t\treturn this._point;\n\t},\n\n\tgetOffset: function() {\n\t\tvar offset = this._offset;\n\t\tif (offset == null) {\n\t\t\toffset = 0;\n\t\t\tvar path = this.getPath(),\n\t\t\t\tindex = this.getIndex();\n\t\t\tif (path && index != null) {\n\t\t\t\tvar curves = path.getCurves();\n\t\t\t\tfor (var i = 0; i < index; i++)\n\t\t\t\t\toffset += curves[i].getLength();\n\t\t\t}\n\t\t\tthis._offset = offset += this.getCurveOffset();\n\t\t}\n\t\treturn offset;\n\t},\n\n\tgetCurveOffset: function() {\n\t\tvar curve = this.getCurve(),\n\t\t\tparameter = this.getParameter();\n\t\treturn parameter != null && curve && curve.getPartLength(0, parameter);\n\t},\n\n\tgetIntersection: function() {\n\t\treturn this._intersection;\n\t},\n\n\tgetDistance: function() {\n\t\treturn this._distance;\n\t},\n\n\tdivide: function() {\n\t\tvar curve = this.getCurve(),\n\t\t\tres = null;\n\t\tif (curve) {\n\t\t\tres = curve.divide(this.getParameter(), true);\n\t\t\tif (res)\n\t\t\t\tthis._setSegment(res._segment1);\n\t\t}\n\t\treturn res;\n\t},\n\n\tsplit: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve ? curve.split(this.getParameter(), true) : null;\n\t},\n\n\tequals: function(loc, _ignoreOther) {\n\t\tvar res = this === loc,\n\t\t\tepsilon = 2e-7;\n\t\tif (!res && loc instanceof CurveLocation\n\t\t\t\t&& this.getPath() === loc.getPath()\n\t\t\t\t&& this.getPoint().isClose(loc.getPoint(), epsilon)) {\n\t\t\tvar c1 = this.getCurve(),\n\t\t\t\tc2 = loc.getCurve(),\n\t\t\t\tabs = Math.abs,\n\t\t\t\tdiff = abs(\n\t\t\t\t\t((c1.isLast() && c2.isFirst() ? -1 : c1.getIndex())\n\t\t\t\t\t\t\t+ this.getParameter()) -\n\t\t\t\t\t((c2.isLast() && c1.isFirst() ? -1 : c2.getIndex())\n\t\t\t\t\t\t\t+ loc.getParameter()));\n\t\t\tres = (diff < 4e-7\n\t\t\t\t|| ((diff = abs(this.getOffset() - loc.getOffset())) < epsilon\n\t\t\t\t\t|| abs(this.getPath().getLength() - diff) < epsilon))\n\t\t\t\t&& (_ignoreOther\n\t\t\t\t\t|| (!this._intersection && !loc._intersection\n\t\t\t\t\t\t|| this._intersection && this._intersection.equals(\n\t\t\t\t\t\t\t\tloc._intersection, true)));\n\t\t}\n\t\treturn res;\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [],\n\t\t\tpoint = this.getPoint(),\n\t\t\tf = Formatter.instance;\n\t\tif (point)\n\t\t\tparts.push('point: ' + point);\n\t\tvar index = this.getIndex();\n\t\tif (index != null)\n\t\t\tparts.push('index: ' + index);\n\t\tvar parameter = this.getParameter();\n\t\tif (parameter != null)\n\t\t\tparts.push('parameter: ' + f.number(parameter));\n\t\tif (this._distance != null)\n\t\t\tparts.push('distance: ' + f.number(this._distance));\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t},\n\n\tisTouching: function() {\n\t\tvar inter = this._intersection;\n\t\tif (inter && this.getTangent().isCollinear(inter.getTangent())) {\n\t\t\tvar curve1 = this.getCurve(),\n\t\t\t\tcurve2 = inter.getCurve();\n\t\t\treturn !(curve1.isStraight() && curve2.isStraight()\n\t\t\t\t\t&& curve1.getLine().intersect(curve2.getLine()));\n\t\t}\n\t\treturn false;\n\t},\n\n\tisCrossing: function() {\n\t\tvar inter = this._intersection;\n\t\tif (!inter)\n\t\t\treturn false;\n\t\tvar t1 = this.getParameter(),\n\t\t\tt2 = inter.getParameter(),\n\t\t\ttMin = 4e-7,\n\t\t\ttMax = 1 - tMin;\n\t\tif (t1 >= tMin && t1 <= tMax || t2 >= tMin && t2 <= tMax)\n\t\t\treturn !this.isTouching();\n\t\tvar c2 = this.getCurve(),\n\t\t\tc1 = c2.getPrevious(),\n\t\t\tc4 = inter.getCurve(),\n\t\t\tc3 = c4.getPrevious(),\n\t\t\tPI = Math.PI;\n\t\tif (!c1 || !c3)\n\t\t\treturn false;\n\n\t\tfunction isInRange(angle, min, max) {\n\t\t\treturn min < max\n\t\t\t\t? angle > min && angle < max\n\t\t\t\t: angle > min && angle <= PI || angle >= -PI && angle < max;\n\t\t}\n\n\t\tvar a1 = c1.getTangentAt(tMax, true).negate().getAngleInRadians(),\n\t\t\ta2 = c2.getTangentAt(tMin, true).getAngleInRadians(),\n\t\t\ta3 = c3.getTangentAt(tMax, true).negate().getAngleInRadians(),\n\t\t\ta4 = c4.getTangentAt(tMin, true).getAngleInRadians();\n\n\t\treturn (isInRange(a3, a1, a2) ^ isInRange(a4, a1, a2))\n\t\t\t&& (isInRange(a3, a2, a1) ^ isInRange(a4, a2, a1));\n\t},\n\n\tisOverlap: function() {\n\t\treturn !!this._overlap;\n\t}\n}, Base.each(Curve.evaluateMethods, function(name) {\n\tvar get = name + 'At';\n\tthis[name] = function() {\n\t\tvar parameter = this.getParameter(),\n\t\t\tcurve = this.getCurve();\n\t\treturn parameter != null && curve && curve[get](parameter, true);\n\t};\n}, {\n\tpreserve: true\n}),\nnew function() {\n\n\tfunction insert(locations, loc, merge) {\n\t\tvar length = locations.length,\n\t\t\tl = 0,\n\t\t\tr = length - 1;\n\n\t\tfunction search(index, dir) {\n\t\t\tfor (var i = index + dir; i >= -1 && i <= length; i += dir) {\n\t\t\t\tvar loc2 = locations[((i % length) + length) % length];\n\t\t\t\tif (!loc.getPoint().isClose(loc2.getPoint(),\n\t\t\t\t\t\t2e-7))\n\t\t\t\t\tbreak;\n\t\t\t\tif (loc.equals(loc2))\n\t\t\t\t\treturn loc2;\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\twhile (l <= r) {\n\t\t\tvar m = (l + r) >>> 1,\n\t\t\t\tloc2 = locations[m],\n\t\t\t\tfound;\n\t\t\tif (merge && (found = loc.equals(loc2) ? loc2\n\t\t\t\t\t: (search(m, -1) || search(m, 1)))) {\n\t\t\t\tif (loc._overlap) {\n\t\t\t\t\tfound._overlap = found._intersection._overlap = true;\n\t\t\t\t}\n\t\t\t\treturn found;\n\t\t\t}\n\t\tvar path1 = loc.getPath(),\n\t\t\tpath2 = loc2.getPath(),\n\t\t\tdiff = path1 === path2\n\t\t\t\t? (loc.getIndex() + loc.getParameter())\n\t\t\t\t- (loc2.getIndex() + loc2.getParameter())\n\t\t\t\t: path1._id - path2._id;\n\t\t\tif (diff < 0) {\n\t\t\t\tr = m - 1;\n\t\t\t} else {\n\t\t\t\tl = m + 1;\n\t\t\t}\n\t\t}\n\t\tlocations.splice(l, 0, loc);\n\t\treturn loc;\n\t}\n\n\treturn { statics: {\n\t\tinsert: insert,\n\n\t\texpand: function(locations) {\n\t\t\tvar expanded = locations.slice();\n\t\t\tfor (var i = 0, l = locations.length; i < l; i++) {\n\t\t\t\tinsert(expanded, locations[i]._intersection, false);\n\t\t\t}\n\t\t\treturn expanded;\n\t\t}\n\t}};\n});\n\nvar PathItem = Item.extend({\n\t_class: 'PathItem',\n\n\tinitialize: function PathItem() {\n\t},\n\n\tgetIntersections: function(path, include, _matrix, _returnFirst) {\n\t\tvar self = this === path || !path,\n\t\t\tmatrix1 = this._matrix.orNullIfIdentity(),\n\t\t\tmatrix2 = self ? matrix1\n\t\t\t\t: (_matrix || path._matrix).orNullIfIdentity();\n\t\tif (!self && !this.getBounds(matrix1).touches(path.getBounds(matrix2)))\n\t\t\treturn [];\n\t\tvar curves1 = this.getCurves(),\n\t\t\tcurves2 = self ? curves1 : path.getCurves(),\n\t\t\tlength1 = curves1.length,\n\t\t\tlength2 = self ? length1 : curves2.length,\n\t\t\tvalues2 = [],\n\t\t\tarrays = [],\n\t\t\tlocations,\n\t\t\tpath;\n\t\tfor (var i = 0; i < length2; i++)\n\t\t\tvalues2[i] = curves2[i].getValues(matrix2);\n\t\tfor (var i = 0; i < length1; i++) {\n\t\t\tvar curve1 = curves1[i],\n\t\t\t\tvalues1 = self ? values2[i] : curve1.getValues(matrix1),\n\t\t\t\tpath1 = curve1.getPath();\n\t\t\tif (path1 !== path) {\n\t\t\t\tpath = path1;\n\t\t\t\tlocations = [];\n\t\t\t\tarrays.push(locations);\n\t\t\t}\n\t\t\tif (self) {\n\t\t\t\tCurve._getSelfIntersection(values1, curve1, locations, {\n\t\t\t\t\tinclude: include,\n\t\t\t\t\tstartConnected: length1 === 1 &&\n\t\t\t\t\t\t\tcurve1.getPoint1().equals(curve1.getPoint2())\n\t\t\t\t});\n\t\t\t}\n\t\t\tfor (var j = self ? i + 1 : 0; j < length2; j++) {\n\t\t\t\tif (_returnFirst && locations.length)\n\t\t\t\t\treturn locations;\n\t\t\t\tvar curve2 = curves2[j];\n\t\t\t\tCurve._getIntersections(\n\t\t\t\t\tvalues1, values2[j], curve1, curve2, locations,\n\t\t\t\t\t{\n\t\t\t\t\t\tinclude: include,\n\t\t\t\t\t\tstartConnected: self && curve1.getPrevious() === curve2,\n\t\t\t\t\t\tendConnected: self && curve1.getNext() === curve2\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tlocations = [];\n\t\tfor (var i = 0, l = arrays.length; i < l; i++) {\n\t\t\tlocations.push.apply(locations, arrays[i]);\n\t\t}\n\t\treturn locations;\n\t},\n\n\tgetCrossings: function(path) {\n\t\treturn this.getIntersections(path, function(inter) {\n\t\t\treturn inter.isCrossing();\n\t\t});\n\t},\n\n\t_asPathItem: function() {\n\t\treturn this;\n\t},\n\n\tsetPathData: function(data) {\n\n\t\tvar parts = data.match(/[mlhvcsqtaz][^mlhvcsqtaz]*/ig),\n\t\t\tcoords,\n\t\t\trelative = false,\n\t\t\tprevious,\n\t\t\tcontrol,\n\t\t\tcurrent = new Point(),\n\t\t\tstart = new Point();\n\n\t\tfunction getCoord(index, coord) {\n\t\t\tvar val = +coords[index];\n\t\t\tif (relative)\n\t\t\t\tval += current[coord];\n\t\t\treturn val;\n\t\t}\n\n\t\tfunction getPoint(index) {\n\t\t\treturn new Point(\n\t\t\t\tgetCoord(index, 'x'),\n\t\t\t\tgetCoord(index + 1, 'y')\n\t\t\t);\n\t\t}\n\n\t\tthis.clear();\n\n\t\tfor (var i = 0, l = parts && parts.length; i < l; i++) {\n\t\t\tvar part = parts[i],\n\t\t\t\tcommand = part[0],\n\t\t\t\tlower = command.toLowerCase();\n\t\t\tcoords = part.match(/[+-]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?/g);\n\t\t\tvar length = coords && coords.length;\n\t\t\trelative = command === lower;\n\t\t\tif (previous === 'z' && !/[mz]/.test(lower))\n\t\t\t\tthis.moveTo(current = start);\n\t\t\tswitch (lower) {\n\t\t\tcase 'm':\n\t\t\tcase 'l':\n\t\t\t\tvar move = lower === 'm';\n\t\t\t\tfor (var j = 0; j < length; j += 2)\n\t\t\t\t\tthis[j === 0 && move ? 'moveTo' : 'lineTo'](\n\t\t\t\t\t\t\tcurrent = getPoint(j));\n\t\t\t\tcontrol = current;\n\t\t\t\tif (move)\n\t\t\t\t\tstart = current;\n\t\t\t\tbreak;\n\t\t\tcase 'h':\n\t\t\tcase 'v':\n\t\t\t\tvar coord = lower === 'h' ? 'x' : 'y';\n\t\t\t\tfor (var j = 0; j < length; j++) {\n\t\t\t\t\tcurrent[coord] = getCoord(j, coord);\n\t\t\t\t\tthis.lineTo(current);\n\t\t\t\t}\n\t\t\t\tcontrol = current;\n\t\t\t\tbreak;\n\t\t\tcase 'c':\n\t\t\t\tfor (var j = 0; j < length; j += 6) {\n\t\t\t\t\tthis.cubicCurveTo(\n\t\t\t\t\t\t\tgetPoint(j),\n\t\t\t\t\t\t\tcontrol = getPoint(j + 2),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 4));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 's':\n\t\t\t\tfor (var j = 0; j < length; j += 4) {\n\t\t\t\t\tthis.cubicCurveTo(\n\t\t\t\t\t\t\t/[cs]/.test(previous)\n\t\t\t\t\t\t\t\t\t? current.multiply(2).subtract(control)\n\t\t\t\t\t\t\t\t\t: current,\n\t\t\t\t\t\t\tcontrol = getPoint(j),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 2));\n\t\t\t\t\tprevious = lower;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'q':\n\t\t\t\tfor (var j = 0; j < length; j += 4) {\n\t\t\t\t\tthis.quadraticCurveTo(\n\t\t\t\t\t\t\tcontrol = getPoint(j),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 2));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 't':\n\t\t\t\tfor (var j = 0; j < length; j += 2) {\n\t\t\t\t\tthis.quadraticCurveTo(\n\t\t\t\t\t\t\tcontrol = (/[qt]/.test(previous)\n\t\t\t\t\t\t\t\t\t? current.multiply(2).subtract(control)\n\t\t\t\t\t\t\t\t\t: current),\n\t\t\t\t\t\t\tcurrent = getPoint(j));\n\t\t\t\t\tprevious = lower;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'a':\n\t\t\t\tfor (var j = 0; j < length; j += 7) {\n\t\t\t\t\tthis.arcTo(current = getPoint(j + 5),\n\t\t\t\t\t\t\tnew Size(+coords[j], +coords[j + 1]),\n\t\t\t\t\t\t\t+coords[j + 2], +coords[j + 4], +coords[j + 3]);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'z':\n\t\t\t\tthis.closePath(true);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tprevious = lower;\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn !(this.hasFill() && this.hasStroke());\n\t},\n\n\t_contains: function(point) {\n\t\tvar winding = this._getWinding(point, false, true);\n\t\treturn !!(this.getWindingRule() === 'evenodd' ? winding & 1 : winding);\n\t}\n\n});\n\nvar Path = PathItem.extend({\n\t_class: 'Path',\n\t_serializeFields: {\n\t\tsegments: [],\n\t\tclosed: false\n\t},\n\n\tinitialize: function Path(arg) {\n\t\tthis._closed = false;\n\t\tthis._segments = [];\n\t\tthis._version = 0;\n\t\tvar segments = Array.isArray(arg)\n\t\t\t? typeof arg[0] === 'object'\n\t\t\t\t? arg\n\t\t\t\t: arguments\n\t\t\t: arg && (arg.size === undefined && (arg.x !== undefined\n\t\t\t\t\t|| arg.point !== undefined))\n\t\t\t\t? arguments\n\t\t\t\t: null;\n\t\tif (segments && segments.length > 0) {\n\t\t\tthis.setSegments(segments);\n\t\t} else {\n\t\t\tthis._curves = undefined;\n\t\t\tthis._selectedSegmentState = 0;\n\t\t\tif (!segments && typeof arg === 'string') {\n\t\t\t\tthis.setPathData(arg);\n\t\t\t\targ = null;\n\t\t\t}\n\t\t}\n\t\tthis._initialize(!segments && arg);\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._closed === item._closed\n\t\t\t\t&& Base.equals(this._segments, item._segments);\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new Path(Item.NO_INSERT);\n\t\tcopy.setSegments(this._segments);\n\t\tcopy._closed = this._closed;\n\t\tif (this._clockwise !== undefined)\n\t\t\tcopy._clockwise = this._clockwise;\n\t\treturn this._clone(copy, insert);\n\t},\n\n\t_changed: function _changed(flags) {\n\t\t_changed.base.call(this, flags);\n\t\tif (flags & 8) {\n\t\t\tvar parent = this._parent;\n\t\t\tif (parent)\n\t\t\t\tparent._currentPath = undefined;\n\t\t\tthis._length = this._area = this._clockwise = this._monoCurves =\n\t\t\t\t\tundefined;\n\t\t\tif (flags & 16) {\n\t\t\t\tthis._version++;\n\t\t\t} else if (this._curves) {\n\t\t\t   for (var i = 0, l = this._curves.length; i < l; i++)\n\t\t\t\t\tthis._curves[i]._changed();\n\t\t\t}\n\t\t} else if (flags & 32) {\n\t\t\tthis._bounds = undefined;\n\t\t}\n\t},\n\n\tgetStyle: function() {\n\t\tvar parent = this._parent;\n\t\treturn (parent instanceof CompoundPath ? parent : this)._style;\n\t},\n\n\tgetSegments: function() {\n\t\treturn this._segments;\n\t},\n\n\tsetSegments: function(segments) {\n\t\tvar fullySelected = this.isFullySelected();\n\t\tthis._segments.length = 0;\n\t\tthis._selectedSegmentState = 0;\n\t\tthis._curves = undefined;\n\t\tif (segments && segments.length > 0)\n\t\t\tthis._add(Segment.readAll(segments));\n\t\tif (fullySelected)\n\t\t\tthis.setFullySelected(true);\n\t},\n\n\tgetFirstSegment: function() {\n\t\treturn this._segments[0];\n\t},\n\n\tgetLastSegment: function() {\n\t\treturn this._segments[this._segments.length - 1];\n\t},\n\n\tgetCurves: function() {\n\t\tvar curves = this._curves,\n\t\t\tsegments = this._segments;\n\t\tif (!curves) {\n\t\t\tvar length = this._countCurves();\n\t\t\tcurves = this._curves = new Array(length);\n\t\t\tfor (var i = 0; i < length; i++)\n\t\t\t\tcurves[i] = new Curve(this, segments[i],\n\t\t\t\t\tsegments[i + 1] || segments[0]);\n\t\t}\n\t\treturn curves;\n\t},\n\n\tgetFirstCurve: function() {\n\t\treturn this.getCurves()[0];\n\t},\n\n\tgetLastCurve: function() {\n\t\tvar curves = this.getCurves();\n\t\treturn curves[curves.length - 1];\n\t},\n\n\tisClosed: function() {\n\t\treturn this._closed;\n\t},\n\n\tsetClosed: function(closed) {\n\t\tif (this._closed != (closed = !!closed)) {\n\t\t\tthis._closed = closed;\n\t\t\tif (this._curves) {\n\t\t\t\tvar length = this._curves.length = this._countCurves();\n\t\t\t\tif (closed)\n\t\t\t\t\tthis._curves[length - 1] = new Curve(this,\n\t\t\t\t\t\tthis._segments[length - 1], this._segments[0]);\n\t\t\t}\n\t\t\tthis._changed(25);\n\t\t}\n\t}\n}, {\n\tbeans: true,\n\n\tgetPathData: function(_matrix, _precision) {\n\t\tvar segments = this._segments,\n\t\t\tlength = segments.length,\n\t\t\tf = new Formatter(_precision),\n\t\t\tcoords = new Array(6),\n\t\t\tfirst = true,\n\t\t\tcurX, curY,\n\t\t\tprevX, prevY,\n\t\t\tinX, inY,\n\t\t\toutX, outY,\n\t\t\tparts = [];\n\n\t\tfunction addSegment(segment, skipLine) {\n\t\t\tsegment._transformCoordinates(_matrix, coords, false);\n\t\t\tcurX = coords[0];\n\t\t\tcurY = coords[1];\n\t\t\tif (first) {\n\t\t\t\tparts.push('M' + f.pair(curX, curY));\n\t\t\t\tfirst = false;\n\t\t\t} else {\n\t\t\t\tinX = coords[2];\n\t\t\t\tinY = coords[3];\n\t\t\t\tif (inX === curX && inY === curY\n\t\t\t\t\t\t&& outX === prevX && outY === prevY) {\n\t\t\t\t\tif (!skipLine)\n\t\t\t\t\t\tparts.push('l' + f.pair(curX - prevX, curY - prevY));\n\t\t\t\t} else {\n\t\t\t\t\tparts.push('c' + f.pair(outX - prevX, outY - prevY)\n\t\t\t\t\t\t\t+ ' ' + f.pair(inX - prevX, inY - prevY)\n\t\t\t\t\t\t\t+ ' ' + f.pair(curX - prevX, curY - prevY));\n\t\t\t\t}\n\t\t\t}\n\t\t\tprevX = curX;\n\t\t\tprevY = curY;\n\t\t\toutX = coords[4];\n\t\t\toutY = coords[5];\n\t\t}\n\n\t\tif (length === 0)\n\t\t\treturn '';\n\n\t\tfor (var i = 0; i < length; i++)\n\t\t\taddSegment(segments[i]);\n\t\tif (this._closed && length > 0) {\n\t\t\taddSegment(segments[0], true);\n\t\t\tparts.push('z');\n\t\t}\n\t\treturn parts.join('');\n\t}\n}, {\n\n\tisEmpty: function() {\n\t\treturn this._segments.length === 0;\n\t},\n\n\t_transformContent: function(matrix) {\n\t\tvar coords = new Array(6);\n\t\tfor (var i = 0, l = this._segments.length; i < l; i++)\n\t\t\tthis._segments[i]._transformCoordinates(matrix, coords, true);\n\t\treturn true;\n\t},\n\n\t_add: function(segs, index) {\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tamount = segs.length,\n\t\t\tappend = index == null,\n\t\t\tindex = append ? segments.length : index;\n\t\tfor (var i = 0; i < amount; i++) {\n\t\t\tvar segment = segs[i];\n\t\t\tif (segment._path)\n\t\t\t\tsegment = segs[i] = segment.clone();\n\t\t\tsegment._path = this;\n\t\t\tsegment._index = index + i;\n\t\t\tif (segment._selectionState)\n\t\t\t\tthis._updateSelection(segment, 0, segment._selectionState);\n\t\t}\n\t\tif (append) {\n\t\t\tsegments.push.apply(segments, segs);\n\t\t} else {\n\t\t\tsegments.splice.apply(segments, [index, 0].concat(segs));\n\t\t\tfor (var i = index + amount, l = segments.length; i < l; i++)\n\t\t\t\tsegments[i]._index = i;\n\t\t}\n\t\tif (curves) {\n\t\t\tvar total = this._countCurves(),\n\t\t\t\tfrom = index + amount - 1 === total ? index - 1 : index,\n\t\t\t\tstart = from,\n\t\t\t\tto = Math.min(from + amount, total);\n\t\t\tif (segs._curves) {\n\t\t\t\tcurves.splice.apply(curves, [from, 0].concat(segs._curves));\n\t\t\t\tstart += segs._curves.length;\n\t\t\t}\n\t\t\tfor (var i = start; i < to; i++)\n\t\t\t\tcurves.splice(i, 0, new Curve(this, null, null));\n\t\t\tthis._adjustCurves(from, to);\n\t\t}\n\t\tthis._changed(25);\n\t\treturn segs;\n\t},\n\n\t_adjustCurves: function(from, to) {\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tcurve;\n\t\tfor (var i = from; i < to; i++) {\n\t\t\tcurve = curves[i];\n\t\t\tcurve._path = this;\n\t\t\tcurve._segment1 = segments[i];\n\t\t\tcurve._segment2 = segments[i + 1] || segments[0];\n\t\t\tcurve._changed();\n\t\t}\n\t\tif (curve = curves[this._closed && from === 0 ? segments.length - 1\n\t\t\t\t: from - 1]) {\n\t\t\tcurve._segment2 = segments[from] || segments[0];\n\t\t\tcurve._changed();\n\t\t}\n\t\tif (curve = curves[to]) {\n\t\t\tcurve._segment1 = segments[to];\n\t\t\tcurve._changed();\n\t\t}\n\t},\n\n\t_countCurves: function() {\n\t\tvar length = this._segments.length;\n\t\treturn !this._closed && length > 0 ? length - 1 : length;\n\t},\n\n\tadd: function(segment1 ) {\n\t\treturn arguments.length > 1 && typeof segment1 !== 'number'\n\t\t\t? this._add(Segment.readAll(arguments))\n\t\t\t: this._add([ Segment.read(arguments) ])[0];\n\t},\n\n\tinsert: function(index, segment1 ) {\n\t\treturn arguments.length > 2 && typeof segment1 !== 'number'\n\t\t\t? this._add(Segment.readAll(arguments, 1), index)\n\t\t\t: this._add([ Segment.read(arguments, 1) ], index)[0];\n\t},\n\n\taddSegment: function() {\n\t\treturn this._add([ Segment.read(arguments) ])[0];\n\t},\n\n\tinsertSegment: function(index ) {\n\t\treturn this._add([ Segment.read(arguments, 1) ], index)[0];\n\t},\n\n\taddSegments: function(segments) {\n\t\treturn this._add(Segment.readAll(segments));\n\t},\n\n\tinsertSegments: function(index, segments) {\n\t\treturn this._add(Segment.readAll(segments), index);\n\t},\n\n\tremoveSegment: function(index) {\n\t\treturn this.removeSegments(index, index + 1)[0] || null;\n\t},\n\n\tremoveSegments: function(from, to, _includeCurves) {\n\t\tfrom = from || 0;\n\t\tto = Base.pick(to, this._segments.length);\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tcount = segments.length,\n\t\t\tremoved = segments.splice(from, to - from),\n\t\t\tamount = removed.length;\n\t\tif (!amount)\n\t\t\treturn removed;\n\t\tfor (var i = 0; i < amount; i++) {\n\t\t\tvar segment = removed[i];\n\t\t\tif (segment._selectionState)\n\t\t\t\tthis._updateSelection(segment, segment._selectionState, 0);\n\t\t\tsegment._index = segment._path = null;\n\t\t}\n\t\tfor (var i = from, l = segments.length; i < l; i++)\n\t\t\tsegments[i]._index = i;\n\t\tif (curves) {\n\t\t\tvar index = from > 0 && to === count + (this._closed ? 1 : 0)\n\t\t\t\t\t? from - 1\n\t\t\t\t\t: from,\n\t\t\t\tcurves = curves.splice(index, amount);\n\t\t\tif (_includeCurves)\n\t\t\t\tremoved._curves = curves.slice(1);\n\t\t\tthis._adjustCurves(index, index);\n\t\t}\n\t\tthis._changed(25);\n\t\treturn removed;\n\t},\n\n\tclear: '#removeSegments',\n\n\thasHandles: function() {\n\t\tvar segments = this._segments;\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tif (segments[i].hasHandles())\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tclearHandles: function() {\n\t\tvar segments = this._segments;\n\t\tfor (var i = 0, l = segments.length; i < l; i++)\n\t\t\tsegments[i].clearHandles();\n\t},\n\n\tgetLength: function() {\n\t\tif (this._length == null) {\n\t\t\tvar curves = this.getCurves(),\n\t\t\t\tlength = 0;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++)\n\t\t\t\tlength += curves[i].getLength();\n\t\t\tthis._length = length;\n\t\t}\n\t\treturn this._length;\n\t},\n\n\tgetArea: function() {\n\t\tif (this._area == null) {\n\t\t\tvar segments = this._segments,\n\t\t\t\tcount = segments.length,\n\t\t\t\tlast = count - 1,\n\t\t\t\tarea = 0;\n\t\t\tfor (var i = 0, l = this._closed ? count : last; i < l; i++) {\n\t\t\t\tarea += Curve.getArea(Curve.getValues(\n\t\t\t\t\t\tsegments[i], segments[i < last ? i + 1 : 0]));\n\t\t\t}\n\t\t\tthis._area = area;\n\t\t}\n\t\treturn this._area;\n\t},\n\n\tisClockwise: function() {\n\t\tif (this._clockwise !== undefined)\n\t\t\treturn this._clockwise;\n\t\treturn this.getArea() >= 0;\n\t},\n\n\tsetClockwise: function(clockwise) {\n\t\tif (this.isClockwise() != (clockwise = !!clockwise))\n\t\t\tthis.reverse();\n\t\tthis._clockwise = clockwise;\n\t},\n\n\tisFullySelected: function() {\n\t\tvar length = this._segments.length;\n\t\treturn this._selected && length > 0 && this._selectedSegmentState\n\t\t\t\t=== length * 7;\n\t},\n\n\tsetFullySelected: function(selected) {\n\t\tif (selected)\n\t\t\tthis._selectSegments(true);\n\t\tthis.setSelected(selected);\n\t},\n\n\tsetSelected: function setSelected(selected) {\n\t\tif (!selected)\n\t\t\tthis._selectSegments(false);\n\t\tsetSelected.base.call(this, selected);\n\t},\n\n\t_selectSegments: function(selected) {\n\t\tvar length = this._segments.length;\n\t\tthis._selectedSegmentState = selected\n\t\t\t\t? length * 7 : 0;\n\t\tfor (var i = 0; i < length; i++)\n\t\t\tthis._segments[i]._selectionState = selected\n\t\t\t\t\t? 7 : 0;\n\t},\n\n\t_updateSelection: function(segment, oldState, newState) {\n\t\tsegment._selectionState = newState;\n\t\tvar total = this._selectedSegmentState += newState - oldState;\n\t\tif (total > 0)\n\t\t\tthis.setSelected(true);\n\t},\n\n\tflatten: function(maxDistance) {\n\t\tvar iterator = new PathIterator(this, 64, 0.1),\n\t\t\tpos = 0,\n\t\t\tstep = iterator.length / Math.ceil(iterator.length / maxDistance),\n\t\t\tend = iterator.length + (this._closed ? -step : step) / 2;\n\t\tvar segments = [];\n\t\twhile (pos <= end) {\n\t\t\tsegments.push(new Segment(iterator.getPointAt(pos)));\n\t\t\tpos += step;\n\t\t}\n\t\tthis.setSegments(segments);\n\t},\n\n\treduce: function() {\n\t\tvar curves = this.getCurves();\n\t\tfor (var i = curves.length - 1; i >= 0; i--) {\n\t\t\tvar curve = curves[i];\n\t\t\tif (!curve.hasHandles() && (curve.getLength() === 0\n\t\t\t\t\t|| curve.isCollinear(curve.getNext())))\n\t\t\t\tcurve.remove();\n\t\t}\n\t\treturn this;\n\t},\n\n\tsimplify: function(tolerance) {\n\t\tif (this._segments.length > 2) {\n\t\t\tvar fitter = new PathFitter(this, tolerance || 2.5);\n\t\t\tthis.setSegments(fitter.fit());\n\t\t}\n\t},\n\n\tsplit: function(index, parameter) {\n\t\tif (parameter === null)\n\t\t\treturn null;\n\t\tif (arguments.length === 1) {\n\t\t\tvar arg = index;\n\t\t\tif (typeof arg === 'number')\n\t\t\t\targ = this.getLocationAt(arg);\n\t\t\tif (!arg)\n\t\t\t\treturn null\n\t\t\tindex = arg.index;\n\t\t\tparameter = arg.parameter;\n\t\t}\n\t\tvar tMin = 4e-7,\n\t\t\ttMax = 1 - tMin;\n\t\tif (parameter >= tMax) {\n\t\t\tindex++;\n\t\t\tparameter--;\n\t\t}\n\t\tvar curves = this.getCurves();\n\t\tif (index >= 0 && index < curves.length) {\n\t\t\tif (parameter >= tMin) {\n\t\t\t\tcurves[index++].divide(parameter, true);\n\t\t\t}\n\t\t\tvar segs = this.removeSegments(index, this._segments.length, true),\n\t\t\t\tpath;\n\t\t\tif (this._closed) {\n\t\t\t\tthis.setClosed(false);\n\t\t\t\tpath = this;\n\t\t\t} else {\n\t\t\t\tpath = new Path(Item.NO_INSERT);\n\t\t\t\tpath.insertAbove(this, true);\n\t\t\t\tthis._clone(path);\n\t\t\t}\n\t\t\tpath._add(segs, 0);\n\t\t\tthis.addSegment(segs[0]);\n\t\t\treturn path;\n\t\t}\n\t\treturn null;\n\t},\n\n\treverse: function() {\n\t\tthis._segments.reverse();\n\t\tfor (var i = 0, l = this._segments.length; i < l; i++) {\n\t\t\tvar segment = this._segments[i];\n\t\t\tvar handleIn = segment._handleIn;\n\t\t\tsegment._handleIn = segment._handleOut;\n\t\t\tsegment._handleOut = handleIn;\n\t\t\tsegment._index = i;\n\t\t}\n\t\tthis._curves = null;\n\t\tif (this._clockwise !== undefined)\n\t\t\tthis._clockwise = !this._clockwise;\n\t\tthis._changed(9);\n\t},\n\n\tjoin: function(path) {\n\t\tif (path) {\n\t\t\tvar segments = path._segments,\n\t\t\t\tlast1 = this.getLastSegment(),\n\t\t\t\tlast2 = path.getLastSegment();\n\t\t\tif (!last2)\n\t\t\t\treturn this;\n\t\t\tif (last1 && last1._point.equals(last2._point))\n\t\t\t\tpath.reverse();\n\t\t\tvar first2 = path.getFirstSegment();\n\t\t\tif (last1 && last1._point.equals(first2._point)) {\n\t\t\t\tlast1.setHandleOut(first2._handleOut);\n\t\t\t\tthis._add(segments.slice(1));\n\t\t\t} else {\n\t\t\t\tvar first1 = this.getFirstSegment();\n\t\t\t\tif (first1 && first1._point.equals(first2._point))\n\t\t\t\t\tpath.reverse();\n\t\t\t\tlast2 = path.getLastSegment();\n\t\t\t\tif (first1 && first1._point.equals(last2._point)) {\n\t\t\t\t\tfirst1.setHandleIn(last2._handleIn);\n\t\t\t\t\tthis._add(segments.slice(0, segments.length - 1), 0);\n\t\t\t\t} else {\n\t\t\t\t\tthis._add(segments.slice());\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (path._closed)\n\t\t\t\tthis._add([segments[0]]);\n\t\t\tpath.remove();\n\t\t}\n\t\tvar first = this.getFirstSegment(),\n\t\t\tlast = this.getLastSegment();\n\t\tif (first !== last && first._point.equals(last._point)) {\n\t\t\tfirst.setHandleIn(last._handleIn);\n\t\t\tlast.remove();\n\t\t\tthis.setClosed(true);\n\t\t}\n\t\treturn this;\n\t},\n\n\ttoShape: function(insert) {\n\t\tif (!this._closed)\n\t\t\treturn null;\n\n\t\tvar segments = this._segments,\n\t\t\ttype,\n\t\t\tsize,\n\t\t\tradius,\n\t\t\ttopCenter;\n\n\t\tfunction isCollinear(i, j) {\n\t\t\tvar seg1 = segments[i],\n\t\t\t\tseg2 = seg1.getNext(),\n\t\t\t\tseg3 = segments[j],\n\t\t\t\tseg4 = seg3.getNext();\n\t\t\treturn seg1._handleOut.isZero() && seg2._handleIn.isZero()\n\t\t\t\t\t&& seg3._handleOut.isZero() && seg4._handleIn.isZero()\n\t\t\t\t\t&& seg2._point.subtract(seg1._point).isCollinear(\n\t\t\t\t\t\tseg4._point.subtract(seg3._point));\n\t\t}\n\n\t\tfunction isOrthogonal(i) {\n\t\t\tvar seg2 = segments[i],\n\t\t\t\tseg1 = seg2.getPrevious(),\n\t\t\t\tseg3 = seg2.getNext();\n\t\t\treturn seg1._handleOut.isZero() && seg2._handleIn.isZero()\n\t\t\t\t\t&& seg2._handleOut.isZero() && seg3._handleIn.isZero()\n\t\t\t\t\t&& seg2._point.subtract(seg1._point).isOrthogonal(\n\t\t\t\t\t\tseg3._point.subtract(seg2._point));\n\t\t}\n\n\t\tfunction isArc(i) {\n\t\t\tvar seg1 = segments[i],\n\t\t\t\tseg2 = seg1.getNext(),\n\t\t\t\thandle1 = seg1._handleOut,\n\t\t\t\thandle2 = seg2._handleIn,\n\t\t\t\tkappa = 0.5522847498307936;\n\t\t\tif (handle1.isOrthogonal(handle2)) {\n\t\t\t\tvar pt1 = seg1._point,\n\t\t\t\t\tpt2 = seg2._point,\n\t\t\t\t\tcorner = new Line(pt1, handle1, true).intersect(\n\t\t\t\t\t\t\tnew Line(pt2, handle2, true), true);\n\t\t\t\treturn corner && Numerical.isZero(handle1.getLength() /\n\t\t\t\t\t\tcorner.subtract(pt1).getLength() - kappa)\n\t\t\t\t\t&& Numerical.isZero(handle2.getLength() /\n\t\t\t\t\t\tcorner.subtract(pt2).getLength() - kappa);\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\tfunction getDistance(i, j) {\n\t\t\treturn segments[i]._point.getDistance(segments[j]._point);\n\t\t}\n\n\t\tif (!this.hasHandles() && segments.length === 4\n\t\t\t\t&& isCollinear(0, 2) && isCollinear(1, 3) && isOrthogonal(1)) {\n\t\t\ttype = Shape.Rectangle;\n\t\t\tsize = new Size(getDistance(0, 3), getDistance(0, 1));\n\t\t\ttopCenter = segments[1]._point.add(segments[2]._point).divide(2);\n\t\t} else if (segments.length === 8 && isArc(0) && isArc(2) && isArc(4)\n\t\t\t\t&& isArc(6) && isCollinear(1, 5) && isCollinear(3, 7)) {\n\t\t\ttype = Shape.Rectangle;\n\t\t\tsize = new Size(getDistance(1, 6), getDistance(0, 3));\n\t\t\tradius = size.subtract(new Size(getDistance(0, 7),\n\t\t\t\t\tgetDistance(1, 2))).divide(2);\n\t\t\ttopCenter = segments[3]._point.add(segments[4]._point).divide(2);\n\t\t} else if (segments.length === 4\n\t\t\t\t&& isArc(0) && isArc(1) && isArc(2) && isArc(3)) {\n\t\t\tif (Numerical.isZero(getDistance(0, 2) - getDistance(1, 3))) {\n\t\t\t\ttype = Shape.Circle;\n\t\t\t\tradius = getDistance(0, 2) / 2;\n\t\t\t} else {\n\t\t\t\ttype = Shape.Ellipse;\n\t\t\t\tradius = new Size(getDistance(2, 0) / 2, getDistance(3, 1) / 2);\n\t\t\t}\n\t\t\ttopCenter = segments[1]._point;\n\t\t}\n\n\t\tif (type) {\n\t\t\tvar center = this.getPosition(true),\n\t\t\t\tshape = this._clone(new type({\n\t\t\t\t\tcenter: center,\n\t\t\t\t\tsize: size,\n\t\t\t\t\tradius: radius,\n\t\t\t\t\tinsert: false\n\t\t\t\t}), insert, false);\n\t\t\tshape.rotate(topCenter.subtract(center).getAngle() + 90);\n\t\t\treturn shape;\n\t\t}\n\t\treturn null;\n\t},\n\n\t_hitTestSelf: function(point, options) {\n\t\tvar that = this,\n\t\t\tstyle = this.getStyle(),\n\t\t\tsegments = this._segments,\n\t\t\tnumSegments = segments.length,\n\t\t\tclosed = this._closed,\n\t\t\ttolerancePadding = options._tolerancePadding,\n\t\t\tstrokePadding = tolerancePadding,\n\t\t\tjoin, cap, miterLimit,\n\t\t\tarea, loc, res,\n\t\t\thitStroke = options.stroke && style.hasStroke(),\n\t\t\thitFill = options.fill && style.hasFill(),\n\t\t\thitCurves = options.curves,\n\t\t\tradius = hitStroke\n\t\t\t\t\t? style.getStrokeWidth() / 2\n\t\t\t\t\t: hitFill && options.tolerance > 0 || hitCurves\n\t\t\t\t\t\t? 0 : null;\n\t\tif (radius !== null) {\n\t\t\tif (radius > 0) {\n\t\t\t\tjoin = style.getStrokeJoin();\n\t\t\t\tcap = style.getStrokeCap();\n\t\t\t\tmiterLimit = radius * style.getMiterLimit();\n\t\t\t\tstrokePadding = tolerancePadding.add(new Point(radius, radius));\n\t\t\t} else {\n\t\t\t\tjoin = cap = 'round';\n\t\t\t}\n\t\t}\n\n\t\tfunction isCloseEnough(pt, padding) {\n\t\t\treturn point.subtract(pt).divide(padding).length <= 1;\n\t\t}\n\n\t\tfunction checkSegmentPoint(seg, pt, name) {\n\t\t\tif (!options.selected || pt.isSelected()) {\n\t\t\t\tvar anchor = seg._point;\n\t\t\t\tif (pt !== anchor)\n\t\t\t\t\tpt = pt.add(anchor);\n\t\t\t\tif (isCloseEnough(pt, strokePadding)) {\n\t\t\t\t\treturn new HitResult(name, that, {\n\t\t\t\t\t\tsegment: seg,\n\t\t\t\t\t\tpoint: pt\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction checkSegmentPoints(seg, ends) {\n\t\t\treturn (ends || options.segments)\n\t\t\t\t&& checkSegmentPoint(seg, seg._point, 'segment')\n\t\t\t\t|| (!ends && options.handles) && (\n\t\t\t\t\tcheckSegmentPoint(seg, seg._handleIn, 'handle-in') ||\n\t\t\t\t\tcheckSegmentPoint(seg, seg._handleOut, 'handle-out'));\n\t\t}\n\n\t\tfunction addToArea(point) {\n\t\t\tarea.add(point);\n\t\t}\n\n\t\tfunction checkSegmentStroke(segment) {\n\t\t\tif (join !== 'round' || cap !== 'round') {\n\t\t\t\tarea = new Path({ internal: true, closed: true });\n\t\t\t\tif (closed || segment._index > 0\n\t\t\t\t\t\t&& segment._index < numSegments - 1) {\n\t\t\t\t\tif (join !== 'round' && (segment._handleIn.isZero()\n\t\t\t\t\t\t\t|| segment._handleOut.isZero()))\n\t\t\t\t\t\tPath._addBevelJoin(segment, join, radius, miterLimit,\n\t\t\t\t\t\t\t\taddToArea, true);\n\t\t\t\t} else if (cap !== 'round') {\n\t\t\t\t\tPath._addSquareCap(segment, cap, radius, addToArea, true);\n\t\t\t\t}\n\t\t\t\tif (!area.isEmpty()) {\n\t\t\t\t\tvar loc;\n\t\t\t\t\treturn area.contains(point)\n\t\t\t\t\t\t|| (loc = area.getNearestLocation(point))\n\t\t\t\t\t\t\t&& isCloseEnough(loc.getPoint(), tolerancePadding);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn isCloseEnough(segment._point, strokePadding);\n\t\t}\n\n\t\tif (options.ends && !options.segments && !closed) {\n\t\t\tif (res = checkSegmentPoints(segments[0], true)\n\t\t\t\t\t|| checkSegmentPoints(segments[numSegments - 1], true))\n\t\t\t\treturn res;\n\t\t} else if (options.segments || options.handles) {\n\t\t\tfor (var i = 0; i < numSegments; i++)\n\t\t\t\tif (res = checkSegmentPoints(segments[i]))\n\t\t\t\t\treturn res;\n\t\t}\n\t\tif (radius !== null) {\n\t\t\tloc = this.getNearestLocation(point);\n\t\t\tif (loc) {\n\t\t\t\tvar parameter = loc.getParameter();\n\t\t\t\tif (parameter === 0 || parameter === 1 && numSegments > 1) {\n\t\t\t\t\tif (!checkSegmentStroke(loc.getSegment()))\n\t\t\t\t\t\tloc = null;\n\t\t\t\t} else if (!isCloseEnough(loc.getPoint(), strokePadding)) {\n\t\t\t\t\tloc = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!loc && join === 'miter' && numSegments > 1) {\n\t\t\t\tfor (var i = 0; i < numSegments; i++) {\n\t\t\t\t\tvar segment = segments[i];\n\t\t\t\t\tif (point.getDistance(segment._point) <= miterLimit\n\t\t\t\t\t\t\t&& checkSegmentStroke(segment)) {\n\t\t\t\t\t\tloc = segment.getLocation();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn !loc && hitFill && this._contains(point)\n\t\t\t\t|| loc && !hitStroke && !hitCurves\n\t\t\t\t\t? new HitResult('fill', this)\n\t\t\t\t\t: loc\n\t\t\t\t\t\t? new HitResult(hitStroke ? 'stroke' : 'curve', this, {\n\t\t\t\t\t\t\tlocation: loc,\n\t\t\t\t\t\t\tpoint: loc.getPoint()\n\t\t\t\t\t\t})\n\t\t\t\t\t\t: null;\n\t}\n\n}, Base.each(Curve.evaluateMethods,\n\tfunction(name) {\n\t\tthis[name + 'At'] = function(offset, isParameter) {\n\t\t\tvar loc = this.getLocationAt(offset, isParameter);\n\t\t\treturn loc && loc[name]();\n\t\t};\n\t},\n{\n\tbeans: false,\n\n\tgetLocationOf: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcurves = this.getCurves();\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar loc = curves[i].getLocationOf(point);\n\t\t\tif (loc)\n\t\t\t\treturn loc;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetOffsetOf: function() {\n\t\tvar loc = this.getLocationOf.apply(this, arguments);\n\t\treturn loc ? loc.getOffset() : null;\n\t},\n\n\tgetLocationAt: function(offset, isParameter) {\n\t\tvar curves = this.getCurves(),\n\t\t\tlength = 0;\n\t\tif (isParameter) {\n\t\t\tvar index = ~~offset,\n\t\t\t\tcurve = curves[index];\n\t\t\treturn curve ? curve.getLocationAt(offset - index, true) : null;\n\t\t}\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar start = length,\n\t\t\t\tcurve = curves[i];\n\t\t\tlength += curve.getLength();\n\t\t\tif (length > offset) {\n\t\t\t\treturn curve.getLocationAt(offset - start);\n\t\t\t}\n\t\t}\n\t\tif (curves.length > 0 && offset <= this.getLength())\n\t\t\treturn new CurveLocation(curves[curves.length - 1], 1);\n\t\treturn null;\n\t},\n\n\tgetNearestLocation: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcurves = this.getCurves(),\n\t\t\tminDist = Infinity,\n\t\t\tminLoc = null;\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar loc = curves[i].getNearestLocation(point);\n\t\t\tif (loc._distance < minDist) {\n\t\t\t\tminDist = loc._distance;\n\t\t\t\tminLoc = loc;\n\t\t\t}\n\t\t}\n\t\treturn minLoc;\n\t},\n\n\tgetNearestPoint: function() {\n\t\treturn this.getNearestLocation.apply(this, arguments).getPoint();\n\t}\n}),\nnew function() {\n\n\tfunction drawHandles(ctx, segments, matrix, size) {\n\t\tvar half = size / 2;\n\n\t\tfunction drawHandle(index) {\n\t\t\tvar hX = coords[index],\n\t\t\t\thY = coords[index + 1];\n\t\t\tif (pX != hX || pY != hY) {\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(pX, pY);\n\t\t\t\tctx.lineTo(hX, hY);\n\t\t\t\tctx.stroke();\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.arc(hX, hY, half, 0, Math.PI * 2, true);\n\t\t\t\tctx.fill();\n\t\t\t}\n\t\t}\n\n\t\tvar coords = new Array(6);\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar segment = segments[i];\n\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\tvar state = segment._selectionState,\n\t\t\t\tpX = coords[0],\n\t\t\t\tpY = coords[1];\n\t\t\tif (state & 1)\n\t\t\t\tdrawHandle(2);\n\t\t\tif (state & 2)\n\t\t\t\tdrawHandle(4);\n\t\t\tctx.fillRect(pX - half, pY - half, size, size);\n\t\t\tif (!(state & 4)) {\n\t\t\t\tvar fillStyle = ctx.fillStyle;\n\t\t\t\tctx.fillStyle = '#ffffff';\n\t\t\t\tctx.fillRect(pX - half + 1, pY - half + 1, size - 2, size - 2);\n\t\t\t\tctx.fillStyle = fillStyle;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction drawSegments(ctx, path, matrix) {\n\t\tvar segments = path._segments,\n\t\t\tlength = segments.length,\n\t\t\tcoords = new Array(6),\n\t\t\tfirst = true,\n\t\t\tcurX, curY,\n\t\t\tprevX, prevY,\n\t\t\tinX, inY,\n\t\t\toutX, outY;\n\n\t\tfunction drawSegment(segment) {\n\t\t\tif (matrix) {\n\t\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\t\tcurX = coords[0];\n\t\t\t\tcurY = coords[1];\n\t\t\t} else {\n\t\t\t\tvar point = segment._point;\n\t\t\t\tcurX = point._x;\n\t\t\t\tcurY = point._y;\n\t\t\t}\n\t\t\tif (first) {\n\t\t\t\tctx.moveTo(curX, curY);\n\t\t\t\tfirst = false;\n\t\t\t} else {\n\t\t\t\tif (matrix) {\n\t\t\t\t\tinX = coords[2];\n\t\t\t\t\tinY = coords[3];\n\t\t\t\t} else {\n\t\t\t\t\tvar handle = segment._handleIn;\n\t\t\t\t\tinX = curX + handle._x;\n\t\t\t\t\tinY = curY + handle._y;\n\t\t\t\t}\n\t\t\t\tif (inX === curX && inY === curY\n\t\t\t\t\t\t&& outX === prevX && outY === prevY) {\n\t\t\t\t\tctx.lineTo(curX, curY);\n\t\t\t\t} else {\n\t\t\t\t\tctx.bezierCurveTo(outX, outY, inX, inY, curX, curY);\n\t\t\t\t}\n\t\t\t}\n\t\t\tprevX = curX;\n\t\t\tprevY = curY;\n\t\t\tif (matrix) {\n\t\t\t\toutX = coords[4];\n\t\t\t\toutY = coords[5];\n\t\t\t} else {\n\t\t\t\tvar handle = segment._handleOut;\n\t\t\t\toutX = prevX + handle._x;\n\t\t\t\toutY = prevY + handle._y;\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i < length; i++)\n\t\t\tdrawSegment(segments[i]);\n\t\tif (path._closed && length > 0)\n\t\t\tdrawSegment(segments[0]);\n\t}\n\n\treturn {\n\t\t_draw: function(ctx, param, strokeMatrix) {\n\t\t\tvar dontStart = param.dontStart,\n\t\t\t\tdontPaint = param.dontFinish || param.clip,\n\t\t\t\tstyle = this.getStyle(),\n\t\t\t\thasFill = style.hasFill(),\n\t\t\t\thasStroke = style.hasStroke(),\n\t\t\t\tdashArray = style.getDashArray(),\n\t\t\t\tdashLength = !paper.support.nativeDash && hasStroke\n\t\t\t\t\t\t&& dashArray && dashArray.length;\n\n\t\t\tif (!dontStart)\n\t\t\t\tctx.beginPath();\n\n\t\t\tif (!dontStart && this._currentPath) {\n\t\t\t\tctx.currentPath = this._currentPath;\n\t\t\t} else if (hasFill || hasStroke && !dashLength || dontPaint) {\n\t\t\t\tdrawSegments(ctx, this, strokeMatrix);\n\t\t\t\tif (this._closed)\n\t\t\t\t\tctx.closePath();\n\t\t\t\tif (!dontStart)\n\t\t\t\t\tthis._currentPath = ctx.currentPath;\n\t\t\t}\n\n\t\t\tfunction getOffset(i) {\n\t\t\t\treturn dashArray[((i % dashLength) + dashLength) % dashLength];\n\t\t\t}\n\n\t\t\tif (!dontPaint && (hasFill || hasStroke)) {\n\t\t\t\tthis._setStyles(ctx);\n\t\t\t\tif (hasFill) {\n\t\t\t\t\tctx.fill(style.getWindingRule());\n\t\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\t\t\t\tif (hasStroke) {\n\t\t\t\t\tif (dashLength) {\n\t\t\t\t\t\tif (!dontStart)\n\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\tvar iterator = new PathIterator(this, 32, 0.25,\n\t\t\t\t\t\t\t\tstrokeMatrix),\n\t\t\t\t\t\t\tlength = iterator.length,\n\t\t\t\t\t\t\tfrom = -style.getDashOffset(), to,\n\t\t\t\t\t\t\ti = 0;\n\t\t\t\t\t\tfrom = from % length;\n\t\t\t\t\t\twhile (from > 0) {\n\t\t\t\t\t\t\tfrom -= getOffset(i--) + getOffset(i--);\n\t\t\t\t\t\t}\n\t\t\t\t\t\twhile (from < length) {\n\t\t\t\t\t\t\tto = from + getOffset(i++);\n\t\t\t\t\t\t\tif (from > 0 || to > 0)\n\t\t\t\t\t\t\t\titerator.drawPart(ctx,\n\t\t\t\t\t\t\t\t\t\tMath.max(from, 0), Math.max(to, 0));\n\t\t\t\t\t\t\tfrom = to + getOffset(i++);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_drawSelected: function(ctx, matrix) {\n\t\t\tctx.beginPath();\n\t\t\tdrawSegments(ctx, this, matrix);\n\t\t\tctx.stroke();\n\t\t\tdrawHandles(ctx, this._segments, matrix, paper.settings.handleSize);\n\t\t}\n\t};\n},\nnew function() {\n\tfunction getFirstControlPoints(rhs) {\n\t\tvar n = rhs.length,\n\t\t\tx = [],\n\t\t\ttmp = [],\n\t\t\tb = 2;\n\t\tx[0] = rhs[0] / b;\n\t\tfor (var i = 1; i < n; i++) {\n\t\t\ttmp[i] = 1 / b;\n\t\t\tb = (i < n - 1 ? 4 : 2) - tmp[i];\n\t\t\tx[i] = (rhs[i] - x[i - 1]) / b;\n\t\t}\n\t\tfor (var i = 1; i < n; i++) {\n\t\t\tx[n - i - 1] -= tmp[n - i] * x[n - i];\n\t\t}\n\t\treturn x;\n\t}\n\n\treturn {\n\t\tsmooth: function() {\n\t\t\tvar segments = this._segments,\n\t\t\t\tsize = segments.length,\n\t\t\t\tclosed = this._closed,\n\t\t\t\tn = size,\n\t\t\t\toverlap = 0;\n\t\t\tif (size <= 2)\n\t\t\t\treturn;\n\t\t\tif (closed) {\n\t\t\t\toverlap = Math.min(size, 4);\n\t\t\t\tn += Math.min(size, overlap) * 2;\n\t\t\t}\n\t\t\tvar knots = [];\n\t\t\tfor (var i = 0; i < size; i++)\n\t\t\t\tknots[i + overlap] = segments[i]._point;\n\t\t\tif (closed) {\n\t\t\t\tfor (var i = 0; i < overlap; i++) {\n\t\t\t\t\tknots[i] = segments[i + size - overlap]._point;\n\t\t\t\t\tknots[i + size + overlap] = segments[i]._point;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tn--;\n\t\t\t}\n\t\t\tvar rhs = [];\n\n\t\t\tfor (var i = 1; i < n - 1; i++)\n\t\t\t\trhs[i] = 4 * knots[i]._x + 2 * knots[i + 1]._x;\n\t\t\trhs[0] = knots[0]._x + 2 * knots[1]._x;\n\t\t\trhs[n - 1] = 3 * knots[n - 1]._x;\n\t\t\tvar x = getFirstControlPoints(rhs);\n\n\t\t\tfor (var i = 1; i < n - 1; i++)\n\t\t\t\trhs[i] = 4 * knots[i]._y + 2 * knots[i + 1]._y;\n\t\t\trhs[0] = knots[0]._y + 2 * knots[1]._y;\n\t\t\trhs[n - 1] = 3 * knots[n - 1]._y;\n\t\t\tvar y = getFirstControlPoints(rhs);\n\n\t\t\tif (closed) {\n\t\t\t\tfor (var i = 0, j = size; i < overlap; i++, j++) {\n\t\t\t\t\tvar f1 = i / overlap,\n\t\t\t\t\t\tf2 = 1 - f1,\n\t\t\t\t\t\tie = i + overlap,\n\t\t\t\t\t\tje = j + overlap;\n\t\t\t\t\tx[j] = x[i] * f1 + x[j] * f2;\n\t\t\t\t\ty[j] = y[i] * f1 + y[j] * f2;\n\t\t\t\t\tx[je] = x[ie] * f2 + x[je] * f1;\n\t\t\t\t\ty[je] = y[ie] * f2 + y[je] * f1;\n\t\t\t\t}\n\t\t\t\tn--;\n\t\t\t}\n\t\t\tvar handleIn = null;\n\t\t\tfor (var i = overlap; i <= n - overlap; i++) {\n\t\t\t\tvar segment = segments[i - overlap];\n\t\t\t\tif (handleIn)\n\t\t\t\t\tsegment.setHandleIn(handleIn.subtract(segment._point));\n\t\t\t\tif (i < n) {\n\t\t\t\t\tsegment.setHandleOut(\n\t\t\t\t\t\t\tnew Point(x[i], y[i]).subtract(segment._point));\n\t\t\t\t\thandleIn = i < n - 1\n\t\t\t\t\t\t\t? new Point(\n\t\t\t\t\t\t\t\t2 * knots[i + 1]._x - x[i + 1],\n\t\t\t\t\t\t\t\t2 * knots[i + 1]._y - y[i + 1])\n\t\t\t\t\t\t\t: new Point(\n\t\t\t\t\t\t\t\t(knots[n]._x + x[n - 1]) / 2,\n\t\t\t\t\t\t\t\t(knots[n]._y + y[n - 1]) / 2);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (closed && handleIn) {\n\t\t\t\tvar segment = this._segments[0];\n\t\t\t\tsegment.setHandleIn(handleIn.subtract(segment._point));\n\t\t\t}\n\t\t}\n\t};\n},\nnew function() {\n\tfunction getCurrentSegment(that) {\n\t\tvar segments = that._segments;\n\t\tif (segments.length === 0)\n\t\t\tthrow new Error('Use a moveTo() command first');\n\t\treturn segments[segments.length - 1];\n\t}\n\n\treturn {\n\t\tmoveTo: function() {\n\t\t\tvar segments = this._segments;\n\t\t\tif (segments.length === 1)\n\t\t\t\tthis.removeSegment(0);\n\t\t\tif (!segments.length)\n\t\t\t\tthis._add([ new Segment(Point.read(arguments)) ]);\n\t\t},\n\n\t\tmoveBy: function() {\n\t\t\tthrow new Error('moveBy() is unsupported on Path items.');\n\t\t},\n\n\t\tlineTo: function() {\n\t\t\tthis._add([ new Segment(Point.read(arguments)) ]);\n\t\t},\n\n\t\tcubicCurveTo: function() {\n\t\t\tvar handle1 = Point.read(arguments),\n\t\t\t\thandle2 = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this);\n\t\t\tcurrent.setHandleOut(handle1.subtract(current._point));\n\t\t\tthis._add([ new Segment(to, handle2.subtract(to)) ]);\n\t\t},\n\n\t\tquadraticCurveTo: function() {\n\t\t\tvar handle = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.cubicCurveTo(\n\t\t\t\thandle.add(current.subtract(handle).multiply(1 / 3)),\n\t\t\t\thandle.add(to.subtract(handle).multiply(1 / 3)),\n\t\t\t\tto\n\t\t\t);\n\t\t},\n\n\t\tcurveTo: function() {\n\t\t\tvar through = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tt = Base.pick(Base.read(arguments), 0.5),\n\t\t\t\tt1 = 1 - t,\n\t\t\t\tcurrent = getCurrentSegment(this)._point,\n\t\t\t\thandle = through.subtract(current.multiply(t1 * t1))\n\t\t\t\t\t.subtract(to.multiply(t * t)).divide(2 * t * t1);\n\t\t\tif (handle.isNaN())\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Cannot put a curve through points with parameter = ' + t);\n\t\t\tthis.quadraticCurveTo(handle, to);\n\t\t},\n\n\t\tarcTo: function() {\n\t\t\tvar current = getCurrentSegment(this),\n\t\t\t\tfrom = current._point,\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tthrough,\n\t\t\t\tpeek = Base.peek(arguments),\n\t\t\t\tclockwise = Base.pick(peek, true),\n\t\t\t\tcenter, extent, vector, matrix;\n\t\t\tif (typeof clockwise === 'boolean') {\n\t\t\t\tvar middle = from.add(to).divide(2),\n\t\t\t\tthrough = middle.add(middle.subtract(from).rotate(\n\t\t\t\t\t\tclockwise ? -90 : 90));\n\t\t\t} else if (Base.remain(arguments) <= 2) {\n\t\t\t\tthrough = to;\n\t\t\t\tto = Point.read(arguments);\n\t\t\t} else {\n\t\t\t\tvar radius = Size.read(arguments);\n\t\t\t\tif (radius.isZero())\n\t\t\t\t\treturn this.lineTo(to);\n\t\t\t\tvar rotation = Base.read(arguments),\n\t\t\t\t\tclockwise = !!Base.read(arguments),\n\t\t\t\t\tlarge = !!Base.read(arguments),\n\t\t\t\t\tmiddle = from.add(to).divide(2),\n\t\t\t\t\tpt = from.subtract(middle).rotate(-rotation),\n\t\t\t\t\tx = pt.x,\n\t\t\t\t\ty = pt.y,\n\t\t\t\t\tabs = Math.abs,\n\t\t\t\t\trx = abs(radius.width),\n\t\t\t\t\try = abs(radius.height),\n\t\t\t\t\trxSq = rx * rx,\n\t\t\t\t\trySq = ry * ry,\n\t\t\t\t\txSq =  x * x,\n\t\t\t\t\tySq =  y * y;\n\t\t\t\tvar factor = Math.sqrt(xSq / rxSq + ySq / rySq);\n\t\t\t\tif (factor > 1) {\n\t\t\t\t\trx *= factor;\n\t\t\t\t\try *= factor;\n\t\t\t\t\trxSq = rx * rx;\n\t\t\t\t\trySq = ry * ry;\n\t\t\t\t}\n\t\t\t\tfactor = (rxSq * rySq - rxSq * ySq - rySq * xSq) /\n\t\t\t\t\t\t(rxSq * ySq + rySq * xSq);\n\t\t\t\tif (abs(factor) < 1e-12)\n\t\t\t\t\tfactor = 0;\n\t\t\t\tif (factor < 0)\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Cannot create an arc with the given arguments');\n\t\t\t\tcenter = new Point(rx * y / ry, -ry * x / rx)\n\t\t\t\t\t\t.multiply((large === clockwise ? -1 : 1)\n\t\t\t\t\t\t\t* Math.sqrt(factor))\n\t\t\t\t\t\t.rotate(rotation).add(middle);\n\t\t\t\tmatrix = new Matrix().translate(center).rotate(rotation)\n\t\t\t\t\t\t.scale(rx, ry);\n\t\t\t\tvector = matrix._inverseTransform(from);\n\t\t\t\textent = vector.getDirectedAngle(matrix._inverseTransform(to));\n\t\t\t\tif (!clockwise && extent > 0)\n\t\t\t\t\textent -= 360;\n\t\t\t\telse if (clockwise && extent < 0)\n\t\t\t\t\textent += 360;\n\t\t\t}\n\t\t\tif (through) {\n\t\t\t\tvar l1 = new Line(from.add(through).divide(2),\n\t\t\t\t\t\t\tthrough.subtract(from).rotate(90), true),\n\t\t\t\t\tl2 = new Line(through.add(to).divide(2),\n\t\t\t\t\t\t\tto.subtract(through).rotate(90), true),\n\t\t\t\t\tline = new Line(from, to),\n\t\t\t\t\tthroughSide = line.getSide(through);\n\t\t\t\tcenter = l1.intersect(l2, true);\n\t\t\t\tif (!center) {\n\t\t\t\t\tif (!throughSide)\n\t\t\t\t\t\treturn this.lineTo(to);\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Cannot create an arc with the given arguments');\n\t\t\t\t}\n\t\t\t\tvector = from.subtract(center);\n\t\t\t\textent = vector.getDirectedAngle(to.subtract(center));\n\t\t\t\tvar centerSide = line.getSide(center);\n\t\t\t\tif (centerSide === 0) {\n\t\t\t\t\textent = throughSide * Math.abs(extent);\n\t\t\t\t} else if (throughSide === centerSide) {\n\t\t\t\t\textent += extent < 0 ? 360 : -360;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar ext = Math.abs(extent),\n\t\t\t\tcount = ext >= 360 ? 4 : Math.ceil(ext / 90),\n\t\t\t\tinc = extent / count,\n\t\t\t\thalf = inc * Math.PI / 360,\n\t\t\t\tz = 4 / 3 * Math.sin(half) / (1 + Math.cos(half)),\n\t\t\t\tsegments = [];\n\t\t\tfor (var i = 0; i <= count; i++) {\n\t\t\t\tvar pt = to,\n\t\t\t\t\tout = null;\n\t\t\t\tif (i < count) {\n\t\t\t\t\tout = vector.rotate(90).multiply(z);\n\t\t\t\t\tif (matrix) {\n\t\t\t\t\t\tpt = matrix._transformPoint(vector);\n\t\t\t\t\t\tout = matrix._transformPoint(vector.add(out))\n\t\t\t\t\t\t\t\t.subtract(pt);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpt = center.add(vector);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (i === 0) {\n\t\t\t\t\tcurrent.setHandleOut(out);\n\t\t\t\t} else {\n\t\t\t\t\tvar _in = vector.rotate(-90).multiply(z);\n\t\t\t\t\tif (matrix) {\n\t\t\t\t\t\t_in = matrix._transformPoint(vector.add(_in))\n\t\t\t\t\t\t\t\t.subtract(pt);\n\t\t\t\t\t}\n\t\t\t\t\tsegments.push(new Segment(pt, _in, out));\n\t\t\t\t}\n\t\t\t\tvector = vector.rotate(inc);\n\t\t\t}\n\t\t\tthis._add(segments);\n\t\t},\n\n\t\tlineBy: function() {\n\t\t\tvar to = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.lineTo(current.add(to));\n\t\t},\n\n\t\tcurveBy: function() {\n\t\t\tvar through = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tparameter = Base.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.curveTo(current.add(through), current.add(to), parameter);\n\t\t},\n\n\t\tcubicCurveBy: function() {\n\t\t\tvar handle1 = Point.read(arguments),\n\t\t\t\thandle2 = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.cubicCurveTo(current.add(handle1), current.add(handle2),\n\t\t\t\t\tcurrent.add(to));\n\t\t},\n\n\t\tquadraticCurveBy: function() {\n\t\t\tvar handle = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.quadraticCurveTo(current.add(handle), current.add(to));\n\t\t},\n\n\t\tarcBy: function() {\n\t\t\tvar current = getCurrentSegment(this)._point,\n\t\t\t\tpoint = current.add(Point.read(arguments)),\n\t\t\t\tclockwise = Base.pick(Base.peek(arguments), true);\n\t\t\tif (typeof clockwise === 'boolean') {\n\t\t\t\tthis.arcTo(point, clockwise);\n\t\t\t} else {\n\t\t\t\tthis.arcTo(point, current.add(Point.read(arguments)));\n\t\t\t}\n\t\t},\n\n\t\tclosePath: function(join) {\n\t\t\tthis.setClosed(true);\n\t\t\tif (join)\n\t\t\t\tthis.join();\n\t\t}\n\t};\n}, {\n\n\t_getBounds: function(getter, matrix) {\n\t\treturn Path[getter](this._segments, this._closed, this.getStyle(),\n\t\t\t\tmatrix);\n\t},\n\nstatics: {\n\tgetBounds: function(segments, closed, style, matrix, strokePadding) {\n\t\tvar first = segments[0];\n\t\tif (!first)\n\t\t\treturn new Rectangle();\n\t\tvar coords = new Array(6),\n\t\t\tprevCoords = first._transformCoordinates(matrix, new Array(6), false),\n\t\t\tmin = prevCoords.slice(0, 2),\n\t\t\tmax = min.slice(),\n\t\t\troots = new Array(2);\n\n\t\tfunction processSegment(segment) {\n\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\tCurve._addBounds(\n\t\t\t\t\tprevCoords[i],\n\t\t\t\t\tprevCoords[i + 4],\n\t\t\t\t\tcoords[i + 2],\n\t\t\t\t\tcoords[i],\n\t\t\t\t\ti, strokePadding ? strokePadding[i] : 0, min, max, roots);\n\t\t\t}\n\t\t\tvar tmp = prevCoords;\n\t\t\tprevCoords = coords;\n\t\t\tcoords = tmp;\n\t\t}\n\n\t\tfor (var i = 1, l = segments.length; i < l; i++)\n\t\t\tprocessSegment(segments[i]);\n\t\tif (closed)\n\t\t\tprocessSegment(first);\n\t\treturn new Rectangle(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n\t},\n\n\tgetStrokeBounds: function(segments, closed, style, matrix) {\n\t\tif (!style.hasStroke())\n\t\t\treturn Path.getBounds(segments, closed, style, matrix);\n\t\tvar length = segments.length - (closed ? 0 : 1),\n\t\t\tradius = style.getStrokeWidth() / 2,\n\t\t\tpadding = Path._getPenPadding(radius, matrix),\n\t\t\tbounds = Path.getBounds(segments, closed, style, matrix, padding),\n\t\t\tjoin = style.getStrokeJoin(),\n\t\t\tcap = style.getStrokeCap(),\n\t\t\tmiterLimit = radius * style.getMiterLimit();\n\t\tvar joinBounds = new Rectangle(new Size(padding).multiply(2));\n\n\t\tfunction add(point) {\n\t\t\tbounds = bounds.include(matrix\n\t\t\t\t? matrix._transformPoint(point, point) : point);\n\t\t}\n\n\t\tfunction addRound(segment) {\n\t\t\tbounds = bounds.unite(joinBounds.setCenter(matrix\n\t\t\t\t? matrix._transformPoint(segment._point) : segment._point));\n\t\t}\n\n\t\tfunction addJoin(segment, join) {\n\t\t\tvar handleIn = segment._handleIn,\n\t\t\t\thandleOut = segment._handleOut;\n\t\t\tif (join === 'round' || !handleIn.isZero() && !handleOut.isZero()\n\t\t\t\t\t&& handleIn.isCollinear(handleOut)) {\n\t\t\t\taddRound(segment);\n\t\t\t} else {\n\t\t\t\tPath._addBevelJoin(segment, join, radius, miterLimit, add);\n\t\t\t}\n\t\t}\n\n\t\tfunction addCap(segment, cap) {\n\t\t\tif (cap === 'round') {\n\t\t\t\taddRound(segment);\n\t\t\t} else {\n\t\t\t\tPath._addSquareCap(segment, cap, radius, add);\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 1; i < length; i++)\n\t\t\taddJoin(segments[i], join);\n\t\tif (closed) {\n\t\t\taddJoin(segments[0], join);\n\t\t} else if (length > 0) {\n\t\t\taddCap(segments[0], cap);\n\t\t\taddCap(segments[segments.length - 1], cap);\n\t\t}\n\t\treturn bounds;\n\t},\n\n\t_getPenPadding: function(radius, matrix) {\n\t\tif (!matrix)\n\t\t\treturn [radius, radius];\n\t\tvar mx = matrix.shiftless(),\n\t\t\thor = mx.transform(new Point(radius, 0)),\n\t\t\tver = mx.transform(new Point(0, radius)),\n\t\t\tphi = hor.getAngleInRadians(),\n\t\t\ta = hor.getLength(),\n\t\t\tb = ver.getLength();\n\t\tvar sin = Math.sin(phi),\n\t\t\tcos = Math.cos(phi),\n\t\t\ttan = Math.tan(phi),\n\t\t\ttx = -Math.atan(b * tan / a),\n\t\t\tty = Math.atan(b / (tan * a));\n\t\treturn [Math.abs(a * Math.cos(tx) * cos - b * Math.sin(tx) * sin),\n\t\t\t\tMath.abs(b * Math.sin(ty) * cos + a * Math.cos(ty) * sin)];\n\t},\n\n\t_addBevelJoin: function(segment, join, radius, miterLimit, addPoint, area) {\n\t\tvar curve2 = segment.getCurve(),\n\t\t\tcurve1 = curve2.getPrevious(),\n\t\t\tpoint = curve2.getPointAt(0, true),\n\t\t\tnormal1 = curve1.getNormalAt(1, true),\n\t\t\tnormal2 = curve2.getNormalAt(0, true),\n\t\t\tstep = normal1.getDirectedAngle(normal2) < 0 ? -radius : radius;\n\t\tnormal1.setLength(step);\n\t\tnormal2.setLength(step);\n\t\tif (area) {\n\t\t\taddPoint(point);\n\t\t\taddPoint(point.add(normal1));\n\t\t}\n\t\tif (join === 'miter') {\n\t\t\tvar corner = new Line(\n\t\t\t\t\tpoint.add(normal1),\n\t\t\t\t\tnew Point(-normal1.y, normal1.x), true\n\t\t\t\t).intersect(new Line(\n\t\t\t\t\tpoint.add(normal2),\n\t\t\t\t\tnew Point(-normal2.y, normal2.x), true\n\t\t\t\t), true);\n\t\t\tif (corner && point.getDistance(corner) <= miterLimit) {\n\t\t\t\taddPoint(corner);\n\t\t\t\tif (!area)\n\t\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (!area)\n\t\t\taddPoint(point.add(normal1));\n\t\taddPoint(point.add(normal2));\n\t},\n\n\t_addSquareCap: function(segment, cap, radius, addPoint, area) {\n\t\tvar point = segment._point,\n\t\t\tloc = segment.getLocation(),\n\t\t\tnormal = loc.getNormal().multiply(radius);\n\t\tif (area) {\n\t\t\taddPoint(point.subtract(normal));\n\t\t\taddPoint(point.add(normal));\n\t\t}\n\t\tif (cap === 'square')\n\t\t\tpoint = point.add(normal.rotate(loc.getParameter() === 0 ? -90 : 90));\n\t\taddPoint(point.add(normal));\n\t\taddPoint(point.subtract(normal));\n\t},\n\n\tgetHandleBounds: function(segments, closed, style, matrix, strokePadding,\n\t\t\tjoinPadding) {\n\t\tvar coords = new Array(6),\n\t\t\tx1 = Infinity,\n\t\t\tx2 = -x1,\n\t\t\ty1 = x1,\n\t\t\ty2 = x2;\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar segment = segments[i];\n\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\tfor (var j = 0; j < 6; j += 2) {\n\t\t\t\tvar padding = j === 0 ? joinPadding : strokePadding,\n\t\t\t\t\tpaddingX = padding ? padding[0] : 0,\n\t\t\t\t\tpaddingY = padding ? padding[1] : 0,\n\t\t\t\t\tx = coords[j],\n\t\t\t\t\ty = coords[j + 1],\n\t\t\t\t\txn = x - paddingX,\n\t\t\t\t\txx = x + paddingX,\n\t\t\t\t\tyn = y - paddingY,\n\t\t\t\t\tyx = y + paddingY;\n\t\t\t\tif (xn < x1) x1 = xn;\n\t\t\t\tif (xx > x2) x2 = xx;\n\t\t\t\tif (yn < y1) y1 = yn;\n\t\t\t\tif (yx > y2) y2 = yx;\n\t\t\t}\n\t\t}\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\tgetRoughBounds: function(segments, closed, style, matrix) {\n\t\tvar strokeRadius = style.hasStroke() ? style.getStrokeWidth() / 2 : 0,\n\t\t\tjoinRadius = strokeRadius;\n\t\tif (strokeRadius > 0) {\n\t\t\tif (style.getStrokeJoin() === 'miter')\n\t\t\t\tjoinRadius = strokeRadius * style.getMiterLimit();\n\t\t\tif (style.getStrokeCap() === 'square')\n\t\t\t\tjoinRadius = Math.max(joinRadius, strokeRadius * Math.sqrt(2));\n\t\t}\n\t\treturn Path.getHandleBounds(segments, closed, style, matrix,\n\t\t\t\tPath._getPenPadding(strokeRadius, matrix),\n\t\t\t\tPath._getPenPadding(joinRadius, matrix));\n\t}\n}});\n\nPath.inject({ statics: new function() {\n\n\tvar kappa = 0.5522847498307936,\n\t\tellipseSegments = [\n\t\t\tnew Segment([-1, 0], [0, kappa ], [0, -kappa]),\n\t\t\tnew Segment([0, -1], [-kappa, 0], [kappa, 0 ]),\n\t\t\tnew Segment([1, 0], [0, -kappa], [0, kappa ]),\n\t\t\tnew Segment([0, 1], [kappa, 0 ], [-kappa, 0])\n\t\t];\n\n\tfunction createPath(segments, closed, args) {\n\t\tvar props = Base.getNamed(args),\n\t\t\tpath = new Path(props && props.insert === false && Item.NO_INSERT);\n\t\tpath._add(segments);\n\t\tpath._closed = closed;\n\t\treturn path.set(props);\n\t}\n\n\tfunction createEllipse(center, radius, args) {\n\t\tvar segments = new Array(4);\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tvar segment = ellipseSegments[i];\n\t\t\tsegments[i] = new Segment(\n\t\t\t\tsegment._point.multiply(radius).add(center),\n\t\t\t\tsegment._handleIn.multiply(radius),\n\t\t\t\tsegment._handleOut.multiply(radius)\n\t\t\t);\n\t\t}\n\t\treturn createPath(segments, true, args);\n\t}\n\n\treturn {\n\t\tLine: function() {\n\t\t\treturn createPath([\n\t\t\t\tnew Segment(Point.readNamed(arguments, 'from')),\n\t\t\t\tnew Segment(Point.readNamed(arguments, 'to'))\n\t\t\t], false, arguments);\n\t\t},\n\n\t\tCircle: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius');\n\t\t\treturn createEllipse(center, new Size(radius), arguments);\n\t\t},\n\n\t\tRectangle: function() {\n\t\t\tvar rect = Rectangle.readNamed(arguments, 'rectangle'),\n\t\t\t\tradius = Size.readNamed(arguments, 'radius', 0,\n\t\t\t\t\t\t{ readNull: true }),\n\t\t\t\tbl = rect.getBottomLeft(true),\n\t\t\t\ttl = rect.getTopLeft(true),\n\t\t\t\ttr = rect.getTopRight(true),\n\t\t\t\tbr = rect.getBottomRight(true),\n\t\t\t\tsegments;\n\t\t\tif (!radius || radius.isZero()) {\n\t\t\t\tsegments = [\n\t\t\t\t\tnew Segment(bl),\n\t\t\t\t\tnew Segment(tl),\n\t\t\t\t\tnew Segment(tr),\n\t\t\t\t\tnew Segment(br)\n\t\t\t\t];\n\t\t\t} else {\n\t\t\t\tradius = Size.min(radius, rect.getSize(true).divide(2));\n\t\t\t\tvar rx = radius.width,\n\t\t\t\t\try = radius.height,\n\t\t\t\t\thx = rx * kappa,\n\t\t\t\t\thy = ry * kappa;\n\t\t\t\tsegments = [\n\t\t\t\t\tnew Segment(bl.add(rx, 0), null, [-hx, 0]),\n\t\t\t\t\tnew Segment(bl.subtract(0, ry), [0, hy]),\n\t\t\t\t\tnew Segment(tl.add(0, ry), null, [0, -hy]),\n\t\t\t\t\tnew Segment(tl.add(rx, 0), [-hx, 0], null),\n\t\t\t\t\tnew Segment(tr.subtract(rx, 0), null, [hx, 0]),\n\t\t\t\t\tnew Segment(tr.add(0, ry), [0, -hy], null),\n\t\t\t\t\tnew Segment(br.subtract(0, ry), null, [0, hy]),\n\t\t\t\t\tnew Segment(br.subtract(rx, 0), [hx, 0])\n\t\t\t\t];\n\t\t\t}\n\t\t\treturn createPath(segments, true, arguments);\n\t\t},\n\n\t\tRoundRectangle: '#Rectangle',\n\n\t\tEllipse: function() {\n\t\t\tvar ellipse = Shape._readEllipse(arguments);\n\t\t\treturn createEllipse(ellipse.center, ellipse.radius, arguments);\n\t\t},\n\n\t\tOval: '#Ellipse',\n\n\t\tArc: function() {\n\t\t\tvar from = Point.readNamed(arguments, 'from'),\n\t\t\t\tthrough = Point.readNamed(arguments, 'through'),\n\t\t\t\tto = Point.readNamed(arguments, 'to'),\n\t\t\t\tprops = Base.getNamed(arguments),\n\t\t\t\tpath = new Path(props && props.insert === false\n\t\t\t\t\t\t&& Item.NO_INSERT);\n\t\t\tpath.moveTo(from);\n\t\t\tpath.arcTo(through, to);\n\t\t\treturn path.set(props);\n\t\t},\n\n\t\tRegularPolygon: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tsides = Base.readNamed(arguments, 'sides'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius'),\n\t\t\t\tstep = 360 / sides,\n\t\t\t\tthree = !(sides % 3),\n\t\t\t\tvector = new Point(0, three ? -radius : radius),\n\t\t\t\toffset = three ? -1 : 0.5,\n\t\t\t\tsegments = new Array(sides);\n\t\t\tfor (var i = 0; i < sides; i++)\n\t\t\t\tsegments[i] = new Segment(center.add(\n\t\t\t\t\tvector.rotate((i + offset) * step)));\n\t\t\treturn createPath(segments, true, arguments);\n\t\t},\n\n\t\tStar: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tpoints = Base.readNamed(arguments, 'points') * 2,\n\t\t\t\tradius1 = Base.readNamed(arguments, 'radius1'),\n\t\t\t\tradius2 = Base.readNamed(arguments, 'radius2'),\n\t\t\t\tstep = 360 / points,\n\t\t\t\tvector = new Point(0, -1),\n\t\t\t\tsegments = new Array(points);\n\t\t\tfor (var i = 0; i < points; i++)\n\t\t\t\tsegments[i] = new Segment(center.add(vector.rotate(step * i)\n\t\t\t\t\t\t.multiply(i % 2 ? radius2 : radius1)));\n\t\t\treturn createPath(segments, true, arguments);\n\t\t}\n\t};\n}});\n\nvar CompoundPath = PathItem.extend({\n\t_class: 'CompoundPath',\n\t_serializeFields: {\n\t\tchildren: []\n\t},\n\n\tinitialize: function CompoundPath(arg) {\n\t\tthis._children = [];\n\t\tthis._namedChildren = {};\n\t\tif (!this._initialize(arg)) {\n\t\t\tif (typeof arg === 'string') {\n\t\t\t\tthis.setPathData(arg);\n\t\t\t} else {\n\t\t\t\tthis.addChildren(Array.isArray(arg) ? arg : arguments);\n\t\t\t}\n\t\t}\n\t},\n\n\tinsertChildren: function insertChildren(index, items, _preserve) {\n\t\tfor (var i = items.length - 1; i >= 0; i--) {\n\t\t\tvar item = items[i];\n\t\t\tif (item instanceof CompoundPath) {\n\t\t\t\titems.splice.apply(items, [i, 1].concat(item.removeChildren()));\n\t\t\t\titem.remove();\n\t\t\t}\n\t\t}\n\t\titems = insertChildren.base.call(this, index, items, _preserve, Path);\n\t\tfor (var i = 0, l = !_preserve && items && items.length; i < l; i++) {\n\t\t\tvar item = items[i];\n\t\t\tif (item._clockwise === undefined)\n\t\t\t\titem.setClockwise(item._index === 0);\n\t\t}\n\t\treturn items;\n\t},\n\n\treverse: function() {\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tchildren[i].reverse();\n\t},\n\n\tsmooth: function() {\n\t\tfor (var i = 0, l = this._children.length; i < l; i++)\n\t\t\tthis._children[i].smooth();\n\t},\n\n\treduce: function reduce() {\n\t\tvar children = this._children;\n\t\tfor (var i = children.length - 1; i >= 0; i--) {\n\t\t\tvar path = children[i].reduce();\n\t\t\tif (path.isEmpty())\n\t\t\t\tchildren.splice(i, 1);\n\t\t}\n\t\tif (children.length === 0) {\n\t\t\tvar path = new Path(Item.NO_INSERT);\n\t\t\tpath.insertAbove(this);\n\t\t\tpath.setStyle(this._style);\n\t\t\tthis.remove();\n\t\t\treturn path;\n\t\t}\n\t\treturn reduce.base.call(this);\n\t},\n\n\tisClockwise: function() {\n\t\tvar child = this.getFirstChild();\n\t\treturn child && child.isClockwise();\n\t},\n\n\tsetClockwise: function(clockwise) {\n\t\tif (this.isClockwise() !== !!clockwise)\n\t\t\tthis.reverse();\n\t},\n\n\tgetFirstSegment: function() {\n\t\tvar first = this.getFirstChild();\n\t\treturn first && first.getFirstSegment();\n\t},\n\n\tgetLastSegment: function() {\n\t\tvar last = this.getLastChild();\n\t\treturn last && last.getLastSegment();\n\t},\n\n\tgetCurves: function() {\n\t\tvar children = this._children,\n\t\t\tcurves = [];\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tcurves.push.apply(curves, children[i].getCurves());\n\t\treturn curves;\n\t},\n\n\tgetFirstCurve: function() {\n\t\tvar first = this.getFirstChild();\n\t\treturn first && first.getFirstCurve();\n\t},\n\n\tgetLastCurve: function() {\n\t\tvar last = this.getLastChild();\n\t\treturn last && last.getFirstCurve();\n\t},\n\n\tgetArea: function() {\n\t\tvar children = this._children,\n\t\t\tarea = 0;\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tarea += children[i].getArea();\n\t\treturn area;\n\t}\n}, {\n\tbeans: true,\n\n\tgetPathData: function(_matrix, _precision) {\n\t\tvar children = this._children,\n\t\t\tpaths = [];\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i],\n\t\t\t\tmx = child._matrix;\n\t\t\tpaths.push(child.getPathData(_matrix && !mx.isIdentity()\n\t\t\t\t\t? _matrix.chain(mx) : _matrix, _precision));\n\t\t}\n\t\treturn paths.join(' ');\n\t}\n}, {\n\t_getChildHitTestOptions: function(options) {\n\t\treturn options.class === Path || options.type === 'path'\n\t\t\t\t? options\n\t\t\t\t: new Base(options, { fill: false });\n\t},\n\n\t_draw: function(ctx, param, strokeMatrix) {\n\t\tvar children = this._children;\n\t\tif (children.length === 0)\n\t\t\treturn;\n\n\t\tif (this._currentPath) {\n\t\t\tctx.currentPath = this._currentPath;\n\t\t} else {\n\t\t\tparam = param.extend({ dontStart: true, dontFinish: true });\n\t\t\tctx.beginPath();\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].draw(ctx, param, strokeMatrix);\n\t\t\tthis._currentPath = ctx.currentPath;\n\t\t}\n\n\t\tif (!param.clip) {\n\t\t\tthis._setStyles(ctx);\n\t\t\tvar style = this._style;\n\t\t\tif (style.hasFill()) {\n\t\t\t\tctx.fill(style.getWindingRule());\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (style.hasStroke())\n\t\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\t_drawSelected: function(ctx, matrix, selectedItems) {\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i],\n\t\t\t\tmx = child._matrix;\n\t\t\tif (!selectedItems[child._id])\n\t\t\t\tchild._drawSelected(ctx, mx.isIdentity() ? matrix\n\t\t\t\t\t\t: matrix.chain(mx));\n\t\t}\n\t}\n},\nnew function() {\n\tfunction getCurrentPath(that, check) {\n\t\tvar children = that._children;\n\t\tif (check && children.length === 0)\n\t\t\tthrow new Error('Use a moveTo() command first');\n\t\treturn children[children.length - 1];\n\t}\n\n\tvar fields = {\n\t\tmoveTo: function() {\n\t\t\tvar current = getCurrentPath(this),\n\t\t\t\tpath = current && current.isEmpty() ? current\n\t\t\t\t\t\t: new Path(Item.NO_INSERT);\n\t\t\tif (path !== current)\n\t\t\t\tthis.addChild(path);\n\t\t\tpath.moveTo.apply(path, arguments);\n\t\t},\n\n\t\tmoveBy: function() {\n\t\t\tvar current = getCurrentPath(this, true),\n\t\t\t\tlast = current && current.getLastSegment(),\n\t\t\t\tpoint = Point.read(arguments);\n\t\t\tthis.moveTo(last ? point.add(last._point) : point);\n\t\t},\n\n\t\tclosePath: function(join) {\n\t\t\tgetCurrentPath(this, true).closePath(join);\n\t\t}\n\t};\n\n\tBase.each(['lineTo', 'cubicCurveTo', 'quadraticCurveTo', 'curveTo', 'arcTo',\n\t\t\t'lineBy', 'cubicCurveBy', 'quadraticCurveBy', 'curveBy', 'arcBy'],\n\t\t\tfunction(key) {\n\t\t\t\tfields[key] = function() {\n\t\t\t\t\tvar path = getCurrentPath(this, true);\n\t\t\t\t\tpath[key].apply(path, arguments);\n\t\t\t\t};\n\t\t\t}\n\t);\n\n\treturn fields;\n});\n\nPathItem.inject(new function() {\n\tvar operators = {\n\t\tunite: function(w) {\n\t\t\treturn w === 1 || w === 0;\n\t\t},\n\n\t\tintersect: function(w) {\n\t\t\treturn w === 2;\n\t\t},\n\n\t\tsubtract: function(w) {\n\t\t\treturn w === 1;\n\t\t},\n\n\t\texclude: function(w) {\n\t\t\treturn w === 1;\n\t\t}\n\t};\n\n\tfunction preparePath(path, resolve) {\n\t\tvar res = path.clone(false).reduce().transform(null, true, true);\n\t\treturn resolve ? res.resolveCrossings().reorient() : res;\n\t}\n\n\tfunction finishBoolean(ctor, paths, path1, path2, reduce) {\n\t\tvar result = new ctor(Item.NO_INSERT);\n\t\tresult.addChildren(paths, true);\n\t\tif (reduce)\n\t\t\tresult = result.reduce();\n\t\tresult.insertAbove(path2 && path1.isSibling(path2)\n\t\t\t\t&& path1.getIndex() < path2.getIndex()\n\t\t\t\t\t? path2 : path1);\n\t\tresult.setStyle(path1._style);\n\t\treturn result;\n\t}\n\n\tfunction computeBoolean(path1, path2, operation) {\n\t\tif (!path1._children && !path1._closed)\n\t\t\treturn computeOpenBoolean(path1, path2, operation);\n\t\tvar _path1 = preparePath(path1, true),\n\t\t\t_path2 = path2 && path1 !== path2 && preparePath(path2, true);\n\t\tif (_path2 && /^(subtract|exclude)$/.test(operation)\n\t\t\t\t^ (_path2.isClockwise() !== _path1.isClockwise()))\n\t\t\t_path2.reverse();\n\t\tvar intersections = CurveLocation.expand(\n\t\t\t_path1.getIntersections(_path2, function(inter) {\n\t\t\t\treturn _path2 && inter.isOverlap() || inter.isCrossing();\n\t\t\t})\n\t\t);\n\t\tdivideLocations(intersections);\n\n\t\tvar segments = [],\n\t\t\tmonoCurves = [];\n\n\t\tfunction collect(paths) {\n\t\t\tfor (var i = 0, l = paths.length; i < l; i++) {\n\t\t\t\tvar path = paths[i];\n\t\t\t\tsegments.push.apply(segments, path._segments);\n\t\t\t\tmonoCurves.push.apply(monoCurves, path._getMonoCurves());\n\t\t\t}\n\t\t}\n\n\t\tcollect(_path1._children || [_path1]);\n\t\tif (_path2)\n\t\t\tcollect(_path2._children || [_path2]);\n\t\tfor (var i = 0, l = intersections.length; i < l; i++) {\n\t\t\tpropagateWinding(intersections[i]._segment, _path1, _path2,\n\t\t\t\t\tmonoCurves, operation);\n\t\t}\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar segment = segments[i];\n\t\t\tif (segment._winding == null) {\n\t\t\t\tpropagateWinding(segment, _path1, _path2, monoCurves,\n\t\t\t\t\t\toperation);\n\t\t\t}\n\t\t}\n\t\treturn finishBoolean(CompoundPath, tracePaths(segments, operation),\n\t\t\t\tpath1, path2, true);\n\t}\n\n\tfunction computeOpenBoolean(path1, path2, operation) {\n\t\tif (!path2 || !path2._children && !path2._closed\n\t\t\t\t|| !/^(subtract|intersect)$/.test(operation))\n\t\t\treturn null;\n\t\tvar _path1 = preparePath(path1, false),\n\t\t\t_path2 = preparePath(path2, false),\n\t\t\tintersections = _path1.getIntersections(_path2, function(inter) {\n\t\t\t\treturn inter.isOverlap() || inter.isCrossing();\n\t\t\t}),\n\t\t\tsub = operation === 'subtract',\n\t\t\tpaths = [];\n\n\t\tfunction addPath(path) {\n\t\t\tif (_path2.contains(path.getPointAt(path.getLength() / 2)) ^ sub) {\n\t\t\t\tpaths.unshift(path);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = intersections.length - 1; i >= 0; i--) {\n\t\t\tvar path = intersections[i].split();\n\t\t\tif (path) {\n\t\t\t\tif (addPath(path))\n\t\t\t\t\tpath.getFirstSegment().setHandleIn(0, 0);\n\t\t\t\t_path1.getLastSegment().setHandleOut(0, 0);\n\t\t\t}\n\t\t}\n\t\taddPath(_path1);\n\t\treturn finishBoolean(Group, paths, path1, path2);\n\t}\n\n\tfunction linkIntersections(from, to) {\n\t\tvar prev = from;\n\t\twhile (prev) {\n\t\t\tif (prev === to)\n\t\t\t\treturn;\n\t\t\tprev = prev._prev;\n\t\t}\n\t\twhile (from._next && from._next !== to)\n\t\t\tfrom = from._next;\n\t\tif (!from._next) {\n\t\t\twhile (to._prev)\n\t\t\t\tto = to._prev;\n\t\t\tfrom._next = to;\n\t\t\tto._prev = from;\n\t\t}\n\t}\n\n\tfunction divideLocations(locations) {\n\t\tvar tMin = 4e-7,\n\t\t\ttMax = 1 - tMin,\n\t\t\tnoHandles = false,\n\t\t\tclearSegments = [],\n\t\t\tprevCurve,\n\t\t\tprevT;\n\n\t\tfor (var i = locations.length - 1; i >= 0; i--) {\n\t\t\tvar loc = locations[i],\n\t\t\t\tcurve = loc._curve,\n\t\t\t\tt = loc._parameter,\n\t\t\t\torigT = t;\n\t\t\tif (curve !== prevCurve) {\n\t\t\t\tnoHandles = !curve.hasHandles();\n\t\t\t} else if (prevT > 0) {\n\t\t\t\tt /= prevT;\n\t\t\t}\n\t\t\tvar segment;\n\t\t\tif (t < tMin) {\n\t\t\t\tsegment = curve._segment1;\n\t\t\t} else if (t > tMax) {\n\t\t\t\tsegment = curve._segment2;\n\t\t\t} else {\n\t\t\t\tsegment = curve.divide(t, true, true)._segment1;\n\t\t\t\tif (noHandles)\n\t\t\t\t\tclearSegments.push(segment);\n\t\t\t}\n\t\t\tloc._setSegment(segment);\n\t\t\tvar inter = segment._intersection,\n\t\t\t\tdest = loc._intersection;\n\t\t\tif (inter) {\n\t\t\t\tlinkIntersections(inter, dest);\n\t\t\t\tvar other = inter;\n\t\t\t\twhile (other) {\n\t\t\t\t\tlinkIntersections(other._intersection, inter);\n\t\t\t\t\tother = other._next;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsegment._intersection = dest;\n\t\t\t}\n\t\t\tprevCurve = curve;\n\t\t\tprevT = origT;\n\t\t}\n\t\tfor (var i = 0, l = clearSegments.length; i < l; i++) {\n\t\t\tclearSegments[i].clearHandles();\n\t\t}\n\t}\n\n\tfunction getWinding(point, curves, horizontal, testContains) {\n\t\tvar epsilon = 2e-7,\n\t\t\ttMin = 4e-7,\n\t\t\ttMax = 1 - tMin,\n\t\t\tpx = point.x,\n\t\t\tpy = point.y,\n\t\t\twindLeft = 0,\n\t\t\twindRight = 0,\n\t\t\troots = [],\n\t\t\tabs = Math.abs;\n\t\tif (horizontal) {\n\t\t\tvar yTop = -Infinity,\n\t\t\t\tyBottom = Infinity,\n\t\t\t\tyBefore = py - epsilon,\n\t\t\t\tyAfter = py + epsilon;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar values = curves[i].values;\n\t\t\t\tif (Curve.solveCubic(values, 0, px, roots, 0, 1) > 0) {\n\t\t\t\t\tfor (var j = roots.length - 1; j >= 0; j--) {\n\t\t\t\t\t\tvar y = Curve.getPoint(values, roots[j]).y;\n\t\t\t\t\t\tif (y < yBefore && y > yTop) {\n\t\t\t\t\t\t\tyTop = y;\n\t\t\t\t\t\t} else if (y > yAfter && y < yBottom) {\n\t\t\t\t\t\t\tyBottom = y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tyTop = (yTop + py) / 2;\n\t\t\tyBottom = (yBottom + py) / 2;\n\t\t\tif (yTop > -Infinity)\n\t\t\t\twindLeft = getWinding(new Point(px, yTop), curves, false,\n\t\t\t\t\t\ttestContains);\n\t\t\tif (yBottom < Infinity)\n\t\t\t\twindRight = getWinding(new Point(px, yBottom), curves, false,\n\t\t\t\t\t\ttestContains);\n\t\t} else {\n\t\t\tvar xBefore = px - epsilon,\n\t\t\t\txAfter = px + epsilon;\n\t\t\tvar startCounted = false,\n\t\t\t\tprevCurve,\n\t\t\t\tprevT;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar curve = curves[i],\n\t\t\t\t\tvalues = curve.values,\n\t\t\t\t\twinding = curve.winding;\n\t\t\t\tif (winding && (winding === 1\n\t\t\t\t\t\t&& py >= values[1] && py <= values[7]\n\t\t\t\t\t\t|| py >= values[7] && py <= values[1])\n\t\t\t\t\t&& Curve.solveCubic(values, 1, py, roots, 0, 1) === 1) {\n\t\t\t\t\tvar t = roots[0];\n\t\t\t\t\tif (!(\n\t\t\t\t\t\tt > tMax && startCounted && curve.next !== curves[i + 1]\n\t\t\t\t\t\t|| t < tMin && prevT > tMax\n\t\t\t\t\t\t\t&& curve.previous === prevCurve)) {\n\t\t\t\t\t\tvar x = Curve.getPoint(values, t).x,\n\t\t\t\t\t\t\tslope = Curve.getTangent(values, t).y,\n\t\t\t\t\t\t\tcounted = false;\n\t\t\t\t\t\tif (Numerical.isZero(slope) && !Curve.isStraight(values)\n\t\t\t\t\t\t\t\t|| t < tMin && slope * Curve.getTangent(\n\t\t\t\t\t\t\t\t\tcurve.previous.values, 1).y < 0\n\t\t\t\t\t\t\t\t|| t > tMax && slope * Curve.getTangent(\n\t\t\t\t\t\t\t\t\tcurve.next.values, 0).y < 0) {\n\t\t\t\t\t\t\tif (testContains && x >= xBefore && x <= xAfter) {\n\t\t\t\t\t\t\t\t++windLeft;\n\t\t\t\t\t\t\t\t++windRight;\n\t\t\t\t\t\t\t\tcounted = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (x <= xBefore) {\n\t\t\t\t\t\t\twindLeft += winding;\n\t\t\t\t\t\t\tcounted = true;\n\t\t\t\t\t\t} else if (x >= xAfter) {\n\t\t\t\t\t\t\twindRight += winding;\n\t\t\t\t\t\t\tcounted = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (curve.previous !== curves[i - 1])\n\t\t\t\t\t\t\tstartCounted = t < tMin && counted;\n\t\t\t\t\t}\n\t\t\t\t\tprevCurve = curve;\n\t\t\t\t\tprevT = t;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn Math.max(abs(windLeft), abs(windRight));\n\t}\n\n\tfunction propagateWinding(segment, path1, path2, monoCurves, operation) {\n\t\tvar epsilon = 2e-7,\n\t\t\tchain = [],\n\t\t\tstart = segment,\n\t\t\ttotalLength = 0,\n\t\t\twindingSum = 0;\n\t\tdo {\n\t\t\tvar curve = segment.getCurve(),\n\t\t\t\tlength = curve.getLength();\n\t\t\tchain.push({ segment: segment, curve: curve, length: length });\n\t\t\ttotalLength += length;\n\t\t\tsegment = segment.getNext();\n\t\t} while (segment && !segment._intersection && segment !== start);\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\tvar length = totalLength * (i + 1) / 4;\n\t\t\tfor (var k = 0, m = chain.length; k < m; k++) {\n\t\t\t\tvar node = chain[k],\n\t\t\t\t\tcurveLength = node.length;\n\t\t\t\tif (length <= curveLength) {\n\t\t\t\t\tif (length < epsilon || curveLength - length < epsilon)\n\t\t\t\t\t\tlength = curveLength / 2;\n\t\t\t\t\tvar curve = node.curve,\n\t\t\t\t\t\tpath = curve._path,\n\t\t\t\t\t\tparent = path._parent,\n\t\t\t\t\t\tpt = curve.getPointAt(length),\n\t\t\t\t\t\thor = curve.isHorizontal();\n\t\t\t\t\tif (parent instanceof CompoundPath)\n\t\t\t\t\t\tpath = parent;\n\t\t\t\t\twindingSum += operation === 'subtract' && path2\n\t\t\t\t\t\t&& (path === path1 && path2._getWinding(pt, hor)\n\t\t\t\t\t\t|| path === path2 && !path1._getWinding(pt, hor))\n\t\t\t\t\t\t? 0\n\t\t\t\t\t\t: getWinding(pt, monoCurves, hor);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tlength -= curveLength;\n\t\t\t}\n\t\t}\n\t\tvar winding = Math.round(windingSum / 3);\n\t\tfor (var j = chain.length - 1; j >= 0; j--)\n\t\t\tchain[j].segment._winding = winding;\n\t}\n\n\tfunction tracePaths(segments, operation) {\n\t\tvar paths = [],\n\t\t\tstart,\n\t\t\totherStart,\n\t\t\toperator = operators[operation],\n\t\t\toverlapWinding = {\n\t\t\t\tunite: { 1: 2 },\n\t\t\t\tintersect: { 2: 1 }\n\t\t\t}[operation];\n\n\t\tfunction isValid(seg, adjusted) {\n\t\t\tif (seg._visited)\n\t\t\t\treturn false;\n\t\t\tif (!operator)\n\t\t\t\treturn true;\n\t\t\tvar winding = seg._winding,\n\t\t\t\tinter = seg._intersection;\n\t\t\tif (inter && adjusted && overlapWinding && inter.isOverlap())\n\t\t\t\twinding = overlapWinding[winding] || winding;\n\t\t\treturn operator(winding);\n\t\t}\n\n\t\tfunction isStart(seg) {\n\t\t\treturn seg === start || seg === otherStart;\n\t\t}\n\n\t\tfunction findBestIntersection(inter, strict) {\n\t\t\tif (!inter._next)\n\t\t\t\treturn inter;\n\t\t\twhile (inter) {\n\t\t\t\tvar seg = inter._segment,\n\t\t\t\t\tnextSeg = seg.getNext(),\n\t\t\t\t\tnextInter = nextSeg._intersection;\n\t\t\t\tif (isStart(nextSeg)\n\t\t\t\t\t|| !seg._visited && !nextSeg._visited\n\t\t\t\t\t&& (!operator\n\t\t\t\t\t\t|| (!strict || isValid(seg))\n\t\t\t\t\t\t&& (!(strict && nextInter && nextInter.isOverlap())\n\t\t\t\t\t\t\t&& isValid(nextSeg)\n\t\t\t\t\t\t\t|| !strict && nextInter\n\t\t\t\t\t\t\t&& isValid(nextInter._segment))\n\t\t\t\t\t))\n\t\t\t\t\treturn inter;\n\t\t\t\tinter = inter._next;\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tfunction findStartSegment(inter, next) {\n\t\t\twhile (inter) {\n\t\t\t\tvar seg = inter._segment;\n\t\t\t\tif (isStart(seg))\n\t\t\t\t\treturn seg;\n\t\t\t\tinter = inter[next ? '_next' : '_prev'];\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar seg = segments[i],\n\t\t\t\tpath = null,\n\t\t\t\tfinished = false;\n\t\t\tif (!isValid(seg, true))\n\t\t\t\tcontinue;\n\t\t\tstart = otherStart = null;\n\t\t\twhile (!finished) {\n\t\t\t\tvar inter = seg._intersection,\n\t\t\t\t\thandleIn = path && seg._handleIn;\n\t\t\t\tinter = inter && (findBestIntersection(inter, true)\n\t\t\t\t\t\t|| findBestIntersection(inter, false)) || inter;\n\t\t\t\tvar other = inter && inter._segment;\n\t\t\t\tif (other && isValid(other))\n\t\t\t\t\tseg = other;\n\t\t\t\tif (seg._visited) {\n\t\t\t\t\tfinished = isStart(seg);\n\t\t\t\t\tif (!finished && inter) {\n\t\t\t\t\t\tvar found = findStartSegment(inter, true)\n\t\t\t\t\t\t\t|| findStartSegment(inter, false);\n\t\t\t\t\t\tif (found) {\n\t\t\t\t\t\t\tseg = found;\n\t\t\t\t\t\t\tfinished = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (!path) {\n\t\t\t\t\tpath = new Path(Item.NO_INSERT);\n\t\t\t\t\tstart = seg;\n\t\t\t\t\totherStart = other;\n\t\t\t\t}\n\t\t\t\tpath.add(new Segment(seg._point, handleIn, seg._handleOut));\n\t\t\t\tseg._visited = true;\n\t\t\t\tseg = seg.getNext();\n\t\t\t\tfinished = isStart(seg);\n\t\t\t}\n\t\t\tif (finished) {\n\t\t\t\tpath.firstSegment.setHandleIn(seg._handleIn);\n\t\t\t\tpath.setClosed(true);\n\t\t\t} else if (path) {\n\t\t\t\tconsole.error('Boolean operation resulted in open path',\n\t\t\t\t\t\t'segments =', path._segments.length,\n\t\t\t\t\t\t'length =', path.getLength());\n\t\t\t\tpath = null;\n\t\t\t}\n\t\t\tif (path && (path._segments.length > 8\n\t\t\t\t\t|| !Numerical.isZero(path.getArea()))) {\n\t\t\t\tpaths.push(path);\n\t\t\t\tpath = null;\n\t\t\t}\n\t\t}\n\t\treturn paths;\n\t}\n\n\treturn {\n\t\t_getWinding: function(point, horizontal, testContains) {\n\t\t\treturn getWinding(point, this._getMonoCurves(),\n\t\t\t\t\thorizontal, testContains);\n\t\t},\n\n\t\tunite: function(path) {\n\t\t\treturn computeBoolean(this, path, 'unite');\n\t\t},\n\n\t\tintersect: function(path) {\n\t\t\treturn computeBoolean(this, path, 'intersect');\n\t\t},\n\n\t\tsubtract: function(path) {\n\t\t\treturn computeBoolean(this, path, 'subtract');\n\t\t},\n\n\t\texclude: function(path) {\n\t\t\treturn computeBoolean(this, path, 'exclude');\n\t\t},\n\n\t\tdivide: function(path) {\n\t\t\treturn finishBoolean(Group,\n\t\t\t\t\t[this.subtract(path), this.intersect(path)],\n\t\t\t\t\tthis, path, true);\n\t\t},\n\n\t\tresolveCrossings: function() {\n\t\t\tvar crossings = this.getCrossings();\n\t\t\tif (!crossings.length)\n\t\t\t\treturn this;\n\t\t\tdivideLocations(CurveLocation.expand(crossings));\n\t\t\tvar paths = this._children || [this],\n\t\t\t\tsegments = [];\n\t\t\tfor (var i = 0, l = paths.length; i < l; i++) {\n\t\t\t\tsegments.push.apply(segments, paths[i]._segments);\n\t\t\t}\n\t\t\treturn finishBoolean(CompoundPath, tracePaths(segments),\n\t\t\t\t\tthis, null, false);\n\t\t}\n\t};\n});\n\nPath.inject({\n\t_getMonoCurves: function() {\n\t\tvar monoCurves = this._monoCurves,\n\t\t\tprevCurve;\n\n\t\tfunction insertCurve(v) {\n\t\t\tvar y0 = v[1],\n\t\t\t\ty1 = v[7],\n\t\t\t\tcurve = {\n\t\t\t\t\tvalues: v,\n\t\t\t\t\twinding: y0 === y1\n\t\t\t\t\t\t? 0\n\t\t\t\t\t\t: y0 > y1\n\t\t\t\t\t\t\t? -1\n\t\t\t\t\t\t\t: 1,\n\t\t\t\t\tprevious: prevCurve,\n\t\t\t\t\tnext: null\n\t\t\t\t};\n\t\t\tif (prevCurve)\n\t\t\t\tprevCurve.next = curve;\n\t\t\tmonoCurves.push(curve);\n\t\t\tprevCurve = curve;\n\t\t}\n\n\t\tfunction handleCurve(v) {\n\t\t\tif (Curve.getLength(v) === 0)\n\t\t\t\treturn;\n\t\t\tvar y0 = v[1],\n\t\t\t\ty1 = v[3],\n\t\t\t\ty2 = v[5],\n\t\t\t\ty3 = v[7];\n\t\t\tif (Curve.isStraight(v)) {\n\t\t\t\tinsertCurve(v);\n\t\t\t} else {\n\t\t\t\tvar a = 3 * (y1 - y2) - y0 + y3,\n\t\t\t\t\tb = 2 * (y0 + y2) - 4 * y1,\n\t\t\t\t\tc = y1 - y0,\n\t\t\t\t\ttMin = 4e-7,\n\t\t\t\t\ttMax = 1 - tMin,\n\t\t\t\t\troots = [],\n\t\t\t\t\tn = Numerical.solveQuadratic(a, b, c, roots, tMin, tMax);\n\t\t\t\tif (n === 0) {\n\t\t\t\t\tinsertCurve(v);\n\t\t\t\t} else {\n\t\t\t\t\troots.sort();\n\t\t\t\t\tvar t = roots[0],\n\t\t\t\t\t\tparts = Curve.subdivide(v, t);\n\t\t\t\t\tinsertCurve(parts[0]);\n\t\t\t\t\tif (n > 1) {\n\t\t\t\t\t\tt = (roots[1] - t) / (1 - t);\n\t\t\t\t\t\tparts = Curve.subdivide(parts[1], t);\n\t\t\t\t\t\tinsertCurve(parts[0]);\n\t\t\t\t\t}\n\t\t\t\t\tinsertCurve(parts[1]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!monoCurves) {\n\t\t\tmonoCurves = this._monoCurves = [];\n\t\t\tvar curves = this.getCurves(),\n\t\t\t\tsegments = this._segments;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++)\n\t\t\t\thandleCurve(curves[i].getValues());\n\t\t\tif (!this._closed && segments.length > 1) {\n\t\t\t\tvar p1 = segments[segments.length - 1]._point,\n\t\t\t\t\tp2 = segments[0]._point,\n\t\t\t\t\tp1x = p1._x, p1y = p1._y,\n\t\t\t\t\tp2x = p2._x, p2y = p2._y;\n\t\t\t\thandleCurve([p1x, p1y, p1x, p1y, p2x, p2y, p2x, p2y]);\n\t\t\t}\n\t\t\tif (monoCurves.length > 0) {\n\t\t\t\tvar first = monoCurves[0],\n\t\t\t\t\tlast = monoCurves[monoCurves.length - 1];\n\t\t\t\tfirst.previous = last;\n\t\t\t\tlast.next = first;\n\t\t\t}\n\t\t}\n\t\treturn monoCurves;\n\t},\n\n\tgetInteriorPoint: function() {\n\t\tvar bounds = this.getBounds(),\n\t\t\tpoint = bounds.getCenter(true);\n\t\tif (!this.contains(point)) {\n\t\t\tvar curves = this._getMonoCurves(),\n\t\t\t\troots = [],\n\t\t\t\ty = point.y,\n\t\t\t\txIntercepts = [];\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar values = curves[i].values;\n\t\t\t\tif ((curves[i].winding === 1\n\t\t\t\t\t\t&& y >= values[1] && y <= values[7]\n\t\t\t\t\t\t|| y >= values[7] && y <= values[1])\n\t\t\t\t\t\t&& Curve.solveCubic(values, 1, y, roots, 0, 1) > 0) {\n\t\t\t\t\tfor (var j = roots.length - 1; j >= 0; j--)\n\t\t\t\t\t\txIntercepts.push(Curve.getPoint(values, roots[j]).x);\n\t\t\t\t}\n\t\t\t\tif (xIntercepts.length > 1)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tpoint.x = (xIntercepts[0] + xIntercepts[1]) / 2;\n\t\t}\n\t\treturn point;\n\t},\n\n\treorient: function() {\n\t\tthis.setClockwise(true);\n\t\treturn this;\n\t}\n});\n\nCompoundPath.inject({\n\t_getMonoCurves: function() {\n\t\tvar children = this._children,\n\t\t\tmonoCurves = [];\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tmonoCurves.push.apply(monoCurves, children[i]._getMonoCurves());\n\t\treturn monoCurves;\n\t},\n\n\treorient: function() {\n\t\tvar children = this.removeChildren().sort(function(a, b) {\n\t\t\treturn b.getBounds().getArea() - a.getBounds().getArea();\n\t\t});\n\t\tif (children.length > 0) {\n\t\t\tthis.addChildren(children);\n\t\t\tvar clockwise = children[0].isClockwise();\n\t\t\tfor (var i = 1, l = children.length; i < l; i++) {\n\t\t\t\tvar point = children[i].getInteriorPoint(),\n\t\t\t\t\tcounters = 0;\n\t\t\t\tfor (var j = i - 1; j >= 0; j--) {\n\t\t\t\t\tif (children[j].contains(point))\n\t\t\t\t\t\tcounters++;\n\t\t\t\t}\n\t\t\t\tchildren[i].setClockwise(counters % 2 === 0 && clockwise);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n});\n\nvar PathIterator = Base.extend({\n\t_class: 'PathIterator',\n\n\tinitialize: function(path, maxRecursion, tolerance, matrix) {\n\t\tvar curves = [],\n\t\t\tparts = [],\n\t\t\tlength = 0,\n\t\t\tminDifference = 1 / (maxRecursion || 32),\n\t\t\tsegments = path._segments,\n\t\t\tsegment1 = segments[0],\n\t\t\tsegment2;\n\n\t\tfunction addCurve(segment1, segment2) {\n\t\t\tvar curve = Curve.getValues(segment1, segment2, matrix);\n\t\t\tcurves.push(curve);\n\t\t\tcomputeParts(curve, segment1._index, 0, 1);\n\t\t}\n\n\t\tfunction computeParts(curve, index, minT, maxT) {\n\t\t\tif ((maxT - minT) > minDifference\n\t\t\t\t\t&& !Curve.isFlatEnough(curve, tolerance || 0.25)) {\n\t\t\t\tvar split = Curve.subdivide(curve, 0.5),\n\t\t\t\t\thalfT = (minT + maxT) / 2;\n\t\t\t\tcomputeParts(split[0], index, minT, halfT);\n\t\t\t\tcomputeParts(split[1], index, halfT, maxT);\n\t\t\t} else {\n\t\t\t\tvar x = curve[6] - curve[0],\n\t\t\t\t\ty = curve[7] - curve[1],\n\t\t\t\t\tdist = Math.sqrt(x * x + y * y);\n\t\t\t\tif (dist > 1e-6) {\n\t\t\t\t\tlength += dist;\n\t\t\t\t\tparts.push({\n\t\t\t\t\t\toffset: length,\n\t\t\t\t\t\tvalue: maxT,\n\t\t\t\t\t\tindex: index\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 1, l = segments.length; i < l; i++) {\n\t\t\tsegment2 = segments[i];\n\t\t\taddCurve(segment1, segment2);\n\t\t\tsegment1 = segment2;\n\t\t}\n\t\tif (path._closed)\n\t\t\taddCurve(segment2, segments[0]);\n\n\t\tthis.curves = curves;\n\t\tthis.parts = parts;\n\t\tthis.length = length;\n\t\tthis.index = 0;\n\t},\n\n\tgetParameterAt: function(offset) {\n\t\tvar i, j = this.index;\n\t\tfor (;;) {\n\t\t\ti = j;\n\t\t\tif (j == 0 || this.parts[--j].offset < offset)\n\t\t\t\tbreak;\n\t\t}\n\t\tfor (var l = this.parts.length; i < l; i++) {\n\t\t\tvar part = this.parts[i];\n\t\t\tif (part.offset >= offset) {\n\t\t\t\tthis.index = i;\n\t\t\t\tvar prev = this.parts[i - 1];\n\t\t\t\tvar prevVal = prev && prev.index == part.index ? prev.value : 0,\n\t\t\t\t\tprevLen = prev ? prev.offset : 0;\n\t\t\t\treturn {\n\t\t\t\t\tvalue: prevVal + (part.value - prevVal)\n\t\t\t\t\t\t* (offset - prevLen) / (part.offset - prevLen),\n\t\t\t\t\tindex: part.index\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\tvar part = this.parts[this.parts.length - 1];\n\t\treturn {\n\t\t\tvalue: 1,\n\t\t\tindex: part.index\n\t\t};\n\t},\n\n\tdrawPart: function(ctx, from, to) {\n\t\tfrom = this.getParameterAt(from);\n\t\tto = this.getParameterAt(to);\n\t\tfor (var i = from.index; i <= to.index; i++) {\n\t\t\tvar curve = Curve.getPart(this.curves[i],\n\t\t\t\t\ti == from.index ? from.value : 0,\n\t\t\t\t\ti == to.index ? to.value : 1);\n\t\t\tif (i == from.index)\n\t\t\t\tctx.moveTo(curve[0], curve[1]);\n\t\t\tctx.bezierCurveTo.apply(ctx, curve.slice(2));\n\t\t}\n\t}\n}, Base.each(Curve.evaluateMethods,\n\tfunction(name) {\n\t\tthis[name + 'At'] = function(offset, weighted) {\n\t\t\tvar param = this.getParameterAt(offset);\n\t\t\treturn Curve[name](this.curves[param.index], param.value, weighted);\n\t\t};\n\t}, {})\n);\n\nvar PathFitter = Base.extend({\n\tinitialize: function(path, error) {\n\t\tvar points = this.points = [],\n\t\t\tsegments = path._segments,\n\t\t\tprev;\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar point = segments[i].point.clone();\n\t\t\tif (!prev || !prev.equals(point)) {\n\t\t\t\tpoints.push(point);\n\t\t\t\tprev = point;\n\t\t\t}\n\t\t}\n\n\t\tif (path._closed) {\n\t\t\tthis.closed = true;\n\t\t\tpoints.unshift(points[points.length - 1]);\n\t\t\tpoints.push(points[1]);\n\t\t}\n\n\t\tthis.error = error;\n\t},\n\n\tfit: function() {\n\t\tvar points = this.points,\n\t\t\tlength = points.length,\n\t\t\tsegments = this.segments = length > 0\n\t\t\t\t\t? [new Segment(points[0])] : [];\n\t\tif (length > 1)\n\t\t\tthis.fitCubic(0, length - 1,\n\t\t\t\tpoints[1].subtract(points[0]).normalize(),\n\t\t\t\tpoints[length - 2].subtract(points[length - 1]).normalize());\n\n\t\tif (this.closed) {\n\t\t\tsegments.shift();\n\t\t\tsegments.pop();\n\t\t}\n\n\t\treturn segments;\n\t},\n\n\tfitCubic: function(first, last, tan1, tan2) {\n\t\tif (last - first == 1) {\n\t\t\tvar pt1 = this.points[first],\n\t\t\t\tpt2 = this.points[last],\n\t\t\t\tdist = pt1.getDistance(pt2) / 3;\n\t\t\tthis.addCurve([pt1, pt1.add(tan1.normalize(dist)),\n\t\t\t\t\tpt2.add(tan2.normalize(dist)), pt2]);\n\t\t\treturn;\n\t\t}\n\t\tvar uPrime = this.chordLengthParameterize(first, last),\n\t\t\tmaxError = Math.max(this.error, this.error * this.error),\n\t\t\tsplit,\n\t\t\tparametersInOrder = true;\n\t\tfor (var i = 0; i <= 4; i++) {\n\t\t\tvar curve = this.generateBezier(first, last, uPrime, tan1, tan2);\n\t\t\tvar max = this.findMaxError(first, last, curve, uPrime);\n\t\t\tif (max.error < this.error && parametersInOrder) {\n\t\t\t\tthis.addCurve(curve);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsplit = max.index;\n\t\t\tif (max.error >= maxError)\n\t\t\t\tbreak;\n\t\t\tparametersInOrder = this.reparameterize(first, last, uPrime, curve);\n\t\t\tmaxError = max.error;\n\t\t}\n\t\tvar V1 = this.points[split - 1].subtract(this.points[split]),\n\t\t\tV2 = this.points[split].subtract(this.points[split + 1]),\n\t\t\ttanCenter = V1.add(V2).divide(2).normalize();\n\t\tthis.fitCubic(first, split, tan1, tanCenter);\n\t\tthis.fitCubic(split, last, tanCenter.negate(), tan2);\n\t},\n\n\taddCurve: function(curve) {\n\t\tvar prev = this.segments[this.segments.length - 1];\n\t\tprev.setHandleOut(curve[1].subtract(curve[0]));\n\t\tthis.segments.push(\n\t\t\t\tnew Segment(curve[3], curve[2].subtract(curve[3])));\n\t},\n\n\tgenerateBezier: function(first, last, uPrime, tan1, tan2) {\n\t\tvar epsilon = 1e-12,\n\t\t\tpt1 = this.points[first],\n\t\t\tpt2 = this.points[last],\n\t\t\tC = [[0, 0], [0, 0]],\n\t\t\tX = [0, 0];\n\n\t\tfor (var i = 0, l = last - first + 1; i < l; i++) {\n\t\t\tvar u = uPrime[i],\n\t\t\t\tt = 1 - u,\n\t\t\t\tb = 3 * u * t,\n\t\t\t\tb0 = t * t * t,\n\t\t\t\tb1 = b * t,\n\t\t\t\tb2 = b * u,\n\t\t\t\tb3 = u * u * u,\n\t\t\t\ta1 = tan1.normalize(b1),\n\t\t\t\ta2 = tan2.normalize(b2),\n\t\t\t\ttmp = this.points[first + i]\n\t\t\t\t\t.subtract(pt1.multiply(b0 + b1))\n\t\t\t\t\t.subtract(pt2.multiply(b2 + b3));\n\t\t\tC[0][0] += a1.dot(a1);\n\t\t\tC[0][1] += a1.dot(a2);\n\t\t\tC[1][0] = C[0][1];\n\t\t\tC[1][1] += a2.dot(a2);\n\t\t\tX[0] += a1.dot(tmp);\n\t\t\tX[1] += a2.dot(tmp);\n\t\t}\n\n\t\tvar detC0C1 = C[0][0] * C[1][1] - C[1][0] * C[0][1],\n\t\t\talpha1, alpha2;\n\t\tif (Math.abs(detC0C1) > epsilon) {\n\t\t\tvar detC0X\t= C[0][0] * X[1]\t- C[1][0] * X[0],\n\t\t\t\tdetXC1\t= X[0]\t  * C[1][1] - X[1]\t  * C[0][1];\n\t\t\talpha1 = detXC1 / detC0C1;\n\t\t\talpha2 = detC0X / detC0C1;\n\t\t} else {\n\t\t\tvar c0 = C[0][0] + C[0][1],\n\t\t\t\tc1 = C[1][0] + C[1][1];\n\t\t\tif (Math.abs(c0) > epsilon) {\n\t\t\t\talpha1 = alpha2 = X[0] / c0;\n\t\t\t} else if (Math.abs(c1) > epsilon) {\n\t\t\t\talpha1 = alpha2 = X[1] / c1;\n\t\t\t} else {\n\t\t\t\talpha1 = alpha2 = 0;\n\t\t\t}\n\t\t}\n\n\t\tvar segLength = pt2.getDistance(pt1),\n\t\t\teps = epsilon * segLength,\n\t\t\thandle1,\n\t\t\thandle2;\n\t\tif (alpha1 < eps || alpha2 < eps) {\n\t\t\talpha1 = alpha2 = segLength / 3;\n\t\t} else {\n\t\t\tvar line = pt2.subtract(pt1);\n\t\t\thandle1 = tan1.normalize(alpha1);\n\t\t\thandle2 = tan2.normalize(alpha2);\n\t\t\tif (handle1.dot(line) - handle2.dot(line) > segLength * segLength) {\n\t\t\t\talpha1 = alpha2 = segLength / 3;\n\t\t\t\thandle1 = handle2 = null;\n\t\t\t}\n\t\t}\n\n\t\treturn [pt1, pt1.add(handle1 || tan1.normalize(alpha1)),\n\t\t\t\tpt2.add(handle2 || tan2.normalize(alpha2)), pt2];\n\t},\n\n\treparameterize: function(first, last, u, curve) {\n\t\tfor (var i = first; i <= last; i++) {\n\t\t\tu[i - first] = this.findRoot(curve, this.points[i], u[i - first]);\n\t\t}\n\t\tfor (var i = 1, l = u.length; i < l; i++) {\n\t\t\tif (u[i] <= u[i - 1])\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\tfindRoot: function(curve, point, u) {\n\t\tvar curve1 = [],\n\t\t\tcurve2 = [];\n\t\tfor (var i = 0; i <= 2; i++) {\n\t\t\tcurve1[i] = curve[i + 1].subtract(curve[i]).multiply(3);\n\t\t}\n\t\tfor (var i = 0; i <= 1; i++) {\n\t\t\tcurve2[i] = curve1[i + 1].subtract(curve1[i]).multiply(2);\n\t\t}\n\t\tvar pt = this.evaluate(3, curve, u),\n\t\t\tpt1 = this.evaluate(2, curve1, u),\n\t\t\tpt2 = this.evaluate(1, curve2, u),\n\t\t\tdiff = pt.subtract(point),\n\t\t\tdf = pt1.dot(pt1) + diff.dot(pt2);\n\t\tif (Math.abs(df) < 1e-6)\n\t\t\treturn u;\n\t\treturn u - diff.dot(pt1) / df;\n\t},\n\n\tevaluate: function(degree, curve, t) {\n\t\tvar tmp = curve.slice();\n\t\tfor (var i = 1; i <= degree; i++) {\n\t\t\tfor (var j = 0; j <= degree - i; j++) {\n\t\t\t\ttmp[j] = tmp[j].multiply(1 - t).add(tmp[j + 1].multiply(t));\n\t\t\t}\n\t\t}\n\t\treturn tmp[0];\n\t},\n\n\tchordLengthParameterize: function(first, last) {\n\t\tvar u = [0];\n\t\tfor (var i = first + 1; i <= last; i++) {\n\t\t\tu[i - first] = u[i - first - 1]\n\t\t\t\t\t+ this.points[i].getDistance(this.points[i - 1]);\n\t\t}\n\t\tfor (var i = 1, m = last - first; i <= m; i++) {\n\t\t\tu[i] /= u[m];\n\t\t}\n\t\treturn u;\n\t},\n\n\tfindMaxError: function(first, last, curve, u) {\n\t\tvar index = Math.floor((last - first + 1) / 2),\n\t\t\tmaxDist = 0;\n\t\tfor (var i = first + 1; i < last; i++) {\n\t\t\tvar P = this.evaluate(3, curve, u[i - first]);\n\t\t\tvar v = P.subtract(this.points[i]);\n\t\t\tvar dist = v.x * v.x + v.y * v.y;\n\t\t\tif (dist >= maxDist) {\n\t\t\t\tmaxDist = dist;\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\terror: maxDist,\n\t\t\tindex: index\n\t\t};\n\t}\n});\n\nvar TextItem = Item.extend({\n\t_class: 'TextItem',\n\t_boundsSelected: true,\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_serializeFields: {\n\t\tcontent: null\n\t},\n\t_boundsGetter: 'getBounds',\n\n\tinitialize: function TextItem(arg) {\n\t\tthis._content = '';\n\t\tthis._lines = [];\n\t\tvar hasProps = arg && Base.isPlainObject(arg)\n\t\t\t\t&& arg.x === undefined && arg.y === undefined;\n\t\tthis._initialize(hasProps && arg, !hasProps && Point.read(arguments));\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._content === item._content;\n\t},\n\n\t_clone: function _clone(copy, insert, includeMatrix) {\n\t\tcopy.setContent(this._content);\n\t\treturn _clone.base.call(this, copy, insert, includeMatrix);\n\t},\n\n\tgetContent: function() {\n\t\treturn this._content;\n\t},\n\n\tsetContent: function(content) {\n\t\tthis._content = '' + content;\n\t\tthis._lines = this._content.split(/\\r\\n|\\n|\\r/mg);\n\t\tthis._changed(265);\n\t},\n\n\tisEmpty: function() {\n\t\treturn !this._content;\n\t},\n\n\tgetCharacterStyle: '#getStyle',\n\tsetCharacterStyle: '#setStyle',\n\n\tgetParagraphStyle: '#getStyle',\n\tsetParagraphStyle: '#setStyle'\n});\n\nvar PointText = TextItem.extend({\n\t_class: 'PointText',\n\n\tinitialize: function PointText() {\n\t\tTextItem.apply(this, arguments);\n\t},\n\n\tclone: function(insert) {\n\t\treturn this._clone(new PointText(Item.NO_INSERT), insert);\n\t},\n\n\tgetPoint: function() {\n\t\tvar point = this._matrix.getTranslation();\n\t\treturn new LinkedPoint(point.x, point.y, this, 'setPoint');\n\t},\n\n\tsetPoint: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.translate(point.subtract(this._matrix.getTranslation()));\n\t},\n\n\t_draw: function(ctx) {\n\t\tif (!this._content)\n\t\t\treturn;\n\t\tthis._setStyles(ctx);\n\t\tvar style = this._style,\n\t\t\tlines = this._lines,\n\t\t\tleading = style.getLeading(),\n\t\t\tshadowColor = ctx.shadowColor;\n\t\tctx.font = style.getFontStyle();\n\t\tctx.textAlign = style.getJustification();\n\t\tfor (var i = 0, l = lines.length; i < l; i++) {\n\t\t\tctx.shadowColor = shadowColor;\n\t\t\tvar line = lines[i];\n\t\t\tif (style.hasFill()) {\n\t\t\t\tctx.fillText(line, 0, 0);\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (style.hasStroke())\n\t\t\t\tctx.strokeText(line, 0, 0);\n\t\t\tctx.translate(0, leading);\n\t\t}\n\t},\n\n\t_getBounds: function(getter, matrix) {\n\t\tvar style = this._style,\n\t\t\tlines = this._lines,\n\t\t\tnumLines = lines.length,\n\t\t\tjustification = style.getJustification(),\n\t\t\tleading = style.getLeading(),\n\t\t\twidth = this.getView().getTextWidth(style.getFontStyle(), lines),\n\t\t\tx = 0;\n\t\tif (justification !== 'left')\n\t\t\tx -= width / (justification === 'center' ? 2: 1);\n\t\tvar bounds = new Rectangle(x,\n\t\t\t\t\tnumLines ? - 0.75 * leading : 0,\n\t\t\t\t\twidth, numLines * leading);\n\t\treturn matrix ? matrix._transformBounds(bounds, bounds) : bounds;\n\t}\n});\n\nvar Color = Base.extend(new function() {\n\tvar types = {\n\t\tgray: ['gray'],\n\t\trgb: ['red', 'green', 'blue'],\n\t\thsb: ['hue', 'saturation', 'brightness'],\n\t\thsl: ['hue', 'saturation', 'lightness'],\n\t\tgradient: ['gradient', 'origin', 'destination', 'highlight']\n\t};\n\n\tvar componentParsers = {},\n\t\tcolorCache = {},\n\t\tcolorCtx;\n\n\tfunction fromCSS(string) {\n\t\tvar match = string.match(/^#(\\w{1,2})(\\w{1,2})(\\w{1,2})$/),\n\t\t\tcomponents;\n\t\tif (match) {\n\t\t\tcomponents = [0, 0, 0];\n\t\t\tfor (var i = 0; i < 3; i++) {\n\t\t\t\tvar value = match[i + 1];\n\t\t\t\tcomponents[i] = parseInt(value.length == 1\n\t\t\t\t\t\t? value + value : value, 16) / 255;\n\t\t\t}\n\t\t} else if (match = string.match(/^rgba?\\((.*)\\)$/)) {\n\t\t\tcomponents = match[1].split(',');\n\t\t\tfor (var i = 0, l = components.length; i < l; i++) {\n\t\t\t\tvar value = +components[i];\n\t\t\t\tcomponents[i] = i < 3 ? value / 255 : value;\n\t\t\t}\n\t\t} else {\n\t\t\tvar cached = colorCache[string];\n\t\t\tif (!cached) {\n\t\t\t\tif (!colorCtx) {\n\t\t\t\t\tcolorCtx = CanvasProvider.getContext(1, 1);\n\t\t\t\t\tcolorCtx.globalCompositeOperation = 'copy';\n\t\t\t\t}\n\t\t\t\tcolorCtx.fillStyle = 'rgba(0,0,0,0)';\n\t\t\t\tcolorCtx.fillStyle = string;\n\t\t\t\tcolorCtx.fillRect(0, 0, 1, 1);\n\t\t\t\tvar data = colorCtx.getImageData(0, 0, 1, 1).data;\n\t\t\t\tcached = colorCache[string] = [\n\t\t\t\t\tdata[0] / 255,\n\t\t\t\t\tdata[1] / 255,\n\t\t\t\t\tdata[2] / 255\n\t\t\t\t];\n\t\t\t}\n\t\t\tcomponents = cached.slice();\n\t\t}\n\t\treturn components;\n\t}\n\n\tvar hsbIndices = [\n\t\t[0, 3, 1],\n\t\t[2, 0, 1],\n\t\t[1, 0, 3],\n\t\t[1, 2, 0],\n\t\t[3, 1, 0],\n\t\t[0, 1, 2]\n\t];\n\n\tvar converters = {\n\t\t'rgb-hsb': function(r, g, b) {\n\t\t\tvar max = Math.max(r, g, b),\n\t\t\t\tmin = Math.min(r, g, b),\n\t\t\t\tdelta = max - min,\n\t\t\t\th = delta === 0 ? 0\n\t\t\t\t\t:\t( max == r ? (g - b) / delta + (g < b ? 6 : 0)\n\t\t\t\t\t\t: max == g ? (b - r) / delta + 2\n\t\t\t\t\t\t:\t\t\t (r - g) / delta + 4) * 60;\n\t\t\treturn [h, max === 0 ? 0 : delta / max, max];\n\t\t},\n\n\t\t'hsb-rgb': function(h, s, b) {\n\t\t\th = (((h / 60) % 6) + 6) % 6;\n\t\t\tvar i = Math.floor(h),\n\t\t\t\tf = h - i,\n\t\t\t\ti = hsbIndices[i],\n\t\t\t\tv = [\n\t\t\t\t\tb,\n\t\t\t\t\tb * (1 - s),\n\t\t\t\t\tb * (1 - s * f),\n\t\t\t\t\tb * (1 - s * (1 - f))\n\t\t\t\t];\n\t\t\treturn [v[i[0]], v[i[1]], v[i[2]]];\n\t\t},\n\n\t\t'rgb-hsl': function(r, g, b) {\n\t\t\tvar max = Math.max(r, g, b),\n\t\t\t\tmin = Math.min(r, g, b),\n\t\t\t\tdelta = max - min,\n\t\t\t\tachromatic = delta === 0,\n\t\t\t\th = achromatic ? 0\n\t\t\t\t\t:\t( max == r ? (g - b) / delta + (g < b ? 6 : 0)\n\t\t\t\t\t\t: max == g ? (b - r) / delta + 2\n\t\t\t\t\t\t:\t\t\t (r - g) / delta + 4) * 60,\n\t\t\t\tl = (max + min) / 2,\n\t\t\t\ts = achromatic ? 0 : l < 0.5\n\t\t\t\t\t\t? delta / (max + min)\n\t\t\t\t\t\t: delta / (2 - max - min);\n\t\t\treturn [h, s, l];\n\t\t},\n\n\t\t'hsl-rgb': function(h, s, l) {\n\t\t\th = (((h / 360) % 1) + 1) % 1;\n\t\t\tif (s === 0)\n\t\t\t\treturn [l, l, l];\n\t\t\tvar t3s = [ h + 1 / 3, h, h - 1 / 3 ],\n\t\t\t\tt2 = l < 0.5 ? l * (1 + s) : l + s - l * s,\n\t\t\t\tt1 = 2 * l - t2,\n\t\t\t\tc = [];\n\t\t\tfor (var i = 0; i < 3; i++) {\n\t\t\t\tvar t3 = t3s[i];\n\t\t\t\tif (t3 < 0) t3 += 1;\n\t\t\t\tif (t3 > 1) t3 -= 1;\n\t\t\t\tc[i] = 6 * t3 < 1\n\t\t\t\t\t? t1 + (t2 - t1) * 6 * t3\n\t\t\t\t\t: 2 * t3 < 1\n\t\t\t\t\t\t? t2\n\t\t\t\t\t\t: 3 * t3 < 2\n\t\t\t\t\t\t\t? t1 + (t2 - t1) * ((2 / 3) - t3) * 6\n\t\t\t\t\t\t\t: t1;\n\t\t\t}\n\t\t\treturn c;\n\t\t},\n\n\t\t'rgb-gray': function(r, g, b) {\n\t\t\treturn [r * 0.2989 + g * 0.587 + b * 0.114];\n\t\t},\n\n\t\t'gray-rgb': function(g) {\n\t\t\treturn [g, g, g];\n\t\t},\n\n\t\t'gray-hsb': function(g) {\n\t\t\treturn [0, 0, g];\n\t\t},\n\n\t\t'gray-hsl': function(g) {\n\t\t\treturn [0, 0, g];\n\t\t},\n\n\t\t'gradient-rgb': function() {\n\t\t\treturn [];\n\t\t},\n\n\t\t'rgb-gradient': function() {\n\t\t\treturn [];\n\t\t}\n\n\t};\n\n\treturn Base.each(types, function(properties, type) {\n\t\tcomponentParsers[type] = [];\n\t\tBase.each(properties, function(name, index) {\n\t\t\tvar part = Base.capitalize(name),\n\t\t\t\thasOverlap = /^(hue|saturation)$/.test(name),\n\t\t\t\tparser = componentParsers[type][index] = name === 'gradient'\n\t\t\t\t\t? function(value) {\n\t\t\t\t\t\tvar current = this._components[0];\n\t\t\t\t\t\tvalue = Gradient.read(Array.isArray(value) ? value\n\t\t\t\t\t\t\t\t: arguments, 0, { readNull: true });\n\t\t\t\t\t\tif (current !== value) {\n\t\t\t\t\t\t\tif (current)\n\t\t\t\t\t\t\t\tcurrent._removeOwner(this);\n\t\t\t\t\t\t\tif (value)\n\t\t\t\t\t\t\t\tvalue._addOwner(this);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\t\t\t\t\t: type === 'gradient'\n\t\t\t\t\t\t? function() {\n\t\t\t\t\t\t\treturn Point.read(arguments, 0, {\n\t\t\t\t\t\t\t\t\treadNull: name === 'highlight',\n\t\t\t\t\t\t\t\t\tclone: true\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\t: function(value) {\n\t\t\t\t\t\t\treturn value == null || isNaN(value) ? 0 : value;\n\t\t\t\t\t\t};\n\n\t\t\tthis['get' + part] = function() {\n\t\t\t\treturn this._type === type\n\t\t\t\t\t|| hasOverlap && /^hs[bl]$/.test(this._type)\n\t\t\t\t\t\t? this._components[index]\n\t\t\t\t\t\t: this._convert(type)[index];\n\t\t\t};\n\n\t\t\tthis['set' + part] = function(value) {\n\t\t\t\tif (this._type !== type\n\t\t\t\t\t\t&& !(hasOverlap && /^hs[bl]$/.test(this._type))) {\n\t\t\t\t\tthis._components = this._convert(type);\n\t\t\t\t\tthis._properties = types[type];\n\t\t\t\t\tthis._type = type;\n\t\t\t\t}\n\t\t\t\tthis._components[index] = parser.call(this, value);\n\t\t\t\tthis._changed();\n\t\t\t};\n\t\t}, this);\n\t}, {\n\t\t_class: 'Color',\n\t\t_readIndex: true,\n\n\t\tinitialize: function Color(arg) {\n\t\t\tvar slice = Array.prototype.slice,\n\t\t\t\targs = arguments,\n\t\t\t\tread = 0,\n\t\t\t\ttype,\n\t\t\t\tcomponents,\n\t\t\t\talpha,\n\t\t\t\tvalues;\n\t\t\tif (Array.isArray(arg)) {\n\t\t\t\targs = arg;\n\t\t\t\targ = args[0];\n\t\t\t}\n\t\t\tvar argType = arg != null && typeof arg;\n\t\t\tif (argType === 'string' && arg in types) {\n\t\t\t\ttype = arg;\n\t\t\t\targ = args[1];\n\t\t\t\tif (Array.isArray(arg)) {\n\t\t\t\t\tcomponents = arg;\n\t\t\t\t\talpha = args[2];\n\t\t\t\t} else {\n\t\t\t\t\tif (this.__read)\n\t\t\t\t\t\tread = 1;\n\t\t\t\t\targs = slice.call(args, 1);\n\t\t\t\t\targType = typeof arg;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!components) {\n\t\t\t\tvalues = argType === 'number'\n\t\t\t\t\t\t? args\n\t\t\t\t\t\t: argType === 'object' && arg.length != null\n\t\t\t\t\t\t\t? arg\n\t\t\t\t\t\t\t: null;\n\t\t\t\tif (values) {\n\t\t\t\t\tif (!type)\n\t\t\t\t\t\ttype = values.length >= 3\n\t\t\t\t\t\t\t\t? 'rgb'\n\t\t\t\t\t\t\t\t: 'gray';\n\t\t\t\t\tvar length = types[type].length;\n\t\t\t\t\talpha = values[length];\n\t\t\t\t\tif (this.__read)\n\t\t\t\t\t\tread += values === arguments\n\t\t\t\t\t\t\t? length + (alpha != null ? 1 : 0)\n\t\t\t\t\t\t\t: 1;\n\t\t\t\t\tif (values.length > length)\n\t\t\t\t\t\tvalues = slice.call(values, 0, length);\n\t\t\t\t} else if (argType === 'string') {\n\t\t\t\t\ttype = 'rgb';\n\t\t\t\t\tcomponents = fromCSS(arg);\n\t\t\t\t\tif (components.length === 4) {\n\t\t\t\t\t\talpha = components[3];\n\t\t\t\t\t\tcomponents.length--;\n\t\t\t\t\t}\n\t\t\t\t} else if (argType === 'object') {\n\t\t\t\t\tif (arg.constructor === Color) {\n\t\t\t\t\t\ttype = arg._type;\n\t\t\t\t\t\tcomponents = arg._components.slice();\n\t\t\t\t\t\talpha = arg._alpha;\n\t\t\t\t\t\tif (type === 'gradient') {\n\t\t\t\t\t\t\tfor (var i = 1, l = components.length; i < l; i++) {\n\t\t\t\t\t\t\t\tvar point = components[i];\n\t\t\t\t\t\t\t\tif (point)\n\t\t\t\t\t\t\t\t\tcomponents[i] = point.clone();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (arg.constructor === Gradient) {\n\t\t\t\t\t\ttype = 'gradient';\n\t\t\t\t\t\tvalues = args;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttype = 'hue' in arg\n\t\t\t\t\t\t\t? 'lightness' in arg\n\t\t\t\t\t\t\t\t? 'hsl'\n\t\t\t\t\t\t\t\t: 'hsb'\n\t\t\t\t\t\t\t: 'gradient' in arg || 'stops' in arg\n\t\t\t\t\t\t\t\t\t|| 'radial' in arg\n\t\t\t\t\t\t\t\t? 'gradient'\n\t\t\t\t\t\t\t\t: 'gray' in arg\n\t\t\t\t\t\t\t\t\t? 'gray'\n\t\t\t\t\t\t\t\t\t: 'rgb';\n\t\t\t\t\t\tvar properties = types[type],\n\t\t\t\t\t\t\tparsers = componentParsers[type];\n\t\t\t\t\t\tthis._components = components = [];\n\t\t\t\t\t\tfor (var i = 0, l = properties.length; i < l; i++) {\n\t\t\t\t\t\t\tvar value = arg[properties[i]];\n\t\t\t\t\t\t\tif (value == null && i === 0 && type === 'gradient'\n\t\t\t\t\t\t\t\t\t&& 'stops' in arg) {\n\t\t\t\t\t\t\t\tvalue = {\n\t\t\t\t\t\t\t\t\tstops: arg.stops,\n\t\t\t\t\t\t\t\t\tradial: arg.radial\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvalue = parsers[i].call(this, value);\n\t\t\t\t\t\t\tif (value != null)\n\t\t\t\t\t\t\t\tcomponents[i] = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\talpha = arg.alpha;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.__read && type)\n\t\t\t\t\tread = 1;\n\t\t\t}\n\t\t\tthis._type = type || 'rgb';\n\t\t\tthis._id = UID.get(Color);\n\t\t\tif (!components) {\n\t\t\t\tthis._components = components = [];\n\t\t\t\tvar parsers = componentParsers[this._type];\n\t\t\t\tfor (var i = 0, l = parsers.length; i < l; i++) {\n\t\t\t\t\tvar value = parsers[i].call(this, values && values[i]);\n\t\t\t\t\tif (value != null)\n\t\t\t\t\t\tcomponents[i] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._components = components;\n\t\t\tthis._properties = types[this._type];\n\t\t\tthis._alpha = alpha;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = read;\n\t\t},\n\n\t\t_serialize: function(options, dictionary) {\n\t\t\tvar components = this.getComponents();\n\t\t\treturn Base.serialize(\n\t\t\t\t\t/^(gray|rgb)$/.test(this._type)\n\t\t\t\t\t\t? components\n\t\t\t\t\t\t: [this._type].concat(components),\n\t\t\t\t\toptions, true, dictionary);\n\t\t},\n\n\t\t_changed: function() {\n\t\t\tthis._canvasStyle = null;\n\t\t\tif (this._owner)\n\t\t\t\tthis._owner._changed(65);\n\t\t},\n\n\t\t_convert: function(type) {\n\t\t\tvar converter;\n\t\t\treturn this._type === type\n\t\t\t\t\t? this._components.slice()\n\t\t\t\t\t: (converter = converters[this._type + '-' + type])\n\t\t\t\t\t\t? converter.apply(this, this._components)\n\t\t\t\t\t\t: converters['rgb-' + type].apply(this,\n\t\t\t\t\t\t\tconverters[this._type + '-rgb'].apply(this,\n\t\t\t\t\t\t\t\tthis._components));\n\t\t},\n\n\t\tconvert: function(type) {\n\t\t\treturn new Color(type, this._convert(type), this._alpha);\n\t\t},\n\n\t\tgetType: function() {\n\t\t\treturn this._type;\n\t\t},\n\n\t\tsetType: function(type) {\n\t\t\tthis._components = this._convert(type);\n\t\t\tthis._properties = types[type];\n\t\t\tthis._type = type;\n\t\t},\n\n\t\tgetComponents: function() {\n\t\t\tvar components = this._components.slice();\n\t\t\tif (this._alpha != null)\n\t\t\t\tcomponents.push(this._alpha);\n\t\t\treturn components;\n\t\t},\n\n\t\tgetAlpha: function() {\n\t\t\treturn this._alpha != null ? this._alpha : 1;\n\t\t},\n\n\t\tsetAlpha: function(alpha) {\n\t\t\tthis._alpha = alpha == null ? null : Math.min(Math.max(alpha, 0), 1);\n\t\t\tthis._changed();\n\t\t},\n\n\t\thasAlpha: function() {\n\t\t\treturn this._alpha != null;\n\t\t},\n\n\t\tequals: function(color) {\n\t\t\tvar col = Base.isPlainValue(color, true)\n\t\t\t\t\t? Color.read(arguments)\n\t\t\t\t\t: color;\n\t\t\treturn col === this || col && this._class === col._class\n\t\t\t\t\t&& this._type === col._type\n\t\t\t\t\t&& this._alpha === col._alpha\n\t\t\t\t\t&& Base.equals(this._components, col._components)\n\t\t\t\t\t|| false;\n\t\t},\n\n\t\ttoString: function() {\n\t\t\tvar properties = this._properties,\n\t\t\t\tparts = [],\n\t\t\t\tisGradient = this._type === 'gradient',\n\t\t\t\tf = Formatter.instance;\n\t\t\tfor (var i = 0, l = properties.length; i < l; i++) {\n\t\t\t\tvar value = this._components[i];\n\t\t\t\tif (value != null)\n\t\t\t\t\tparts.push(properties[i] + ': '\n\t\t\t\t\t\t\t+ (isGradient ? value : f.number(value)));\n\t\t\t}\n\t\t\tif (this._alpha != null)\n\t\t\t\tparts.push('alpha: ' + f.number(this._alpha));\n\t\t\treturn '{ ' + parts.join(', ') + ' }';\n\t\t},\n\n\t\ttoCSS: function(hex) {\n\t\t\tvar components = this._convert('rgb'),\n\t\t\t\talpha = hex || this._alpha == null ? 1 : this._alpha;\n\t\t\tfunction convert(val) {\n\t\t\t\treturn Math.round((val < 0 ? 0 : val > 1 ? 1 : val) * 255);\n\t\t\t}\n\t\t\tcomponents = [\n\t\t\t\tconvert(components[0]),\n\t\t\t\tconvert(components[1]),\n\t\t\t\tconvert(components[2])\n\t\t\t];\n\t\t\tif (alpha < 1)\n\t\t\t\tcomponents.push(alpha < 0 ? 0 : alpha);\n\t\t\treturn hex\n\t\t\t\t\t? '#' + ((1 << 24) + (components[0] << 16)\n\t\t\t\t\t\t+ (components[1] << 8)\n\t\t\t\t\t\t+ components[2]).toString(16).slice(1)\n\t\t\t\t\t: (components.length == 4 ? 'rgba(' : 'rgb(')\n\t\t\t\t\t\t+ components.join(',') + ')';\n\t\t},\n\n\t\ttoCanvasStyle: function(ctx) {\n\t\t\tif (this._canvasStyle)\n\t\t\t\treturn this._canvasStyle;\n\t\t\tif (this._type !== 'gradient')\n\t\t\t\treturn this._canvasStyle = this.toCSS();\n\t\t\tvar components = this._components,\n\t\t\t\tgradient = components[0],\n\t\t\t\tstops = gradient._stops,\n\t\t\t\torigin = components[1],\n\t\t\t\tdestination = components[2],\n\t\t\t\tcanvasGradient;\n\t\t\tif (gradient._radial) {\n\t\t\t\tvar radius = destination.getDistance(origin),\n\t\t\t\t\thighlight = components[3];\n\t\t\t\tif (highlight) {\n\t\t\t\t\tvar vector = highlight.subtract(origin);\n\t\t\t\t\tif (vector.getLength() > radius)\n\t\t\t\t\t\thighlight = origin.add(vector.normalize(radius - 0.1));\n\t\t\t\t}\n\t\t\t\tvar start = highlight || origin;\n\t\t\t\tcanvasGradient = ctx.createRadialGradient(start.x, start.y,\n\t\t\t\t\t\t0, origin.x, origin.y, radius);\n\t\t\t} else {\n\t\t\t\tcanvasGradient = ctx.createLinearGradient(origin.x, origin.y,\n\t\t\t\t\t\tdestination.x, destination.y);\n\t\t\t}\n\t\t\tfor (var i = 0, l = stops.length; i < l; i++) {\n\t\t\t\tvar stop = stops[i];\n\t\t\t\tcanvasGradient.addColorStop(stop._rampPoint,\n\t\t\t\t\t\tstop._color.toCanvasStyle());\n\t\t\t}\n\t\t\treturn this._canvasStyle = canvasGradient;\n\t\t},\n\n\t\ttransform: function(matrix) {\n\t\t\tif (this._type === 'gradient') {\n\t\t\t\tvar components = this._components;\n\t\t\t\tfor (var i = 1, l = components.length; i < l; i++) {\n\t\t\t\t\tvar point = components[i];\n\t\t\t\t\tmatrix._transformPoint(point, point, true);\n\t\t\t\t}\n\t\t\t\tthis._changed();\n\t\t\t}\n\t\t},\n\n\t\tstatics: {\n\t\t\t_types: types,\n\n\t\t\trandom: function() {\n\t\t\t\tvar random = Math.random;\n\t\t\t\treturn new Color(random(), random(), random());\n\t\t\t}\n\t\t}\n\t});\n},\nnew function() {\n\tvar operators = {\n\t\tadd: function(a, b) {\n\t\t\treturn a + b;\n\t\t},\n\n\t\tsubtract: function(a, b) {\n\t\t\treturn a - b;\n\t\t},\n\n\t\tmultiply: function(a, b) {\n\t\t\treturn a * b;\n\t\t},\n\n\t\tdivide: function(a, b) {\n\t\t\treturn a / b;\n\t\t}\n\t};\n\n\treturn Base.each(operators, function(operator, name) {\n\t\tthis[name] = function(color) {\n\t\t\tcolor = Color.read(arguments);\n\t\t\tvar type = this._type,\n\t\t\t\tcomponents1 = this._components,\n\t\t\t\tcomponents2 = color._convert(type);\n\t\t\tfor (var i = 0, l = components1.length; i < l; i++)\n\t\t\t\tcomponents2[i] = operator(components1[i], components2[i]);\n\t\t\treturn new Color(type, components2,\n\t\t\t\t\tthis._alpha != null\n\t\t\t\t\t\t\t? operator(this._alpha, color.getAlpha())\n\t\t\t\t\t\t\t: null);\n\t\t};\n\t}, {\n\t});\n});\n\nvar Gradient = Base.extend({\n\t_class: 'Gradient',\n\n\tinitialize: function Gradient(stops, radial) {\n\t\tthis._id = UID.get();\n\t\tif (stops && this._set(stops))\n\t\t\tstops = radial = null;\n\t\tif (!this._stops)\n\t\t\tthis.setStops(stops || ['white', 'black']);\n\t\tif (this._radial == null)\n\t\t\tthis.setRadial(typeof radial === 'string' && radial === 'radial'\n\t\t\t\t\t|| radial || false);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn dictionary.add(this, function() {\n\t\t\treturn Base.serialize([this._stops, this._radial],\n\t\t\t\t\toptions, true, dictionary);\n\t\t});\n\t},\n\n\t_changed: function() {\n\t\tfor (var i = 0, l = this._owners && this._owners.length; i < l; i++)\n\t\t\tthis._owners[i]._changed();\n\t},\n\n\t_addOwner: function(color) {\n\t\tif (!this._owners)\n\t\t\tthis._owners = [];\n\t\tthis._owners.push(color);\n\t},\n\n\t_removeOwner: function(color) {\n\t\tvar index = this._owners ? this._owners.indexOf(color) : -1;\n\t\tif (index != -1) {\n\t\t\tthis._owners.splice(index, 1);\n\t\t\tif (this._owners.length === 0)\n\t\t\t\tthis._owners = undefined;\n\t\t}\n\t},\n\n\tclone: function() {\n\t\tvar stops = [];\n\t\tfor (var i = 0, l = this._stops.length; i < l; i++)\n\t\t\tstops[i] = this._stops[i].clone();\n\t\treturn new Gradient(stops, this._radial);\n\t},\n\n\tgetStops: function() {\n\t\treturn this._stops;\n\t},\n\n\tsetStops: function(stops) {\n\t\tif (this.stops) {\n\t\t\tfor (var i = 0, l = this._stops.length; i < l; i++)\n\t\t\t\tthis._stops[i]._owner = undefined;\n\t\t}\n\t\tif (stops.length < 2)\n\t\t\tthrow new Error(\n\t\t\t\t\t'Gradient stop list needs to contain at least two stops.');\n\t\tthis._stops = GradientStop.readAll(stops, 0, { clone: true });\n\t\tfor (var i = 0, l = this._stops.length; i < l; i++) {\n\t\t\tvar stop = this._stops[i];\n\t\t\tstop._owner = this;\n\t\t\tif (stop._defaultRamp)\n\t\t\t\tstop.setRampPoint(i / (l - 1));\n\t\t}\n\t\tthis._changed();\n\t},\n\n\tgetRadial: function() {\n\t\treturn this._radial;\n\t},\n\n\tsetRadial: function(radial) {\n\t\tthis._radial = radial;\n\t\tthis._changed();\n\t},\n\n\tequals: function(gradient) {\n\t\tif (gradient === this)\n\t\t\treturn true;\n\t\tif (gradient && this._class === gradient._class\n\t\t\t\t&& this._stops.length === gradient._stops.length) {\n\t\t\tfor (var i = 0, l = this._stops.length; i < l; i++) {\n\t\t\t\tif (!this._stops[i].equals(gradient._stops[i]))\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n});\n\nvar GradientStop = Base.extend({\n\t_class: 'GradientStop',\n\n\tinitialize: function GradientStop(arg0, arg1) {\n\t\tif (arg0) {\n\t\t\tvar color, rampPoint;\n\t\t\tif (arg1 === undefined && Array.isArray(arg0)) {\n\t\t\t\tcolor = arg0[0];\n\t\t\t\trampPoint = arg0[1];\n\t\t\t} else if (arg0.color) {\n\t\t\t\tcolor = arg0.color;\n\t\t\t\trampPoint = arg0.rampPoint;\n\t\t\t} else {\n\t\t\t\tcolor = arg0;\n\t\t\t\trampPoint = arg1;\n\t\t\t}\n\t\t\tthis.setColor(color);\n\t\t\tthis.setRampPoint(rampPoint);\n\t\t}\n\t},\n\n\tclone: function() {\n\t\treturn new GradientStop(this._color.clone(), this._rampPoint);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn Base.serialize([this._color, this._rampPoint], options, true,\n\t\t\t\tdictionary);\n\t},\n\n\t_changed: function() {\n\t\tif (this._owner)\n\t\t\tthis._owner._changed(65);\n\t},\n\n\tgetRampPoint: function() {\n\t\treturn this._rampPoint;\n\t},\n\n\tsetRampPoint: function(rampPoint) {\n\t\tthis._defaultRamp = rampPoint == null;\n\t\tthis._rampPoint = rampPoint || 0;\n\t\tthis._changed();\n\t},\n\n\tgetColor: function() {\n\t\treturn this._color;\n\t},\n\n\tsetColor: function(color) {\n\t\tthis._color = Color.read(arguments);\n\t\tif (this._color === color)\n\t\t\tthis._color = color.clone();\n\t\tthis._color._owner = this;\n\t\tthis._changed();\n\t},\n\n\tequals: function(stop) {\n\t\treturn stop === this || stop && this._class === stop._class\n\t\t\t\t&& this._color.equals(stop._color)\n\t\t\t\t&& this._rampPoint == stop._rampPoint\n\t\t\t\t|| false;\n\t}\n});\n\nvar Style = Base.extend(new function() {\n\tvar defaults = {\n\t\tfillColor: undefined,\n\t\tstrokeColor: undefined,\n\t\tstrokeWidth: 1,\n\t\tstrokeCap: 'butt',\n\t\tstrokeJoin: 'miter',\n\t\tstrokeScaling: true,\n\t\tmiterLimit: 10,\n\t\tdashOffset: 0,\n\t\tdashArray: [],\n\t\twindingRule: 'nonzero',\n\t\tshadowColor: undefined,\n\t\tshadowBlur: 0,\n\t\tshadowOffset: new Point(),\n\t\tselectedColor: undefined,\n\t\tfontFamily: 'sans-serif',\n\t\tfontWeight: 'normal',\n\t\tfontSize: 12,\n\t\tfont: 'sans-serif',\n\t\tleading: null,\n\t\tjustification: 'left'\n\t};\n\n\tvar flags = {\n\t\tstrokeWidth: 97,\n\t\tstrokeCap: 97,\n\t\tstrokeJoin: 97,\n\t\tstrokeScaling: 105,\n\t\tmiterLimit: 97,\n\t\tfontFamily: 9,\n\t\tfontWeight: 9,\n\t\tfontSize: 9,\n\t\tfont: 9,\n\t\tleading: 9,\n\t\tjustification: 9\n\t};\n\n\tvar item = { beans: true },\n\t\tfields = {\n\t\t\t_defaults: defaults,\n\t\t\t_textDefaults: new Base(defaults, {\n\t\t\t\tfillColor: new Color()\n\t\t\t}),\n\t\t\tbeans: true\n\t\t};\n\n\tBase.each(defaults, function(value, key) {\n\t\tvar isColor = /Color$/.test(key),\n\t\t\tisPoint = key === 'shadowOffset',\n\t\t\tpart = Base.capitalize(key),\n\t\t\tflag = flags[key],\n\t\t\tset = 'set' + part,\n\t\t\tget = 'get' + part;\n\n\t\tfields[set] = function(value) {\n\t\t\tvar owner = this._owner,\n\t\t\t\tchildren = owner && owner._children;\n\t\t\tif (children && children.length > 0\n\t\t\t\t\t&& !(owner instanceof CompoundPath)) {\n\t\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\t\tchildren[i]._style[set](value);\n\t\t\t} else {\n\t\t\t\tvar old = this._values[key];\n\t\t\t\tif (old !== value) {\n\t\t\t\t\tif (isColor) {\n\t\t\t\t\t\tif (old)\n\t\t\t\t\t\t\told._owner = undefined;\n\t\t\t\t\t\tif (value && value.constructor === Color) {\n\t\t\t\t\t\t\tif (value._owner)\n\t\t\t\t\t\t\t\tvalue = value.clone();\n\t\t\t\t\t\t\tvalue._owner = owner;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis._values[key] = value;\n\t\t\t\t\tif (owner)\n\t\t\t\t\t\towner._changed(flag || 65);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tfields[get] = function(_dontMerge) {\n\t\t\tvar owner = this._owner,\n\t\t\t\tchildren = owner && owner._children,\n\t\t\t\tvalue;\n\t\t\tif (!children || children.length === 0 || _dontMerge\n\t\t\t\t\t|| owner instanceof CompoundPath) {\n\t\t\t\tvar value = this._values[key];\n\t\t\t\tif (value === undefined) {\n\t\t\t\t\tvalue = this._defaults[key];\n\t\t\t\t\tif (value && value.clone)\n\t\t\t\t\t\tvalue = value.clone();\n\t\t\t\t} else {\n\t\t\t\t\tvar ctor = isColor ? Color : isPoint ? Point : null;\n\t\t\t\t\tif (ctor && !(value && value.constructor === ctor)) {\n\t\t\t\t\t\tthis._values[key] = value = ctor.read([value], 0,\n\t\t\t\t\t\t\t\t{ readNull: true, clone: true });\n\t\t\t\t\t\tif (value && isColor)\n\t\t\t\t\t\t\tvalue._owner = owner;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\t\tvar childValue = children[i]._style[get]();\n\t\t\t\tif (i === 0) {\n\t\t\t\t\tvalue = childValue;\n\t\t\t\t} else if (!Base.equals(value, childValue)) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn value;\n\t\t};\n\n\t\titem[get] = function(_dontMerge) {\n\t\t\treturn this._style[get](_dontMerge);\n\t\t};\n\n\t\titem[set] = function(value) {\n\t\t\tthis._style[set](value);\n\t\t};\n\t});\n\n\tItem.inject(item);\n\treturn fields;\n}, {\n\t_class: 'Style',\n\n\tinitialize: function Style(style, _owner, _project) {\n\t\tthis._values = {};\n\t\tthis._owner = _owner;\n\t\tthis._project = _owner && _owner._project || _project || paper.project;\n\t\tif (_owner instanceof TextItem)\n\t\t\tthis._defaults = this._textDefaults;\n\t\tif (style)\n\t\t\tthis.set(style);\n\t},\n\n\tset: function(style) {\n\t\tvar isStyle = style instanceof Style,\n\t\t\tvalues = isStyle ? style._values : style;\n\t\tif (values) {\n\t\t\tfor (var key in values) {\n\t\t\t\tif (key in this._defaults) {\n\t\t\t\t\tvar value = values[key];\n\t\t\t\t\tthis[key] = value && isStyle && value.clone\n\t\t\t\t\t\t\t? value.clone() : value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tequals: function(style) {\n\t\treturn style === this || style && this._class === style._class\n\t\t\t\t&& Base.equals(this._values, style._values)\n\t\t\t\t|| false;\n\t},\n\n\thasFill: function() {\n\t\treturn !!this.getFillColor();\n\t},\n\n\thasStroke: function() {\n\t\treturn !!this.getStrokeColor() && this.getStrokeWidth() > 0;\n\t},\n\n\thasShadow: function() {\n\t\treturn !!this.getShadowColor() && this.getShadowBlur() > 0;\n\t},\n\n\tgetView: function() {\n\t\treturn this._project.getView();\n\t},\n\n\tgetFontStyle: function() {\n\t\tvar fontSize = this.getFontSize();\n\t\treturn this.getFontWeight()\n\t\t\t\t+ ' ' + fontSize + (/[a-z]/i.test(fontSize + '') ? ' ' : 'px ')\n\t\t\t\t+ this.getFontFamily();\n\t},\n\n\tgetFont: '#getFontFamily',\n\tsetFont: '#setFontFamily',\n\n\tgetLeading: function getLeading() {\n\t\tvar leading = getLeading.base.call(this),\n\t\t\tfontSize = this.getFontSize();\n\t\tif (/pt|em|%|px/.test(fontSize))\n\t\t\tfontSize = this.getView().getPixelSize(fontSize);\n\t\treturn leading != null ? leading : fontSize * 1.2;\n\t}\n\n});\n\nvar DomElement = new function() {\n\tfunction handlePrefix(el, name, set, value) {\n\t\tvar prefixes = ['', 'webkit', 'moz', 'Moz', 'ms', 'o'],\n\t\t\tsuffix = name[0].toUpperCase() + name.substring(1);\n\t\tfor (var i = 0; i < 6; i++) {\n\t\t\tvar prefix = prefixes[i],\n\t\t\t\tkey = prefix ? prefix + suffix : name;\n\t\t\tif (key in el) {\n\t\t\t\tif (set) {\n\t\t\t\t\tel[key] = value;\n\t\t\t\t} else {\n\t\t\t\t\treturn el[key];\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn {\n\t\tgetStyles: function(el) {\n\t\t\tvar doc = el && el.nodeType !== 9 ? el.ownerDocument : el,\n\t\t\t\tview = doc && doc.defaultView;\n\t\t\treturn view && view.getComputedStyle(el, '');\n\t\t},\n\n\t\tgetBounds: function(el, viewport) {\n\t\t\tvar doc = el.ownerDocument,\n\t\t\t\tbody = doc.body,\n\t\t\t\thtml = doc.documentElement,\n\t\t\t\trect;\n\t\t\ttry {\n\t\t\t\trect = el.getBoundingClientRect();\n\t\t\t} catch (e) {\n\t\t\t\trect = { left: 0, top: 0, width: 0, height: 0 };\n\t\t\t}\n\t\t\tvar x = rect.left - (html.clientLeft || body.clientLeft || 0),\n\t\t\t\ty = rect.top - (html.clientTop || body.clientTop || 0);\n\t\t\tif (!viewport) {\n\t\t\t\tvar view = doc.defaultView;\n\t\t\t\tx += view.pageXOffset || html.scrollLeft || body.scrollLeft;\n\t\t\t\ty += view.pageYOffset || html.scrollTop || body.scrollTop;\n\t\t\t}\n\t\t\treturn new Rectangle(x, y, rect.width, rect.height);\n\t\t},\n\n\t\tgetViewportBounds: function(el) {\n\t\t\tvar doc = el.ownerDocument,\n\t\t\t\tview = doc.defaultView,\n\t\t\t\thtml = doc.documentElement;\n\t\t\treturn new Rectangle(0, 0,\n\t\t\t\tview.innerWidth || html.clientWidth,\n\t\t\t\tview.innerHeight || html.clientHeight\n\t\t\t);\n\t\t},\n\n\t\tgetOffset: function(el, viewport) {\n\t\t\treturn DomElement.getBounds(el, viewport).getPoint();\n\t\t},\n\n\t\tgetSize: function(el) {\n\t\t\treturn DomElement.getBounds(el, true).getSize();\n\t\t},\n\n\t\tisInvisible: function(el) {\n\t\t\treturn DomElement.getSize(el).equals(new Size(0, 0));\n\t\t},\n\n\t\tisInView: function(el) {\n\t\t\treturn !DomElement.isInvisible(el)\n\t\t\t\t\t&& DomElement.getViewportBounds(el).intersects(\n\t\t\t\t\t\tDomElement.getBounds(el, true));\n\t\t},\n\n\t\tgetPrefixed: function(el, name) {\n\t\t\treturn handlePrefix(el, name);\n\t\t},\n\n\t\tsetPrefixed: function(el, name, value) {\n\t\t\tif (typeof name === 'object') {\n\t\t\t\tfor (var key in name)\n\t\t\t\t\thandlePrefix(el, key, true, name[key]);\n\t\t\t} else {\n\t\t\t\thandlePrefix(el, name, true, value);\n\t\t\t}\n\t\t}\n\t};\n};\n\nvar DomEvent = {\n\tadd: function(el, events) {\n\t\tfor (var type in events) {\n\t\t\tvar func = events[type],\n\t\t\t\tparts = type.split(/[\\s,]+/g);\n\t\t\tfor (var i = 0, l = parts.length; i < l; i++)\n\t\t\t\tel.addEventListener(parts[i], func, false);\n\t\t}\n\t},\n\n\tremove: function(el, events) {\n\t\tfor (var type in events) {\n\t\t\tvar func = events[type],\n\t\t\t\tparts = type.split(/[\\s,]+/g);\n\t\t\tfor (var i = 0, l = parts.length; i < l; i++)\n\t\t\t\tel.removeEventListener(parts[i], func, false);\n\t\t}\n\t},\n\n\tgetPoint: function(event) {\n\t\tvar pos = event.targetTouches\n\t\t\t\t? event.targetTouches.length\n\t\t\t\t\t? event.targetTouches[0]\n\t\t\t\t\t: event.changedTouches[0]\n\t\t\t\t: event;\n\t\treturn new Point(\n\t\t\tpos.pageX || pos.clientX + document.documentElement.scrollLeft,\n\t\t\tpos.pageY || pos.clientY + document.documentElement.scrollTop\n\t\t);\n\t},\n\n\tgetTarget: function(event) {\n\t\treturn event.target || event.srcElement;\n\t},\n\n\tgetRelatedTarget: function(event) {\n\t\treturn event.relatedTarget || event.toElement;\n\t},\n\n\tgetOffset: function(event, target) {\n\t\treturn DomEvent.getPoint(event).subtract(DomElement.getOffset(\n\t\t\t\ttarget || DomEvent.getTarget(event)));\n\t},\n\n\tstop: function(event) {\n\t\tevent.stopPropagation();\n\t\tevent.preventDefault();\n\t}\n};\n\nDomEvent.requestAnimationFrame = new function() {\n\tvar nativeRequest = DomElement.getPrefixed(window, 'requestAnimationFrame'),\n\t\trequested = false,\n\t\tcallbacks = [],\n\t\tfocused = true,\n\t\ttimer;\n\n\tDomEvent.add(window, {\n\t\tfocus: function() {\n\t\t\tfocused = true;\n\t\t},\n\t\tblur: function() {\n\t\t\tfocused = false;\n\t\t}\n\t});\n\n\tfunction handleCallbacks() {\n\t\tfor (var i = callbacks.length - 1; i >= 0; i--) {\n\t\t\tvar entry = callbacks[i],\n\t\t\t\tfunc = entry[0],\n\t\t\t\tel = entry[1];\n\t\t\tif (!el || (PaperScope.getAttribute(el, 'keepalive') == 'true'\n\t\t\t\t\t|| focused) && DomElement.isInView(el)) {\n\t\t\t\tcallbacks.splice(i, 1);\n\t\t\t\tfunc();\n\t\t\t}\n\t\t}\n\t\tif (nativeRequest) {\n\t\t\tif (callbacks.length) {\n\t\t\t\tnativeRequest(handleCallbacks);\n\t\t\t} else {\n\t\t\t\trequested = false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn function(callback, element) {\n\t\tcallbacks.push([callback, element]);\n\t\tif (nativeRequest) {\n\t\t\tif (!requested) {\n\t\t\t\tnativeRequest(handleCallbacks);\n\t\t\t\trequested = true;\n\t\t\t}\n\t\t} else if (!timer) {\n\t\t\ttimer = setInterval(handleCallbacks, 1000 / 60);\n\t\t}\n\t};\n};\n\nvar View = Base.extend(Emitter, {\n\t_class: 'View',\n\n\tinitialize: function View(project, element) {\n\t\tthis._project = project;\n\t\tthis._scope = project._scope;\n\t\tthis._element = element;\n\t\tvar size;\n\t\tif (!this._pixelRatio)\n\t\t\tthis._pixelRatio = window.devicePixelRatio || 1;\n\t\tthis._id = element.getAttribute('id');\n\t\tif (this._id == null)\n\t\t\telement.setAttribute('id', this._id = 'view-' + View._id++);\n\t\tDomEvent.add(element, this._viewEvents);\n\t\tvar none = 'none';\n\t\tDomElement.setPrefixed(element.style, {\n\t\t\tuserSelect: none,\n\t\t\ttouchAction: none,\n\t\t\ttouchCallout: none,\n\t\t\tcontentZooming: none,\n\t\t\tuserDrag: none,\n\t\t\ttapHighlightColor: 'rgba(0,0,0,0)'\n\t\t});\n\n\t\tfunction getSize(name) {\n\t\t\treturn element[name] || parseInt(element.getAttribute(name), 10);\n\t\t};\n\n\t\tfunction getCanvasSize() {\n\t\t\tvar size = DomElement.getSize(element);\n\t\t\treturn size.isNaN() || size.isZero()\n\t\t\t\t\t? new Size(getSize('width'), getSize('height'))\n\t\t\t\t\t: size;\n\t\t};\n\n\t\tif (PaperScope.hasAttribute(element, 'resize')) {\n\t\t\tvar that = this;\n\t\t\tDomEvent.add(window, this._windowEvents = {\n\t\t\t\tresize: function() {\n\t\t\t\t\tthat.setViewSize(getCanvasSize());\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tthis._setViewSize(size = getCanvasSize());\n\t\tif (PaperScope.hasAttribute(element, 'stats')\n\t\t\t\t&& typeof Stats !== 'undefined') {\n\t\t\tthis._stats = new Stats();\n\t\t\tvar stats = this._stats.domElement,\n\t\t\t\tstyle = stats.style,\n\t\t\t\toffset = DomElement.getOffset(element);\n\t\t\tstyle.position = 'absolute';\n\t\t\tstyle.left = offset.x + 'px';\n\t\t\tstyle.top = offset.y + 'px';\n\t\t\tdocument.body.appendChild(stats);\n\t\t}\n\t\tView._views.push(this);\n\t\tView._viewsById[this._id] = this;\n\t\tthis._viewSize = size;\n\t\t(this._matrix = new Matrix())._owner = this;\n\t\tthis._zoom = 1;\n\t\tif (!View._focused)\n\t\t\tView._focused = this;\n\t\tthis._frameItems = {};\n\t\tthis._frameItemCount = 0;\n\t},\n\n\tremove: function() {\n\t\tif (!this._project)\n\t\t\treturn false;\n\t\tif (View._focused === this)\n\t\t\tView._focused = null;\n\t\tView._views.splice(View._views.indexOf(this), 1);\n\t\tdelete View._viewsById[this._id];\n\t\tif (this._project._view === this)\n\t\t\tthis._project._view = null;\n\t\tDomEvent.remove(this._element, this._viewEvents);\n\t\tDomEvent.remove(window, this._windowEvents);\n\t\tthis._element = this._project = null;\n\t\tthis.off('frame');\n\t\tthis._animate = false;\n\t\tthis._frameItems = {};\n\t\treturn true;\n\t},\n\n\t_events: Base.each(['onResize', 'onMouseDown', 'onMouseUp', 'onMouseMove'],\n\t\tfunction(name) {\n\t\t\tthis[name] = {\n\t\t\t\tinstall: function(type) {\n\t\t\t\t\tthis._installEvent(type);\n\t\t\t\t},\n\n\t\t\t\tuninstall: function(type) {\n\t\t\t\t\tthis._uninstallEvent(type);\n\t\t\t\t}\n\t\t\t};\n\t\t}, {\n\t\t\tonFrame: {\n\t\t\t\tinstall: function() {\n\t\t\t\t\tthis.play();\n\t\t\t\t},\n\n\t\t\t\tuninstall: function() {\n\t\t\t\t\tthis.pause();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t),\n\n\t_animate: false,\n\t_time: 0,\n\t_count: 0,\n\n\t_requestFrame: function() {\n\t\tvar that = this;\n\t\tDomEvent.requestAnimationFrame(function() {\n\t\t\tthat._requested = false;\n\t\t\tif (!that._animate)\n\t\t\t\treturn;\n\t\t\tthat._requestFrame();\n\t\t\tthat._handleFrame();\n\t\t}, this._element);\n\t\tthis._requested = true;\n\t},\n\n\t_handleFrame: function() {\n\t\tpaper = this._scope;\n\t\tvar now = Date.now() / 1000,\n\t\t\tdelta = this._before ? now - this._before : 0;\n\t\tthis._before = now;\n\t\tthis._handlingFrame = true;\n\t\tthis.emit('frame', new Base({\n\t\t\tdelta: delta,\n\t\t\ttime: this._time += delta,\n\t\t\tcount: this._count++\n\t\t}));\n\t\tif (this._stats)\n\t\t\tthis._stats.update();\n\t\tthis._handlingFrame = false;\n\t\tthis.update();\n\t},\n\n\t_animateItem: function(item, animate) {\n\t\tvar items = this._frameItems;\n\t\tif (animate) {\n\t\t\titems[item._id] = {\n\t\t\t\titem: item,\n\t\t\t\ttime: 0,\n\t\t\t\tcount: 0\n\t\t\t};\n\t\t\tif (++this._frameItemCount === 1)\n\t\t\t\tthis.on('frame', this._handleFrameItems);\n\t\t} else {\n\t\t\tdelete items[item._id];\n\t\t\tif (--this._frameItemCount === 0) {\n\t\t\t\tthis.off('frame', this._handleFrameItems);\n\t\t\t}\n\t\t}\n\t},\n\n\t_handleFrameItems: function(event) {\n\t\tfor (var i in this._frameItems) {\n\t\t\tvar entry = this._frameItems[i];\n\t\t\tentry.item.emit('frame', new Base(event, {\n\t\t\t\ttime: entry.time += event.delta,\n\t\t\t\tcount: entry.count++\n\t\t\t}));\n\t\t}\n\t},\n\n\t_update: function() {\n\t\tthis._project._needsUpdate = true;\n\t\tif (this._handlingFrame)\n\t\t\treturn;\n\t\tif (this._animate) {\n\t\t\tthis._handleFrame();\n\t\t} else {\n\t\t\tthis.update();\n\t\t}\n\t},\n\n\t_changed: function(flags) {\n\t\tif (flags & 1)\n\t\t\tthis._project._needsUpdate = true;\n\t},\n\n\t_transform: function(matrix) {\n\t\tthis._matrix.concatenate(matrix);\n\t\tthis._bounds = null;\n\t\tthis._update();\n\t},\n\n\tgetElement: function() {\n\t\treturn this._element;\n\t},\n\n\tgetPixelRatio: function() {\n\t\treturn this._pixelRatio;\n\t},\n\n\tgetResolution: function() {\n\t\treturn this._pixelRatio * 72;\n\t},\n\n\tgetViewSize: function() {\n\t\tvar size = this._viewSize;\n\t\treturn new LinkedSize(size.width, size.height, this, 'setViewSize');\n\t},\n\n\tsetViewSize: function() {\n\t\tvar size = Size.read(arguments),\n\t\t\tdelta = size.subtract(this._viewSize);\n\t\tif (delta.isZero())\n\t\t\treturn;\n\t\tthis._viewSize.set(size.width, size.height);\n\t\tthis._setViewSize(size);\n\t\tthis._bounds = null;\n\t\tthis.emit('resize', {\n\t\t\tsize: size,\n\t\t\tdelta: delta\n\t\t});\n\t\tthis._update();\n\t},\n\n\t_setViewSize: function(size) {\n\t\tvar element = this._element;\n\t\telement.width = size.width;\n\t\telement.height = size.height;\n\t},\n\n\tgetBounds: function() {\n\t\tif (!this._bounds)\n\t\t\tthis._bounds = this._matrix.inverted()._transformBounds(\n\t\t\t\t\tnew Rectangle(new Point(), this._viewSize));\n\t\treturn this._bounds;\n\t},\n\n\tgetSize: function() {\n\t\treturn this.getBounds().getSize();\n\t},\n\n\tgetCenter: function() {\n\t\treturn this.getBounds().getCenter();\n\t},\n\n\tsetCenter: function() {\n\t\tvar center = Point.read(arguments);\n\t\tthis.scrollBy(center.subtract(this.getCenter()));\n\t},\n\n\tgetZoom: function() {\n\t\treturn this._zoom;\n\t},\n\n\tsetZoom: function(zoom) {\n\t\tthis._transform(new Matrix().scale(zoom / this._zoom,\n\t\t\tthis.getCenter()));\n\t\tthis._zoom = zoom;\n\t},\n\n\tisVisible: function() {\n\t\treturn DomElement.isInView(this._element);\n\t},\n\n\tscrollBy: function() {\n\t\tthis._transform(new Matrix().translate(Point.read(arguments).negate()));\n\t},\n\n\tplay: function() {\n\t\tthis._animate = true;\n\t\tif (!this._requested)\n\t\t\tthis._requestFrame();\n\t},\n\n\tpause: function() {\n\t\tthis._animate = false;\n\t},\n\n\tdraw: function() {\n\t\tthis.update();\n\t},\n\n\tprojectToView: function() {\n\t\treturn this._matrix._transformPoint(Point.read(arguments));\n\t},\n\n\tviewToProject: function() {\n\t\treturn this._matrix._inverseTransform(Point.read(arguments));\n\t}\n\n}, {\n\tstatics: {\n\t\t_views: [],\n\t\t_viewsById: {},\n\t\t_id: 0,\n\n\t\tcreate: function(project, element) {\n\t\t\tif (typeof element === 'string')\n\t\t\t\telement = document.getElementById(element);\n\t\t\treturn new CanvasView(project, element);\n\t\t}\n\t}\n},\nnew function() {\n\tvar tool,\n\t\tprevFocus,\n\t\ttempFocus,\n\t\tdragging = false;\n\n\tfunction getView(event) {\n\t\tvar target = DomEvent.getTarget(event);\n\t\treturn target.getAttribute && View._viewsById[target.getAttribute('id')];\n\t}\n\n\tfunction viewToProject(view, event) {\n\t\treturn view.viewToProject(DomEvent.getOffset(event, view._element));\n\t}\n\n\tfunction updateFocus() {\n\t\tif (!View._focused || !View._focused.isVisible()) {\n\t\t\tfor (var i = 0, l = View._views.length; i < l; i++) {\n\t\t\t\tvar view = View._views[i];\n\t\t\t\tif (view && view.isVisible()) {\n\t\t\t\t\tView._focused = tempFocus = view;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction handleMouseMove(view, point, event) {\n\t\tview._handleEvent('mousemove', point, event);\n\t\tvar tool = view._scope.tool;\n\t\tif (tool) {\n\t\t\ttool._handleEvent(dragging && tool.responds('mousedrag')\n\t\t\t\t\t? 'mousedrag' : 'mousemove', point, event);\n\t\t}\n\t\tview.update();\n\t\treturn tool;\n\t}\n\n\tvar navigator = window.navigator,\n\t\tmousedown, mousemove, mouseup;\n\tif (navigator.pointerEnabled || navigator.msPointerEnabled) {\n\t\tmousedown = 'pointerdown MSPointerDown';\n\t\tmousemove = 'pointermove MSPointerMove';\n\t\tmouseup = 'pointerup pointercancel MSPointerUp MSPointerCancel';\n\t} else {\n\t\tmousedown = 'touchstart';\n\t\tmousemove = 'touchmove';\n\t\tmouseup = 'touchend touchcancel';\n\t\tif (!('ontouchstart' in window && navigator.userAgent.match(\n\t\t\t\t/mobile|tablet|ip(ad|hone|od)|android|silk/i))) {\n\t\t\tmousedown += ' mousedown';\n\t\t\tmousemove += ' mousemove';\n\t\t\tmouseup += ' mouseup';\n\t\t}\n\t}\n\n\tvar viewEvents = {\n\t\t'selectstart dragstart': function(event) {\n\t\t\tif (dragging)\n\t\t\t\tevent.preventDefault();\n\t\t}\n\t};\n\n\tvar docEvents = {\n\t\tmouseout: function(event) {\n\t\t\tvar view = View._focused,\n\t\t\t\ttarget = DomEvent.getRelatedTarget(event);\n\t\t\tif (view && (!target || target.nodeName === 'HTML'))\n\t\t\t\thandleMouseMove(view, viewToProject(view, event), event);\n\t\t},\n\n\t\tscroll: updateFocus\n\t};\n\n\tviewEvents[mousedown] = function(event) {\n\t\tvar view = View._focused = getView(event),\n\t\t\tpoint = viewToProject(view, event);\n\t\tdragging = true;\n\t\tview._handleEvent('mousedown', point, event);\n\t\tif (tool = view._scope.tool)\n\t\t\ttool._handleEvent('mousedown', point, event);\n\t\tview.update();\n\t};\n\n\tdocEvents[mousemove] = function(event) {\n\t\tvar view = View._focused;\n\t\tif (!dragging) {\n\t\t\tvar target = getView(event);\n\t\t\tif (target) {\n\t\t\t\tif (view !== target)\n\t\t\t\t\thandleMouseMove(view, viewToProject(view, event), event);\n\t\t\t\tprevFocus = view;\n\t\t\t\tview = View._focused = tempFocus = target;\n\t\t\t} else if (tempFocus && tempFocus === view) {\n\t\t\t\tview = View._focused = prevFocus;\n\t\t\t\tupdateFocus();\n\t\t\t}\n\t\t}\n\t\tif (view) {\n\t\t\tvar point = viewToProject(view, event);\n\t\t\tif (dragging || view.getBounds().contains(point))\n\t\t\t\ttool = handleMouseMove(view, point, event);\n\t\t}\n\t};\n\n\tdocEvents[mouseup] = function(event) {\n\t\tvar view = View._focused;\n\t\tif (!view || !dragging)\n\t\t\treturn;\n\t\tvar point = viewToProject(view, event);\n\t\tdragging = false;\n\t\tview._handleEvent('mouseup', point, event);\n\t\tif (tool)\n\t\t\ttool._handleEvent('mouseup', point, event);\n\t\tview.update();\n\t};\n\n\tDomEvent.add(document, docEvents);\n\n\tDomEvent.add(window, {\n\t\tload: updateFocus\n\t});\n\n\tvar mouseFlags = {\n\t\tmousedown: {\n\t\t\tmousedown: 1,\n\t\t\tmousedrag: 1,\n\t\t\tclick: 1,\n\t\t\tdoubleclick: 1\n\t\t},\n\t\tmouseup: {\n\t\t\tmouseup: 1,\n\t\t\tmousedrag: 1,\n\t\t\tclick: 1,\n\t\t\tdoubleclick: 1\n\t\t},\n\t\tmousemove: {\n\t\t\tmousedrag: 1,\n\t\t\tmousemove: 1,\n\t\t\tmouseenter: 1,\n\t\t\tmouseleave: 1\n\t\t}\n\t};\n\n\treturn {\n\t\t_viewEvents: viewEvents,\n\n\t\t_handleEvent: function() {},\n\n\t\t_installEvent: function(type) {\n\t\t\tvar counters = this._eventCounters;\n\t\t\tif (counters) {\n\t\t\t\tfor (var key in mouseFlags) {\n\t\t\t\t\tcounters[key] = (counters[key] || 0)\n\t\t\t\t\t\t\t+ (mouseFlags[key][type] || 0);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_uninstallEvent: function(type) {\n\t\t\tvar counters = this._eventCounters;\n\t\t\tif (counters) {\n\t\t\t\tfor (var key in mouseFlags)\n\t\t\t\t\tcounters[key] -= mouseFlags[key][type] || 0;\n\t\t\t}\n\t\t},\n\n\t\tstatics: {\n\t\t\tupdateFocus: updateFocus\n\t\t}\n\t};\n});\n\nvar CanvasView = View.extend({\n\t_class: 'CanvasView',\n\n\tinitialize: function CanvasView(project, canvas) {\n\t\tif (!(canvas instanceof HTMLCanvasElement)) {\n\t\t\tvar size = Size.read(arguments, 1);\n\t\t\tif (size.isZero())\n\t\t\t\tthrow new Error(\n\t\t\t\t\t\t'Cannot create CanvasView with the provided argument: '\n\t\t\t\t\t\t+ [].slice.call(arguments, 1));\n\t\t\tcanvas = CanvasProvider.getCanvas(size);\n\t\t}\n\t\tthis._context = canvas.getContext('2d');\n\t\tthis._eventCounters = {};\n\t\tthis._pixelRatio = 1;\n\t\tif (!/^off|false$/.test(PaperScope.getAttribute(canvas, 'hidpi'))) {\n\t\t\tvar deviceRatio = window.devicePixelRatio || 1,\n\t\t\t\tbackingStoreRatio = DomElement.getPrefixed(this._context,\n\t\t\t\t\t\t'backingStorePixelRatio') || 1;\n\t\t\tthis._pixelRatio = deviceRatio / backingStoreRatio;\n\t\t}\n\t\tView.call(this, project, canvas);\n\t},\n\n\t_setViewSize: function(size) {\n\t\tvar element = this._element,\n\t\t\tpixelRatio = this._pixelRatio,\n\t\t\twidth = size.width,\n\t\t\theight = size.height;\n\t\telement.width = width * pixelRatio;\n\t\telement.height = height * pixelRatio;\n\t\tif (pixelRatio !== 1) {\n\t\t\tif (!PaperScope.hasAttribute(element, 'resize')) {\n\t\t\t\tvar style = element.style;\n\t\t\t\tstyle.width = width + 'px';\n\t\t\t\tstyle.height = height + 'px';\n\t\t\t}\n\t\t\tthis._context.scale(pixelRatio, pixelRatio);\n\t\t}\n\t},\n\n\tgetPixelSize: function(size) {\n\t\tvar browser = paper.browser,\n\t\t\tpixels;\n\t\tif (browser && browser.firefox) {\n\t\t\tvar parent = this._element.parentNode,\n\t\t\t\ttemp = document.createElement('div');\n\t\t\ttemp.style.fontSize = size;\n\t\t\tparent.appendChild(temp);\n\t\t\tpixels = parseFloat(DomElement.getStyles(temp).fontSize);\n\t\t\tparent.removeChild(temp);\n\t\t} else {\n\t\t\tvar ctx = this._context,\n\t\t\t\tprevFont = ctx.font;\n\t\t\tctx.font = size + ' serif';\n\t\t\tpixels = parseFloat(ctx.font);\n\t\t\tctx.font = prevFont;\n\t\t}\n\t\treturn pixels;\n\t},\n\n\tgetTextWidth: function(font, lines) {\n\t\tvar ctx = this._context,\n\t\t\tprevFont = ctx.font,\n\t\t\twidth = 0;\n\t\tctx.font = font;\n\t\tfor (var i = 0, l = lines.length; i < l; i++)\n\t\t\twidth = Math.max(width, ctx.measureText(lines[i]).width);\n\t\tctx.font = prevFont;\n\t\treturn width;\n\t},\n\n\tupdate: function(force) {\n\t\tvar project = this._project;\n\t\tif (!project || !force && !project._needsUpdate)\n\t\t\treturn false;\n\t\tvar ctx = this._context,\n\t\t\tsize = this._viewSize;\n\t\tctx.clearRect(0, 0, size.width + 1, size.height + 1);\n\t\tproject.draw(ctx, this._matrix, this._pixelRatio);\n\t\tproject._needsUpdate = false;\n\t\treturn true;\n\t}\n},\nnew function() {\n\tvar downPoint,\n\t\tlastPoint,\n\t\toverPoint,\n\t\tdownItem,\n\t\tlastItem,\n\t\toverItem,\n\t\tdragItem,\n\t\tdblClick,\n\t\tclickTime;\n\n\tfunction callEvent(view, type, event, point, target, lastPoint) {\n\t\tvar item = target,\n\t\t\tmouseEvent;\n\n\t\tfunction call(obj) {\n\t\t\tif (obj.responds(type)) {\n\t\t\t\tif (!mouseEvent) {\n\t\t\t\t\tmouseEvent = new MouseEvent(type, event, point, target,\n\t\t\t\t\t\t\tlastPoint ? point.subtract(lastPoint) : null);\n\t\t\t\t}\n\t\t\t\tif (obj.emit(type, mouseEvent) && mouseEvent.isStopped) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\twhile (item) {\n\t\t\tif (call(item))\n\t\t\t\treturn true;\n\t\t\titem = item.getParent();\n\t\t}\n\t\tif (call(view))\n\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\treturn {\n\t\t_handleEvent: function(type, point, event) {\n\t\t\tif (!this._eventCounters[type])\n\t\t\t\treturn;\n\t\t\tvar project = this._project,\n\t\t\t\thit = project.hitTest(point, {\n\t\t\t\t\ttolerance: 0,\n\t\t\t\t\tfill: true,\n\t\t\t\t\tstroke: true\n\t\t\t\t}),\n\t\t\t\titem = hit && hit.item,\n\t\t\t\tstopped = false;\n\t\t\tswitch (type) {\n\t\t\tcase 'mousedown':\n\t\t\t\tstopped = callEvent(this, type, event, point, item);\n\t\t\t\tdblClick = lastItem == item && (Date.now() - clickTime < 300);\n\t\t\t\tdownItem = lastItem = item;\n\t\t\t\tdownPoint = lastPoint = overPoint = point;\n\t\t\t\tdragItem = !stopped && item;\n\t\t\t\twhile (dragItem && !dragItem.responds('mousedrag'))\n\t\t\t\t\tdragItem = dragItem._parent;\n\t\t\t\tbreak;\n\t\t\tcase 'mouseup':\n\t\t\t\tstopped = callEvent(this, type, event, point, item, downPoint);\n\t\t\t\tif (dragItem) {\n\t\t\t\t\tif (lastPoint && !lastPoint.equals(point))\n\t\t\t\t\t\tcallEvent(this, 'mousedrag', event, point, dragItem,\n\t\t\t\t\t\t\t\tlastPoint);\n\t\t\t\t\tif (item !== dragItem) {\n\t\t\t\t\t\toverPoint = point;\n\t\t\t\t\t\tcallEvent(this, 'mousemove', event, point, item,\n\t\t\t\t\t\t\t\toverPoint);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!stopped && item && item === downItem) {\n\t\t\t\t\tclickTime = Date.now();\n\t\t\t\t\tcallEvent(this, dblClick && downItem.responds('doubleclick')\n\t\t\t\t\t\t\t? 'doubleclick' : 'click', event, downPoint, item);\n\t\t\t\t\tdblClick = false;\n\t\t\t\t}\n\t\t\t\tdownItem = dragItem = null;\n\t\t\t\tbreak;\n\t\t\tcase 'mousemove':\n\t\t\t\tif (dragItem)\n\t\t\t\t\tstopped = callEvent(this, 'mousedrag', event, point,\n\t\t\t\t\t\t\tdragItem, lastPoint);\n\t\t\t\tif (!stopped) {\n\t\t\t\t\tif (item !== overItem)\n\t\t\t\t\t\toverPoint = point;\n\t\t\t\t\tstopped = callEvent(this, type, event, point, item,\n\t\t\t\t\t\t\toverPoint);\n\t\t\t\t}\n\t\t\t\tlastPoint = overPoint = point;\n\t\t\t\tif (item !== overItem) {\n\t\t\t\t\tcallEvent(this, 'mouseleave', event, point, overItem);\n\t\t\t\t\toverItem = item;\n\t\t\t\t\tcallEvent(this, 'mouseenter', event, point, item);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn stopped;\n\t\t}\n\t};\n});\n\nvar Event = Base.extend({\n\t_class: 'Event',\n\n\tinitialize: function Event(event) {\n\t\tthis.event = event;\n\t},\n\n\tisPrevented: false,\n\tisStopped: false,\n\n\tpreventDefault: function() {\n\t\tthis.isPrevented = true;\n\t\tthis.event.preventDefault();\n\t},\n\n\tstopPropagation: function() {\n\t\tthis.isStopped = true;\n\t\tthis.event.stopPropagation();\n\t},\n\n\tstop: function() {\n\t\tthis.stopPropagation();\n\t\tthis.preventDefault();\n\t},\n\n\tgetModifiers: function() {\n\t\treturn Key.modifiers;\n\t}\n});\n\nvar KeyEvent = Event.extend({\n\t_class: 'KeyEvent',\n\n\tinitialize: function KeyEvent(down, key, character, event) {\n\t\tEvent.call(this, event);\n\t\tthis.type = down ? 'keydown' : 'keyup';\n\t\tthis.key = key;\n\t\tthis.character = character;\n\t},\n\n\ttoString: function() {\n\t\treturn \"{ type: '\" + this.type\n\t\t\t\t+ \"', key: '\" + this.key\n\t\t\t\t+ \"', character: '\" + this.character\n\t\t\t\t+ \"', modifiers: \" + this.getModifiers()\n\t\t\t\t+ \" }\";\n\t}\n});\n\nvar Key = new function() {\n\n\tvar specialKeys = {\n\t\t8: 'backspace',\n\t\t9: 'tab',\n\t\t13: 'enter',\n\t\t16: 'shift',\n\t\t17: 'control',\n\t\t18: 'option',\n\t\t19: 'pause',\n\t\t20: 'caps-lock',\n\t\t27: 'escape',\n\t\t32: 'space',\n\t\t35: 'end',\n\t\t36: 'home',\n\t\t37: 'left',\n\t\t38: 'up',\n\t\t39: 'right',\n\t\t40: 'down',\n\t\t46: 'delete',\n\t\t91: 'command',\n\t\t93: 'command',\n\t\t224: 'command'\n\t},\n\n\tspecialChars = {\n\t\t9: true,\n\t\t13: true,\n\t\t32: true\n\t},\n\n\tmodifiers = new Base({\n\t\tshift: false,\n\t\tcontrol: false,\n\t\toption: false,\n\t\tcommand: false,\n\t\tcapsLock: false,\n\t\tspace: false\n\t}),\n\n\tcharCodeMap = {},\n\tkeyMap = {},\n\tcommandFixMap,\n\tdownCode;\n\n\tfunction handleKey(down, keyCode, charCode, event) {\n\t\tvar character = charCode ? String.fromCharCode(charCode) : '',\n\t\t\tspecialKey = specialKeys[keyCode],\n\t\t\tkey = specialKey || character.toLowerCase(),\n\t\t\ttype = down ? 'keydown' : 'keyup',\n\t\t\tview = View._focused,\n\t\t\tscope = view && view.isVisible() && view._scope,\n\t\t\ttool = scope && scope.tool,\n\t\t\tname;\n\t\tkeyMap[key] = down;\n\t\tif (down) {\n\t\t\tcharCodeMap[keyCode] = charCode;\n\t\t} else {\n\t\t\tdelete charCodeMap[keyCode];\n\t\t}\n\t\tif (specialKey && (name = Base.camelize(specialKey)) in modifiers) {\n\t\t\tmodifiers[name] = down;\n\t\t\tvar browser = paper.browser;\n\t\t\tif (name === 'command' && browser && browser.mac) {\n\t\t\t\tif (down) {\n\t\t\t\t\tcommandFixMap = {};\n\t\t\t\t} else {\n\t\t\t\t\tfor (var code in commandFixMap) {\n\t\t\t\t\t\tif (code in charCodeMap)\n\t\t\t\t\t\t\thandleKey(false, code, commandFixMap[code], event);\n\t\t\t\t\t}\n\t\t\t\t\tcommandFixMap = null;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (down && commandFixMap) {\n\t\t\tcommandFixMap[keyCode] = charCode;\n\t\t}\n\t\tif (tool && tool.responds(type)) {\n\t\t\tpaper = scope;\n\t\t\ttool.emit(type, new KeyEvent(down, key, character, event));\n\t\t\tif (view)\n\t\t\t\tview.update();\n\t\t}\n\t}\n\n\tDomEvent.add(document, {\n\t\tkeydown: function(event) {\n\t\t\tvar code = event.which || event.keyCode;\n\t\t\tif (code in specialKeys || modifiers.command) {\n\t\t\t\thandleKey(true, code,\n\t\t\t\t\t\tcode in specialChars || modifiers.command ? code : 0,\n\t\t\t\t\t\tevent);\n\t\t\t} else {\n\t\t\t\tdownCode = code;\n\t\t\t}\n\t\t},\n\n\t\tkeypress: function(event) {\n\t\t\tif (downCode != null) {\n\t\t\t\thandleKey(true, downCode, event.which || event.keyCode, event);\n\t\t\t\tdownCode = null;\n\t\t\t}\n\t\t},\n\n\t\tkeyup: function(event) {\n\t\t\tvar code = event.which || event.keyCode;\n\t\t\tif (code in charCodeMap)\n\t\t\t\thandleKey(false, code, charCodeMap[code], event);\n\t\t}\n\t});\n\n\tDomEvent.add(window, {\n\t\tblur: function(event) {\n\t\t\tfor (var code in charCodeMap)\n\t\t\t\thandleKey(false, code, charCodeMap[code], event);\n\t\t}\n\t});\n\n\treturn {\n\t\tmodifiers: modifiers,\n\n\t\tisDown: function(key) {\n\t\t\treturn !!keyMap[key];\n\t\t}\n\t};\n};\n\nvar MouseEvent = Event.extend({\n\t_class: 'MouseEvent',\n\n\tinitialize: function MouseEvent(type, event, point, target, delta) {\n\t\tEvent.call(this, event);\n\t\tthis.type = type;\n\t\tthis.point = point;\n\t\tthis.target = target;\n\t\tthis.delta = delta;\n\t},\n\n\ttoString: function() {\n\t\treturn \"{ type: '\" + this.type\n\t\t\t\t+ \"', point: \" + this.point\n\t\t\t\t+ ', target: ' + this.target\n\t\t\t\t+ (this.delta ? ', delta: ' + this.delta : '')\n\t\t\t\t+ ', modifiers: ' + this.getModifiers()\n\t\t\t\t+ ' }';\n\t}\n});\n\nvar ToolEvent = Event.extend({\n\t_class: 'ToolEvent',\n\t_item: null,\n\n\tinitialize: function ToolEvent(tool, type, event) {\n\t\tthis.tool = tool;\n\t\tthis.type = type;\n\t\tthis.event = event;\n\t},\n\n\t_choosePoint: function(point, toolPoint) {\n\t\treturn point ? point : toolPoint ? toolPoint.clone() : null;\n\t},\n\n\tgetPoint: function() {\n\t\treturn this._choosePoint(this._point, this.tool._point);\n\t},\n\n\tsetPoint: function(point) {\n\t\tthis._point = point;\n\t},\n\n\tgetLastPoint: function() {\n\t\treturn this._choosePoint(this._lastPoint, this.tool._lastPoint);\n\t},\n\n\tsetLastPoint: function(lastPoint) {\n\t\tthis._lastPoint = lastPoint;\n\t},\n\n\tgetDownPoint: function() {\n\t\treturn this._choosePoint(this._downPoint, this.tool._downPoint);\n\t},\n\n\tsetDownPoint: function(downPoint) {\n\t\tthis._downPoint = downPoint;\n\t},\n\n\tgetMiddlePoint: function() {\n\t\tif (!this._middlePoint && this.tool._lastPoint) {\n\t\t\treturn this.tool._point.add(this.tool._lastPoint).divide(2);\n\t\t}\n\t\treturn this._middlePoint;\n\t},\n\n\tsetMiddlePoint: function(middlePoint) {\n\t\tthis._middlePoint = middlePoint;\n\t},\n\n\tgetDelta: function() {\n\t\treturn !this._delta && this.tool._lastPoint\n\t\t\t\t? this.tool._point.subtract(this.tool._lastPoint)\n\t\t\t\t: this._delta;\n\t},\n\n\tsetDelta: function(delta) {\n\t\tthis._delta = delta;\n\t},\n\n\tgetCount: function() {\n\t\treturn /^mouse(down|up)$/.test(this.type)\n\t\t\t\t? this.tool._downCount\n\t\t\t\t: this.tool._count;\n\t},\n\n\tsetCount: function(count) {\n\t\tthis.tool[/^mouse(down|up)$/.test(this.type) ? 'downCount' : 'count']\n\t\t\t= count;\n\t},\n\n\tgetItem: function() {\n\t\tif (!this._item) {\n\t\t\tvar result = this.tool._scope.project.hitTest(this.getPoint());\n\t\t\tif (result) {\n\t\t\t\tvar item = result.item,\n\t\t\t\t\tparent = item._parent;\n\t\t\t\twhile (/^(Group|CompoundPath)$/.test(parent._class)) {\n\t\t\t\t\titem = parent;\n\t\t\t\t\tparent = parent._parent;\n\t\t\t\t}\n\t\t\t\tthis._item = item;\n\t\t\t}\n\t\t}\n\t\treturn this._item;\n\t},\n\n\tsetItem: function(item) {\n\t\tthis._item = item;\n\t},\n\n\ttoString: function() {\n\t\treturn '{ type: ' + this.type\n\t\t\t\t+ ', point: ' + this.getPoint()\n\t\t\t\t+ ', count: ' + this.getCount()\n\t\t\t\t+ ', modifiers: ' + this.getModifiers()\n\t\t\t\t+ ' }';\n\t}\n});\n\nvar Tool = PaperScopeItem.extend({\n\t_class: 'Tool',\n\t_list: 'tools',\n\t_reference: 'tool',\n\t_events: [ 'onActivate', 'onDeactivate', 'onEditOptions',\n\t\t\t'onMouseDown', 'onMouseUp', 'onMouseDrag', 'onMouseMove',\n\t\t\t'onKeyDown', 'onKeyUp' ],\n\n\tinitialize: function Tool(props) {\n\t\tPaperScopeItem.call(this);\n\t\tthis._firstMove = true;\n\t\tthis._count = 0;\n\t\tthis._downCount = 0;\n\t\tthis._set(props);\n\t},\n\n\tgetMinDistance: function() {\n\t\treturn this._minDistance;\n\t},\n\n\tsetMinDistance: function(minDistance) {\n\t\tthis._minDistance = minDistance;\n\t\tif (minDistance != null && this._maxDistance != null\n\t\t\t\t&& minDistance > this._maxDistance) {\n\t\t\tthis._maxDistance = minDistance;\n\t\t}\n\t},\n\n\tgetMaxDistance: function() {\n\t\treturn this._maxDistance;\n\t},\n\n\tsetMaxDistance: function(maxDistance) {\n\t\tthis._maxDistance = maxDistance;\n\t\tif (this._minDistance != null && maxDistance != null\n\t\t\t\t&& maxDistance < this._minDistance) {\n\t\t\tthis._minDistance = maxDistance;\n\t\t}\n\t},\n\n\tgetFixedDistance: function() {\n\t\treturn this._minDistance == this._maxDistance\n\t\t\t? this._minDistance : null;\n\t},\n\n\tsetFixedDistance: function(distance) {\n\t\tthis._minDistance = this._maxDistance = distance;\n\t},\n\n\t_updateEvent: function(type, point, minDistance, maxDistance, start,\n\t\t\tneedsChange, matchMaxDistance) {\n\t\tif (!start) {\n\t\t\tif (minDistance != null || maxDistance != null) {\n\t\t\t\tvar minDist = minDistance != null ? minDistance : 0,\n\t\t\t\t\tvector = point.subtract(this._point),\n\t\t\t\t\tdistance = vector.getLength();\n\t\t\t\tif (distance < minDist)\n\t\t\t\t\treturn false;\n\t\t\t\tif (maxDistance != null && maxDistance != 0) {\n\t\t\t\t\tif (distance > maxDistance) {\n\t\t\t\t\t\tpoint = this._point.add(vector.normalize(maxDistance));\n\t\t\t\t\t} else if (matchMaxDistance) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (needsChange && point.equals(this._point))\n\t\t\t\treturn false;\n\t\t}\n\t\tthis._lastPoint = start && type == 'mousemove' ? point : this._point;\n\t\tthis._point = point;\n\t\tswitch (type) {\n\t\tcase 'mousedown':\n\t\t\tthis._lastPoint = this._downPoint;\n\t\t\tthis._downPoint = this._point;\n\t\t\tthis._downCount++;\n\t\t\tbreak;\n\t\tcase 'mouseup':\n\t\t\tthis._lastPoint = this._downPoint;\n\t\t\tbreak;\n\t\t}\n\t\tthis._count = start ? 0 : this._count + 1;\n\t\treturn true;\n\t},\n\n\t_fireEvent: function(type, event) {\n\t\tvar sets = paper.project._removeSets;\n\t\tif (sets) {\n\t\t\tif (type === 'mouseup')\n\t\t\t\tsets.mousedrag = null;\n\t\t\tvar set = sets[type];\n\t\t\tif (set) {\n\t\t\t\tfor (var id in set) {\n\t\t\t\t\tvar item = set[id];\n\t\t\t\t\tfor (var key in sets) {\n\t\t\t\t\t\tvar other = sets[key];\n\t\t\t\t\t\tif (other && other != set)\n\t\t\t\t\t\t\tdelete other[item._id];\n\t\t\t\t\t}\n\t\t\t\t\titem.remove();\n\t\t\t\t}\n\t\t\t\tsets[type] = null;\n\t\t\t}\n\t\t}\n\t\treturn this.responds(type)\n\t\t\t\t&& this.emit(type, new ToolEvent(this, type, event));\n\t},\n\n\t_handleEvent: function(type, point, event) {\n\t\tpaper = this._scope;\n\t\tvar called = false;\n\t\tswitch (type) {\n\t\tcase 'mousedown':\n\t\t\tthis._updateEvent(type, point, null, null, true, false, false);\n\t\t\tcalled = this._fireEvent(type, event);\n\t\t\tbreak;\n\t\tcase 'mousedrag':\n\t\t\tvar needsChange = false,\n\t\t\t\tmatchMaxDistance = false;\n\t\t\twhile (this._updateEvent(type, point, this.minDistance,\n\t\t\t\t\tthis.maxDistance, false, needsChange, matchMaxDistance)) {\n\t\t\t\tcalled = this._fireEvent(type, event) || called;\n\t\t\t\tneedsChange = true;\n\t\t\t\tmatchMaxDistance = true;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'mouseup':\n\t\t\tif (!point.equals(this._point)\n\t\t\t\t\t&& this._updateEvent('mousedrag', point, this.minDistance,\n\t\t\t\t\t\t\tthis.maxDistance, false, false, false)) {\n\t\t\t\tcalled = this._fireEvent('mousedrag', event);\n\t\t\t}\n\t\t\tthis._updateEvent(type, point, null, this.maxDistance, false,\n\t\t\t\t\tfalse, false);\n\t\t\tcalled = this._fireEvent(type, event) || called;\n\t\t\tthis._updateEvent(type, point, null, null, true, false, false);\n\t\t\tthis._firstMove = true;\n\t\t\tbreak;\n\t\tcase 'mousemove':\n\t\t\twhile (this._updateEvent(type, point, this.minDistance,\n\t\t\t\t\tthis.maxDistance, this._firstMove, true, false)) {\n\t\t\t\tcalled = this._fireEvent(type, event) || called;\n\t\t\t\tthis._firstMove = false;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tif (called)\n\t\t\tevent.preventDefault();\n\t\treturn called;\n\t}\n\n});\n\nvar Http = {\n\trequest: function(method, url, callback, async) {\n\t\tasync = (async === undefined) ? true : async;\n\t\tvar xhr = new (window.ActiveXObject || XMLHttpRequest)(\n\t\t\t\t\t'Microsoft.XMLHTTP');\n\t\txhr.open(method.toUpperCase(), url, async);\n\t\tif ('overrideMimeType' in xhr)\n\t\t\txhr.overrideMimeType('text/plain');\n\t\txhr.onreadystatechange = function() {\n\t\t\tif (xhr.readyState === 4) {\n\t\t\t\tvar status = xhr.status;\n\t\t\t\tif (status === 0 || status === 200) {\n\t\t\t\t\tcallback.call(xhr, xhr.responseText);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error('Could not load ' + url + ' (Error '\n\t\t\t\t\t\t\t+ status + ')');\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn xhr.send(null);\n\t}\n};\n\nvar CanvasProvider = {\n\tcanvases: [],\n\n\tgetCanvas: function(width, height) {\n\t\tvar canvas,\n\t\t\tclear = true;\n\t\tif (typeof width === 'object') {\n\t\t\theight = width.height;\n\t\t\twidth = width.width;\n\t\t}\n\t\tif (this.canvases.length) {\n\t\t\tcanvas = this.canvases.pop();\n\t\t} else {\n\t\t\tcanvas = document.createElement('canvas');\n\t\t}\n\t\tvar ctx = canvas.getContext('2d');\n\t\tif (canvas.width === width && canvas.height === height) {\n\t\t\tif (clear)\n\t\t\t\tctx.clearRect(0, 0, width + 1, height + 1);\n\t\t} else {\n\t\t\tcanvas.width = width;\n\t\t\tcanvas.height = height;\n\t\t}\n\t\tctx.save();\n\t\treturn canvas;\n\t},\n\n\tgetContext: function(width, height) {\n\t\treturn this.getCanvas(width, height).getContext('2d');\n\t},\n\n\trelease: function(obj) {\n\t\tvar canvas = obj.canvas ? obj.canvas : obj;\n\t\tcanvas.getContext('2d').restore();\n\t\tthis.canvases.push(canvas);\n\t}\n};\n\nvar BlendMode = new function() {\n\tvar min = Math.min,\n\t\tmax = Math.max,\n\t\tabs = Math.abs,\n\t\tsr, sg, sb, sa,\n\t\tbr, bg, bb, ba,\n\t\tdr, dg, db;\n\n\tfunction getLum(r, g, b) {\n\t\treturn 0.2989 * r + 0.587 * g + 0.114 * b;\n\t}\n\n\tfunction setLum(r, g, b, l) {\n\t\tvar d = l - getLum(r, g, b);\n\t\tdr = r + d;\n\t\tdg = g + d;\n\t\tdb = b + d;\n\t\tvar l = getLum(dr, dg, db),\n\t\t\tmn = min(dr, dg, db),\n\t\t\tmx = max(dr, dg, db);\n\t\tif (mn < 0) {\n\t\t\tvar lmn = l - mn;\n\t\t\tdr = l + (dr - l) * l / lmn;\n\t\t\tdg = l + (dg - l) * l / lmn;\n\t\t\tdb = l + (db - l) * l / lmn;\n\t\t}\n\t\tif (mx > 255) {\n\t\t\tvar ln = 255 - l,\n\t\t\t\tmxl = mx - l;\n\t\t\tdr = l + (dr - l) * ln / mxl;\n\t\t\tdg = l + (dg - l) * ln / mxl;\n\t\t\tdb = l + (db - l) * ln / mxl;\n\t\t}\n\t}\n\n\tfunction getSat(r, g, b) {\n\t\treturn max(r, g, b) - min(r, g, b);\n\t}\n\n\tfunction setSat(r, g, b, s) {\n\t\tvar col = [r, g, b],\n\t\t\tmx = max(r, g, b),\n\t\t\tmn = min(r, g, b),\n\t\t\tmd;\n\t\tmn = mn === r ? 0 : mn === g ? 1 : 2;\n\t\tmx = mx === r ? 0 : mx === g ? 1 : 2;\n\t\tmd = min(mn, mx) === 0 ? max(mn, mx) === 1 ? 2 : 1 : 0;\n\t\tif (col[mx] > col[mn]) {\n\t\t\tcol[md] = (col[md] - col[mn]) * s / (col[mx] - col[mn]);\n\t\t\tcol[mx] = s;\n\t\t} else {\n\t\t\tcol[md] = col[mx] = 0;\n\t\t}\n\t\tcol[mn] = 0;\n\t\tdr = col[0];\n\t\tdg = col[1];\n\t\tdb = col[2];\n\t}\n\n\tvar modes = {\n\t\tmultiply: function() {\n\t\t\tdr = br * sr / 255;\n\t\t\tdg = bg * sg / 255;\n\t\t\tdb = bb * sb / 255;\n\t\t},\n\n\t\tscreen: function() {\n\t\t\tdr = br + sr - (br * sr / 255);\n\t\t\tdg = bg + sg - (bg * sg / 255);\n\t\t\tdb = bb + sb - (bb * sb / 255);\n\t\t},\n\n\t\toverlay: function() {\n\t\t\tdr = br < 128 ? 2 * br * sr / 255 : 255 - 2 * (255 - br) * (255 - sr) / 255;\n\t\t\tdg = bg < 128 ? 2 * bg * sg / 255 : 255 - 2 * (255 - bg) * (255 - sg) / 255;\n\t\t\tdb = bb < 128 ? 2 * bb * sb / 255 : 255 - 2 * (255 - bb) * (255 - sb) / 255;\n\t\t},\n\n\t\t'soft-light': function() {\n\t\t\tvar t = sr * br / 255;\n\t\t\tdr = t + br * (255 - (255 - br) * (255 - sr) / 255 - t) / 255;\n\t\t\tt = sg * bg / 255;\n\t\t\tdg = t + bg * (255 - (255 - bg) * (255 - sg) / 255 - t) / 255;\n\t\t\tt = sb * bb / 255;\n\t\t\tdb = t + bb * (255 - (255 - bb) * (255 - sb) / 255 - t) / 255;\n\t\t},\n\n\t\t'hard-light': function() {\n\t\t\tdr = sr < 128 ? 2 * sr * br / 255 : 255 - 2 * (255 - sr) * (255 - br) / 255;\n\t\t\tdg = sg < 128 ? 2 * sg * bg / 255 : 255 - 2 * (255 - sg) * (255 - bg) / 255;\n\t\t\tdb = sb < 128 ? 2 * sb * bb / 255 : 255 - 2 * (255 - sb) * (255 - bb) / 255;\n\t\t},\n\n\t\t'color-dodge': function() {\n\t\t\tdr = br === 0 ? 0 : sr === 255 ? 255 : min(255, 255 * br / (255 - sr));\n\t\t\tdg = bg === 0 ? 0 : sg === 255 ? 255 : min(255, 255 * bg / (255 - sg));\n\t\t\tdb = bb === 0 ? 0 : sb === 255 ? 255 : min(255, 255 * bb / (255 - sb));\n\t\t},\n\n\t\t'color-burn': function() {\n\t\t\tdr = br === 255 ? 255 : sr === 0 ? 0 : max(0, 255 - (255 - br) * 255 / sr);\n\t\t\tdg = bg === 255 ? 255 : sg === 0 ? 0 : max(0, 255 - (255 - bg) * 255 / sg);\n\t\t\tdb = bb === 255 ? 255 : sb === 0 ? 0 : max(0, 255 - (255 - bb) * 255 / sb);\n\t\t},\n\n\t\tdarken: function() {\n\t\t\tdr = br < sr ? br : sr;\n\t\t\tdg = bg < sg ? bg : sg;\n\t\t\tdb = bb < sb ? bb : sb;\n\t\t},\n\n\t\tlighten: function() {\n\t\t\tdr = br > sr ? br : sr;\n\t\t\tdg = bg > sg ? bg : sg;\n\t\t\tdb = bb > sb ? bb : sb;\n\t\t},\n\n\t\tdifference: function() {\n\t\t\tdr = br - sr;\n\t\t\tif (dr < 0)\n\t\t\t\tdr = -dr;\n\t\t\tdg = bg - sg;\n\t\t\tif (dg < 0)\n\t\t\t\tdg = -dg;\n\t\t\tdb = bb - sb;\n\t\t\tif (db < 0)\n\t\t\t\tdb = -db;\n\t\t},\n\n\t\texclusion: function() {\n\t\t\tdr = br + sr * (255 - br - br) / 255;\n\t\t\tdg = bg + sg * (255 - bg - bg) / 255;\n\t\t\tdb = bb + sb * (255 - bb - bb) / 255;\n\t\t},\n\n\t\thue: function() {\n\t\t\tsetSat(sr, sg, sb, getSat(br, bg, bb));\n\t\t\tsetLum(dr, dg, db, getLum(br, bg, bb));\n\t\t},\n\n\t\tsaturation: function() {\n\t\t\tsetSat(br, bg, bb, getSat(sr, sg, sb));\n\t\t\tsetLum(dr, dg, db, getLum(br, bg, bb));\n\t\t},\n\n\t\tluminosity: function() {\n\t\t\tsetLum(br, bg, bb, getLum(sr, sg, sb));\n\t\t},\n\n\t\tcolor: function() {\n\t\t\tsetLum(sr, sg, sb, getLum(br, bg, bb));\n\t\t},\n\n\t\tadd: function() {\n\t\t\tdr = min(br + sr, 255);\n\t\t\tdg = min(bg + sg, 255);\n\t\t\tdb = min(bb + sb, 255);\n\t\t},\n\n\t\tsubtract: function() {\n\t\t\tdr = max(br - sr, 0);\n\t\t\tdg = max(bg - sg, 0);\n\t\t\tdb = max(bb - sb, 0);\n\t\t},\n\n\t\taverage: function() {\n\t\t\tdr = (br + sr) / 2;\n\t\t\tdg = (bg + sg) / 2;\n\t\t\tdb = (bb + sb) / 2;\n\t\t},\n\n\t\tnegation: function() {\n\t\t\tdr = 255 - abs(255 - sr - br);\n\t\t\tdg = 255 - abs(255 - sg - bg);\n\t\t\tdb = 255 - abs(255 - sb - bb);\n\t\t}\n\t};\n\n\tvar nativeModes = this.nativeModes = Base.each([\n\t\t'source-over', 'source-in', 'source-out', 'source-atop',\n\t\t'destination-over', 'destination-in', 'destination-out',\n\t\t'destination-atop', 'lighter', 'darker', 'copy', 'xor'\n\t], function(mode) {\n\t\tthis[mode] = true;\n\t}, {});\n\n\tvar ctx = CanvasProvider.getContext(1, 1);\n\tBase.each(modes, function(func, mode) {\n\t\tvar darken = mode === 'darken',\n\t\t\tok = false;\n\t\tctx.save();\n\t\ttry {\n\t\t\tctx.fillStyle = darken ? '#300' : '#a00';\n\t\t\tctx.fillRect(0, 0, 1, 1);\n\t\t\tctx.globalCompositeOperation = mode;\n\t\t\tif (ctx.globalCompositeOperation === mode) {\n\t\t\t\tctx.fillStyle = darken ? '#a00' : '#300';\n\t\t\t\tctx.fillRect(0, 0, 1, 1);\n\t\t\t\tok = ctx.getImageData(0, 0, 1, 1).data[0] !== darken ? 170 : 51;\n\t\t\t}\n\t\t} catch (e) {}\n\t\tctx.restore();\n\t\tnativeModes[mode] = ok;\n\t});\n\tCanvasProvider.release(ctx);\n\n\tthis.process = function(mode, srcContext, dstContext, alpha, offset) {\n\t\tvar srcCanvas = srcContext.canvas,\n\t\t\tnormal = mode === 'normal';\n\t\tif (normal || nativeModes[mode]) {\n\t\t\tdstContext.save();\n\t\t\tdstContext.setTransform(1, 0, 0, 1, 0, 0);\n\t\t\tdstContext.globalAlpha = alpha;\n\t\t\tif (!normal)\n\t\t\t\tdstContext.globalCompositeOperation = mode;\n\t\t\tdstContext.drawImage(srcCanvas, offset.x, offset.y);\n\t\t\tdstContext.restore();\n\t\t} else {\n\t\t\tvar process = modes[mode];\n\t\t\tif (!process)\n\t\t\t\treturn;\n\t\t\tvar dstData = dstContext.getImageData(offset.x, offset.y,\n\t\t\t\t\tsrcCanvas.width, srcCanvas.height),\n\t\t\t\tdst = dstData.data,\n\t\t\t\tsrc = srcContext.getImageData(0, 0,\n\t\t\t\t\tsrcCanvas.width, srcCanvas.height).data;\n\t\t\tfor (var i = 0, l = dst.length; i < l; i += 4) {\n\t\t\t\tsr = src[i];\n\t\t\t\tbr = dst[i];\n\t\t\t\tsg = src[i + 1];\n\t\t\t\tbg = dst[i + 1];\n\t\t\t\tsb = src[i + 2];\n\t\t\t\tbb = dst[i + 2];\n\t\t\t\tsa = src[i + 3];\n\t\t\t\tba = dst[i + 3];\n\t\t\t\tprocess();\n\t\t\t\tvar a1 = sa * alpha / 255,\n\t\t\t\t\ta2 = 1 - a1;\n\t\t\t\tdst[i] = a1 * dr + a2 * br;\n\t\t\t\tdst[i + 1] = a1 * dg + a2 * bg;\n\t\t\t\tdst[i + 2] = a1 * db + a2 * bb;\n\t\t\t\tdst[i + 3] = sa * alpha + a2 * ba;\n\t\t\t}\n\t\t\tdstContext.putImageData(dstData, offset.x, offset.y);\n\t\t}\n\t};\n};\n\nvar SVGStyles = Base.each({\n\tfillColor: ['fill', 'color'],\n\tstrokeColor: ['stroke', 'color'],\n\tstrokeWidth: ['stroke-width', 'number'],\n\tstrokeCap: ['stroke-linecap', 'string'],\n\tstrokeJoin: ['stroke-linejoin', 'string'],\n\tstrokeScaling: ['vector-effect', 'lookup', {\n\t\ttrue: 'none',\n\t\tfalse: 'non-scaling-stroke'\n\t}, function(item, value) {\n\t\treturn !value\n\t\t\t\t&& (item instanceof PathItem\n\t\t\t\t\t|| item instanceof Shape\n\t\t\t\t\t|| item instanceof TextItem);\n\t}],\n\tmiterLimit: ['stroke-miterlimit', 'number'],\n\tdashArray: ['stroke-dasharray', 'array'],\n\tdashOffset: ['stroke-dashoffset', 'number'],\n\tfontFamily: ['font-family', 'string'],\n\tfontWeight: ['font-weight', 'string'],\n\tfontSize: ['font-size', 'number'],\n\tjustification: ['text-anchor', 'lookup', {\n\t\tleft: 'start',\n\t\tcenter: 'middle',\n\t\tright: 'end'\n\t}],\n\topacity: ['opacity', 'number'],\n\tblendMode: ['mix-blend-mode', 'string']\n}, function(entry, key) {\n\tvar part = Base.capitalize(key),\n\t\tlookup = entry[2];\n\tthis[key] = {\n\t\ttype: entry[1],\n\t\tproperty: key,\n\t\tattribute: entry[0],\n\t\ttoSVG: lookup,\n\t\tfromSVG: lookup && Base.each(lookup, function(value, name) {\n\t\t\tthis[value] = name;\n\t\t}, {}),\n\t\texportFilter: entry[3],\n\t\tget: 'get' + part,\n\t\tset: 'set' + part\n\t};\n}, {});\n\nvar SVGNamespaces = {\n\thref: 'http://www.w3.org/1999/xlink',\n\txlink: 'http://www.w3.org/2000/xmlns'\n};\n\nnew function() {\n\tvar formatter;\n\n\tfunction setAttributes(node, attrs) {\n\t\tfor (var key in attrs) {\n\t\t\tvar val = attrs[key],\n\t\t\t\tnamespace = SVGNamespaces[key];\n\t\t\tif (typeof val === 'number')\n\t\t\t\tval = formatter.number(val);\n\t\t\tif (namespace) {\n\t\t\t\tnode.setAttributeNS(namespace, key, val);\n\t\t\t} else {\n\t\t\t\tnode.setAttribute(key, val);\n\t\t\t}\n\t\t}\n\t\treturn node;\n\t}\n\n\tfunction createElement(tag, attrs) {\n\t\treturn setAttributes(\n\t\t\tdocument.createElementNS('http://www.w3.org/2000/svg', tag), attrs);\n\t}\n\n\tfunction getTransform(matrix, coordinates, center) {\n\t\tvar attrs = new Base(),\n\t\t\ttrans = matrix.getTranslation();\n\t\tif (coordinates) {\n\t\t\tmatrix = matrix.shiftless();\n\t\t\tvar point = matrix._inverseTransform(trans);\n\t\t\tattrs[center ? 'cx' : 'x'] = point.x;\n\t\t\tattrs[center ? 'cy' : 'y'] = point.y;\n\t\t\ttrans = null;\n\t\t}\n\t\tif (!matrix.isIdentity()) {\n\t\t\tvar decomposed = matrix.decompose();\n\t\t\tif (decomposed && !decomposed.shearing) {\n\t\t\t\tvar parts = [],\n\t\t\t\t\tangle = decomposed.rotation,\n\t\t\t\t\tscale = decomposed.scaling;\n\t\t\t\tif (trans && !trans.isZero())\n\t\t\t\t\tparts.push('translate(' + formatter.point(trans) + ')');\n\t\t\t\tif (!Numerical.isZero(scale.x - 1)\n\t\t\t\t\t\t|| !Numerical.isZero(scale.y - 1))\n\t\t\t\t\tparts.push('scale(' + formatter.point(scale) +')');\n\t\t\t\tif (angle)\n\t\t\t\t\tparts.push('rotate(' + formatter.number(angle) + ')');\n\t\t\t\tattrs.transform = parts.join(' ');\n\t\t\t} else {\n\t\t\t\tattrs.transform = 'matrix(' + matrix.getValues().join(',') + ')';\n\t\t\t}\n\t\t}\n\t\treturn attrs;\n\t}\n\n\tfunction exportGroup(item, options) {\n\t\tvar attrs = getTransform(item._matrix),\n\t\t\tchildren = item._children;\n\t\tvar node = createElement('g', attrs);\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i];\n\t\t\tvar childNode = exportSVG(child, options);\n\t\t\tif (childNode) {\n\t\t\t\tif (child.isClipMask()) {\n\t\t\t\t\tvar clip = createElement('clipPath');\n\t\t\t\t\tclip.appendChild(childNode);\n\t\t\t\t\tsetDefinition(child, clip, 'clip');\n\t\t\t\t\tsetAttributes(node, {\n\t\t\t\t\t\t'clip-path': 'url(#' + clip.id + ')'\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tnode.appendChild(childNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn node;\n\t}\n\n\tfunction exportRaster(item, options) {\n\t\tvar attrs = getTransform(item._matrix, true),\n\t\t\tsize = item.getSize(),\n\t\t\timage = item.getImage();\n\t\tattrs.x -= size.width / 2;\n\t\tattrs.y -= size.height / 2;\n\t\tattrs.width = size.width;\n\t\tattrs.height = size.height;\n\t\tattrs.href = options.embedImages === false && image && image.src\n\t\t\t\t|| item.toDataURL();\n\t\treturn createElement('image', attrs);\n\t}\n\n\tfunction exportPath(item, options) {\n\t\tvar matchShapes = options.matchShapes;\n\t\tif (matchShapes) {\n\t\t\tvar shape = item.toShape(false);\n\t\t\tif (shape)\n\t\t\t\treturn exportShape(shape, options);\n\t\t}\n\t\tvar segments = item._segments,\n\t\t\ttype,\n\t\t\tattrs = getTransform(item._matrix);\n\t\tif (segments.length === 0)\n\t\t\treturn null;\n\t\tif (matchShapes && !item.hasHandles()) {\n\t\t\tif (segments.length >= 3) {\n\t\t\t\ttype = item._closed ? 'polygon' : 'polyline';\n\t\t\t\tvar parts = [];\n\t\t\t\tfor(var i = 0, l = segments.length; i < l; i++)\n\t\t\t\t\tparts.push(formatter.point(segments[i]._point));\n\t\t\t\tattrs.points = parts.join(' ');\n\t\t\t} else {\n\t\t\t\ttype = 'line';\n\t\t\t\tvar first = segments[0]._point,\n\t\t\t\t\tlast = segments[segments.length - 1]._point;\n\t\t\t\tattrs.set({\n\t\t\t\t\tx1: first.x,\n\t\t\t\t\ty1: first.y,\n\t\t\t\t\tx2: last.x,\n\t\t\t\t\ty2: last.y\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\ttype = 'path';\n\t\t\tattrs.d = item.getPathData(null, options.precision);\n\t\t}\n\t\treturn createElement(type, attrs);\n\t}\n\n\tfunction exportShape(item) {\n\t\tvar type = item._type,\n\t\t\tradius = item._radius,\n\t\t\tattrs = getTransform(item._matrix, true, type !== 'rectangle');\n\t\tif (type === 'rectangle') {\n\t\t\ttype = 'rect';\n\t\t\tvar size = item._size,\n\t\t\t\twidth = size.width,\n\t\t\t\theight = size.height;\n\t\t\tattrs.x -= width / 2;\n\t\t\tattrs.y -= height / 2;\n\t\t\tattrs.width = width;\n\t\t\tattrs.height = height;\n\t\t\tif (radius.isZero())\n\t\t\t\tradius = null;\n\t\t}\n\t\tif (radius) {\n\t\t\tif (type === 'circle') {\n\t\t\t\tattrs.r = radius;\n\t\t\t} else {\n\t\t\t\tattrs.rx = radius.width;\n\t\t\t\tattrs.ry = radius.height;\n\t\t\t}\n\t\t}\n\t\treturn createElement(type, attrs);\n\t}\n\n\tfunction exportCompoundPath(item, options) {\n\t\tvar attrs = getTransform(item._matrix);\n\t\tvar data = item.getPathData(null, options.precision);\n\t\tif (data)\n\t\t\tattrs.d = data;\n\t\treturn createElement('path', attrs);\n\t}\n\n\tfunction exportPlacedSymbol(item, options) {\n\t\tvar attrs = getTransform(item._matrix, true),\n\t\t\tsymbol = item.getSymbol(),\n\t\t\tsymbolNode = getDefinition(symbol, 'symbol'),\n\t\t\tdefinition = symbol.getDefinition(),\n\t\t\tbounds = definition.getBounds();\n\t\tif (!symbolNode) {\n\t\t\tsymbolNode = createElement('symbol', {\n\t\t\t\tviewBox: formatter.rectangle(bounds)\n\t\t\t});\n\t\t\tsymbolNode.appendChild(exportSVG(definition, options));\n\t\t\tsetDefinition(symbol, symbolNode, 'symbol');\n\t\t}\n\t\tattrs.href = '#' + symbolNode.id;\n\t\tattrs.x += bounds.x;\n\t\tattrs.y += bounds.y;\n\t\tattrs.width = formatter.number(bounds.width);\n\t\tattrs.height = formatter.number(bounds.height);\n\t\tattrs.overflow = 'visible';\n\t\treturn createElement('use', attrs);\n\t}\n\n\tfunction exportGradient(color) {\n\t\tvar gradientNode = getDefinition(color, 'color');\n\t\tif (!gradientNode) {\n\t\t\tvar gradient = color.getGradient(),\n\t\t\t\tradial = gradient._radial,\n\t\t\t\torigin = color.getOrigin().transform(),\n\t\t\t\tdestination = color.getDestination().transform(),\n\t\t\t\tattrs;\n\t\t\tif (radial) {\n\t\t\t\tattrs = {\n\t\t\t\t\tcx: origin.x,\n\t\t\t\t\tcy: origin.y,\n\t\t\t\t\tr: origin.getDistance(destination)\n\t\t\t\t};\n\t\t\t\tvar highlight = color.getHighlight();\n\t\t\t\tif (highlight) {\n\t\t\t\t\thighlight = highlight.transform();\n\t\t\t\t\tattrs.fx = highlight.x;\n\t\t\t\t\tattrs.fy = highlight.y;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tattrs = {\n\t\t\t\t\tx1: origin.x,\n\t\t\t\t\ty1: origin.y,\n\t\t\t\t\tx2: destination.x,\n\t\t\t\t\ty2: destination.y\n\t\t\t\t};\n\t\t\t}\n\t\t\tattrs.gradientUnits = 'userSpaceOnUse';\n\t\t\tgradientNode = createElement(\n\t\t\t\t\t(radial ? 'radial' : 'linear') + 'Gradient', attrs);\n\t\t\tvar stops = gradient._stops;\n\t\t\tfor (var i = 0, l = stops.length; i < l; i++) {\n\t\t\t\tvar stop = stops[i],\n\t\t\t\t\tstopColor = stop._color,\n\t\t\t\t\talpha = stopColor.getAlpha();\n\t\t\t\tattrs = {\n\t\t\t\t\toffset: stop._rampPoint,\n\t\t\t\t\t'stop-color': stopColor.toCSS(true)\n\t\t\t\t};\n\t\t\t\tif (alpha < 1)\n\t\t\t\t\tattrs['stop-opacity'] = alpha;\n\t\t\t\tgradientNode.appendChild(createElement('stop', attrs));\n\t\t\t}\n\t\t\tsetDefinition(color, gradientNode, 'color');\n\t\t}\n\t\treturn 'url(#' + gradientNode.id + ')';\n\t}\n\n\tfunction exportText(item) {\n\t\tvar node = createElement('text', getTransform(item._matrix, true));\n\t\tnode.textContent = item._content;\n\t\treturn node;\n\t}\n\n\tvar exporters = {\n\t\tGroup: exportGroup,\n\t\tLayer: exportGroup,\n\t\tRaster: exportRaster,\n\t\tPath: exportPath,\n\t\tShape: exportShape,\n\t\tCompoundPath: exportCompoundPath,\n\t\tPlacedSymbol: exportPlacedSymbol,\n\t\tPointText: exportText\n\t};\n\n\tfunction applyStyle(item, node, isRoot) {\n\t\tvar attrs = {},\n\t\t\tparent = !isRoot && item.getParent();\n\n\t\tif (item._name != null)\n\t\t\tattrs.id = item._name;\n\n\t\tBase.each(SVGStyles, function(entry) {\n\t\t\tvar get = entry.get,\n\t\t\t\ttype = entry.type,\n\t\t\t\tvalue = item[get]();\n\t\t\tif (entry.exportFilter\n\t\t\t\t\t? entry.exportFilter(item, value)\n\t\t\t\t\t: !parent || !Base.equals(parent[get](), value)) {\n\t\t\t\tif (type === 'color' && value != null) {\n\t\t\t\t\tvar alpha = value.getAlpha();\n\t\t\t\t\tif (alpha < 1)\n\t\t\t\t\t\tattrs[entry.attribute + '-opacity'] = alpha;\n\t\t\t\t}\n\t\t\t\tattrs[entry.attribute] = value == null\n\t\t\t\t\t? 'none'\n\t\t\t\t\t: type === 'number'\n\t\t\t\t\t\t? formatter.number(value)\n\t\t\t\t\t\t: type === 'color'\n\t\t\t\t\t\t\t? value.gradient\n\t\t\t\t\t\t\t\t? exportGradient(value, item)\n\t\t\t\t\t\t\t\t: value.toCSS(true)\n\t\t\t\t\t\t\t: type === 'array'\n\t\t\t\t\t\t\t\t? value.join(',')\n\t\t\t\t\t\t\t\t: type === 'lookup'\n\t\t\t\t\t\t\t\t\t? entry.toSVG[value]\n\t\t\t\t\t\t\t\t\t: value;\n\t\t\t}\n\t\t});\n\n\t\tif (attrs.opacity === 1)\n\t\t\tdelete attrs.opacity;\n\n\t\tif (!item._visible)\n\t\t\tattrs.visibility = 'hidden';\n\n\t\treturn setAttributes(node, attrs);\n\t}\n\n\tvar definitions;\n\tfunction getDefinition(item, type) {\n\t\tif (!definitions)\n\t\t\tdefinitions = { ids: {}, svgs: {} };\n\t\treturn item && definitions.svgs[type + '-' + item._id];\n\t}\n\n\tfunction setDefinition(item, node, type) {\n\t\tif (!definitions)\n\t\t\tgetDefinition();\n\t\tvar id = definitions.ids[type] = (definitions.ids[type] || 0) + 1;\n\t\tnode.id = type + '-' + id;\n\t\tdefinitions.svgs[type + '-' + item._id] = node;\n\t}\n\n\tfunction exportDefinitions(node, options) {\n\t\tvar svg = node,\n\t\t\tdefs = null;\n\t\tif (definitions) {\n\t\t\tsvg = node.nodeName.toLowerCase() === 'svg' && node;\n\t\t\tfor (var i in definitions.svgs) {\n\t\t\t\tif (!defs) {\n\t\t\t\t\tif (!svg) {\n\t\t\t\t\t\tsvg = createElement('svg');\n\t\t\t\t\t\tsvg.appendChild(node);\n\t\t\t\t\t}\n\t\t\t\t\tdefs = svg.insertBefore(createElement('defs'),\n\t\t\t\t\t\t\tsvg.firstChild);\n\t\t\t\t}\n\t\t\t\tdefs.appendChild(definitions.svgs[i]);\n\t\t\t}\n\t\t\tdefinitions = null;\n\t\t}\n\t\treturn options.asString\n\t\t\t\t? new XMLSerializer().serializeToString(svg)\n\t\t\t\t: svg;\n\t}\n\n\tfunction exportSVG(item, options, isRoot) {\n\t\tvar exporter = exporters[item._class],\n\t\t\tnode = exporter && exporter(item, options);\n\t\tif (node) {\n\t\t\tvar onExport = options.onExport;\n\t\t\tif (onExport)\n\t\t\t\tnode = onExport(item, node, options) || node;\n\t\t\tvar data = JSON.stringify(item._data);\n\t\t\tif (data && data !== '{}' && data !== 'null')\n\t\t\t\tnode.setAttribute('data-paper-data', data);\n\t\t}\n\t\treturn node && applyStyle(item, node, isRoot);\n\t}\n\n\tfunction setOptions(options) {\n\t\tif (!options)\n\t\t\toptions = {};\n\t\tformatter = new Formatter(options.precision);\n\t\treturn options;\n\t}\n\n\tItem.inject({\n\t\texportSVG: function(options) {\n\t\t\toptions = setOptions(options);\n\t\t\treturn exportDefinitions(exportSVG(this, options, true), options);\n\t\t}\n\t});\n\n\tProject.inject({\n\t\texportSVG: function(options) {\n\t\t\toptions = setOptions(options);\n\t\t\tvar layers = this.layers,\n\t\t\t\tview = this.getView(),\n\t\t\t\tsize = view.getViewSize(),\n\t\t\t\tnode = createElement('svg', {\n\t\t\t\t\tx: 0,\n\t\t\t\t\ty: 0,\n\t\t\t\t\twidth: size.width,\n\t\t\t\t\theight: size.height,\n\t\t\t\t\tversion: '1.1',\n\t\t\t\t\txmlns: 'http://www.w3.org/2000/svg',\n\t\t\t\t\t'xmlns:xlink': 'http://www.w3.org/1999/xlink'\n\t\t\t\t}),\n\t\t\t\tparent = node,\n\t\t\t\tmatrix = view._matrix;\n\t\t\tif (!matrix.isIdentity())\n\t\t\t\tparent = node.appendChild(\n\t\t\t\t\t\tcreateElement('g', getTransform(matrix)));\n\t\t\tfor (var i = 0, l = layers.length; i < l; i++)\n\t\t\t\tparent.appendChild(exportSVG(layers[i], options, true));\n\t\t\treturn exportDefinitions(node, options);\n\t\t}\n\t});\n};\n\nnew function() {\n\n\tfunction getValue(node, name, isString, allowNull) {\n\t\tvar namespace = SVGNamespaces[name],\n\t\t\tvalue = namespace\n\t\t\t\t? node.getAttributeNS(namespace, name)\n\t\t\t\t: node.getAttribute(name);\n\t\tif (value === 'null')\n\t\t\tvalue = null;\n\t\treturn value == null\n\t\t\t\t? allowNull\n\t\t\t\t\t? null\n\t\t\t\t\t: isString\n\t\t\t\t\t\t? ''\n\t\t\t\t\t\t: 0\n\t\t\t\t: isString\n\t\t\t\t\t? value\n\t\t\t\t\t: parseFloat(value);\n\t}\n\n\tfunction getPoint(node, x, y, allowNull) {\n\t\tx = getValue(node, x, false, allowNull);\n\t\ty = getValue(node, y, false, allowNull);\n\t\treturn allowNull && (x == null || y == null) ? null\n\t\t\t\t: new Point(x, y);\n\t}\n\n\tfunction getSize(node, w, h, allowNull) {\n\t\tw = getValue(node, w, false, allowNull);\n\t\th = getValue(node, h, false, allowNull);\n\t\treturn allowNull && (w == null || h == null) ? null\n\t\t\t\t: new Size(w, h);\n\t}\n\n\tfunction convertValue(value, type, lookup) {\n\t\treturn value === 'none'\n\t\t\t\t? null\n\t\t\t\t: type === 'number'\n\t\t\t\t\t? parseFloat(value)\n\t\t\t\t\t: type === 'array'\n\t\t\t\t\t\t? value ? value.split(/[\\s,]+/g).map(parseFloat) : []\n\t\t\t\t\t\t: type === 'color'\n\t\t\t\t\t\t\t? getDefinition(value) || value\n\t\t\t\t\t\t\t: type === 'lookup'\n\t\t\t\t\t\t\t\t? lookup[value]\n\t\t\t\t\t\t\t\t: value;\n\t}\n\n\tfunction importGroup(node, type, options, isRoot) {\n\t\tvar nodes = node.childNodes,\n\t\t\tisClip = type === 'clippath',\n\t\t\titem = new Group(),\n\t\t\tproject = item._project,\n\t\t\tcurrentStyle = project._currentStyle,\n\t\t\tchildren = [];\n\t\tif (!isClip) {\n\t\t\titem = applyAttributes(item, node, isRoot);\n\t\t\tproject._currentStyle = item._style.clone();\n\t\t}\n\t\tif (isRoot) {\n\t\t\tvar defs = node.querySelectorAll('defs');\n\t\t\tfor (var i = 0, l = defs.length; i < l; i++) {\n\t\t\t\timportSVG(defs[i], options, false);\n\t\t\t}\n\t\t}\n\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\tvar childNode = nodes[i],\n\t\t\t\tchild;\n\t\t\tif (childNode.nodeType === 1\n\t\t\t\t\t&& childNode.nodeName.toLowerCase() !== 'defs'\n\t\t\t\t\t&& (child = importSVG(childNode, options, false))\n\t\t\t\t\t&& !(child instanceof Symbol))\n\t\t\t\tchildren.push(child);\n\t\t}\n\t\titem.addChildren(children);\n\t\tif (isClip)\n\t\t\titem = applyAttributes(item.reduce(), node, isRoot);\n\t\tproject._currentStyle = currentStyle;\n\t\tif (isClip || type === 'defs') {\n\t\t\titem.remove();\n\t\t\titem = null;\n\t\t}\n\t\treturn item;\n\t}\n\n\tfunction importPoly(node, type) {\n\t\tvar coords = node.getAttribute('points').match(\n\t\t\t\t\t/[+-]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?/g),\n\t\t\tpoints = [];\n\t\tfor (var i = 0, l = coords.length; i < l; i += 2)\n\t\t\tpoints.push(new Point(\n\t\t\t\t\tparseFloat(coords[i]),\n\t\t\t\t\tparseFloat(coords[i + 1])));\n\t\tvar path = new Path(points);\n\t\tif (type === 'polygon')\n\t\t\tpath.closePath();\n\t\treturn path;\n\t}\n\n\tfunction importPath(node) {\n\t\tvar data = node.getAttribute('d'),\n\t\t\tparam = { pathData: data };\n\t\treturn (data.match(/m/gi) || []).length > 1 || /z\\S+/i.test(data)\n\t\t\t\t? new CompoundPath(param)\n\t\t\t\t: new Path(param);\n\t}\n\n\tfunction importGradient(node, type) {\n\t\tvar id = (getValue(node, 'href', true) || '').substring(1),\n\t\t\tisRadial = type === 'radialgradient',\n\t\t\tgradient;\n\t\tif (id) {\n\t\t\tgradient = definitions[id].getGradient();\n\t\t} else {\n\t\t\tvar nodes = node.childNodes,\n\t\t\t\tstops = [];\n\t\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\t\tvar child = nodes[i];\n\t\t\t\tif (child.nodeType === 1)\n\t\t\t\t\tstops.push(applyAttributes(new GradientStop(), child));\n\t\t\t}\n\t\t\tgradient = new Gradient(stops, isRadial);\n\t\t}\n\t\tvar origin, destination, highlight;\n\t\tif (isRadial) {\n\t\t\torigin = getPoint(node, 'cx', 'cy');\n\t\t\tdestination = origin.add(getValue(node, 'r'), 0);\n\t\t\thighlight = getPoint(node, 'fx', 'fy', true);\n\t\t} else {\n\t\t\torigin = getPoint(node, 'x1', 'y1');\n\t\t\tdestination = getPoint(node, 'x2', 'y2');\n\t\t}\n\t\tapplyAttributes(\n\t\t\tnew Color(gradient, origin, destination, highlight), node);\n\t\treturn null;\n\t}\n\n\tvar importers = {\n\t\t'#document': function (node, type, options, isRoot) {\n\t\t\tvar nodes = node.childNodes;\n\t\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\t\tvar child = nodes[i];\n\t\t\t\tif (child.nodeType === 1) {\n\t\t\t\t\tvar next = child.nextSibling;\n\t\t\t\t\tdocument.body.appendChild(child);\n\t\t\t\t\tvar item = importSVG(child, options, isRoot);\n\t\t\t\t\tif (next) {\n\t\t\t\t\t\tnode.insertBefore(child, next);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnode.appendChild(child);\n\t\t\t\t\t}\n\t\t\t\t\treturn item;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tg: importGroup,\n\t\tsvg: importGroup,\n\t\tclippath: importGroup,\n\t\tpolygon: importPoly,\n\t\tpolyline: importPoly,\n\t\tpath: importPath,\n\t\tlineargradient: importGradient,\n\t\tradialgradient: importGradient,\n\n\t\timage: function (node) {\n\t\t\tvar raster = new Raster(getValue(node, 'href', true));\n\t\t\traster.on('load', function() {\n\t\t\t\tvar size = getSize(node, 'width', 'height');\n\t\t\t\tthis.setSize(size);\n\t\t\t\tvar center = this._matrix._transformPoint(\n\t\t\t\t\t\tgetPoint(node, 'x', 'y').add(size.divide(2)));\n\t\t\t\tthis.translate(center);\n\t\t\t});\n\t\t\treturn raster;\n\t\t},\n\n\t\tsymbol: function(node, type, options, isRoot) {\n\t\t\treturn new Symbol(importGroup(node, type, options, isRoot), true);\n\t\t},\n\n\t\tdefs: importGroup,\n\n\t\tuse: function(node) {\n\t\t\tvar id = (getValue(node, 'href', true) || '').substring(1),\n\t\t\t\tdefinition = definitions[id],\n\t\t\t\tpoint = getPoint(node, 'x', 'y');\n\t\t\treturn definition\n\t\t\t\t\t? definition instanceof Symbol\n\t\t\t\t\t\t? definition.place(point)\n\t\t\t\t\t\t: definition.clone().translate(point)\n\t\t\t\t\t: null;\n\t\t},\n\n\t\tcircle: function(node) {\n\t\t\treturn new Shape.Circle(getPoint(node, 'cx', 'cy'),\n\t\t\t\t\tgetValue(node, 'r'));\n\t\t},\n\n\t\tellipse: function(node) {\n\t\t\treturn new Shape.Ellipse({\n\t\t\t\tcenter: getPoint(node, 'cx', 'cy'),\n\t\t\t\tradius: getSize(node, 'rx', 'ry')\n\t\t\t});\n\t\t},\n\n\t\trect: function(node) {\n\t\t\tvar point = getPoint(node, 'x', 'y'),\n\t\t\t\tsize = getSize(node, 'width', 'height'),\n\t\t\t\tradius = getSize(node, 'rx', 'ry');\n\t\t\treturn new Shape.Rectangle(new Rectangle(point, size), radius);\n\t\t},\n\n\t\tline: function(node) {\n\t\t\treturn new Path.Line(getPoint(node, 'x1', 'y1'),\n\t\t\t\t\tgetPoint(node, 'x2', 'y2'));\n\t\t},\n\n\t\ttext: function(node) {\n\t\t\tvar text = new PointText(getPoint(node, 'x', 'y')\n\t\t\t\t\t.add(getPoint(node, 'dx', 'dy')));\n\t\t\ttext.setContent(node.textContent.trim() || '');\n\t\t\treturn text;\n\t\t}\n\t};\n\n\tfunction applyTransform(item, value, name, node) {\n\t\tvar transforms = (node.getAttribute(name) || '').split(/\\)\\s*/g),\n\t\t\tmatrix = new Matrix();\n\t\tfor (var i = 0, l = transforms.length; i < l; i++) {\n\t\t\tvar transform = transforms[i];\n\t\t\tif (!transform)\n\t\t\t\tbreak;\n\t\t\tvar parts = transform.split(/\\(\\s*/),\n\t\t\t\tcommand = parts[0],\n\t\t\t\tv = parts[1].split(/[\\s,]+/g);\n\t\t\tfor (var j = 0, m = v.length; j < m; j++)\n\t\t\t\tv[j] = parseFloat(v[j]);\n\t\t\tswitch (command) {\n\t\t\tcase 'matrix':\n\t\t\t\tmatrix.concatenate(\n\t\t\t\t\t\tnew Matrix(v[0], v[1], v[2], v[3], v[4], v[5]));\n\t\t\t\tbreak;\n\t\t\tcase 'rotate':\n\t\t\t\tmatrix.rotate(v[0], v[1], v[2]);\n\t\t\t\tbreak;\n\t\t\tcase 'translate':\n\t\t\t\tmatrix.translate(v[0], v[1]);\n\t\t\t\tbreak;\n\t\t\tcase 'scale':\n\t\t\t\tmatrix.scale(v);\n\t\t\t\tbreak;\n\t\t\tcase 'skewX':\n\t\t\t\tmatrix.skew(v[0], 0);\n\t\t\t\tbreak;\n\t\t\tcase 'skewY':\n\t\t\t\tmatrix.skew(0, v[0]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\titem.transform(matrix);\n\t}\n\n\tfunction applyOpacity(item, value, name) {\n\t\tvar color = item[name === 'fill-opacity' ? 'getFillColor'\n\t\t\t\t: 'getStrokeColor']();\n\t\tif (color)\n\t\t\tcolor.setAlpha(parseFloat(value));\n\t}\n\n\tvar attributes = Base.set(Base.each(SVGStyles, function(entry) {\n\t\tthis[entry.attribute] = function(item, value) {\n\t\t\titem[entry.set](convertValue(value, entry.type, entry.fromSVG));\n\t\t\tif (entry.type === 'color' && item instanceof Shape) {\n\t\t\t\tvar color = item[entry.get]();\n\t\t\t\tif (color)\n\t\t\t\t\tcolor.transform(new Matrix().translate(\n\t\t\t\t\t\t\titem.getPosition(true).negate()));\n\t\t\t}\n\t\t};\n\t}, {}), {\n\t\tid: function(item, value) {\n\t\t\tdefinitions[value] = item;\n\t\t\tif (item.setName)\n\t\t\t\titem.setName(value);\n\t\t},\n\n\t\t'clip-path': function(item, value) {\n\t\t\tvar clip = getDefinition(value);\n\t\t\tif (clip) {\n\t\t\t\tclip = clip.clone();\n\t\t\t\tclip.setClipMask(true);\n\t\t\t\tif (item instanceof Group) {\n\t\t\t\t\titem.insertChild(0, clip);\n\t\t\t\t} else {\n\t\t\t\t\treturn new Group(clip, item);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tgradientTransform: applyTransform,\n\t\ttransform: applyTransform,\n\n\t\t'fill-opacity': applyOpacity,\n\t\t'stroke-opacity': applyOpacity,\n\n\t\tvisibility: function(item, value) {\n\t\t\titem.setVisible(value === 'visible');\n\t\t},\n\n\t\tdisplay: function(item, value) {\n\t\t\titem.setVisible(value !== null);\n\t\t},\n\n\t\t'stop-color': function(item, value) {\n\t\t\tif (item.setColor)\n\t\t\t\titem.setColor(value);\n\t\t},\n\n\t\t'stop-opacity': function(item, value) {\n\t\t\tif (item._color)\n\t\t\t\titem._color.setAlpha(parseFloat(value));\n\t\t},\n\n\t\toffset: function(item, value) {\n\t\t\tvar percentage = value.match(/(.*)%$/);\n\t\t\titem.setRampPoint(percentage\n\t\t\t\t\t? percentage[1] / 100\n\t\t\t\t\t: parseFloat(value));\n\t\t},\n\n\t\tviewBox: function(item, value, name, node, styles) {\n\t\t\tvar rect = new Rectangle(convertValue(value, 'array')),\n\t\t\t\tsize = getSize(node, 'width', 'height', true);\n\t\t\tif (item instanceof Group) {\n\t\t\t\tvar scale = size ? rect.getSize().divide(size) : 1,\n\t\t\t\t\tmatrix = new Matrix().translate(rect.getPoint()).scale(scale);\n\t\t\t\titem.transform(matrix.inverted());\n\t\t\t} else if (item instanceof Symbol) {\n\t\t\t\tif (size)\n\t\t\t\t\trect.setSize(size);\n\t\t\t\tvar clip = getAttribute(node, 'overflow', styles) != 'visible',\n\t\t\t\t\tgroup = item._definition;\n\t\t\t\tif (clip && !rect.contains(group.getBounds())) {\n\t\t\t\t\tclip = new Shape.Rectangle(rect).transform(group._matrix);\n\t\t\t\t\tclip.setClipMask(true);\n\t\t\t\t\tgroup.addChild(clip);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tfunction getAttribute(node, name, styles) {\n\t\tvar attr = node.attributes[name],\n\t\t\tvalue = attr && attr.value;\n\t\tif (!value) {\n\t\t\tvar style = Base.camelize(name);\n\t\t\tvalue = node.style[style];\n\t\t\tif (!value && styles.node[style] !== styles.parent[style])\n\t\t\t\tvalue = styles.node[style];\n\t\t}\n\t\treturn !value\n\t\t\t\t? undefined\n\t\t\t\t: value === 'none'\n\t\t\t\t\t? null\n\t\t\t\t\t: value;\n\t}\n\n\tfunction applyAttributes(item, node, isRoot) {\n\t\tvar styles = {\n\t\t\tnode: DomElement.getStyles(node) || {},\n\t\t\tparent: !isRoot && DomElement.getStyles(node.parentNode) || {}\n\t\t};\n\t\tBase.each(attributes, function(apply, name) {\n\t\t\tvar value = getAttribute(node, name, styles);\n\t\t\tif (value !== undefined)\n\t\t\t\titem = Base.pick(apply(item, value, name, node, styles), item);\n\t\t});\n\t\treturn item;\n\t}\n\n\tvar definitions = {};\n\tfunction getDefinition(value) {\n\t\tvar match = value && value.match(/\\((?:#|)([^)']+)/);\n\t\treturn match && definitions[match[1]];\n\t}\n\n\tfunction importSVG(source, options, isRoot) {\n\t\tif (!source)\n\t\t\treturn null;\n\t\tif (!options) {\n\t\t\toptions = {};\n\t\t} else if (typeof options === 'function') {\n\t\t\toptions = { onLoad: options };\n\t\t}\n\n\t\tvar node = source,\n\t\t\tscope = paper;\n\n\t\tfunction onLoadCallback(svg) {\n\t\t\tpaper = scope;\n\t\t\tvar item = importSVG(svg, options, isRoot),\n\t\t\t\tonLoad = options.onLoad,\n\t\t\t\tview = scope.project && scope.getView();\n\t\t\tif (onLoad)\n\t\t\t\tonLoad.call(this, item);\n\t\t\tview.update();\n\t\t}\n\n\t\tif (isRoot) {\n\t\t\tif (typeof source === 'string' && !/^.*</.test(source)) {\n\t\t\t\tnode = document.getElementById(source);\n\t\t\t\tif (node) {\n\t\t\t\t\tsource = null;\n\t\t\t\t} else {\n\t\t\t\t\treturn Http.request('get', source, onLoadCallback);\n\t\t\t\t}\n\t\t\t} else if (typeof File !== 'undefined' && source instanceof File) {\n\t\t\t\tvar reader = new FileReader();\n\t\t\t\treader.onload = function() {\n\t\t\t\t\tonLoadCallback(reader.result);\n\t\t\t\t};\n\t\t\t\treturn reader.readAsText(source);\n\t\t\t}\n\t\t}\n\n\t\tif (typeof source === 'string')\n\t\t\tnode = new DOMParser().parseFromString(source, 'image/svg+xml');\n\t\tif (!node.nodeName)\n\t\t\tthrow new Error('Unsupported SVG source: ' + source);\n\t\tvar type = node.nodeName.toLowerCase(),\n\t\t\timporter = importers[type],\n\t\t\titem,\n\t\t\tdata = node.getAttribute && node.getAttribute('data-paper-data'),\n\t\t\tsettings = scope.settings,\n\t\t\tapplyMatrix = settings.applyMatrix;\n\t\tsettings.applyMatrix = false;\n\t\titem = importer && importer(node, type, options, isRoot) || null;\n\t\tsettings.applyMatrix = applyMatrix;\n\t\tif (item) {\n\t\t\tif (type !== '#document' && !(item instanceof Group))\n\t\t\t\titem = applyAttributes(item, node, isRoot);\n\t\t\tvar onImport = options.onImport;\n\t\t\tif (onImport)\n\t\t\t\titem = onImport(node, item, options) || item;\n\t\t\tif (options.expandShapes && item instanceof Shape) {\n\t\t\t\titem.remove();\n\t\t\t\titem = item.toPath();\n\t\t\t}\n\t\t\tif (data)\n\t\t\t\titem._data = JSON.parse(data);\n\t\t}\n\t\tif (isRoot) {\n\t\t\tdefinitions = {};\n\t\t\tif (item && Base.pick(options.applyMatrix, applyMatrix))\n\t\t\t\titem.matrix.apply(true, true);\n\t\t}\n\t\treturn item;\n\t}\n\n\tItem.inject({\n\t\timportSVG: function(node, options) {\n\t\t\treturn this.addChild(importSVG(node, options, true));\n\t\t}\n\t});\n\n\tProject.inject({\n\t\timportSVG: function(node, options) {\n\t\t\tthis.activate();\n\t\t\treturn importSVG(node, options, true);\n\t\t}\n\t});\n};\n\nBase.exports.PaperScript = (function() {\n\tvar exports, define,\n\t\tscope = this;\n!function(e,r){return\"object\"==typeof exports&&\"object\"==typeof module?r(exports):\"function\"==typeof define&&define.amd?define([\"exports\"],r):(r(e.acorn||(e.acorn={})),void 0)}(this,function(e){\"use strict\";function r(e){fr=e||{};for(var r in mr)Object.prototype.hasOwnProperty.call(fr,r)||(fr[r]=mr[r]);hr=fr.sourceFile||null}function t(e,r){var t=vr(dr,e);r+=\" (\"+t.line+\":\"+t.column+\")\";var n=new SyntaxError(r);throw n.pos=e,n.loc=t,n.raisedAt=br,n}function n(e){function r(e){if(1==e.length)return t+=\"return str === \"+JSON.stringify(e[0])+\";\";t+=\"switch(str){\";for(var r=0;r<e.length;++r)t+=\"case \"+JSON.stringify(e[r])+\":\";t+=\"return true}return false;\"}e=e.split(\" \");var t=\"\",n=[];e:for(var a=0;a<e.length;++a){for(var o=0;o<n.length;++o)if(n[o][0].length==e[a].length){n[o].push(e[a]);continue e}n.push([e[a]])}if(n.length>3){n.sort(function(e,r){return r.length-e.length}),t+=\"switch(str.length){\";for(var a=0;a<n.length;++a){var i=n[a];t+=\"case \"+i[0].length+\":\",r(i)}t+=\"}\"}else r(e);return new Function(\"str\",t)}function a(){this.line=Ar,this.column=br-Sr}function o(){Ar=1,br=Sr=0,Er=!0,u()}function i(e,r){gr=br,fr.locations&&(kr=new a),wr=e,u(),Cr=r,Er=e.beforeExpr}function s(){var e=fr.onComment&&fr.locations&&new a,r=br,n=dr.indexOf(\"*/\",br+=2);if(-1===n&&t(br-2,\"Unterminated comment\"),br=n+2,fr.locations){Kt.lastIndex=r;for(var o;(o=Kt.exec(dr))&&o.index<br;)++Ar,Sr=o.index+o[0].length}fr.onComment&&fr.onComment(!0,dr.slice(r+2,n),r,br,e,fr.locations&&new a)}function c(){for(var e=br,r=fr.onComment&&fr.locations&&new a,t=dr.charCodeAt(br+=2);pr>br&&10!==t&&13!==t&&8232!==t&&8233!==t;)++br,t=dr.charCodeAt(br);fr.onComment&&fr.onComment(!1,dr.slice(e+2,br),e,br,r,fr.locations&&new a)}function u(){for(;pr>br;){var e=dr.charCodeAt(br);if(32===e)++br;else if(13===e){++br;var r=dr.charCodeAt(br);10===r&&++br,fr.locations&&(++Ar,Sr=br)}else if(10===e||8232===e||8233===e)++br,fr.locations&&(++Ar,Sr=br);else if(e>8&&14>e)++br;else if(47===e){var r=dr.charCodeAt(br+1);if(42===r)s();else{if(47!==r)break;c()}}else if(160===e)++br;else{if(!(e>=5760&&Jt.test(String.fromCharCode(e))))break;++br}}}function l(){var e=dr.charCodeAt(br+1);return e>=48&&57>=e?E(!0):(++br,i(xt))}function f(){var e=dr.charCodeAt(br+1);return Er?(++br,k()):61===e?x(Et,2):x(wt,1)}function d(){var e=dr.charCodeAt(br+1);return 61===e?x(Et,2):x(Dt,1)}function p(e){var r=dr.charCodeAt(br+1);return r===e?x(124===e?Lt:Ut,2):61===r?x(Et,2):x(124===e?Rt:Tt,1)}function h(){var e=dr.charCodeAt(br+1);return 61===e?x(Et,2):x(Vt,1)}function m(e){var r=dr.charCodeAt(br+1);return r===e?45==r&&62==dr.charCodeAt(br+2)&&Gt.test(dr.slice(Lr,br))?(br+=3,c(),u(),g()):x(St,2):61===r?x(Et,2):x(At,1)}function v(e){var r=dr.charCodeAt(br+1),t=1;return r===e?(t=62===e&&62===dr.charCodeAt(br+2)?3:2,61===dr.charCodeAt(br+t)?x(Et,t+1):x(jt,t)):33==r&&60==e&&45==dr.charCodeAt(br+2)&&45==dr.charCodeAt(br+3)?(br+=4,c(),u(),g()):(61===r&&(t=61===dr.charCodeAt(br+2)?3:2),x(Ot,t))}function b(e){var r=dr.charCodeAt(br+1);return 61===r?x(qt,61===dr.charCodeAt(br+2)?3:2):x(61===e?Ct:It,1)}function y(e){switch(e){case 46:return l();case 40:return++br,i(mt);case 41:return++br,i(vt);case 59:return++br,i(yt);case 44:return++br,i(bt);case 91:return++br,i(ft);case 93:return++br,i(dt);case 123:return++br,i(pt);case 125:return++br,i(ht);case 58:return++br,i(gt);case 63:return++br,i(kt);case 48:var r=dr.charCodeAt(br+1);if(120===r||88===r)return C();case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:return E(!1);case 34:case 39:return A(e);case 47:return f(e);case 37:case 42:return d();case 124:case 38:return p(e);case 94:return h();case 43:case 45:return m(e);case 60:case 62:return v(e);case 61:case 33:return b(e);case 126:return x(It,1)}return!1}function g(e){if(e?br=yr+1:yr=br,fr.locations&&(xr=new a),e)return k();if(br>=pr)return i(Br);var r=dr.charCodeAt(br);if(Qt(r)||92===r)return L();var n=y(r);if(n===!1){var o=String.fromCharCode(r);if(\"\\\\\"===o||$t.test(o))return L();t(br,\"Unexpected character '\"+o+\"'\")}return n}function x(e,r){var t=dr.slice(br,br+r);br+=r,i(e,t)}function k(){for(var e,r,n=\"\",a=br;;){br>=pr&&t(a,\"Unterminated regular expression\");var o=dr.charAt(br);if(Gt.test(o)&&t(a,\"Unterminated regular expression\"),e)e=!1;else{if(\"[\"===o)r=!0;else if(\"]\"===o&&r)r=!1;else if(\"/\"===o&&!r)break;e=\"\\\\\"===o}++br}var n=dr.slice(a,br);++br;var s=I();return s&&!/^[gmsiy]*$/.test(s)&&t(a,\"Invalid regexp flag\"),i(jr,new RegExp(n,s))}function w(e,r){for(var t=br,n=0,a=0,o=null==r?1/0:r;o>a;++a){var i,s=dr.charCodeAt(br);if(i=s>=97?s-97+10:s>=65?s-65+10:s>=48&&57>=s?s-48:1/0,i>=e)break;++br,n=n*e+i}return br===t||null!=r&&br-t!==r?null:n}function C(){br+=2;var e=w(16);return null==e&&t(yr+2,\"Expected hexadecimal number\"),Qt(dr.charCodeAt(br))&&t(br,\"Identifier directly after number\"),i(Or,e)}function E(e){var r=br,n=!1,a=48===dr.charCodeAt(br);e||null!==w(10)||t(r,\"Invalid number\"),46===dr.charCodeAt(br)&&(++br,w(10),n=!0);var o=dr.charCodeAt(br);(69===o||101===o)&&(o=dr.charCodeAt(++br),(43===o||45===o)&&++br,null===w(10)&&t(r,\"Invalid number\"),n=!0),Qt(dr.charCodeAt(br))&&t(br,\"Identifier directly after number\");var s,c=dr.slice(r,br);return n?s=parseFloat(c):a&&1!==c.length?/[89]/.test(c)||Tr?t(r,\"Invalid number\"):s=parseInt(c,8):s=parseInt(c,10),i(Or,s)}function A(e){br++;for(var r=\"\";;){br>=pr&&t(yr,\"Unterminated string constant\");var n=dr.charCodeAt(br);if(n===e)return++br,i(Dr,r);if(92===n){n=dr.charCodeAt(++br);var a=/^[0-7]+/.exec(dr.slice(br,br+3));for(a&&(a=a[0]);a&&parseInt(a,8)>255;)a=a.slice(0,a.length-1);if(\"0\"===a&&(a=null),++br,a)Tr&&t(br-2,\"Octal literal in strict mode\"),r+=String.fromCharCode(parseInt(a,8)),br+=a.length-1;else switch(n){case 110:r+=\"\\n\";break;case 114:r+=\"\\r\";break;case 120:r+=String.fromCharCode(S(2));break;case 117:r+=String.fromCharCode(S(4));break;case 85:r+=String.fromCharCode(S(8));break;case 116:r+=\"\t\";break;case 98:r+=\"\\b\";break;case 118:r+=\"\u000b\";break;case 102:r+=\"\\f\";break;case 48:r+=\"\\0\";break;case 13:10===dr.charCodeAt(br)&&++br;case 10:fr.locations&&(Sr=br,++Ar);break;default:r+=String.fromCharCode(n)}}else(13===n||10===n||8232===n||8233===n)&&t(yr,\"Unterminated string constant\"),r+=String.fromCharCode(n),++br}}function S(e){var r=w(16,e);return null===r&&t(yr,\"Bad character escape sequence\"),r}function I(){Bt=!1;for(var e,r=!0,n=br;;){var a=dr.charCodeAt(br);if(Yt(a))Bt&&(e+=dr.charAt(br)),++br;else{if(92!==a)break;Bt||(e=dr.slice(n,br)),Bt=!0,117!=dr.charCodeAt(++br)&&t(br,\"Expecting Unicode escape sequence \\\\uXXXX\"),++br;var o=S(4),i=String.fromCharCode(o);i||t(br-1,\"Invalid Unicode escape\"),(r?Qt(o):Yt(o))||t(br-4,\"Invalid Unicode escape\"),e+=i}r=!1}return Bt?e:dr.slice(n,br)}function L(){var e=I(),r=Fr;return Bt||(Wt(e)?r=lt[e]:(fr.forbidReserved&&(3===fr.ecmaVersion?Mt:zt)(e)||Tr&&Xt(e))&&t(yr,\"The keyword '\"+e+\"' is reserved\")),i(r,e)}function U(){Ir=yr,Lr=gr,Ur=kr,g()}function R(e){if(Tr=e,br=Lr,fr.locations)for(;Sr>br;)Sr=dr.lastIndexOf(\"\\n\",Sr-2)+1,--Ar;u(),g()}function V(){this.type=null,this.start=yr,this.end=null}function T(){this.start=xr,this.end=null,null!==hr&&(this.source=hr)}function q(){var e=new V;return fr.locations&&(e.loc=new T),fr.ranges&&(e.range=[yr,0]),e}function O(e){var r=new V;return r.start=e.start,fr.locations&&(r.loc=new T,r.loc.start=e.loc.start),fr.ranges&&(r.range=[e.range[0],0]),r}function j(e,r){return e.type=r,e.end=Lr,fr.locations&&(e.loc.end=Ur),fr.ranges&&(e.range[1]=Lr),e}function D(e){return fr.ecmaVersion>=5&&\"ExpressionStatement\"===e.type&&\"Literal\"===e.expression.type&&\"use strict\"===e.expression.value}function F(e){return wr===e?(U(),!0):void 0}function B(){return!fr.strictSemicolons&&(wr===Br||wr===ht||Gt.test(dr.slice(Lr,yr)))}function M(){F(yt)||B()||X()}function z(e){wr===e?U():X()}function X(){t(yr,\"Unexpected token\")}function N(e){\"Identifier\"!==e.type&&\"MemberExpression\"!==e.type&&t(e.start,\"Assigning to rvalue\"),Tr&&\"Identifier\"===e.type&&Nt(e.name)&&t(e.start,\"Assigning to \"+e.name+\" in strict mode\")}function W(e){Ir=Lr=br,fr.locations&&(Ur=new a),Rr=Tr=null,Vr=[],g();var r=e||q(),t=!0;for(e||(r.body=[]);wr!==Br;){var n=J();r.body.push(n),t&&D(n)&&R(!0),t=!1}return j(r,\"Program\")}function J(){(wr===wt||wr===Et&&\"/=\"==Cr)&&g(!0);var e=wr,r=q();switch(e){case Mr:case Nr:U();var n=e===Mr;F(yt)||B()?r.label=null:wr!==Fr?X():(r.label=lr(),M());for(var a=0;a<Vr.length;++a){var o=Vr[a];if(null==r.label||o.name===r.label.name){if(null!=o.kind&&(n||\"loop\"===o.kind))break;if(r.label&&n)break}}return a===Vr.length&&t(r.start,\"Unsyntactic \"+e.keyword),j(r,n?\"BreakStatement\":\"ContinueStatement\");case Wr:return U(),M(),j(r,\"DebuggerStatement\");case Pr:return U(),Vr.push(Zt),r.body=J(),Vr.pop(),z(tt),r.test=P(),M(),j(r,\"DoWhileStatement\");case _r:if(U(),Vr.push(Zt),z(mt),wr===yt)return $(r,null);if(wr===rt){var i=q();return U(),G(i,!0),j(i,\"VariableDeclaration\"),1===i.declarations.length&&F(ut)?_(r,i):$(r,i)}var i=K(!1,!0);return F(ut)?(N(i),_(r,i)):$(r,i);case Gr:return U(),cr(r,!0);case Kr:return U(),r.test=P(),r.consequent=J(),r.alternate=F(Hr)?J():null,j(r,\"IfStatement\");case Qr:return Rr||t(yr,\"'return' outside of function\"),U(),F(yt)||B()?r.argument=null:(r.argument=K(),M()),j(r,\"ReturnStatement\");case Yr:U(),r.discriminant=P(),r.cases=[],z(pt),Vr.push(en);for(var s,c;wr!=ht;)if(wr===zr||wr===Jr){var u=wr===zr;s&&j(s,\"SwitchCase\"),r.cases.push(s=q()),s.consequent=[],U(),u?s.test=K():(c&&t(Ir,\"Multiple default clauses\"),c=!0,s.test=null),z(gt)}else s||X(),s.consequent.push(J());return s&&j(s,\"SwitchCase\"),U(),Vr.pop(),j(r,\"SwitchStatement\");case Zr:return U(),Gt.test(dr.slice(Lr,yr))&&t(Lr,\"Illegal newline after throw\"),r.argument=K(),M(),j(r,\"ThrowStatement\");case et:if(U(),r.block=H(),r.handler=null,wr===Xr){var l=q();U(),z(mt),l.param=lr(),Tr&&Nt(l.param.name)&&t(l.param.start,\"Binding \"+l.param.name+\" in strict mode\"),z(vt),l.guard=null,l.body=H(),r.handler=j(l,\"CatchClause\")}return r.guardedHandlers=qr,r.finalizer=F($r)?H():null,r.handler||r.finalizer||t(r.start,\"Missing catch or finally clause\"),j(r,\"TryStatement\");case rt:return U(),G(r),M(),j(r,\"VariableDeclaration\");case tt:return U(),r.test=P(),Vr.push(Zt),r.body=J(),Vr.pop(),j(r,\"WhileStatement\");case nt:return Tr&&t(yr,\"'with' in strict mode\"),U(),r.object=P(),r.body=J(),j(r,\"WithStatement\");case pt:return H();case yt:return U(),j(r,\"EmptyStatement\");default:var f=Cr,d=K();if(e===Fr&&\"Identifier\"===d.type&&F(gt)){for(var a=0;a<Vr.length;++a)Vr[a].name===f&&t(d.start,\"Label '\"+f+\"' is already declared\");var p=wr.isLoop?\"loop\":wr===Yr?\"switch\":null;return Vr.push({name:f,kind:p}),r.body=J(),Vr.pop(),r.label=d,j(r,\"LabeledStatement\")}return r.expression=d,M(),j(r,\"ExpressionStatement\")}}function P(){z(mt);var e=K();return z(vt),e}function H(e){var r,t=q(),n=!0,a=!1;for(t.body=[],z(pt);!F(ht);){var o=J();t.body.push(o),n&&e&&D(o)&&(r=a,R(a=!0)),n=!1}return a&&!r&&R(!1),j(t,\"BlockStatement\")}function $(e,r){return e.init=r,z(yt),e.test=wr===yt?null:K(),z(yt),e.update=wr===vt?null:K(),z(vt),e.body=J(),Vr.pop(),j(e,\"ForStatement\")}function _(e,r){return e.left=r,e.right=K(),z(vt),e.body=J(),Vr.pop(),j(e,\"ForInStatement\")}function G(e,r){for(e.declarations=[],e.kind=\"var\";;){var n=q();if(n.id=lr(),Tr&&Nt(n.id.name)&&t(n.id.start,\"Binding \"+n.id.name+\" in strict mode\"),n.init=F(Ct)?K(!0,r):null,e.declarations.push(j(n,\"VariableDeclarator\")),!F(bt))break}return e}function K(e,r){var t=Q(r);if(!e&&wr===bt){var n=O(t);for(n.expressions=[t];F(bt);)n.expressions.push(Q(r));return j(n,\"SequenceExpression\")}return t}function Q(e){var r=Y(e);if(wr.isAssign){var t=O(r);return t.operator=Cr,t.left=r,U(),t.right=Q(e),N(r),j(t,\"AssignmentExpression\")}return r}function Y(e){var r=Z(e);if(F(kt)){var t=O(r);return t.test=r,t.consequent=K(!0),z(gt),t.alternate=K(!0,e),j(t,\"ConditionalExpression\")}return r}function Z(e){return er(rr(),-1,e)}function er(e,r,t){var n=wr.binop;if(null!=n&&(!t||wr!==ut)&&n>r){var a=O(e);a.left=e,a.operator=Cr,U(),a.right=er(rr(),n,t);var o=j(a,/&&|\\|\\|/.test(a.operator)?\"LogicalExpression\":\"BinaryExpression\");return er(o,r,t)}return e}function rr(){if(wr.prefix){var e=q(),r=wr.isUpdate;return e.operator=Cr,e.prefix=!0,Er=!0,U(),e.argument=rr(),r?N(e.argument):Tr&&\"delete\"===e.operator&&\"Identifier\"===e.argument.type&&t(e.start,\"Deleting local variable in strict mode\"),j(e,r?\"UpdateExpression\":\"UnaryExpression\")}for(var n=tr();wr.postfix&&!B();){var e=O(n);e.operator=Cr,e.prefix=!1,e.argument=n,N(n),U(),n=j(e,\"UpdateExpression\")}return n}function tr(){return nr(ar())}function nr(e,r){if(F(xt)){var t=O(e);return t.object=e,t.property=lr(!0),t.computed=!1,nr(j(t,\"MemberExpression\"),r)}if(F(ft)){var t=O(e);return t.object=e,t.property=K(),t.computed=!0,z(dt),nr(j(t,\"MemberExpression\"),r)}if(!r&&F(mt)){var t=O(e);return t.callee=e,t.arguments=ur(vt,!1),nr(j(t,\"CallExpression\"),r)}return e}function ar(){switch(wr){case ot:var e=q();return U(),j(e,\"ThisExpression\");case Fr:return lr();case Or:case Dr:case jr:var e=q();return e.value=Cr,e.raw=dr.slice(yr,gr),U(),j(e,\"Literal\");case it:case st:case ct:var e=q();return e.value=wr.atomValue,e.raw=wr.keyword,U(),j(e,\"Literal\");case mt:var r=xr,t=yr;U();var n=K();return n.start=t,n.end=gr,fr.locations&&(n.loc.start=r,n.loc.end=kr),fr.ranges&&(n.range=[t,gr]),z(vt),n;case ft:var e=q();return U(),e.elements=ur(dt,!0,!0),j(e,\"ArrayExpression\");case pt:return ir();case Gr:var e=q();return U(),cr(e,!1);case at:return or();default:X()}}function or(){var e=q();return U(),e.callee=nr(ar(),!0),e.arguments=F(mt)?ur(vt,!1):qr,j(e,\"NewExpression\")}function ir(){var e=q(),r=!0,n=!1;for(e.properties=[],U();!F(ht);){if(r)r=!1;else if(z(bt),fr.allowTrailingCommas&&F(ht))break;var a,o={key:sr()},i=!1;if(F(gt)?(o.value=K(!0),a=o.kind=\"init\"):fr.ecmaVersion>=5&&\"Identifier\"===o.key.type&&(\"get\"===o.key.name||\"set\"===o.key.name)?(i=n=!0,a=o.kind=o.key.name,o.key=sr(),wr!==mt&&X(),o.value=cr(q(),!1)):X(),\"Identifier\"===o.key.type&&(Tr||n))for(var s=0;s<e.properties.length;++s){var c=e.properties[s];if(c.key.name===o.key.name){var u=a==c.kind||i&&\"init\"===c.kind||\"init\"===a&&(\"get\"===c.kind||\"set\"===c.kind);u&&!Tr&&\"init\"===a&&\"init\"===c.kind&&(u=!1),u&&t(o.key.start,\"Redefinition of property\")}}e.properties.push(o)}return j(e,\"ObjectExpression\")}function sr(){return wr===Or||wr===Dr?ar():lr(!0)}function cr(e,r){wr===Fr?e.id=lr():r?X():e.id=null,e.params=[];var n=!0;for(z(mt);!F(vt);)n?n=!1:z(bt),e.params.push(lr());var a=Rr,o=Vr;if(Rr=!0,Vr=[],e.body=H(!0),Rr=a,Vr=o,Tr||e.body.body.length&&D(e.body.body[0]))for(var i=e.id?-1:0;i<e.params.length;++i){var s=0>i?e.id:e.params[i];if((Xt(s.name)||Nt(s.name))&&t(s.start,\"Defining '\"+s.name+\"' in strict mode\"),i>=0)for(var c=0;i>c;++c)s.name===e.params[c].name&&t(s.start,\"Argument name clash in strict mode\")}return j(e,r?\"FunctionDeclaration\":\"FunctionExpression\")}function ur(e,r,t){for(var n=[],a=!0;!F(e);){if(a)a=!1;else if(z(bt),r&&fr.allowTrailingCommas&&F(e))break;t&&wr===bt?n.push(null):n.push(K(!0))}return n}function lr(e){var r=q();return r.name=wr===Fr?Cr:e&&!fr.forbidReserved&&wr.keyword||X(),Er=!1,U(),j(r,\"Identifier\")}e.version=\"0.4.0\";var fr,dr,pr,hr;e.parse=function(e,t){return dr=String(e),pr=dr.length,r(t),o(),W(fr.program)};var mr=e.defaultOptions={ecmaVersion:5,strictSemicolons:!1,allowTrailingCommas:!0,forbidReserved:!1,locations:!1,onComment:null,ranges:!1,program:null,sourceFile:null},vr=e.getLineInfo=function(e,r){for(var t=1,n=0;;){Kt.lastIndex=n;var a=Kt.exec(e);if(!(a&&a.index<r))break;++t,n=a.index+a[0].length}return{line:t,column:r-n}};e.tokenize=function(e,t){function n(e){return g(e),a.start=yr,a.end=gr,a.startLoc=xr,a.endLoc=kr,a.type=wr,a.value=Cr,a}dr=String(e),pr=dr.length,r(t),o();var a={};return n.jumpTo=function(e,r){if(br=e,fr.locations){Ar=1,Sr=Kt.lastIndex=0;for(var t;(t=Kt.exec(dr))&&t.index<e;)++Ar,Sr=t.index+t[0].length}Er=r,u()},n};var br,yr,gr,xr,kr,wr,Cr,Er,Ar,Sr,Ir,Lr,Ur,Rr,Vr,Tr,qr=[],Or={type:\"num\"},jr={type:\"regexp\"},Dr={type:\"string\"},Fr={type:\"name\"},Br={type:\"eof\"},Mr={keyword:\"break\"},zr={keyword:\"case\",beforeExpr:!0},Xr={keyword:\"catch\"},Nr={keyword:\"continue\"},Wr={keyword:\"debugger\"},Jr={keyword:\"default\"},Pr={keyword:\"do\",isLoop:!0},Hr={keyword:\"else\",beforeExpr:!0},$r={keyword:\"finally\"},_r={keyword:\"for\",isLoop:!0},Gr={keyword:\"function\"},Kr={keyword:\"if\"},Qr={keyword:\"return\",beforeExpr:!0},Yr={keyword:\"switch\"},Zr={keyword:\"throw\",beforeExpr:!0},et={keyword:\"try\"},rt={keyword:\"var\"},tt={keyword:\"while\",isLoop:!0},nt={keyword:\"with\"},at={keyword:\"new\",beforeExpr:!0},ot={keyword:\"this\"},it={keyword:\"null\",atomValue:null},st={keyword:\"true\",atomValue:!0},ct={keyword:\"false\",atomValue:!1},ut={keyword:\"in\",binop:7,beforeExpr:!0},lt={\"break\":Mr,\"case\":zr,\"catch\":Xr,\"continue\":Nr,\"debugger\":Wr,\"default\":Jr,\"do\":Pr,\"else\":Hr,\"finally\":$r,\"for\":_r,\"function\":Gr,\"if\":Kr,\"return\":Qr,\"switch\":Yr,\"throw\":Zr,\"try\":et,\"var\":rt,\"while\":tt,\"with\":nt,\"null\":it,\"true\":st,\"false\":ct,\"new\":at,\"in\":ut,\"instanceof\":{keyword:\"instanceof\",binop:7,beforeExpr:!0},\"this\":ot,\"typeof\":{keyword:\"typeof\",prefix:!0,beforeExpr:!0},\"void\":{keyword:\"void\",prefix:!0,beforeExpr:!0},\"delete\":{keyword:\"delete\",prefix:!0,beforeExpr:!0}},ft={type:\"[\",beforeExpr:!0},dt={type:\"]\"},pt={type:\"{\",beforeExpr:!0},ht={type:\"}\"},mt={type:\"(\",beforeExpr:!0},vt={type:\")\"},bt={type:\",\",beforeExpr:!0},yt={type:\";\",beforeExpr:!0},gt={type:\":\",beforeExpr:!0},xt={type:\".\"},kt={type:\"?\",beforeExpr:!0},wt={binop:10,beforeExpr:!0},Ct={isAssign:!0,beforeExpr:!0},Et={isAssign:!0,beforeExpr:!0},At={binop:9,prefix:!0,beforeExpr:!0},St={postfix:!0,prefix:!0,isUpdate:!0},It={prefix:!0,beforeExpr:!0},Lt={binop:1,beforeExpr:!0},Ut={binop:2,beforeExpr:!0},Rt={binop:3,beforeExpr:!0},Vt={binop:4,beforeExpr:!0},Tt={binop:5,beforeExpr:!0},qt={binop:6,beforeExpr:!0},Ot={binop:7,beforeExpr:!0},jt={binop:8,beforeExpr:!0},Dt={binop:10,beforeExpr:!0};e.tokTypes={bracketL:ft,bracketR:dt,braceL:pt,braceR:ht,parenL:mt,parenR:vt,comma:bt,semi:yt,colon:gt,dot:xt,question:kt,slash:wt,eq:Ct,name:Fr,eof:Br,num:Or,regexp:jr,string:Dr};for(var Ft in lt)e.tokTypes[\"_\"+Ft]=lt[Ft];var Bt,Mt=n(\"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\"),zt=n(\"class enum extends super const export import\"),Xt=n(\"implements interface let package private protected public static yield\"),Nt=n(\"eval arguments\"),Wt=n(\"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\"),Jt=/[\\u1680\\u180e\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/,Pt=\"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\",Ht=\"\\u0300-\\u036f\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u0620-\\u0649\\u0672-\\u06d3\\u06e7-\\u06e8\\u06fb-\\u06fc\\u0730-\\u074a\\u0800-\\u0814\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0840-\\u0857\\u08e4-\\u08fe\\u0900-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962-\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09d7\\u09df-\\u09e0\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2-\\u0ae3\\u0ae6-\\u0aef\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b5f-\\u0b60\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c01-\\u0c03\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62-\\u0c63\\u0c66-\\u0c6f\\u0c82\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2-\\u0ce3\\u0ce6-\\u0cef\\u0d02\\u0d03\\u0d46-\\u0d48\\u0d57\\u0d62-\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0df2\\u0df3\\u0e34-\\u0e3a\\u0e40-\\u0e45\\u0e50-\\u0e59\\u0eb4-\\u0eb9\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f41-\\u0f47\\u0f71-\\u0f84\\u0f86-\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u1000-\\u1029\\u1040-\\u1049\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u170e-\\u1710\\u1720-\\u1730\\u1740-\\u1750\\u1772\\u1773\\u1780-\\u17b2\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u1920-\\u192b\\u1930-\\u193b\\u1951-\\u196d\\u19b0-\\u19c0\\u19c8-\\u19c9\\u19d0-\\u19d9\\u1a00-\\u1a15\\u1a20-\\u1a53\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1b46-\\u1b4b\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c00-\\u1c22\\u1c40-\\u1c49\\u1c5b-\\u1c7d\\u1cd0-\\u1cd2\\u1d00-\\u1dbe\\u1e01-\\u1f15\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2d81-\\u2d96\\u2de0-\\u2dff\\u3021-\\u3028\\u3099\\u309a\\ua640-\\ua66d\\ua674-\\ua67d\\ua69f\\ua6f0-\\ua6f1\\ua7f8-\\ua800\\ua806\\ua80b\\ua823-\\ua827\\ua880-\\ua881\\ua8b4-\\ua8c4\\ua8d0-\\ua8d9\\ua8f3-\\ua8f7\\ua900-\\ua909\\ua926-\\ua92d\\ua930-\\ua945\\ua980-\\ua983\\ua9b3-\\ua9c0\\uaa00-\\uaa27\\uaa40-\\uaa41\\uaa4c-\\uaa4d\\uaa50-\\uaa59\\uaa7b\\uaae0-\\uaae9\\uaaf2-\\uaaf3\\uabc0-\\uabe1\\uabec\\uabed\\uabf0-\\uabf9\\ufb20-\\ufb28\\ufe00-\\ufe0f\\ufe20-\\ufe26\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\",$t=new RegExp(\"[\"+Pt+\"]\"),_t=new RegExp(\"[\"+Pt+Ht+\"]\"),Gt=/[\\n\\r\\u2028\\u2029]/,Kt=/\\r\\n|[\\n\\r\\u2028\\u2029]/g,Qt=e.isIdentifierStart=function(e){return 65>e?36===e:91>e?!0:97>e?95===e:123>e?!0:e>=170&&$t.test(String.fromCharCode(e))},Yt=e.isIdentifierChar=function(e){return 48>e?36===e:58>e?!0:65>e?!1:91>e?!0:97>e?95===e:123>e?!0:e>=170&&_t.test(String.fromCharCode(e))},Zt={kind:\"loop\"},en={kind:\"switch\"}});\n\n\tvar binaryOperators = {\n\t\t'+': '__add',\n\t\t'-': '__subtract',\n\t\t'*': '__multiply',\n\t\t'/': '__divide',\n\t\t'%': '__modulo',\n\t\t'==': 'equals',\n\t\t'!=': 'equals'\n\t};\n\n\tvar unaryOperators = {\n\t\t'-': '__negate',\n\t\t'+': null\n\t};\n\n\tvar fields = Base.each(\n\t\t['add', 'subtract', 'multiply', 'divide', 'modulo', 'negate'],\n\t\tfunction(name) {\n\t\t\tthis['__' + name] = '#' + name;\n\t\t},\n\t\t{}\n\t);\n\tPoint.inject(fields);\n\tSize.inject(fields);\n\tColor.inject(fields);\n\n\tfunction __$__(left, operator, right) {\n\t\tvar handler = binaryOperators[operator];\n\t\tif (left && left[handler]) {\n\t\t\tvar res = left[handler](right);\n\t\t\treturn operator === '!=' ? !res : res;\n\t\t}\n\t\tswitch (operator) {\n\t\tcase '+': return left + right;\n\t\tcase '-': return left - right;\n\t\tcase '*': return left * right;\n\t\tcase '/': return left / right;\n\t\tcase '%': return left % right;\n\t\tcase '==': return left == right;\n\t\tcase '!=': return left != right;\n\t\t}\n\t}\n\n\tfunction $__(operator, value) {\n\t\tvar handler = unaryOperators[operator];\n\t\tif (handler && value && value[handler])\n\t\t\treturn value[handler]();\n\t\tswitch (operator) {\n\t\tcase '+': return +value;\n\t\tcase '-': return -value;\n\t\t}\n\t}\n\n\tfunction parse(code, options) {\n\t\treturn scope.acorn.parse(code, options);\n\t}\n\n\tfunction compile(code, url, options) {\n\t\tif (!code)\n\t\t\treturn '';\n\t\toptions = options || {};\n\t\turl = url || '';\n\n\t\tvar insertions = [];\n\n\t\tfunction getOffset(offset) {\n\t\t\tfor (var i = 0, l = insertions.length; i < l; i++) {\n\t\t\t\tvar insertion = insertions[i];\n\t\t\t\tif (insertion[0] >= offset)\n\t\t\t\t\tbreak;\n\t\t\t\toffset += insertion[1];\n\t\t\t}\n\t\t\treturn offset;\n\t\t}\n\n\t\tfunction getCode(node) {\n\t\t\treturn code.substring(getOffset(node.range[0]),\n\t\t\t\t\tgetOffset(node.range[1]));\n\t\t}\n\n\t\tfunction getBetween(left, right) {\n\t\t\treturn code.substring(getOffset(left.range[1]),\n\t\t\t\t\tgetOffset(right.range[0]));\n\t\t}\n\n\t\tfunction replaceCode(node, str) {\n\t\t\tvar start = getOffset(node.range[0]),\n\t\t\t\tend = getOffset(node.range[1]),\n\t\t\t\tinsert = 0;\n\t\t\tfor (var i = insertions.length - 1; i >= 0; i--) {\n\t\t\t\tif (start > insertions[i][0]) {\n\t\t\t\t\tinsert = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tinsertions.splice(insert, 0, [start, str.length - end + start]);\n\t\t\tcode = code.substring(0, start) + str + code.substring(end);\n\t\t}\n\n\t\tfunction walkAST(node, parent) {\n\t\t\tif (!node)\n\t\t\t\treturn;\n\t\t\tfor (var key in node) {\n\t\t\t\tif (key === 'range' || key === 'loc')\n\t\t\t\t\tcontinue;\n\t\t\t\tvar value = node[key];\n\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\tfor (var i = 0, l = value.length; i < l; i++)\n\t\t\t\t\t\twalkAST(value[i], node);\n\t\t\t\t} else if (value && typeof value === 'object') {\n\t\t\t\t\twalkAST(value, node);\n\t\t\t\t}\n\t\t\t}\n\t\t\tswitch (node.type) {\n\t\t\tcase 'UnaryExpression':\n\t\t\t\tif (node.operator in unaryOperators\n\t\t\t\t\t\t&& node.argument.type !== 'Literal') {\n\t\t\t\t\tvar arg = getCode(node.argument);\n\t\t\t\t\treplaceCode(node, '$__(\"' + node.operator + '\", '\n\t\t\t\t\t\t\t+ arg + ')');\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'BinaryExpression':\n\t\t\t\tif (node.operator in binaryOperators\n\t\t\t\t\t\t&& node.left.type !== 'Literal') {\n\t\t\t\t\tvar left = getCode(node.left),\n\t\t\t\t\t\tright = getCode(node.right),\n\t\t\t\t\t\tbetween = getBetween(node.left, node.right),\n\t\t\t\t\t\toperator = node.operator;\n\t\t\t\t\treplaceCode(node, '__$__(' + left + ','\n\t\t\t\t\t\t\t+ between.replace(new RegExp('\\\\' + operator),\n\t\t\t\t\t\t\t\t'\"' + operator + '\"')\n\t\t\t\t\t\t\t+ ', ' + right + ')');\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'UpdateExpression':\n\t\t\tcase 'AssignmentExpression':\n\t\t\t\tvar parentType = parent && parent.type;\n\t\t\t\tif (!(\n\t\t\t\t\t\tparentType === 'ForStatement'\n\t\t\t\t\t\t|| parentType === 'BinaryExpression'\n\t\t\t\t\t\t\t&& /^[=!<>]/.test(parent.operator)\n\t\t\t\t\t\t|| parentType === 'MemberExpression' && parent.computed\n\t\t\t\t)) {\n\t\t\t\t\tif (node.type === 'UpdateExpression') {\n\t\t\t\t\t\tvar arg = getCode(node.argument),\n\t\t\t\t\t\t\texp = '__$__(' + arg + ', \"' + node.operator[0]\n\t\t\t\t\t\t\t\t\t+ '\", 1)',\n\t\t\t\t\t\t\tstr = arg + ' = ' + exp;\n\t\t\t\t\t\tif (!node.prefix\n\t\t\t\t\t\t\t\t&& (parentType === 'AssignmentExpression'\n\t\t\t\t\t\t\t\t\t|| parentType === 'VariableDeclarator')) {\n\t\t\t\t\t\t\tif (getCode(parent.left || parent.id) === arg)\n\t\t\t\t\t\t\t\tstr = exp;\n\t\t\t\t\t\t\tstr = arg + '; ' + str;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treplaceCode(node, str);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (/^.=$/.test(node.operator)\n\t\t\t\t\t\t\t\t&& node.left.type !== 'Literal') {\n\t\t\t\t\t\t\tvar left = getCode(node.left),\n\t\t\t\t\t\t\t\tright = getCode(node.right);\n\t\t\t\t\t\t\treplaceCode(node, left + ' = __$__(' + left + ', \"'\n\t\t\t\t\t\t\t\t\t+ node.operator[0] + '\", ' + right + ')');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar sourceMap = null,\n\t\t\tbrowser = paper.browser,\n\t\t\tversion = browser.versionNumber,\n\t\t\tlineBreaks = /\\r\\n|\\n|\\r/mg;\n\t\tif (browser.chrome && version >= 30\n\t\t\t\t|| browser.webkit && version >= 537.76\n\t\t\t\t|| browser.firefox && version >= 23) {\n\t\t\tvar offset = 0;\n\t\t\tif (window.location.href.indexOf(url) === 0) {\n\t\t\t\tvar html = document.getElementsByTagName('html')[0].innerHTML;\n\t\t\t\toffset = html.substr(0, html.indexOf(code) + 1).match(\n\t\t\t\t\t\tlineBreaks).length + 1;\n\t\t\t}\n\t\t\tvar mappings = ['AAAA'];\n\t\t\tmappings.length = (code.match(lineBreaks) || []).length + 1 + offset;\n\t\t\tsourceMap = {\n\t\t\t\tversion: 3,\n\t\t\t\tfile: url,\n\t\t\t\tnames:[],\n\t\t\t\tmappings: mappings.join(';AACA'),\n\t\t\t\tsourceRoot: '',\n\t\t\t\tsources: [url]\n\t\t\t};\n\t\t\tvar source = options.source || !url && code;\n\t\t\tif (source)\n\t\t\t\tsourceMap.sourcesContent = [source];\n\t\t}\n\t\twalkAST(parse(code, { ranges: true }));\n\t\tif (sourceMap) {\n\t\t\tcode = new Array(offset + 1).join('\\n') + code\n\t\t\t\t\t+ \"\\n//# sourceMappingURL=data:application/json;base64,\"\n\t\t\t\t\t+ (btoa(unescape(encodeURIComponent(\n\t\t\t\t\t\tJSON.stringify(sourceMap)))))\n\t\t\t\t\t+ \"\\n//# sourceURL=\" + (url || 'paperscript');\n\t\t}\n\t\treturn code;\n\t}\n\n\tfunction execute(code, scope, url, options) {\n\t\tpaper = scope;\n\t\tvar view = scope.getView(),\n\t\t\ttool = /\\s+on(?:Key|Mouse)(?:Up|Down|Move|Drag)\\b/.test(code)\n\t\t\t\t\t? new Tool()\n\t\t\t\t\t: null,\n\t\t\ttoolHandlers = tool ? tool._events : [],\n\t\t\thandlers = ['onFrame', 'onResize'].concat(toolHandlers),\n\t\t\tparams = [],\n\t\t\targs = [],\n\t\t\tfunc;\n\t\tcode = compile(code, url, options);\n\t\tfunction expose(scope, hidden) {\n\t\t\tfor (var key in scope) {\n\t\t\t\tif ((hidden || !/^_/.test(key)) && new RegExp('([\\\\b\\\\s\\\\W]|^)'\n\t\t\t\t\t\t+ key.replace(/\\$/g, '\\\\$') + '\\\\b').test(code)) {\n\t\t\t\t\tparams.push(key);\n\t\t\t\t\targs.push(scope[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\texpose({ __$__: __$__, $__: $__, paper: scope, view: view, tool: tool },\n\t\t\t\ttrue);\n\t\texpose(scope);\n\t\thandlers = Base.each(handlers, function(key) {\n\t\t\tif (new RegExp('\\\\s+' + key + '\\\\b').test(code)) {\n\t\t\t\tparams.push(key);\n\t\t\t\tthis.push(key + ': ' + key);\n\t\t\t}\n\t\t}, []).join(', ');\n\t\tif (handlers)\n\t\t\tcode += '\\nreturn { ' + handlers + ' };';\n\t\tvar browser = paper.browser;\n\t\tif (browser.chrome || browser.firefox) {\n\t\t\tvar script = document.createElement('script'),\n\t\t\t\thead = document.head || document.getElementsByTagName('head')[0];\n\t\t\tif (browser.firefox)\n\t\t\t\tcode = '\\n' + code;\n\t\t\tscript.appendChild(document.createTextNode(\n\t\t\t\t'paper._execute = function(' + params + ') {' + code + '\\n}'\n\t\t\t));\n\t\t\thead.appendChild(script);\n\t\t\tfunc = paper._execute;\n\t\t\tdelete paper._execute;\n\t\t\thead.removeChild(script);\n\t\t} else {\n\t\t\tfunc = Function(params, code);\n\t\t}\n\t\tvar res = func.apply(scope, args) || {};\n\t\tBase.each(toolHandlers, function(key) {\n\t\t\tvar value = res[key];\n\t\t\tif (value)\n\t\t\t\ttool[key] = value;\n\t\t});\n\t\tif (view) {\n\t\t\tif (res.onResize)\n\t\t\t\tview.setOnResize(res.onResize);\n\t\t\tview.emit('resize', {\n\t\t\t\tsize: view.size,\n\t\t\t\tdelta: new Point()\n\t\t\t});\n\t\t\tif (res.onFrame)\n\t\t\t\tview.setOnFrame(res.onFrame);\n\t\t\tview.update();\n\t\t}\n\t}\n\n\tfunction loadScript(script) {\n\t\tif (/^text\\/(?:x-|)paperscript$/.test(script.type)\n\t\t\t\t&& PaperScope.getAttribute(script, 'ignore') !== 'true') {\n\t\t\tvar canvasId = PaperScope.getAttribute(script, 'canvas'),\n\t\t\t\tcanvas = document.getElementById(canvasId),\n\t\t\t\tsrc = script.src || script.getAttribute('data-src'),\n\t\t\t\tasync = PaperScope.hasAttribute(script, 'async'),\n\t\t\t\tscopeAttribute = 'data-paper-scope';\n\t\t\tif (!canvas)\n\t\t\t\tthrow new Error('Unable to find canvas with id \"'\n\t\t\t\t\t\t+ canvasId + '\"');\n\t\t\tvar scope = PaperScope.get(canvas.getAttribute(scopeAttribute))\n\t\t\t\t\t\t|| new PaperScope().setup(canvas);\n\t\t\tcanvas.setAttribute(scopeAttribute, scope._id);\n\t\t\tif (src) {\n\t\t\t\tHttp.request('get', src, function(code) {\n\t\t\t\t\texecute(code, scope, src);\n\t\t\t\t}, async);\n\t\t\t} else {\n\t\t\t\texecute(script.innerHTML, scope, script.baseURI);\n\t\t\t}\n\t\t\tscript.setAttribute('data-paper-ignore', 'true');\n\t\t\treturn scope;\n\t\t}\n\t}\n\n\tfunction loadAll() {\n\t\tBase.each(document.getElementsByTagName('script'), loadScript);\n\t}\n\n\tfunction load(script) {\n\t\treturn script ? loadScript(script) : loadAll();\n\t}\n\n\tif (document.readyState === 'complete') {\n\t\tsetTimeout(loadAll);\n\t} else {\n\t\tDomEvent.add(window, { load: loadAll });\n\t}\n\n\treturn {\n\t\tcompile: compile,\n\t\texecute: execute,\n\t\tload: load,\n\t\tparse: parse\n\t};\n\n}).call(this);\n\npaper = new (PaperScope.inject(Base.exports, {\n\tenumerable: true,\n\tBase: Base,\n\tNumerical: Numerical,\n\tKey: Key\n}))();\n\nif (typeof define === 'function' && define.amd) {\n\tdefine('paper', paper);\n} else if (typeof module === 'object' && module) {\n\tmodule.exports = paper;\n}\n\nreturn paper;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/paper/dist/paper-full.js\n ** module id = 1\n ** module chunks = 0\n **/","'use strict';\nlet paper = require('paper');\n\nimport Target from './objects/Target.js';\n\nclass Game {\n\n  constructor( socket) {\n    this.socket = socket;\n    this.holdProgress = 0;\n    this.nextBall = 0;\n    this.started = false;\n\n    socket.on('leftHandDown', () => {\n      createjs.Tween.get(this.leftArm, {loop: false}).to({rotation: 40}, 250, createjs.Ease.elasticOut).to({rotation: 0}, 400, createjs.Ease.elasticOut);\n    });\n\n    socket.on('rightHandDown', () => {\n      createjs.Tween.get(this.rightArm, {loop: false}).to({rotation: -40}, 250, createjs.Ease.elasticOut).to({rotation: 0}, 400, createjs.Ease.elasticOut);\n    });\n\n    socket.on('leftFootDown', () => {\n      createjs.Tween.get(this.leftLeg, {loop: false}).to({rotation: 20}, 250, createjs.Ease.elasticOut).to({rotation: 0}, 400, createjs.Ease.elasticOut);\n    });\n\n    socket.on('rightFootDown', () => {\n      createjs.Tween.get(this.rightLeg, {loop: false}).to({rotation: -20}, 250, createjs.Ease.elasticOut).to({rotation: 0}, 400, createjs.Ease.elasticOut);\n    });\n\n    socket.on('startHold', () => {\n      if (this.holdProgress === 4) {\n        this.started = true;\n      } else if (this.holdProgress < 4) {\n        this.holdProgress++;\n        this.progressUpdate();\n      }\n\n\n    });\n\n    socket.on('startUp', () => {\n      this.holdProgress = 0;\n      this.progressUpdate();\n    });\n\n\n      // ****************************** Intro Setup *******************************\n    this.gameSetup();\n    this.button = new Path.Circle(new Point(800, 200), 70);\n    this.button.fillColor = '#26b29a';\n    this.progress = new Path.Circle(new Point(800, 200), 80);\n    this.progress.strokeWidth = 0;\n    this.progress.strokeColor = '#1a8570';\n\n  }\n\n  introSetup() {\n    this.introLayer = project.activeLayer;\n\n    let bg = new Path();\n    bg.importSVG(document.getElementById('intro'));\n\n    let startButton = new Path.Circle({\n      center: [860, 250],\n      radius: 50\n    });\n    startButton.fillColor = '#26b29a';\n    startButton.strokeColor = '#1a8570';\n    startButton.strokeWidth = 6;\n\n    this.socket.on('startDown', () => {\n      startButton.fillColor = '#2ec6a8';\n      paper.view.draw();\n    });\n\n    this.socket.on('startUp', () => {\n      startButton.fillColor = '#26b29a';\n      this.introLayer.visible = false;\n      this.gameSetup();\n      paper.view.draw();\n    });\n  }\n\n  progressUpdate() {\n    createjs.Tween.get(this.progress, {loop: false, override: true}).to({strokeWidth: this.holdProgress * 5}, 250, createjs.Ease.easeOut);\n  }\n\n  gameSetup() {\n    this.gameLayer = new Layer();\n    this.bg = project.importSVG(document.getElementById('bg'));\n\n    this.head = project.importSVG(document.getElementById('head'));\n    this.rightArm = project.importSVG(document.getElementById('arm'));\n    this.leftArm = this.rightArm.clone();\n    this.leftArm.scale(-1, 1);\n    this.torso = project.importSVG(document.getElementById('torso'));\n\n    this.rightLeg = project.importSVG(document.getElementById('leg'));\n    this.leftLeg = this.rightLeg.clone();\n    this.leftLeg.scale(-1, 1);\n\n    this.leftHandLane = project.importSVG(document.getElementById('target-lane'));\n    this.rightHandLane = this.leftHandLane.clone();\n\n    let metrumY = 500;\n    this.head.position = new Point(paper.view.center.x, metrumY - 260);\n    this.torso.position = new Point(paper.view.center.x, metrumY);\n\n    this.leftLeg.position = new Point(paper.view.center.x - 40, metrumY + 150);\n    this.leftLeg.pivot = new Point(paper.view.center.x - 40, metrumY + 75);\n\n    this.rightLeg.position = new Point(paper.view.center.x + 40, metrumY + 150);\n    this.rightLeg.pivot = new Point(paper.view.center.x + 40, metrumY + 75);\n\n    this.leftArm.position = new Point(paper.view.center.x - 105, metrumY + 30);\n    this.leftArm.pivot = new Point(paper.view.center.x - 80, metrumY - 50);\n\n    this.rightArm.position = new Point(paper.view.center.x + 105, metrumY + 30);\n    this.rightArm.pivot = new Point(paper.view.center.x + 80, metrumY - 50);\n\n    this.leftHandLane.position = new Point(paper.view.center.x + 214, metrumY + 34);\n    this.leftHandLane.pivot = new Point(paper.view.center.x - 177, metrumY + 34);\n    this.leftHandLane.rotation = 200;\n    this.leftHandLane.opacity = 0.7;\n    this.leftHandLane.insertAbove(this.bg);\n\n    this.rightHandLane.position = new Point(paper.view.center.x + 570, metrumY + 34);\n    this.rightHandLane.pivot = new Point(paper.view.center.x + 177, metrumY + 34);\n    this.rightHandLane.rotation = -20;\n    this.rightHandLane.opacity = 0.7;\n    this.rightHandLane.insertAbove(this.bg);\n\n\n\n    createjs.Ticker.setFPS( 60 );\n    createjs.Ticker.addEventListener( 'tick', this.update );\n\n    paper.view.onFrame = (event) => {\n      this.onFrame(event);\n    };\n  }\n\n  onFrame(e) {\n    if (e.time > this.nextBall && this.started === true) {\n      this.nextBall = e.time + Math.random() + 1.5;\n      this.launchBall();\n    }\n  }\n\n  launchBall() {\n    let ball = new Target(-40, 400);\n    createjs.Tween.get(ball.position, {loop: false}).to({x: paper.view.center.x - 177, y: 500 + 34}, 2500, createjs.Ease.cubicIn);\n  }\n\n  update() {\n    paper.view.draw();\n  }\n\n}\n\n\nexport default Game;\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./_js/Game.js\n **/","'use strict';\nlet paper = require('paper');\n\n// class Target extends paper.Path {\n\n//   constructor(x, y) {\n//     super();\n\n//     Path.Circle(new Point(x, y), 50);\n//     this.fillColor = 'black';\n\n\n//     //this.up();\n//   }\n\n//   // down() {\n//   //   this.clear();\n//   //   this.beginFill(0xffffff, 1);\n//   //   this.lineStyle(5, 0xc17b27, 0.8);\n//   //   this.drawCircle(0, 0, this.radius);\n//   // }\n\n//   // up() {\n//   //   this.clear();\n//   //   this.beginFill(0xffffff, 0.1);\n//   //   this.lineStyle(5, 0xc17b27, 0.8);\n//   //   this.drawCircle(0, 0, this.radius);\n//   // }\n\n//   // over() {\n//   //   this.clear();\n//   //   this.beginFill(0xff0000, 1);\n//   //   this.lineStyle(5, 0xc17b27, 0.8);\n//   //   this.drawCircle(0, 0, this.radius);\n//   // }\n\n//   // poof() {\n//   //   return new Promise((resolve) => {\n//   //     this.game.time.events.add(750, () => {\n//   //       this.kill();\n//   //       resolve();\n//   //     }, this);\n//   //   });\n//   // }\n\n//   // hit () {\n//   //   this.clear();\n//   //   this.beginFill(0x00FF00, 1);\n//   //   this.lineStyle(5, 0xc17b27, 0.8);\n//   //   this.drawCircle(0, 0, this.radius);\n//   // }\n\n\n\n// }\n\nconst TargetFactory = (x, y) => {\n  let target = new paper.Path.Circle(new Point(x, y), 20);\n  target.fillColor = 'white';\n\n  return target;\n};\n\n\nexport default TargetFactory;\n\n\n\n/** WEBPACK FOOTER **\n ** ./_js/objects/Target.js\n **/","'use strict';\nlet paper = require('paper');\n\npaper.install(window);\nimport Game from './Game.js';\n\nlet socket;\nsocket = io('http://localhost:3000');\n\n\nconst init = () => {\n  paper.setup('gameContainer');\n  new Game(socket);\n  document.getElementById('gameContainer').addEventListener('click', fullScreen);\n};\n\nconst fullScreen = () => {\n  var el = document.getElementById('gameContainer');\n\n  if(el.webkitRequestFullScreen) {\n    el.webkitRequestFullScreen();\n  } else {\n    el.mozRequestFullScreen();\n  }\n};\n\nwindow.onload = function() {\n  init();\n};\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./_js/script.js\n **/"],"sourceRoot":""}